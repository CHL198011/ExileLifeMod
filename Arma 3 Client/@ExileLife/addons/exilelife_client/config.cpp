/**
                    * config
                    *
                    * ExileLife Mod
                    * www.exilelifemod.com
                    * Â© 2016 ExileLife Mod Team
                    *
                    * All Rights Reserved 
                    *
                    */

                    class CfgPatches
{
	class exilelife_client
	{
		requiredVersion = 0.1;
		requiredAddons[] =
		{
			"a3_characters_f",
			"a3_characters_f_beta",
			"a3_characters_f_epa",
			"a3_characters_f_epb",
			"a3_characters_f_epc",
			"a3_characters_f_gamma",
			"a3_data_f",
			"a3_weapons_f",
			"a3_weapons_f_beta",
			"a3_weapons_f_bootcamp",
			"a3_weapons_f_epa",
			"a3_weapons_f_epb",
			"a3_weapons_f_epc",
			"a3_weapons_f_gamma",
			"a3_rocks_f",
			"a3_anims_f",
			"a3_weapons_f_mark",
			"a3_weapons_f_exp",
			"a3_map_altis_scenes",
			"a3_map_vr_scenes",
			"a3_map_stratis_scenes",
			"a3_ui_f",
			"a3_3den",
			"dbo_old_bike",
			"gnt_c185",
			"exile_assets",
			"exile_client",
			"exilelife_weapons",
			"exilelife_vehicles"
		};
		units[] =
		{
		};
		weapons[] =
		{
			"arifle_MX_SW_F",
			"arifle_MX_SW_Black_F",
			"arifle_SPAR_02_blk_F",
			"arifle_SPAR_02_khk_F",
			"arifle_SPAR_02_snd_F",
			"MMG_01_hex_F",
			"MMG_01_tan_F",
			"MMG_02_camo_F",
			"MMG_02_black_F",
			"MMG_02_sand_F",
			"Throw"
		};
		magazines[] =
		{
		};
		ammo[] =
		{
		};
	};
};
class CfgActions
{
	class None;
	class OpenBag: None { show = 0; };
	class FireInflame: None { show = 0; };
	class FirePutDown: None { show = 0; };
	class Heal: None { show = 0; }; 
	class HealSoldier: None { show = 0; }; 
	class FirstAid: None { show = 0; }; 
	class ListRightVehicleDisplay: None { show = 0; };
	class ListLeftVehicleDisplay: None { show = 0; };
	class ListPrevRightVehicleDisplay: None { show = 0; };
	class ListPrevLeftVehicleDisplay: None { show = 0; };
	class CloseRightVehicleDisplay: None { show = 0; };
	class CloseLeftVehicleDisplay: None { show = 0; };
	class NextModeRightVehicleDisplay: None { show = 0; };
	class NextModeLeftVehicleDisplay: None { show = 0; };
	class UseContainerMagazine: None { show = 0; };
	class TakeBag: None 				{ show = 0; };
	class TakeItem: None 				{ show = 0; };
	class TakeWeapon: None 				{ show = 0; };
	class TakeMagazine: None 			{ show = 0; };
	class TakeItemFromBody: None 		{ show = 0; };
	class TakeWeaponFromBody: None 		{ show = 0; };
	class TakeBackpackFromBody: None 	{ show = 0; };
	class TakeMine: None 				{ show = 0; };
};
class CfgAmmo
{
	class BulletBase;
	class GrenadeHand;
	class GrenadeHand_stone;
	class Grenade;
	class EmptyGrenade: GrenadeHand_stone
	{
		model = "\A3\Weapons_f\ammo\stone_2";
		hit = 6;
		indirectHit = 0;
		indirectHitRange = 0.2;
		dangerRadiusHit = -1;
		suppressionRadiusHit = -1;
		explosive = 0;
		explosionEffectsRadius = 0;
		typicalspeed = 22;
		deflecting = 60;
		cost = 40;
		simulation = "shotSmokeX";
		simulationStep = 0.05;
		shadow = 1;
		soundHit[] = {"",0,1};
		smokeColor[] = {1,1,1,1};
		effectsSmoke = "EmptyEffect";	
		soundImpactSoft1[] = {"A3\Sounds_F\weapons\Grenades\handgrenade_drops\handg_drop_grass_1",1.4125376,1,45};
		soundImpactSoft2[] = {"A3\Sounds_F\weapons\Grenades\handgrenade_drops\handg_drop_grass_2",1.4125376,1,45};
		soundImpactSoft3[] = {"A3\Sounds_F\weapons\Grenades\handgrenade_drops\handg_drop_grass_3",1.4125376,1,45};
		soundImpactSoft4[] = {"A3\Sounds_F\weapons\Grenades\handgrenade_drops\handg_drop_grass_4",1.4125376,1,45};
		soundImpactSoft5[] = {"A3\Sounds_F\weapons\Grenades\handgrenade_drops\handg_drop_grass_5",1.4125376,1,45};
		soundImpactSoft6[] = {"A3\Sounds_F\weapons\Grenades\handgrenade_drops\handg_drop_grass_6",1.4125376,1,45};
		soundImpactSoft7[] = {"A3\Sounds_F\weapons\Grenades\handgrenade_drops\handg_drop_grass_7",1.4125376,1,45};
		soundImpactHard1[] = {"A3\Sounds_F\weapons\Grenades\handgrenade_drops\handg_drop_concrete_1",1.4125376,1,65};
		soundImpactHard2[] = {"A3\Sounds_F\weapons\Grenades\handgrenade_drops\handg_drop_concrete_2",1.4125376,1,65};
		soundImpactHard3[] = {"A3\Sounds_F\weapons\Grenades\handgrenade_drops\handg_drop_concrete_3",1.4125376,1,65};
		soundImpactHard4[] = {"A3\Sounds_F\weapons\Grenades\handgrenade_drops\handg_drop_concrete_4",1.4125376,1,65};
		soundImpactHard5[] = {"A3\Sounds_F\weapons\Grenades\handgrenade_drops\handg_drop_concrete_5",1.4125376,1,65};
		soundImpactHard6[] = {"A3\Sounds_F\weapons\Grenades\handgrenade_drops\handg_drop_concrete_6",1.4125376,1,65};
		soundImpactHard7[] = {"A3\Sounds_F\weapons\Grenades\handgrenade_drops\handg_drop_concrete_7",1.4125376,1,65};
		soundImpactIron1[] = {"A3\Sounds_F\weapons\Grenades\handgrenade_drops\handg_drop_Metal_1",1.2589254,1,95};
		soundImpactIron2[] = {"A3\Sounds_F\weapons\Grenades\handgrenade_drops\handg_drop_Metal_2",1.2589254,1,95};
		soundImpactIron3[] = {"A3\Sounds_F\weapons\Grenades\handgrenade_drops\handg_drop_Metal_3",1.2589254,1,95};
		soundImpactIron4[] = {"A3\Sounds_F\weapons\Grenades\handgrenade_drops\handg_drop_Metal_4",1.2589254,1,95};
		soundImpactIron5[] = {"A3\Sounds_F\weapons\Grenades\handgrenade_drops\handg_drop_Metal_5",1.2589254,1,95};
		soundImpactWoodExt1[] = {"A3\Sounds_F\weapons\Grenades\handgrenade_drops\handg_drop_wood_ext_1",1.4125376,1,75};
		soundImpactWoodExt2[] = {"A3\Sounds_F\weapons\Grenades\handgrenade_drops\handg_drop_wood_ext_2",1.4125376,1,75};
		soundImpactWoodExt3[] = {"A3\Sounds_F\weapons\Grenades\handgrenade_drops\handg_drop_wood_ext_3",1.4125376,1,75};
		soundImpactWoodExt4[] = {"A3\Sounds_F\weapons\Grenades\handgrenade_drops\handg_drop_wood_ext_4",1.4125376,1,75};
		soundImpactWater1[] = {"A3\Sounds_F\weapons\Grenades\handgrenade_drops\handg_drop_water_1",1.4125376,1,55};
		soundImpactWater2[] = {"A3\Sounds_F\weapons\Grenades\handgrenade_drops\handg_drop_water_2",1.4125376,1,55};
		soundImpactWater3[] = {"A3\Sounds_F\weapons\Grenades\handgrenade_drops\handg_drop_water_3",1.4125376,1,55};
		impactGroundSoft[] = {"soundImpactSoft1",0.2,"soundImpactSoft2",0.2,"soundImpactSoft3",0.2,"soundImpactSoft4",0.1,"soundImpactSoft5",0.1,"soundImpactSoft6",0.1,"soundImpactSoft7",0.1};
		impactGroundHard[] = {"soundImpactHard1",0.2,"soundImpactHard2",0.2,"soundImpactHard3",0.2,"soundImpactHard4",0.1,"soundImpactHard5",0.1,"soundImpactHard6",0.1,"soundImpactHard7",0.1};
		impactIron[] = {"soundImpactIron1",0.2,"soundImpactIron2",0.2,"soundImpactIron3",0.2,"soundImpactIron4",0.2,"soundImpactIron5",0.2};
		impactArmor[] = {"soundImpactIron1",0.2,"soundImpactIron2",0.2,"soundImpactIron3",0.2,"soundImpactIron4",0.2,"soundImpactIron5",0.2};
		impactBuilding[] = {"soundImpactHard1",0.2,"soundImpactHard2",0.2,"soundImpactHard3",0.2,"soundImpactHard4",0.1,"soundImpactHard5",0.1,"soundImpactHard6",0.1,"soundImpactHard7",0.1};
		impactFoliage[] = {"soundImpactSoft1",0.2,"soundImpactSoft2",0.2,"soundImpactSoft3",0.2,"soundImpactSoft4",0.1,"soundImpactSoft5",0.1,"soundImpactSoft6",0.1,"soundImpactSoft7",0.1};
		impactWood[] = {"soundImpactWoodExt1",0.25,"soundImpactWoodExt2",0.25,"soundImpactWoodExt3",0.25,"soundImpactWoodExt4",0.25};
		impactGlass[] = {"soundImpactHard1",0.2,"soundImpactHard2",0.2,"soundImpactHard3",0.2,"soundImpactHard4",0.1,"soundImpactHard5",0.1,"soundImpactHard6",0.1,"soundImpactHard7",0.1};
		impactGlassArmored[] = {"soundImpactHard1",0.2,"soundImpactHard2",0.2,"soundImpactHard3",0.2,"soundImpactHard4",0.1,"soundImpactHard5",0.1,"soundImpactHard6",0.1,"soundImpactHard7",0.1};
		impactConcrete[] = {"soundImpactHard1",0.2,"soundImpactHard2",0.2,"soundImpactHard3",0.2,"soundImpactHard4",0.1,"soundImpactHard5",0.1,"soundImpactHard6",0.1,"soundImpactHard7",0.1};
		impactTyre[] = {"soundImpactSoft1",0.2,"soundImpactSoft2",0.2,"soundImpactSoft3",0.2,"soundImpactSoft4",0.1,"soundImpactSoft5",0.1,"soundImpactSoft6",0.1,"soundImpactSoft7",0.1};
		impactRubber[] = {"soundImpactSoft1",0.2,"soundImpactSoft2",0.2,"soundImpactSoft3",0.2,"soundImpactSoft4",0.1,"soundImpactSoft5",0.1,"soundImpactSoft6",0.1,"soundImpactSoft7",0.1};
		impactPlastic[] = {"soundImpactSoft1",0.2,"soundImpactSoft2",0.2,"soundImpactSoft3",0.2,"soundImpactSoft4",0.1,"soundImpactSoft5",0.1,"soundImpactSoft6",0.1,"soundImpactSoft7",0.1};
		impactDefault[] = {"soundImpactHard1",0.2,"soundImpactHard2",0.2,"soundImpactHard3",0.2,"soundImpactHard4",0.1,"soundImpactHard5",0.1,"soundImpactHard6",0.1,"soundImpactHard7",0.1};
		impactMetal[] = {"soundImpactIron1",0.2,"soundImpactIron2",0.2,"soundImpactIron3",0.2,"soundImpactIron4",0.2,"soundImpactIron5",0.2};
		impactMetalplate[] = {"soundImpactIron1",0.2,"soundImpactIron2",0.2,"soundImpactIron3",0.2,"soundImpactIron4",0.2,"soundImpactIron5",0.2};
		impactWater[] = {"soundImpactWater1",0.35,"soundImpactWater2",0.35,"soundImpactWater3",0.3};
		soundFly[] = {"",0.099999994,1,20};
		soundEngine[] = {"",1,1};
		explosionSoundEffect = "";
		craterEffects = "NoCrater";
		CraterWaterEffects = "";
		explosionEffects = "NoExplosion";
		visibleFire = 0;
		audibleFire = 0;
		visibleFireTime = 0;
		whistleDist = 0;
		explosionTime = 2;
		timeToLive = 10;
		class HitEffects
		{
			hitWater = "";
		};
		class CamShakeExplode
		{
			power = "";
			duration = "";
			frequency = 0;
			distance = "";
		};
	};
	class FlareObject: GrenadeHand
	{
		hit = 0;
		indirectHit = 0;
		indirectHitRange = 0;
		explosive = false;
		fuseDistance = 0;
		initTime = 0;
	};
	class HandFlareWhite: FlareObject
	{
		model = "\A3\weapons_f\ammo\flare_white";
		simulation = "shotSmoke";
		simulationStep = 1;
		soundFly[] = {"exilelife_assets\sounds\flare", 1, 1, 200};
		cost = 100;
		explosive = false;
		deflecting = 60;
		explosionTime = 0;
		timeToLive = 300;
		soundHit[] = {"", 0, 1};
		whistleDist = 0;
		smokeColor[] = {1, 1, 1, 1};
		effectsSmoke = "ExileLifeFlareWhite";
	};
	class HandFlareGreen: HandFlareWhite
	{
		model = "\A3\weapons_f\ammo\flare_green";
		effectsSmoke = "ExileLifeFlareGreen";
	};
	class HandFlareYellow: HandFlareWhite
	{
		model = "\A3\weapons_f\ammo\flare_yellow";
		effectsSmoke = "ExileLifeFlareYellow";
	};
	class HandFlareRed: HandFlareWhite
	{
		model = "\A3\weapons_f\ammo\flare_red";
		effectsSmoke = "ExileLifeFlareRed";
	};
class Exile_Ammo_AbstractMelee: BulletBase 
{
	hit = 2;
	cost = 1;
	affectSkeleton = 1;
	timeToLive = 0.020;
	caliber = 0.1;
	simulationStep = 0.1;
	typicalSpeed = 0.3;
	maxSpeed = 0.3;
	initSpeed = 0.3;
	maxLeadSpeed = 0.3;
	indirectHit = 0;
	indirectHitRange = 0.2;
	deflecting = 0;	
	audibleFire = 0;
	visibleFire = 0;
	visibleFireTime = 0;
	maxControlRange = 1;
	simulation = "shotRocket"; 
	explosive = 0;
	whistleOnFire = 0; 	
	whistleDist = 0;
	knockout = 0; 
	bleeding = 0; 
	soundHitBody1[] = {"\exile_assets\sound\hack_flesh01.ogg", 1.584893, 1, 10};
	soundHitBody2[] = {"\exile_assets\sound\hack_flesh02.ogg", 1.584893, 1, 10};
	hitMan[] = {"soundHitBody1", 0.500000, "soundHitBody2", 0.500000};
	effectsMissileInit = "EmptyEffect";
	effectsMissile = "EmptyEffect";
	effectsSmoke = "EmptyEffect";
	explosionEffects = "NoExplosion";
	craterEffects = "NoCrater";
	muzzleEffect = "";
	class CamShakeExplode
	{
		power = "(5^0.5)";
		duration = "((round (5^0.5))*0.2 max 0.2)";
		frequency = 20;
		distance = "((5^0.5)*3)";
	};
	class CamShakeHit
	{
		power = 5;
		duration = "((round (5^0.25))*0.2 max 0.2)";
		frequency = 20;
		distance = 1;
	};
	class HitEffects
	{		
			Hit_Foliage_green = "ImpactLeavesGreen";
			Hit_Foliage_Dead = "ImpactLeavesDead";
			Hit_Foliage_Green_big = "ImpactLeavesGreenBig";
			Hit_Foliage_Palm = "ImpactLeavesPalm";
			Hit_Foliage_Pine = "ImpactLeavesPine";
			hitFoliage = "ImpactLeaves";
			hitGlass = "ImpactGlass";
			hitGlassArmored = "ImpactGlassThin";
			hitWood = "ImpactWood";
			hitMetal = "ImpactMetal";
			hitMetalPlate = "ImpactMetal";
			hitBuilding = "ImpactPlaster";
			hitPlastic = "ImpactPlastic";
			hitRubber = "";
			hitTyre = "";
			hitConcrete = "";
			hitMan = "ImpactEffectsBlood";
			hitGroundSoft = "";
			hitGroundRed = "";
			hitGroundHard = "";
			hitWater = "ImpactEffectsWater";
			hitVirtual = "ImpactMetal";
			vehicle = "ImpactMetal";
			object = "ImpactConcrete";			
	};
		hitGroundSoft[] = {};
		hitGroundHard[] = {};
};
class ExileLife_Ammo_AbstractMeleeHand: Exile_Ammo_AbstractMelee 
{
	simulation = "shotShell"; 
};
class Exile_Ammo_Swing: Exile_Ammo_AbstractMelee
{
	hit = 4; 
};
class Exile_Ammo_Swoosh: Exile_Ammo_AbstractMelee
{
	hit = 5;
};
class Exile_Ammo_Boing: Exile_Ammo_AbstractMelee
{
	hit = 5;
};
class ExileLife_Ammo_Fist: Exile_Ammo_AbstractMelee
{
	hit = 1.5;
	knockout = 1;
	bleeding = 1;
};
class ExileLife_Ammo_Knife: Exile_Ammo_AbstractMelee
{
	hit = 3;
	bleeding = 1;
};
class ExileLife_Ammo_Bat: Exile_Ammo_AbstractMelee
{
	hit = 3.5;
	knockout = 1;
	bleeding = 1;
};
class ExileLife_Ammo_BatNails: Exile_Ammo_AbstractMelee
{
	hit = 6.0;
	knockout = 1;
	bleeding = 1;
};
class ExileLife_Ammo_PickAxe: Exile_Ammo_AbstractMelee
{
	hit = 7.0;
	knockout = 1;
	bleeding = 1;
};
class ExileLife_Ammo_Axe: Exile_Ammo_AbstractMelee
{
	hit = 7.5;
	knockout = 1;
	bleeding = 1;
};
class ExileLife_Ammo_GardenHoe: Exile_Ammo_AbstractMelee
{
	hit = 5.5;
	knockout = 1;
	bleeding = 1;
};
class ExileLife_Ammo_Guitar: Exile_Ammo_AbstractMelee
{
	hit = 2.5;
	knockout = 1;
};
class ExileLife_Ammo_FishingRod: Exile_Ammo_AbstractMelee
{
	hit = 0.5;
};
class ExileLife_Ammo_Sledgehammer: Exile_Ammo_AbstractMelee
{
	hit = 7.5;
	knockout = 1;
	bleeding = 1;
};
class ExileLife_Ammo_Shovel: Exile_Ammo_AbstractMelee
{
	hit = 4.5;
	knockout = 1;
	bleeding = 1;
};
	class Molotov: GrenadeHand
	{
		craterEffects="ExploAmmoCrater";
		explosionEffects="MolotovExplosionEffectsBig";
		explosive = 1;
		hit = 20;
		indirectHit = 8;
		indirectHitRange = 6;
		dangerRadiusHit = 60;
		suppressionRadiusHit = 10;		
		visibleFire = 0.5;
		audibleFire = 0.05;
		visibleFireTime = 1;
		explosionTime = 1;
		fuseDistance = 0;
		whistleDist = 5;
		soundHit[]=
		{
			"exile_assets\sound\molotov.ogg",
			1,
			4
		};	
		soundFly[]=
		{
			"",
			1,
			1
		};
		soundEngine[]=
		{
			"",
			1,
			4
		};
	};
class ExileLifeProjectile: EmptyGrenade
{
	model="\exilelife_assets\models\Items\Food\ExileLife_Item_Potato";
	hit = 8;
	indirectHit = 8;
	deflecting = 80; 
	indirectHitRange = 1;	
	soundImpactSoft1[] = {};
	soundImpactSoft2[] = {};
	soundImpactSoft3[] = {};
	soundImpactSoft4[] = {};
	soundImpactSoft5[] = {};
	soundImpactSoft6[] = {};
	soundImpactSoft7[] = {};
	soundImpactHard1[] = {};
	soundImpactHard2[] = {};
	soundImpactHard3[] = {};
	soundImpactHard4[] = {};
	soundImpactHard5[] = {};
	soundImpactHard6[] = {};
	soundImpactHard7[] = {};
	soundImpactIron1[] = {};
	soundImpactIron2[] = {};
	soundImpactIron3[] = {};
	soundImpactIron4[] = {};
	soundImpactIron5[] = {};
	soundImpactWoodExt1[] = {};
	soundImpactWoodExt2[] = {};
	soundImpactWoodExt3[] = {};
	soundImpactWoodExt4[] = {};
	soundImpactWater1[] = {};
	soundImpactWater2[] = {};
	soundImpactWater3[] = {};
	impactGroundSoft[] = {};
	impactGroundHard[] = {};
	impactIron[] = {};
	impactArmor[] = {};
	impactBuilding[] = {};
	impactFoliage[] = {};
	impactWood[] = {};
	impactGlass[] = {};
	impactGlassArmored[] = {};
	impactConcrete[] = {};
	impactTyre[] = {};
	impactRubber[] = {};
	impactPlastic[] = {};
	impactDefault[] =  {};
	impactMetal[] = {};
	impactMetalplate[] = {};
	impactWater[] = {};
	class HitEffects
	{		
			Hit_Foliage_green = "";
			Hit_Foliage_Dead = "";
			Hit_Foliage_Green_big = "";
			Hit_Foliage_Palm = "";
			Hit_Foliage_Pine = "";
			hitFoliage = "";
			hitGlass = "";
			hitGlassArmored = "";
			hitWood = "";
			hitMetal = "";
			hitMetalPlate = "";
			hitBuilding = "";
			hitPlastic = "";
			hitRubber = "";
			hitTyre = "";
			hitConcrete = "";
			hitMan = "";
			hitGroundSoft = "";
			hitGroundRed = "";
			hitGroundHard = "";
			hitWater = "";
			hitVirtual = "";
	};
};
class stone: ExileLifeProjectile
{
	hit = 15;
	deflecting = 0;
	indirectHit = 12;
};
class ziptie: ExileLifeProjectile
{
	model="\exile_assets\model\Exile_Item_ZipTie";	
	hit = 0;
};
class apple: ExileLifeProjectile
{
	model="\exilelife_assets\models\Items\Food\ExileLife_Item_Apple";
};
class orange: ExileLifeProjectile
{
	model="\exilelife_assets\models\Items\Food\ExileLife_Item_Orange";
};
class potato: ExileLifeProjectile
{
	model="\exilelife_assets\models\Items\Food\ExileLife_Item_Potato";
};
class banana: ExileLifeProjectile
{
	model="\exilelife_assets\models\Items\Food\ExileLife_Item_Banana";
	hit = 2;
	indirectHit = 2;
};
class ExileLife_Ammo_Primitive: BulletBase
{
    cartridge = ""; 
    model = "\A3\Weapons_f\Data\bullettracer\tracer_red";   
    hit = 4;
    timeToLive = 0.2; 
    visibleFire = 0;
    audibleFire = 1;
    caliber = 0.2;
    deflecting = 30;    
    simulationStep = 0.1;
    typicalSpeed = 150;
    maxSpeed = 170; 
    initSpeed = 170;
    maxLeadSpeed = 70;
    airFriction = -0.0018;
    tracerScale = 0;
    tracerStartTime = 0;
    tracerEndTime = 0;
    simulation = "shotRocket"; 
    effectsMissileInit = "EmptyEffect";
    effectsMissile = "EmptyEffect";
    effectsSmoke = "EmptyEffect";
    explosionEffects = "NoExplosion";
    craterEffects = "NoCrater";
    muzzleEffect = "";
    class HitEffects
    {       
            Hit_Foliage_green = "ImpactLeavesGreen";
            Hit_Foliage_Dead = "ImpactLeavesDead";
            Hit_Foliage_Green_big = "ImpactLeavesGreenBig";
            Hit_Foliage_Palm = "ImpactLeavesPalm";
            Hit_Foliage_Pine = "ImpactLeavesPine";
            hitFoliage = "ImpactLeaves";
            hitGlass = "ImpactGlass";
            hitGlassArmored = "ImpactGlassThin";
            hitWood = "ImpactWood";
            hitMetal = "ImpactMetal";
            hitMetalPlate = "ImpactMetal";
            hitBuilding = "ImpactPlaster";
            hitPlastic = "ImpactPlastic";
            hitRubber = "";
            hitTyre = "";
            hitConcrete = "";
            hitMan = "ImpactEffectsBlood";
            hitGroundSoft = "";
            hitGroundRed = "";
            hitGroundHard = "";
            hitWater = "ImpactEffectsWater";
            hitVirtual = "ImpactMetal";
            vehicle = "ImpactMetal";
            object = "ImpactConcrete";     
    };
        hitGroundSoft[] = {};
        hitGroundHard[] = {};
        soundHitBody1[] = {"\exile_assets\sound\hack_flesh01.ogg", 1.584893, 1, 10};
        soundHitBody2[] = {"\exile_assets\sound\hack_flesh02.ogg", 1.584893, 1, 10};
        hitMan[] = {"soundHitBody1", 0.500000, "soundHitBody2", 0.500000};
        impactMan[] = {};
        soundImpactDefault1[] = {};
        impactIron[] = {};
        impactArmor[] = {};
        impactBuilding[] = {};
        impactFoliage[] = {};
        impactWood[] = {};
        impactGlass[] = {};
        impactGlassArmored[] = {};
        impactConcrete[] = {};
        impactTyre[] = {};
        impactRubber[] = {};
        impactPlastic[] = {};
        impactDefault[] = {};
        impactMetal[] = {};
        impactMetalplate[] = {};
        impactWater[] = {};
};
class ExileLife_Ammo_Arrow: ExileLife_Ammo_Primitive
{
     hit = 6;
};
class ExileLife_Ammo_Taser: BulletBase
{
	cartridge = ""; 
	model = "\A3\Weapons_f\Data\bullettracer\tracer_red";	
	hit = 0; 
	timeToLive = 0.2; 
	visibleFire = 0;
	audibleFire = 1;
	caliber = 0.2;
	deflecting = 30;	
	simulationStep = 0.1;
	typicalSpeed = 50;
	maxSpeed = 70; 
	initSpeed = 70;
	maxLeadSpeed = 70;
	airFriction = -0.0018;
	tracerScale = 0;
	tracerStartTime = 0;
	tracerEndTime = 0;
	muzzleEffect = "";
	soundTaserImpactPlayer[] = {"\exilelife_assets\sound\taser_hit.ogg",4.104,1,55};
	class HitEffects
	{		
			Hit_Foliage_green = "";
			Hit_Foliage_Dead = "";
			Hit_Foliage_Green_big = "";
			Hit_Foliage_Palm = "";
			Hit_Foliage_Pine = "";
			hitFoliage = "";
			hitGlass = "";
			hitGlassArmored = "";
			hitWood = "";
			hitMetal = "ImpactMetal";
			hitMetalPlate = "ImpactMetal";
			hitBuilding = "";
			hitPlastic = "";
			hitRubber = "";
			hitTyre = "";
			hitConcrete = "";
			hitMan = "ImpactMetal"; 
			hitGroundSoft = "";
			hitGroundRed = "";
			hitGroundHard = "";
			hitWater = "";
			hitVirtual = "";
			vehicle = "ImpactMetal";
			object = "";			
	};
		hitGroundSoft[] = {};
		hitGroundHard[] = {};
		hitMan[] = {"soundTaserImpactPlayer",1};
		impactMan[] = {"soundTaserImpactPlayer",1};
		soundImpactDefault1[] = {};
		impactIron[] = {};
		impactArmor[] = {};
		impactBuilding[] = {};
		impactFoliage[] = {};
		impactWood[] = {};
		impactGlass[] = {};
		impactGlassArmored[] = {};
		impactConcrete[] = {};
		impactTyre[] = {};
		impactRubber[] = {};
		impactPlastic[] = {};
		impactDefault[] = {};
		impactMetal[] = {};
		impactMetalplate[] = {};
		impactWater[] = {};
};
};
class CfgAnimationSourceSounds
{
	class Exile_AnimationSound_ConcreteMixer
	{
		class Start 
		{
			loop = 0;
			sound0[] = {"exile_assets\sound\Exile_ConcreteMixer01.wss", 1, 1, 50};
			sound[] = {"sound0", 1};
			terminate = 0;
			trigger = "direction";
		};
	};
};
class CfgClanMakerIcons
{
	Icons[] = 
	{
		{"Text only","\A3\ui_f\data\map\markers\system\dummy_ca.paa"},
		{"Empty","\A3\ui_f\data\map\markers\system\empty_ca.paa"},
		{"Objective","\A3\ui_f\data\map\markers\military\objective_CA.paa"},
		{"Marker","\A3\ui_f\data\map\markers\military\marker_CA.paa"},
		{"Flag","\A3\ui_f\data\map\markers\military\flag_CA.paa"},
		{"Arrow","\A3\ui_f\data\map\markers\military\arrow_CA.paa"},
		{"Arrow (filled)","\A3\ui_f\data\map\markers\military\arrow2_CA.paa"},
		{"Ambush","\A3\ui_f\data\map\markers\military\ambush_CA.paa"},
		{"Destroy","\A3\ui_f\data\map\markers\military\destroy_CA.paa"},
		{"Start","\A3\ui_f\data\map\markers\military\start_CA.paa"},
		{"End","\A3\ui_f\data\map\markers\military\end_CA.paa"},
		{"Pick Up","\A3\ui_f\data\map\markers\military\pickup_CA.paa"},
		{"Join","\A3\ui_f\data\map\markers\military\join_CA.paa"},
		{"Warning","\A3\ui_f\data\map\markers\military\warning_CA.paa"},
		{"Unknown","\A3\ui_f\data\map\markers\military\unknown_CA.paa"},
		{"Circle","\A3\ui_f\data\map\markers\military\circle_CA.paa"},
		{"Dot","\A3\ui_f\data\map\markers\military\dot_CA.paa"},
		{"Square","\A3\ui_f\data\map\markers\military\box_CA.paa"},
		{"Triangle","\A3\ui_f\data\map\markers\military\triangle_CA.paa"},
		{"Select","\A3\ui_f\data\igui\cfg\islandmap\iconplayer_ca.paa"},
		{"Waypoint","\A3\ui_f\data\map\groupicons\waypoint.paa"},
		{"Selector - Selectable","\A3\ui_f\data\map\groupicons\selector_selectable_ca.paa"},
		{"Selector - Selected Enemy","\A3\ui_f\data\map\groupicons\selector_selectedEnemy_ca.paa"},
		{"Selector - Selected Friendly","\A3\ui_f\data\map\groupicons\selector_selectedFriendly_ca.paa"},
		{"Selector - Selected Mission","\A3\ui_f\data\map\groupicons\selector_selectedMission_ca.paa"},
		{"KIA","\a3\Ui_F_Curator\Data\CfgMarkers\kia_ca.paa"},
		{"Minefield","\a3\Ui_F_Curator\Data\CfgMarkers\minefield_ca.paa"},
		{"Minefield (AP)","\a3\Ui_F_Curator\Data\CfgMarkers\minefieldAP_ca.paa"},
		{"NATO","\A3\ui_f\data\map\markers\flags\nato_ca.paa"},
		{"CSAT","\A3\ui_f\data\map\markers\flags\CSAT_ca.paa"},
		{"Altis Armed Forces","\A3\ui_f\data\map\markers\flags\AAF_ca.paa"},
		{"Altis","\A3\ui_f\data\map\markers\flags\Altis_ca.paa"},
		{"Altis (Colonial)","\A3\ui_f\data\map\markers\flags\AltisColonial_ca.paa"},
		{"FIA","\A3\ui_f\data\map\markers\flags\FIA_ca.paa"},
		{"European Union","\A3\ui_f\data\map\markers\flags\EU_ca.paa"},
		{"United Nations","\A3\ui_f\data\map\markers\flags\UN_ca.paa"},
		{"Belgium","\A3\ui_f\data\map\markers\flags\Belgium_ca.paa"},
		{"Canada","\A3\ui_f\data\map\markers\flags\Canada_ca.paa"},
		{"Croatia","\A3\ui_f\data\map\markers\flags\Croatia_ca.paa"},
		{"Czech Republic","\A3\ui_f\data\map\markers\flags\CzechRepublic_ca.paa"},
		{"Denmark","\A3\ui_f\data\map\markers\flags\Denmark_ca.paa"},
		{"France","\A3\ui_f\data\map\markers\flags\France_ca.paa"},
		{"Georgia","\A3\ui_f\data\map\markers\flags\Georgia_ca.paa"},
		{"Germany","\A3\ui_f\data\map\markers\flags\Germany_ca.paa"},
		{"Greece","\A3\ui_f\data\map\markers\flags\Greece_ca.paa"},
		{"Hungary","\A3\ui_f\data\map\markers\flags\Hungary_ca.paa"},
		{"Iceland","\A3\ui_f\data\map\markers\flags\Iceland_ca.paa"},
		{"Italy","\A3\ui_f\data\map\markers\flags\Italy_ca.paa"},
		{"Luxembourg","\A3\ui_f\data\map\markers\flags\Luxembourg_ca.paa"},
		{"Netherlands","\A3\ui_f\data\map\markers\flags\Netherlands_ca.paa"},
		{"Norway","\A3\ui_f\data\map\markers\flags\Norway_ca.paa"},
		{"Poland","\A3\ui_f\data\map\markers\flags\Poland_ca.paa"},
		{"Portugal","\A3\ui_f\data\map\markers\flags\Portugal_ca.paa"},
		{"Slovakia","\A3\ui_f\data\map\markers\flags\Slovakia_ca.paa"},
		{"Slovenia","\A3\ui_f\data\map\markers\flags\Slovenia_ca.paa"},
		{"Spain","\A3\ui_f\data\map\markers\flags\Spain_ca.paa"},
		{"UK","\A3\ui_f\data\map\markers\flags\UK_ca.paa"},
		{"USA","\A3\ui_f\data\map\markers\flags\USA_ca.paa"}
	};
};
class CfgCloudlets
{
	class Default;
	class SmokeShellWhite : Default
	{
		moveVelocity[]={0.2,0.50000001,0.1};
		size[]={0.46,4.5,18};
		MoveVelocityVar[]={0.7,0.4,0.7};
	};
	class MolotovExp: Default
	{
		interval=0.050000001;
		circleRadius=0.5;
		circleVelocity[]={0,0,0};
		particleShape="\A3\data_f\ParticleEffects\Universal\Universal";
		particleFSNtieth=16;
		particleFSIndex=10;
		particleFSFrameCount=32;
		particleFSLoop=1;
		angleVar=360;
		animationName="";
		particleType="Billboard";
		timerPeriod=1.5;
		lifeTime=3;
		moveVelocity[]={1,1,0};
		rotationVelocity=0.2;
		weight=0.056000002;
		volume=0.039999999;
		rubbing=0.1;
		size[]={0.24999998,1.850000001};
		color[]=
		{
			{1,1,1,-4},
			{1,1,1,-3},
			{1,1,1,-1.5},
			{1,1,1,-0.30000001},
			{1,1,1,0}
		};
		animationSpeed[]={0.5,1};
		randomDirectionPeriod=0.5;
		randomDirectionIntensity=0.050000001;
		onTimerScript="";
		beforeDestroyScript="";
		lifeTimeVar=0.40000001;
		positionVar[]={2.5,1,0.5};
		MoveVelocityVar[]={0.3,0.3,0.1};
		rotationVelocityVar=5;
		sizeVar=0.3;
		colorVar[]={0,0,0,1};
		randomDirectionPeriodVar=0;
		randomDirectionIntensityVar=0;
		damageType="Fire";
	};
	class MolotovSmoke: Default
	{
		interval=0.079999998;
		circleRadius=0;
		circleVelocity[]={0,0,0};
		particleShape="\A3\data_f\ParticleEffects\Universal\Universal";
		particleFSNtieth=16;
		particleFSIndex=7;
		particleFSFrameCount=48;
		particleFSLoop=1;
		angleVar=1;
		animationName="";
		particleType="Billboard";
		timerPeriod=1;
		lifeTime=15;
		moveVelocity[]={1,1,0};
		rotationVelocity=0;
		weight=0.040000001;
		volume=0.029999999;
		rubbing=0.1;
		size[]={1.2,7};
		sizeCoef=1;
		color[]=
		{
			{0.1,0.1,0.1,0.059999999},
			{0.2,0.2,0.2,0.039999999},
			{0.2,0.2,0.2,0.02},
			{0.30000001,0.30000001,0.30000001,0.0099999998},
			{0.40000001,0.40000001,0.40000001,0.0049999999}
		};
		colorCoef[]={1.6,1.6,1.6,1.8};
		animationSpeed[]={1.5,0.5};
		animationSpeedCoef=1;
		randomDirectionPeriod=0.40000001;
		randomDirectionIntensity=0.15000001;
		onTimerScript="";
		beforeDestroyScript="";
		lifeTimeVar=4;
		position[]={0,0,0};
		positionVar[]={1.5,1,0.5};
		MoveVelocityVar[]={0.15000001,0.2,0.15000001};
		rotationVelocityVar=10;
		sizeVar=0.3;
		colorVar[]={0,0,0,0};
		randomDirectionPeriodVar=0.1;
		randomDirectionIntensityVar=0.050000001;
	};
	class FlareSmoke : Default 
	{
		interval = 0.1;
		circleRadius = 0;
		circleVelocity[] = {0, 0, 0};
		particleShape = "\a3\Data_f\ParticleEffects\Universal\Universal";
		particleFSNtieth = 16;
		particleFSIndex = 7;
		particleFSFrameCount = 48;
		particleFSLoop = 1;
		angleVar = 1;
		animationName = "";
		particleType = "Billboard";
		timerPeriod = 1;
		lifeTime = 4;
		moveVelocity[] = {0, 0.6, 0};
		rotationVelocity = 0;
		weight = 0.05;
		volume = 0.04;
		rubbing = 0.05;
		size[] = {0.2, 0.8, 2.6};
		sizeCoef = 1;
		color[] = {{0.6, 0.6, 0.6, 0}, {0.7, 0.7, 0.7, 0.2}, {0.8, 0.8, 0.8, 0.1}, {1, 1, 1, 0}};
		colorCoef[] = {1, 1, 1, 1};
		animationSpeed[] = {1.5, 0.5};
		animationSpeedCoef = 1;
		randomDirectionPeriod = 0.4;
		randomDirectionIntensity = 0.09;
		onTimerScript = "";
		beforeDestroyScript = "";
		lifeTimeVar = 0.3;
		position[] = {0, 0, 0};
		positionVar[] = {0.1, 0.2, 0.1};
		MoveVelocityVar[] = {0.05, 0.5, 0.05};
		rotationVelocityVar = 0;
		sizeVar = 0.3;
		colorVar[] = {0, 0, 0, 0.1};
		randomDirectionPeriodVar = 0.2;
		randomDirectionIntensityVar = 0.05;
	};
	class FlareSparks : Default
	{
		interval = 0.03;
		circleRadius = 0;
		circleVelocity[] = {0, 0, 0};
		particleShape = "\a3\Data_f\ParticleEffects\Universal\Universal";
		particleFSNtieth = 16;
		particleFSIndex = 13;
		particleFSFrameCount = 2;
		particleFSLoop = 0;
		angleVar = 1;
		animationName = "";
		particleType = "Billboard";
		timerPeriod = 3;
		lifeTime = 0.5;
		moveVelocity[] = {0, 0.7, 0};
		rotationVelocity = 0;
		weight = 0.05;
		volume = 0.04;
		rubbing = 0.05;
		size[] = {0.4, 0};
		sizeCoef = 1;
		color[] = {{1, 1, 1, 0}, {1, 1, 1, -1}, {1, 1, 1, -1}, {1, 1, 1, -1}, {1, 1, 1, -1}, {1, 1, 1, 0}};
		colorCoef[] = {1, 1, 1, 1};
		animationSpeed[] = {1};
		animationSpeedCoef = 1;
		randomDirectionPeriod = 0;
		randomDirectionIntensity = 0;
		onTimerScript = "";
		beforeDestroyScript = "";
		lifeTimeVar = 0.2;
		position[] = {0, 0, 0};
		positionVar[] = {0.05, 0.2, 0.05};
		moveVelocityVar[] = {0.08, 0.9, 0.08};
		rotationVelocityVar = 0;
		sizeVar = 0.03;
		colorVar[] = {0.1, 0.1, 0.1, 0};
		randomDirectionPeriodVar = 0;
		randomDirectionIntensityVar = 0;
	};
	class Blood;
	class BloodMist: Blood
	{
		particleShape = "\A3\data_f\ParticleEffects\Universal\Universal_02";
		particleFSNtieth = 8;
		particleFSIndex = 4;
		particleFSFrameCount = 1;
		particleFSLoop = 0;
		lifeTime = 0.2;
		lifeTimeVar = 0.02;
		moveVelocity[] = {"(+ inDirX * 2 - surfNormalX / 4) * inSpeed / 250 * 1","( + inDirY * 2 - surfNormalY / 4) * inSpeed / 250 * 1","( + inDirZ * 2 - surfNormalZ / 4) * inSpeed / 250 * 1"};
		moveVelocityVar[] = {"(+ inDirX * 2 - surfNormalX / 4) * inSpeed / 200 * 0.1","( + inDirY * 2 - surfNormalY / 4) * inSpeed / 200 * 0.1","( + inDirZ * 2 - surfNormalZ / 4) * inSpeed / 200 * 0.1"};
		rubbing = 0.4;
		size[] = {"(hit/120 + 0.05)","2*(hit/60 + 0.15)"};
		sizeVar = 0;
		color[] = {{1,0.25,0.25,0.08},{1,0.45,0.45,0.0001}};
		colorVar[] = {0,0.1,0.1,0.1};
		rotationVelocityVar = 0.2;
		randomDirectionPeriod = 0.10000001;
		randomDirectionIntensity = 0.3;
		weight = 0.15;
	};
};
class MolotovExplosionEffectsBig
{
	class Explosion2Big
	{
		simulation="particles";
		type="MolotovExp";
		position[]={0,0,0};
		intensity=1;
		interval=1;
		lifeTime=120;
	};
	class SmallSmoke1Big
	{
		simulation="particles";
		type="MolotovSmoke";
		position[]={0,0,0};
		intensity=0.5;
		interval=0.5;
		lifeTime=60;
	};
};
class ExileLifeFlareWhite 
{
	class FlareSmoke 
	{
		simulation = "particles";
		type = "FlareSmoke";
		position[] = {0, 0, 0};
		intensity = 1;
		interval = 1;
		lifeTime = 300;
	};
	class FlareSparks 
	{
		simulation = "particles";
		type = "FlareSparks";
		position[] = {0, 0, 0};
		intensity = 1;
		interval = 1;
		lifeTime = 300;
	};
	class Light1
	{
		simulation = "light";
		type = "FlareLightWhite";
	};
};
class ExileLifeFlareGreen
{
	class FlareSmoke 
	{
		simulation = "particles";
		type = "FlareSmoke";
		position[] = {0, 0, 0};
		intensity = 1;
		interval = 1;
		lifeTime = 300;
	};
	class FlareSparks 
	{
		simulation = "particles";
		type = "FlareSparks";
		position[] = {0, 0, 0};
		intensity = 1;
		interval = 1;
		lifeTime = 300;
	};
	class Light1
	{
		simulation = "light";
		type = "FlareLightGreen";
	};
};
class ExileLifeFlareYellow
{
	class FlareSmoke 
	{
		simulation = "particles";
		type = "FlareSmoke";
		position[] = {0, 0, 0};
		intensity = 1;
		interval = 1;
		lifeTime = 300;
	};
	class FlareSparks 
	{
		simulation = "particles";
		type = "FlareSparks";
		position[] = {0, 0, 0};
		intensity = 1;
		interval = 1;
		lifeTime = 300;
	};
	class Light1
	{
		simulation = "light";
		type = "FlareLightYellow";
	};
};
class ExileLifeFlareRed
{
	class FlareSmoke 
	{
		simulation = "particles";
		type = "FlareSmoke";
		position[] = {0, 0, 0};
		intensity = 1;
		interval = 1;
		lifeTime = 300;
	};
	class FlareSparks 
	{
		simulation = "particles";
		type = "FlareSparks";
		position[] = {0, 0, 0};
		intensity = 1;
		interval = 1;
		lifeTime = 300;
	};
	class Light1
	{
		simulation = "light";
		type = "FlareLightRed";
	};
};
class ImpactEffectsBlood
{
	class BloodMist
	{
		simulation = "particles";
		type = "BloodMist";
		position[] = {0,0,0.2};
		intensity = 0.5;
		interval = 1;
		lifeTime = 0.7;
		moveVelocity[] = {"(+ inDirX * 2 - surfNormalX / 4) * inSpeed / 200 * 0.05","( + inDirY * 2 - surfNormalY / 4) * inSpeed / 200 * 0.05","( + inDirZ * 2 - surfNormalZ / 4) * inSpeed / 200 * 0.05"};
		MoveVelocityVar[] = {0.1,0.1,0.1};
	};
	class Blood
	{
		simulation = "particles";
		type = "Blood";
		position[] = {0,0,0};
		intensity = 0.1;
		interval = 1;
		lifeTime = 0.1;
		size[] = {"(hit/200 + 0.01)","2*(hit/100 + 0.01)"};
		MoveVelocityVar[] = {2,2,2};
	};
	class Blood1
	{
		simulation = "particles";
		type = "Blood1";
		position[] = {0,0,0};
		intensity = 0.1;
		interval = 1;
		lifeTime = 0.14999998;
		size[] = {"(hit/200 + 0.01)","2*(hit/100 + 0.01)"};
		color[] = {{1,0.05,0.05,0.08},{1,0.35,0.35,0.0001}};
	};
	class Blood2
	{
		simulation = "particles";
		type = "Blood2";
		position[] = {0,0,0};
		intensity = 0.1;
		interval = 1;
		lifeTime = 0.10000001;
		size[] = {"(hit/200 + 0.01)","2*(hit/200 + 0.05)"};
		color[] = {{1,0.05,0.05,0.08},{1,0.35,0.35,0.0001}};
	};
	class Blood3
	{
		simulation = "particles";
		type = "Blood3";
		position[] = {0,0,0};
		intensity = 0.1;
		interval = 1;
		lifeTime = 0.10000001;
		size[] = {"(hit/400 + 0.01)","2*(hit/200 + 0.05)"};
		color[] = {{1,0.05,0.05,0.08},{1,0.35,0.35,0.0001}};
	};
	class BloodUnderwater1
	{
		simulation = "particles";
		type = "BloodUnderwater1";
		position[] = {0,0,0};
		intensity = 1;
		interval = 1;
		lifeTime = 0.4;
	};
};
class CfgCommands
{
	allowedHTMLLoadURIs[] = {"http://lobby.exilelifemod.com/index.html*"}; 
};
class AbstractConstruction
{
	staticObject = "";
	previewObject = "";
	kitMagazine = "";
	upgradeObject = "";
	refundObjects[] = {};
	requiresTerritory = 1; 
	canBePlacedOnRoad = 1;
	allowDuplicateSnap = 0;
	constructmeanywhere = 0; 
	tempitem = 0; 
	class SnapPositions {};
	class SnapObjects {};
};
class CfgConstruction
{
class BlueWoodShelf: AbstractConstruction
{
	staticObject = "ExileLife_Construction_Shelving_Wood_Blue_Static";
	previewObject = "ExileLife_Construction_Shelving_Wood_Blue_Preview";
	kitMagazine = "ExileLife_Construction_Shelving_Wood_Blue";
	requiresTerritory = 1;
	refundObjects[] = {"ExileLife_Construction_Shelving_Wood_Blue"};
};
class CameraPole: AbstractConstruction
{
	staticObject = "ExileLife_Construction_CameraPole_Static";
	previewObject = "ExileLife_Construction_CameraPole_Preview";
	kitMagazine = "ExileLife_Item_CameraPole";
	requiresTerritory = 0;
	refundObjects[] = {"ExileLife_Item_CameraPole"};
};
class ItsaChair: AbstractConstruction
{
	staticObject = "ExileLife_Construction_Chair_Static";
	previewObject = "ExileLife_Construction_Chair_Preview";
	kitMagazine = "ExileLife_Item_Chair";
	requiresTerritory = 1;
	refundObjects[] = {"ExileLife_Item_Chair"};
};
class KhakiWoodShelf: AbstractConstruction
{
	staticObject = "ExileLife_Construction_Shelving_Wooden_Khaki_Static";
	previewObject = "ExileLife_Construction_Shelving_Wooden_Khaki_Preview";
	kitMagazine = "ExileLife_Construction_Shelving_Wooden_Khaki";
	requiresTerritory = 1;
	refundObjects[] = {"ExileLife_Construction_Shelving_Wooden_Khaki"};
};
class SleepingBag: AbstractConstruction
{
	staticObject = "ExileLife_Construction_SleepingBag_Static";
	previewObject = "ExileLife_Construction_SleepingBag_Preview";
	kitMagazine = "ExileLife_Item_SleepingBag";
	requiresTerritory = 0;
	refundObjects[] = {"ExileLife_Item_SleepingBag"};
};
class TableDesk: AbstractConstruction
{
	staticObject = "ExileLife_Construction_Table_Desk_Static";
	previewObject = "ExileLife_Construction_Table_Desk_Preview";
	kitMagazine = "ExileLife_Construction_Table_Desk";
	requiresTerritory = 1;
	refundObjects[] = {"ExileLife_Construction_Table_Desk"};
};
	class TableLarge: AbstractConstruction
	{
		staticObject = "ExileLife_Construction_Table_Large_Static";
		previewObject = "ExileLife_Construction_Table_Large_Preview";
		kitMagazine = "ExileLife_Construction_Table_Large";
		requiresTerritory = 1;
		refundObjects[] = {"ExileLife_Construction_Table_Large"};
	};
class TablePlastic: AbstractConstruction
{
	staticObject = "ExileLife_Construction_Table_Plastic_Static";
	previewObject = "ExileLife_Construction_Table_Plastic_Preview";
	kitMagazine = "ExileLife_Construction_Table_Plastic";
	requiresTerritory = 1;
	refundObjects[] = {"ExileLife_Construction_Table_Plastic"};
};
class TableSmall: AbstractConstruction
{
	staticObject = "ExileLife_Construction_Table_Small_Static";
	previewObject = "ExileLife_Construction_Table_Small_Preview";
	kitMagazine = "ExileLife_Construction_Table_Small";
	requiresTerritory = 1;
	refundObjects[] = {"ExileLife_Construction_Table_Small"};
};
class TallMetalShelf: AbstractConstruction
{
	staticObject = "ExileLife_Construction_Shelving_Metal_Tall_Static";
	previewObject = "ExileLife_Construction_Shelving_Metal_Tall_Preview";
	kitMagazine = "ExileLife_Construction_Shelving_Metal_Tall";
	requiresTerritory = 1;
	refundObjects[] = {"ExileLife_Construction_Shelving_Metal_Tall"};
};
class TallWoodShelf: AbstractConstruction
{
	staticObject = "ExileLife_Construction_Shelving_Wood_Tall_Static";
	previewObject = "ExileLife_Construction_Shelving_Wood_Tall_Preview";
	kitMagazine = "ExileLife_Construction_Shelving_Wood_Tall";
	requiresTerritory = 1;
	refundObjects[] = {"ExileLife_Construction_Shelving_Wood_Tall"};
};
class WaterBarrel: AbstractConstruction
{
	staticObject = "Exile_Construction_WaterBarrel_Static";
	previewObject = "Exile_Construction_WaterBarrel_Preview";
	kitMagazine = "Exile_Item_WaterBarrelKit";
	requiresTerritory = 0;
	canBePlacedOnRoad = 0;
	constructmeanywhere = 1;
	refundObjects[] = {"Exile_Item_WaterBarrelKit"};
};
class WoodShelf: AbstractConstruction
{
	staticObject = "ExileLife_Construction_Shelving_Wooden_Static";
	previewObject = "ExileLife_Construction_Shelving_Wooden_Preview";
	kitMagazine = "ExileLife_Construction_Shelving_Wooden";
	requiresTerritory = 1;
	refundObjects[] = {"ExileLife_Construction_Shelving_Wooden"};
};
	class WoodStool: AbstractConstruction
	{
		staticObject = "ExileLife_Construction_Stool_Static";
		previewObject = "ExileLife_Construction_Stool_Preview";
		kitMagazine = "ExileLife_Item_Chair_Stool";
		requiresTerritory = 1;
		refundObjects[] = {"ExileLife_Item_Chair_Stool"};
	};
};
class CfgDialogs
{
class WelcomeScreen
{
	title = "WELCOME TO EXILELIFE";
	onLoad = "(findDisplay 16100) displayAddEventHandler ['keyDown','_this call ExileClient_gui_loadingScreen_event_onKeyDown'];";
	onUnload = "ExileLifeWelcomeMessageClosed = true;";
	tradersgang = "";
	disableExitButton = 1;
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Introduction";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Message From the Developers</t> <br/> <br/><t shadow='0' size='1'>We are so excited to have you here for the official alpha testing of ExileLife. Itâs been a long road towards this alpha and we have many more months before beta. <br/> Before you get in the world and running around, please click through the rest of the tabs to be better acquainted around the more technical aspects of ExileLife that would break immersion if explained in the world. <br/> <br/> Thank you for participating in our Alpha testing, and let us be the first to welcome you to your new life in Exile. <br/>- ExileLife Mod Development Team <br/><br/><br/><t shadow='0' align='center' valign='middle' size='1.8'> A note about this Alpha:</t> <br/>Please keep in mind that we are in a testing phase of the mod and the build of the mod is a work in progress. Expect bugs, crashes, things not working, feature prototypes, and placeholders as you play around the world.<br/>Once you get your XM8, you will have access to a bug report application in the more tab. Please use it whenever you run into a bug as reporting via in game chat is worthless for fixing bugs.</t>";
				extraButton = "Button_1";
			};
		};
		class Scene_2
		{
			class Button_1
			{
				name = "What to do next?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>What to do next?</t> <br/> <br/><t shadow='0' size='1'>Once you close this screen, you will be given your first job as an inmate. We highly suggest that you complete the job, and as a reward you will be given items to help you along your way. <br/>After that, the world is your fucking oyster. Talk to other inmates, visit the job board, go fishing, visit the mines, hitchhike, or join a gang. This is your life in Exile, inmate. <br/><br/>Just one last thing. <br/><br/>Donât fuck with the old man. </t>";
				body2 = "";
				action = "";
				extraButton = "Button_2";
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "What's next?";
			action = "ExileLifeDialogPreviousScene = ""Scene_1""; [""WelcomeScreen"",""Scene_2""] call ExileLifeClient_gui_dialog_event_loadScene;";
		};
		class Button_2
		{
			name = "I Understand";
			action = "closeDialog 1";
		};
	};
};
class ExileLife_Trader_Garage
{
	title = "EDWARD, THE GARAGE VALET";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "What is this?";
				body ="<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='2'>What is this?</t><br/><br/><t shadow='0' size='0.8'>Hello new blood,<br/><br/>This is Athira's main garage. I take care of any vehicles you want to store here, protected by the Old Man.</t>";
				action = "";
			};
			class Button_2
			{
				name = "Access Garage";
				body = "";
				action = "ExileLifeClient_gui_virtualGarageDialog_show";
			};
		};
	};
};
class ExileLife_Trader_Garage_JobNotForPerson
{
	title = "EDWARD, THE GARAGE VALET";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "What is this?";
				body ="<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='2'>What is this?</t><br/><br/><t shadow='0' size='0.8'>Hello new blood,<br/><br/>This is Athira's main garage. I take care of any vehicles you want to store here, protected by the Old Man.</t>";
				action = "";
			};
			class Button_2
			{
				name = "Access Garage";
				body = "";
				action = "ExileLifeClient_gui_virtualGarageDialog_show";
			};
		};
	};
};
class ExileLife_Trader_Receivings
{
	title = "WILLIAM, THE RECEIVINGS TRADER";
	onLoad = "call ExileLifeClient_system_jobs_scenes_trader_receivings_onLoad";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Introduction";
				body ="<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='2'>Welcome To Exile Life</t><br/><br/><t shadow='0' size='0.8'>In accordance to article 08.2015.x of the EXILE contract, I am required to officially welcome you to EXILE. Unofficially, I couldnât give a shit if you feel welcome or not. But since it's my job, I'm going to give you a fair chance on this island - you're going to need it. My name is William, like that really matters, but I'm the one everyone comes to when they first get on this island. To start you off, Iâve given you a <t color='#c72651'>bottle of water</t>, <t color='#c72651'>some food</t>, <t color='#c72651'>a map</t>, and a standard issued <t color='#c72651'>XM8</t>.<br/>A few pieces of advice, not because I like you but because I donât want your blood on my hands. Number one: Listen to the guards. Number two: If you get a hold of a weapon, don't bring it into any cities. Especially not this one. If you have to fight to survive, you donât want the guards on you as well as the other Exiled. Number three: Pick your friends wisely - this island is full of enemies.</t>";
				action = "";
			};
			class Button_2
			{
				name = "Getting Started";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='2'>What do I do next?</t><br/><br/><t shadow='0' size='0.8'>Curious about what to do next?<br/>I may have a job for you if you are interested. If not, just remember when you're in need, people youâve helped will be more willing to help you.<br/><br/>Other than that, there are plenty of things to do to pass the time while Exiled. Although your fellow inmates pretty much run the place, we have a society of sorts and we need to keep it running and produce supplies for the mainland or the program will be shut down.<br/><br/>Some jobs include taking tankers and fueling up the petrol stations so that the guards like me can do our jobs and keep you guys from being terminated. If you are looking to expand your personal wealth then you should start with something simple and collect some food through gathering, fishing or hunting. The island's main resource -and the reason we brought you here - is ore. The traders will buy raw ore from you, or you can refine it for a bit of extra cash if you like.<br/><br/>Check out the job board for pointers on simple tasks, or ask the traders around the city - some of them have useful tips or they might even have a job for you.</t>";
				action = "";
			};
			class Button_3
			{
				name = "Tell Me More";
				body ="<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='2'>Tell me more?</t><br/><br/><t shadow='0' size='0.8'>Ahh, the curious type. As some say, knowledge is power, but those people normally get killed by people with guns because guns are also power.<br/><br/><br/><t shadow='0' align='center' valign='middle' size='1.3'>---Main City: Athira---</t><br/><br/>The safest place on our island, Athira is a gorgeous city full of spry young people willing to make the world a better placeâ¦ At least thatâs what the recruiter said when they hired us. When we got here, this place was run down, half-destroyed, full of murder and gang activity. Luckily, back then we had the funding and managed to gain control and cleaned up the city. Iâm sure itâs not as beautiful as it was when it was first built, but weâve done a damn good job.<br/>You can find shops with plenty of goods, houses for rent, the guardsâ station, and much, much more. Iâd highly suggest looking around. Keep in mind, our city is under guard control - follow our rules and you will be just fine.<br/><br/><br/><t shadow='0' align='center' valign='middle' size='1.3'>---Guards---</t><br/><br/>Ah yes, my fellow guards. Frankly, with so many new faces in the company, I donât really trust many of them.<br/>Let me ask you this, what do you get when you hire guards trained in a prison environment to bring to heel an island controlled by very rich gangs?<br/><br/>The answer, of course, is a bunch of corrupt guards.<br/><br/>My point is that you can't expect the guards to be able to protect you all over the island. They do, however, patrol as much as they can and they control this city so you can feel safer here. There are a few rules in place that you will need to follow or you will do time in lockup, and trust me, whatever rights that you thought you had donât apply there.<br/><br/><br/><t shadow='0' align='center' valign='middle' size='1.3'>---Gangs---</t><br/><br/>Iâd warn you about the gangs, but money is a very powerful force to not be messed with.<br/>We have four gangs on the island; <t color='#523652'>The Mafia</t>, <t color='#630C19'>The Yakuza</t>, <t color='#214E21'>The Cartel</t>, and <t color='#994413'>The Syndicate</t>.<br/>Each gang has made its base on one of the four corners of the island which puts our Athira right in the middle.<br/>I urge against going off and wandering into these gang areas without proper permission from them or you might find that your time here in EXILE will be short, and the only way you will be leaving here is in a body bag.<br/>Oh wait, we donât do that anymore. Never mind, you will just be dumped in a ditch.<br/>Still interested in the gangs? Each gang has an area of the town that they like to hide in - head over to that side of town and you will find the gangâs recruiter. They will be able to give you more information about that particular gang. But donât come crying to me if they didnât accept you.<br/><br/><br/>Still interested in the gangs? Each gang has an area of the town that they like to hide in, head over to that side of town and you will find the respective gangs recruiter. They will be able to give you more information about that particular gang. Donât come back crying to me if they didnât accept you.<br/><br/><br/><t shadow='0' align='center' valign='middle' size='1.3'>---XM8---</t><br/><br/>The XM8 is your communication device and will be your guide on this island. We had a working communication network for our XM8s, but due to gang activity and no funding from NATO, we ended up losing the towers to the gangs. Long story short, your XM8 isnât fully functional, but you can purchase a communication chip. You will be required to pay a service fee to continue to use it, but it does unlock your XM8 to allow you to communicate with other inmates on the island. [Not Implemented]<br/><br/><br/><t shadow='0' align='center' valign='middle' size='1.3'>---Jobs---</t><br/><br/>Like I said before, we have a somewhat functioning society and there are plenty of jobs for you to do to help keep it running. You get paid for each job you do and you can use the money to buy everything you'll need to survive on this godforsaken island. Jobs range anything from simple delivery jobs, to complex infiltrations into other gang areas. Sound like fun? You canât just walk in and get any job you want though, some jobs require a certain skill level, trade, or even being part of a gang. When you think you are ready to take on a job, just head over to the job board in the town to check out whatâs available. <br/><br/><br/></t>";
				action = "";
			};
			class Button_4
			{
				name = "Got any work?";
				body ="<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='2'>Got any work for me?</t><br/><br/><t shadow='0' size='0.8'>Well, I just so happen to need someone to go out and grab some goods from the other side of town and bring them back to me. Itâs risk free and will let you get a feel for this place. I do need them within the next <t color='#c72651'>30 minutes</t>, since I have more âclientsâ coming in. Complete this for me successfully and I will pay you.</t>";
				action = "";
				extraButton = "Button_1";
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "Accept Job";
			action = "call ExileLifeClient_system_jobs_scenes_trader_receivings_onJobAcceptButtonClick;";
		};
	};
};
class ExileLife_Trader_Receivings_CompletingJobForPerson
{
	title = "WILLIAM, THE RECEIVINGS TRADER";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Introduction";
				body ="<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='2'>Welcome To Exile Life</t><br/><br/><t shadow='0' size='0.8'>In accordance to article 08.2015.x of the EXILE contract, I am required to officially welcome you to EXILE. Unofficially, I couldnât give a shit if you feel welcome or not. But since it's my job, I'm going to give you a fair chance on this island - you're going to need it. My name is William, like that really matters, but I'm the one everyone comes to when they first get on this island.<br/>A few pieces of advice, not because I like you but because I donât want your blood on my hands. Number one: Listen to the guards. Number two: If you get a hold of a weapon, don't bring it into any cities. Especially not this one. If you have to fight to survive, you donât want the guards on you as well as the other Exiled. Number three: Pick your friends wisely - this island is full of enemies.</t>";
				action = "";
			};
			class Button_2
			{
				name = "Getting Started";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='2'>What do I do next?</t><br/><br/><t shadow='0' size='0.8'>There are plenty of things to do to pass the time while Exiled. Although your fellow inmates pretty much run the place, we have a society of sorts and we need to keep it running and produce supplies for the mainland or the program will be shut down.<br/><br/>Some jobs include taking tankers and fueling up the petrol stations so that the guards like me can do our jobs and keep you guys from being terminated. If you are looking to expand your personal wealth then you should start with something simple and collect some food through gathering, fishing or hunting. The island's main resource -and the reason we brought you here - is ore. The traders will buy raw ore from you, or you can refine it for a bit of extra cash if you like.<br/><br/>Check out the job board for pointers on simple tasks, or ask the traders around the city - some of them have useful tips or they might even have a job for you.</t>";
				action = "";
			};
			class Button_3
			{
				name = "Tell Me More";
				body ="<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='2'>Tell me more?</t><br/><br/><t shadow='0' size='0.8'>Ahh, the curious type. As some say, knowledge is power, but those people normally get killed by people with guns because guns are also power.<br/><br/><br/><t shadow='0' align='center' valign='middle' size='1.3'>---Main City: Athira---</t><br/><br/>The safest place on our island, Athira is a gorgeous city full of spry young people willing to make the world a better placeâ¦ At least thatâs what the recruiter said when they hired us. When we got here, this place was run down, half-destroyed, full of murder and gang activity. Luckily, back then we had the funding and managed to gain control and cleaned up the city. Iâm sure itâs not as beautiful as it was when it was first built, but weâve done a damn good job.<br/>You can find shops with plenty of goods, houses for rent, the guardsâ station, and much, much more. Iâd highly suggest looking around. Keep in mind, our city is under guard control - follow our rules and you will be just fine.<br/><br/><br/><t shadow='0' align='center' valign='middle' size='1.3'>---Guards---</t><br/><br/>Ah yes, my fellow guards. Frankly, with so many new faces in the company, I donât really trust many of them.<br/>Let me ask you this, what do you get when you hire guards trained in a prison environment to bring to heel an island controlled by very rich gangs?<br/><br/>The answer, of course, is a bunch of corrupt guards.<br/><br/>My point is that you can't expect the guards to be able to protect you all over the island. They do, however, patrol as much as they can and they control this city so you can feel safer here. There are a few rules in place that you will need to follow or you will do time in lockup, and trust me, whatever rights that you thought you had donât apply there.<br/><br/><br/><t shadow='0' align='center' valign='middle' size='1.3'>---Gangs---</t><br/><br/>Iâd warn you about the gangs, but money is a very powerful force to not be messed with.<br/>We have four gangs on the island; <t color='#523652'>The Mafia</t>, <t color='#630C19'>The Yakuza</t>, <t color='#214E21'>The Cartel</t>, and <t color='#994413'>The Syndicate</t>.<br/>Each gang has made its base on one of the four corners of the island which puts our Athira right in the middle.<br/>I urge against going off and wandering into these gang areas without proper permission from them or you might find that your time here in EXILE will be short, and the only way you will be leaving here is in a body bag.<br/>Oh wait, we donât do that anymore. Never mind, you will just be dumped in a ditch.<br/>Still interested in the gangs? Each gang has an area of the town that they like to hide in - head over to that side of town and you will find the gangâs recruiter. They will be able to give you more information about that particular gang. But donât come crying to me if they didnât accept you.<br/><br/><br/>Still interested in the gangs? Each gang has an area of the town that they like to hide in, head over to that side of town and you will find the respective gangs recruiter. They will be able to give you more information about that particular gang. Donât come back crying to me if they didnât accept you.<br/><br/><br/><t shadow='0' align='center' valign='middle' size='1.3'>---XM8---</t><br/><br/>The XM8 is your communication device and will be your guide on this island. We had a working communication network for our XM8s, but due to gang activity and no funding from NATO, we ended up losing the towers to the gangs. Long story short, your XM8 isnât fully functional, but you can purchase a communication chip. You will be required to pay a service fee to continue to use it, but it does unlock your XM8 to allow you to communicate with other inmates on the island. [Not Implemented]<br/><br/><br/><t shadow='0' align='center' valign='middle' size='1.3'>---Jobs---</t><br/><br/>Like I said before, we have a somewhat functioning society and there are plenty of jobs for you to do to help keep it running. You get paid for each job you do and you can use the money to buy everything you'll need to survive on this godforsaken island. Jobs range anything from simple delivery jobs, to complex infiltrations into other gang areas. Sound like fun? You canât just walk in and get any job you want though, some jobs require a certain skill level, trade, or even being part of a gang. When you think you are ready to take on a job, just head over to the job board in the town to check out whatâs available. <br/><br/><br/></t>";
				action = "";
			};
			class Button_4
			{
				name = "I got the Supplies";
				body ="<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='2'>I have those supplies you asked for</t><br/><br/><t shadow='0' size='0.8'>Excellent! Please hand them over to me and I will pay you for your work</t>";
				action = "";
				extraButton = "Button_1";
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "Hand Over Supplies";
			action = "call ExileLifeClient_system_jobs_scenes_trader_receivings_onHandOverButtonClick;";
		};
	};
};
class ExileLife_Trader_Receivings_JobForPerson
{
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Introduction";
				body ="<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='2'>Welcome To Exile Life</t><br/><br/><t shadow='0' size='0.8'>In accordance to article 08.2015.x of the EXILE contract, I am required to officially welcome you to EXILE. Unofficially, I couldnât give a shit if you feel welcome or not. But since it's my job, I'm going to give you a fair chance on this island - you're going to need it. My name is William, like that really matters, but I'm the one everyone comes to when they first get on this island.<br/>A few pieces of advice, not because I like you but because I donât want your blood on my hands. Number one: Listen to the guards. Number two: If you get a hold of a weapon, don't bring it into any cities. Especially not this one. If you have to fight to survive, you donât want the guards on you as well as the other Exiled. Number three: Pick your friends wisely - this island is full of enemies.</t>";
				action = "";
			};
			class Button_2
			{
				name = "Getting Started";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='2'>What do I do next?</t><br/><br/><t shadow='0' size='0.8'>There are plenty of things to do to pass the time while Exiled. Although your fellow inmates pretty much run the place, we have a society of sorts and we need to keep it running and produce supplies for the mainland or the program will be shut down.<br/><br/>Some jobs include taking tankers and fueling up the petrol stations so that the guards like me can do our jobs and keep you guys from being terminated. If you are looking to expand your personal wealth then you should start with something simple and collect some food through gathering, fishing or hunting. The island's main resource -and the reason we brought you here - is ore. The traders will buy raw ore from you, or you can refine it for a bit of extra cash if you like.<br/><br/>Check out the job board for pointers on simple tasks, or ask the traders around the city - some of them have useful tips or they might even have a job for you.</t>";
				action = "";
			};
			class Button_3
			{
				name = "Tell Me More";
				body ="<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='2'>Tell me more?</t><br/><br/><t shadow='0' size='0.8'>Ahh, the curious type. As some say, knowledge is power, but those people normally get killed by people with guns because guns are also power.<br/><br/><br/><t shadow='0' align='center' valign='middle' size='1.3'>---Main City: Athira---</t><br/><br/>The safest place on our island, Athira is a gorgeous city full of spry young people willing to make the world a better placeâ¦ At least thatâs what the recruiter said when they hired us. When we got here, this place was run down, half-destroyed, full of murder and gang activity. Luckily, back then we had the funding and managed to gain control and cleaned up the city. Iâm sure itâs not as beautiful as it was when it was first built, but weâve done a damn good job.<br/>You can find shops with plenty of goods, houses for rent, the guardsâ station, and much, much more. Iâd highly suggest looking around. Keep in mind, our city is under guard control - follow our rules and you will be just fine.<br/><br/><br/><t shadow='0' align='center' valign='middle' size='1.3'>---Guards---</t><br/><br/>Ah yes, my fellow guards. Frankly, with so many new faces in the company, I donât really trust many of them.<br/>Let me ask you this, what do you get when you hire guards trained in a prison environment to bring to heel an island controlled by very rich gangs?<br/><br/>The answer, of course, is a bunch of corrupt guards.<br/><br/>My point is that you can't expect the guards to be able to protect you all over the island. They do, however, patrol as much as they can and they control this city so you can feel safer here. There are a few rules in place that you will need to follow or you will do time in lockup, and trust me, whatever rights that you thought you had donât apply there.<br/><br/><br/><t shadow='0' align='center' valign='middle' size='1.3'>---Gangs---</t><br/><br/>Iâd warn you about the gangs, but money is a very powerful force to not be messed with.<br/>We have four gangs on the island; <t color='#523652'>The Mafia</t>, <t color='#630C19'>The Yakuza</t>, <t color='#214E21'>The Cartel</t>, and <t color='#994413'>The Syndicate</t>.<br/>Each gang has made its base on one of the four corners of the island which puts our Athira right in the middle.<br/>I urge against going off and wandering into these gang areas without proper permission from them or you might find that your time here in EXILE will be short, and the only way you will be leaving here is in a body bag.<br/>Oh wait, we donât do that anymore. Never mind, you will just be dumped in a ditch.<br/>Still interested in the gangs? Each gang has an area of the town that they like to hide in - head over to that side of town and you will find the gangâs recruiter. They will be able to give you more information about that particular gang. But donât come crying to me if they didnât accept you.<br/><br/><br/>Still interested in the gangs? Each gang has an area of the town that they like to hide in, head over to that side of town and you will find the respective gangs recruiter. They will be able to give you more information about that particular gang. Donât come back crying to me if they didnât accept you.<br/><br/><br/><t shadow='0' align='center' valign='middle' size='1.3'>---XM8---</t><br/><br/>The XM8 is your communication device and will be your guide on this island. We had a working communication network for our XM8s, but due to gang activity and no funding from NATO, we ended up losing the towers to the gangs. Long story short, your XM8 isnât fully functional, but you can purchase a communication chip. You will be required to pay a service fee to continue to use it, but it does unlock your XM8 to allow you to communicate with other inmates on the island. [Not Implemented]<br/><br/><br/><t shadow='0' align='center' valign='middle' size='1.3'>---Jobs---</t><br/><br/>Like I said before, we have a somewhat functioning society and there are plenty of jobs for you to do to help keep it running. You get paid for each job you do and you can use the money to buy everything you'll need to survive on this godforsaken island. Jobs range anything from simple delivery jobs, to complex infiltrations into other gang areas. Sound like fun? You canât just walk in and get any job you want though, some jobs require a certain skill level, trade, or even being part of a gang. When you think you are ready to take on a job, just head over to the job board in the town to check out whatâs available. <br/><br/><br/></t>";
				action = "";
			};
			class Button_4
			{
				name = "What am I doing?";
				body ="<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='2'>What am I doing again?</t><br/><br/><t shadow='0' size='0.8'>Forgot already? Did you look at your map? I was so kind enough to mark it down for you, I am really surprised you managed to find your way out of your moms womb at this rate. Go get my supplies, and hurry!</t>";
				action = "";
				extraButton = "";
			};
		};
	};
};
class ExileLife_Trader_Receivings_JobNotForPerson
{
	title = "WILLIAM, THE RECEIVINGS TRADER";
	onLoad = "call ExileLifeClient_system_jobs_scenes_trader_receivings_onLoad";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Introduction";
				body ="<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='2'>Welcome To Exile Life</t><br/><br/><t shadow='0' size='0.8'>In accordance to article 08.2015.x of the EXILE contract, I am required to officially welcome you to EXILE. Unofficially, I couldnât give a shit if you feel welcome or not. But since it's my job, I'm going to give you a fair chance on this island - you're going to need it. My name is William, like that really matters, but I'm the one everyone comes to when they first get on this island.<br/>A few pieces of advice, not because I like you but because I donât want your blood on my hands. Number one: Listen to the guards. Number two: If you get a hold of a weapon, don't bring it into any cities. Especially not this one. If you have to fight to survive, you donât want the guards on you as well as the other Exiled. Number three: Pick your friends wisely - this island is full of enemies.</t>";
				action = "";
			};
			class Button_2
			{
				name = "Getting Started";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='2'>What do I do next?</t><br/><br/><t shadow='0' size='0.8'>There are plenty of things to do to pass the time while Exiled. Although your fellow inmates pretty much run the place, we have a society of sorts and we need to keep it running and produce supplies for the mainland or the program will be shut down.<br/><br/>Some jobs include taking tankers and fueling up the petrol stations so that the guards like me can do our jobs and keep you guys from being terminated. If you are looking to expand your personal wealth then you should start with something simple and collect some food through gathering, fishing or hunting. The island's main resource -and the reason we brought you here - is ore. The traders will buy raw ore from you, or you can refine it for a bit of extra cash if you like.<br/><br/>Check out the job board for pointers on simple tasks, or ask the traders around the city - some of them have useful tips or they might even have a job for you.</t>";
				action = "";
			};
			class Button_3
			{
				name = "Tell Me More";
				body ="<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='2'>Tell me more?</t><br/><br/><t shadow='0' size='0.8'>Ahh, the curious type. As some say, knowledge is power, but those people normally get killed by people with guns because guns are also power.<br/><br/><br/><t shadow='0' align='center' valign='middle' size='1.3'>---Main City: Athira---</t><br/><br/>The safest place on our island, Athira is a gorgeous city full of spry young people willing to make the world a better placeâ¦ At least thatâs what the recruiter said when they hired us. When we got here, this place was run down, half-destroyed, full of murder and gang activity. Luckily, back then we had the funding and managed to gain control and cleaned up the city. Iâm sure itâs not as beautiful as it was when it was first built, but weâve done a damn good job.<br/>You can find shops with plenty of goods, houses for rent, the guardsâ station, and much, much more. Iâd highly suggest looking around. Keep in mind, our city is under guard control - follow our rules and you will be just fine.<br/><br/><br/><t shadow='0' align='center' valign='middle' size='1.3'>---Guards---</t><br/><br/>Ah yes, my fellow guards. Frankly, with so many new faces in the company, I donât really trust many of them.<br/>Let me ask you this, what do you get when you hire guards trained in a prison environment to bring to heel an island controlled by very rich gangs?<br/><br/>The answer, of course, is a bunch of corrupt guards.<br/><br/>My point is that you can't expect the guards to be able to protect you all over the island. They do, however, patrol as much as they can and they control this city so you can feel safer here. There are a few rules in place that you will need to follow or you will do time in lockup, and trust me, whatever rights that you thought you had donât apply there.<br/><br/><br/><t shadow='0' align='center' valign='middle' size='1.3'>---Gangs---</t><br/><br/>Iâd warn you about the gangs, but money is a very powerful force to not be messed with.<br/>We have four gangs on the island; <t color='#523652'>The Mafia</t>, <t color='#630C19'>The Yakuza</t>, <t color='#214E21'>The Cartel</t>, and <t color='#994413'>The Syndicate</t>.<br/>Each gang has made its base on one of the four corners of the island which puts our Athira right in the middle.<br/>I urge against going off and wandering into these gang areas without proper permission from them or you might find that your time here in EXILE will be short, and the only way you will be leaving here is in a body bag.<br/>Oh wait, we donât do that anymore. Never mind, you will just be dumped in a ditch.<br/>Still interested in the gangs? Each gang has an area of the town that they like to hide in - head over to that side of town and you will find the gangâs recruiter. They will be able to give you more information about that particular gang. But donât come crying to me if they didnât accept you.<br/><br/><br/>Still interested in the gangs? Each gang has an area of the town that they like to hide in, head over to that side of town and you will find the respective gangs recruiter. They will be able to give you more information about that particular gang. Donât come back crying to me if they didnât accept you.<br/><br/><br/><t shadow='0' align='center' valign='middle' size='1.3'>---XM8---</t><br/><br/>The XM8 is your communication device and will be your guide on this island. We had a working communication network for our XM8s, but due to gang activity and no funding from NATO, we ended up losing the towers to the gangs. Long story short, your XM8 isnât fully functional, but you can purchase a communication chip. You will be required to pay a service fee to continue to use it, but it does unlock your XM8 to allow you to communicate with other inmates on the island. [Not Implemented]<br/><br/><br/><t shadow='0' align='center' valign='middle' size='1.3'>---Jobs---</t><br/><br/>Like I said before, we have a somewhat functioning society and there are plenty of jobs for you to do to help keep it running. You get paid for each job you do and you can use the money to buy everything you'll need to survive on this godforsaken island. Jobs range anything from simple delivery jobs, to complex infiltrations into other gang areas. Sound like fun? You canât just walk in and get any job you want though, some jobs require a certain skill level, trade, or even being part of a gang. When you think you are ready to take on a job, just head over to the job board in the town to check out whatâs available. <br/><br/><br/></t>";
				action = "";
			};
		};
	};
};
class ExileLife_Trader_Receivings_Unrepeatable
{
	title = "WILLIAM, THE RECEIVINGS TRADER";
	onLoad = "call ExileLifeClient_system_jobs_scenes_trader_receivings_onLoad";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Introduction";
				body ="<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='2'>Welcome To Exile Life</t><br/><br/><t shadow='0' size='0.8'>In accordance to article 08.2015.x of the EXILE contract, I am required to officially welcome you to EXILE. Unofficially, I couldnât give a shit if you feel welcome or not. But since it's my job, I'm going to give you a fair chance on this island - you're going to need it. My name is William, like that really matters, but I'm the one everyone comes to when they first get on this island.<br/>A few pieces of advice, not because I like you but because I donât want your blood on my hands. Number one: Listen to the guards. Number two: If you get a hold of a weapon, don't bring it into any cities. Especially not this one. If you have to fight to survive, you donât want the guards on you as well as the other Exiled. Number three: Pick your friends wisely - this island is full of enemies.</t>";
				action = "";
			};
			class Button_2
			{
				name = "Getting Started";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='2'>What do I do next?</t><br/><br/><t shadow='0' size='0.8'>There are plenty of things to do to pass the time while Exiled. Although your fellow inmates pretty much run the place, we have a society of sorts and we need to keep it running and produce supplies for the mainland or the program will be shut down.<br/><br/>Some jobs include taking tankers and fueling up the petrol stations so that the guards like me can do our jobs and keep you guys from being terminated. If you are looking to expand your personal wealth then you should start with something simple and collect some food through gathering, fishing or hunting. The island's main resource -and the reason we brought you here - is ore. The traders will buy raw ore from you, or you can refine it for a bit of extra cash if you like.<br/><br/>Check out the job board for pointers on simple tasks, or ask the traders around the city - some of them have useful tips or they might even have a job for you.</t>";
				action = "";
			};
			class Button_3
			{
				name = "Tell Me More";
				body ="<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='2'>Tell me more?</t><br/><br/><t shadow='0' size='0.8'>Ahh, the curious type. As some say, knowledge is power, but those people normally get killed by people with guns because guns are also power.<br/><br/><br/><t shadow='0' align='center' valign='middle' size='1.3'>---Main City: Athira---</t><br/><br/>The safest place on our island, Athira is a gorgeous city full of spry young people willing to make the world a better placeâ¦ At least thatâs what the recruiter said when they hired us. When we got here, this place was run down, half-destroyed, full of murder and gang activity. Luckily, back then we had the funding and managed to gain control and cleaned up the city. Iâm sure itâs not as beautiful as it was when it was first built, but weâve done a damn good job.<br/>You can find shops with plenty of goods, houses for rent, the guardsâ station, and much, much more. Iâd highly suggest looking around. Keep in mind, our city is under guard control - follow our rules and you will be just fine.<br/><br/><br/><t shadow='0' align='center' valign='middle' size='1.3'>---Guards---</t><br/><br/>Ah yes, my fellow guards. Frankly, with so many new faces in the company, I donât really trust many of them.<br/>Let me ask you this, what do you get when you hire guards trained in a prison environment to bring to heel an island controlled by very rich gangs?<br/><br/>The answer, of course, is a bunch of corrupt guards.<br/><br/>My point is that you can't expect the guards to be able to protect you all over the island. They do, however, patrol as much as they can and they control this city so you can feel safer here. There are a few rules in place that you will need to follow or you will do time in lockup, and trust me, whatever rights that you thought you had donât apply there.<br/><br/><br/><t shadow='0' align='center' valign='middle' size='1.3'>---Gangs---</t><br/><br/>Iâd warn you about the gangs, but money is a very powerful force to not be messed with.<br/>We have four gangs on the island; <t color='#523652'>The Mafia</t>, <t color='#630C19'>The Yakuza</t>, <t color='#214E21'>The Cartel</t>, and <t color='#994413'>The Syndicate</t>.<br/>Each gang has made its base on one of the four corners of the island which puts our Athira right in the middle.<br/>I urge against going off and wandering into these gang areas without proper permission from them or you might find that your time here in EXILE will be short, and the only way you will be leaving here is in a body bag.<br/>Oh wait, we donât do that anymore. Never mind, you will just be dumped in a ditch.<br/>Still interested in the gangs? Each gang has an area of the town that they like to hide in - head over to that side of town and you will find the gangâs recruiter. They will be able to give you more information about that particular gang. But donât come crying to me if they didnât accept you.<br/><br/><br/>Still interested in the gangs? Each gang has an area of the town that they like to hide in, head over to that side of town and you will find the respective gangs recruiter. They will be able to give you more information about that particular gang. Donât come back crying to me if they didnât accept you.<br/><br/><br/><t shadow='0' align='center' valign='middle' size='1.3'>---XM8---</t><br/><br/>The XM8 is your communication device and will be your guide on this island. We had a working communication network for our XM8s, but due to gang activity and no funding from NATO, we ended up losing the towers to the gangs. Long story short, your XM8 isnât fully functional, but you can purchase a communication chip. You will be required to pay a service fee to continue to use it, but it does unlock your XM8 to allow you to communicate with other inmates on the island. [Not Implemented]<br/><br/><br/><t shadow='0' align='center' valign='middle' size='1.3'>---Jobs---</t><br/><br/>Like I said before, we have a somewhat functioning society and there are plenty of jobs for you to do to help keep it running. You get paid for each job you do and you can use the money to buy everything you'll need to survive on this godforsaken island. Jobs range anything from simple delivery jobs, to complex infiltrations into other gang areas. Sound like fun? You canât just walk in and get any job you want though, some jobs require a certain skill level, trade, or even being part of a gang. When you think you are ready to take on a job, just head over to the job board in the town to check out whatâs available. <br/><br/><br/></t>";
				action = "";
			};
		};
	};
};
class ExileLife_Trader_barrelSupplier
{
	title = "BOB, THE BARREL SUPPLIER";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Introduction";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>What do you do?</t><t shadow='0' size='1'><br/><br/>I'm Bob and I keep an eye on all these barrels here. <br/> You wouldnt believe the number of crooks I've caught trying to nick em! <br/> <br/> These barrels are reserved for when a generator runs out of fuel somewhere on the island. <br/> <br/> If you're looking for some work I suggest you go into town and have a look at the Job board.</t>";
				action = "";
			};
		};
	};
};
class ExileLife_Trader_barrelSupplier_JobForPerson
{
	title = "BOB, THE BARREL SUPPLIER";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Introduction";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>I was told to come here...</t><t shadow='0' size='1'><br/><br/>Right then, take this barrel over to those fuel pumps and fill it up. <br/> Then go and fill the generator im putting into your xm8's positioning system.<br/> <br/> Once we get confirmation that the generator has been refueled we will transfer your payment. Feel free to keep the Fuel Barrel for yourself as a bonus reward.</t>";
				action = "";
				extraButton = "Button_1";
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "Collect Fuel Barrel";
			action = "call ExilelifeClient_system_jobs_scenes_trader_barrelsupplier_onReceiveSuppliesButtonClick";
		};
	};
};
class ExileLife_Trader_barrelSupplier_JobNotForPerson
{
	title = "BOB, THE BARREL SUPPLIER";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Introduction";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>What do you do?</t><t shadow='0' size='1'><br/><br/>I'm Bob and I keep an eye on all these barrels here. <br/> You wouldnt believe the number of crooks I've caught trying to nick em! <br/> <br/> These barrels are reserved for when a generator runs out of fuel somewhere on the island. <br/> <br/> Now Get Lost!</t>";
				action = "";
			};
		};
	};
};
class ExileLife_Trader_Docks
{
	title = "ROGER, THE DOCKMASTER";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Introduction";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Hows it?</t><t shadow='0' size='1'><br/><br/>Im good bro! Spending my days enjoying the sunshine and the surf, life is GREAT!<br/><br/><t shadow='0' align='center' valign='middle' size='1.8'>Whats your job around here?</t><t shadow='0' size='1'><br/><br/>What do I do other than chilling out?<br/>Well, I guess im in charge of exports off the island? I dont much care for it tho... its pretty boring...</t>";
				action = "";
			};
		};
	};
};
class ExileLife_Trader_Docks_CompletingJobForPerson
{
	title = "ROGER, THE DOCKMASTER";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Introduction";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>I have supplies for you...</t><t shadow='0' size='1'><br/><br/>Yo duuudde hows it hanging bro? <br/> Just chuck whatever it is over there for me. Maybe we can go for a surf sometime?</t>";
				action = "";
				extraButton = "Button_1";
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "Drop-off Supplies";
			action = "call ExilelifeClient_system_jobs_scenes_trader_dockyardSupplier_onDepositSuppliesButtonClick";
		};
	};
};
class ExileLife_Trader_Docks_JobForPerson
{
	title = "ROGER, THE DOCKMASTER";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Introduction";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>I have supplies for you...</t><t shadow='0' size='1'><br/><br/>Yo duuudde hows it hanging bro? <br/> Just chuck whatever it is over there for me. Maybe we can go for a surf sometime?</t>";
				action = "";
				extraButton = "Button_1";
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "Drop-off Supplies";
			action = "call ExilelifeClient_system_jobs_scenes_trader_dockyardSupplier_onDepositSuppliesButtonClick";
		};
	};
};
class ExileLife_Trader_Docks_JobNotForPerson
{
	title = "ROGER, THE DOCKMASTER";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Introduction";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Hows it?</t><t shadow='0' size='1'><br/><br/>Im good bro! Spending my days enjoying the sunshine and the surf, life is GREAT!<br/><br/><t shadow='0' align='center' valign='middle' size='1.8'>Whats your job around here?</t><t shadow='0' size='1'><br/><br/>What do I do other than chilling out?<br/>Well, I guess im in charge of exports off the island? I dont much care for it tho... its pretty boring...</t>";
				action = "";
			};
		};
	};
};
class ExileLife_Trader_lumberSupplier
{
	title = "JOHN, THE LUMBERJACK";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Introduction";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>What do you do?</t><t shadow='0' size='1'><br/><br/>Howdy brother! The names John! I cut up these here logs and supply the guards with any of their lumber needs. Prisoners like yourself go out into the forest and harvest the trees and bring them here for me to process. <br/> <br/> If you're looking for some work I suggest you go into town and have a look at the Job board.</t>";
				action = "";
			};
		};
	};
};
class ExileLife_Trader_lumberSupplier_JobForPerson
{
	title = "JOHN, THE LUMBERJACK";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Introduction";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>I have lumber for you...</t><t shadow='0' size='1'><br/><br/>So you have it all do you? <br/> Park your vehicle nearby and lets check you have it all!</t>";
				action = "";
				extraButton = "Button_1";
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "Drop-off Lumber";
			action = "call ExilelifeClient_system_jobs_scenes_trader_lumberSupplier_onDepositSuppliesButtonClick";
		};
	};
};
class ExileLife_Trader_lumberSupplier_JobNotForPerson
{
	title = "JOHN, THE LUMBERJACK";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Introduction";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>What do you do?</t><t shadow='0' size='1'><br/><br/>Howdy brother! The names John! I cut up these here logs and supply the guards with any of their lumber needs. Prisoners like yourself go out into the forest and harvest the trees and bring them here for me to process. <br/> <br/> If you're looking for some work I suggest you go into town and have a look at the Job board.</t>";
				action = "";
			};
		};
	};
};
class ExileLife_Trader_oreSupplier
{
	title = "BILLY, THE DIRT GUY";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Introduction";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>What do you do?</t><t shadow='0' size='1'><br/><br/>Hmph... Go away! <br/><br/> Oh you want to have a nice little chat do you?<br/> You seriously expect me to give a flying F$CK about you?<br/> 'How are you?' 'What brings you to Exile?' 'Oh thats so interesting'... BLEUGH!<br/> Makes we want to vomit. Unless you have a delivery of ore for me, get lost! <br/> <br/> If you dont know how to get a simple delivery job by now you should no joke kill yourself in that furnace over there! <br/> You might just gain enough of my respect to use your ashes to line my cats litter box!</t>";
				action = "";
			};
		};
	};
};
class ExileLife_Trader_oreSupplier_JobForPerson
{
	title = "BILLY, THE DIRT GUY";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Introduction";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>I have ore for you...</t><t shadow='0' size='1'><br/><br/>Hmmph... <br/> You better have it all!</t>";
				action = "";
				extraButton = "Button_1";
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "Drop-off Ore";
			action = "call ExilelifeClient_system_jobs_scenes_trader_oreSupplier_onDepositSuppliesButtonClick";
		};
	};
};
class ExileLife_Trader_oreSupplier_JobNotForPerson
{
	title = "BILLY, THE DIRT GUY";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Introduction";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>What do you do?</t><t shadow='0' size='1'><br/><br/>Hmph... Go away! <br/><br/> Oh you want to have a nice little chat do you?<br/> You seriously expect me to give a flying F$CK about you?<br/> 'How are you?' 'What brings you to Exile?' 'Oh thats so interesting'... BLEUGH!<br/> Makes we want to vomit. Unless you have a delivery of ore for me, get lost! <br/> <br/> If you dont know how to get a simple delivery job by now you should no joke kill yourself in that furnace over there! <br/> You might just gain enough of my respect to use your ashes to line my cats litter box!</t>";
				action = "";
			};
		};
	};
};
class ExileLife_Trader_scrapMetalSupplier
{
	title = "BARRY, THE SCRAP METAL RECYCLER";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Introduction";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>What do you do?</t><t shadow='0' size='1'><br/><br/>The names Barry! Hows it going mate? I deal in bulk scrap metal for the guards. Prisoners like you collect it when they need it, and i melt it down to be used as ammunition etc to keep prisoners like you in line! <br/> <br/> If you're looking for some work I suggest you go into town and have a look at the Job board.<br/><br/>By the way, keep out of Bill's way... you didnt hear it from me but theres a reason he's called the dirt guy...</t>";
				action = "";
			};
		}; 
	};
};
class ExileLife_Trader_scrapMetalSupplier_JobForPerson
{
	title = "BARRY, THE SCRAP METAL RECYCLER";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Introduction";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>I have scrap metal for you...</t><t shadow='0' size='1'><br/><br/>So you have it all do you? <br/> Park your vehicle nearby and lets have a look then!</t>";
				action = "";
				extraButton = "Button_1";
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "Drop-off Scrap Metal";
			action = "call ExilelifeClient_system_jobs_scenes_trader_scrapMetalSupplier_onDepositSuppliesButtonClick";
		};
	};
};
class ExileLife_Trader_scrapMetalSupplier_JobNotForPerson
{
	title = "BARRY, THE SCRAP METAL RECYCLER";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Introduction";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>What do you do?</t><t shadow='0' size='1'><br/><br/>The names Barry! Hows it going mate? I deal in bulk scrap metal for the guards. Prisoners like you collect it when they need it, and i melt it down to be used as ammunition etc to keep prisoners like you in line! <br/> <br/> If you're looking for some work I suggest you go into town and have a look at the Job board.<br/><br/>By the way, keep out of Bill's way... you didnt hear it from me but theres a reason he's called the dirt guy...</t>";
				action = "";
			};
		};
	};
};
class ExileLife_Trader_Supplier
{
	title = "TIM, THE SUPPLIER";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Introduction";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Why are you up here?</t><t shadow='0' size='1'><br/><br/>Good question, did you climb all the way up here to ask me that?<br/> Well, since you wasted your time, I will tell you about myself at least.<br/><br/>I'm Tim, I supply a few of the traders in Athira with equipment and supplies. I was originally Exiled here a few years after the program started, and Iâve been working supplies since TAP moved into Athira.<br/><br/>You looking for some work? I may need some supplies delivered later, but currently I donât have any work.</t>";
				action = "";
			};
		};
	};
};
class ExileLife_Trader_Supplier_CompletingJobForPerson
{
	title = "TIM, THE SUPPLIER";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Introduction";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Why are you up here?</t><t shadow='0' size='1'><br/><br/>Good question, did you climb all the way up here to ask me that? Well, since you wasted your time, I will tell you about myself at least.<br/>Now get a move on and take those supplies to Will!</t>";
				action = "";
			};
		};
	};
};
class ExileLife_Trader_Supplier_JobForPerson
{
	title = "TIM, THE SUPPLIER";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Introduction";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>I was told to come here...</t><t shadow='0' size='1'><br/><br/>Did Will send you? Good, you must be the new blood. Iâm sure Will gave you the rundown but let me welcome you to EXILE as well.<br/>Here are the supplies, take them back to Will. When you are done with that, feel free to stop by later, I may have some work for you as well.</t>";
				action = "";
				extraButton = "Button_1";
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "Receive Supplies";
			action = "call ExilelifeClient_system_jobs_scenes_trader_supplier_onReceiveSuppliesButtonClick";
		};
	};
};
class ExileLife_Trader_Supplier_JobNotForPerson
{
	title = "TIM, THE SUPPLIER";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Introduction";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Why are you up here?</t><t shadow='0' size='1'><br/><br/>Good question, did you climb all the way up here to ask me that? Well, since you wasted your time, I will tell you about myself at least.<br/>I'm Tim, I supply a few of the traders in Athira with equipment and supplies. I was originally Exiled here a few years after the program started, and Iâve been working supplies since TAP moved into Athira.<br/>You looking for some work? I may need some supplies delivered later, but currently I donât have any work.</t>";
				action = "";
			};
		};
	};
};
class ExileLife_Trader_vehicleSupplier
{
	title = "FRANKIE, THE VEHICLE LOAN SHARK";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Introduction";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Who are you?</t><t shadow='0' size='1'><br/><br/>How it going bro? The names Frankie!  <br/> <br/>  The guards dont have the money or the resources to run this island. They barely have enough supplies to look after Athira and the Kavala docks let alone loan vehicles out for prison duties. <br/> <br/> That's where I come in. I rent out vehicles to anyone that happens to need one, be them guard or crook. <br/> I work for the <t color='#c72651'>Old Man</t>. Nothing happens on this Island without his express permission. The vehicles I offer are all his property. <br/><br/> Mess with the drivers all you want, but touch his propery and...well...anyone that goes against him loses. Period.</t>";
				action = "";
			};
		};
	};
};
class ExileLife_Trader_vehicleSupplier_CompletingJobForPerson
{
	title = "FRANKIE, THE VEHICLE LOAN SHARK";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Welcome Back";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>I want to return this vehicle...</t><t shadow='0' size='1'><br/><br/>Ah your back! You better not have gotten any scratches on it!<br/><br/>Remember these vehicles are the <t color='#c72651'>Old Man's</t> property.<br/> When we get a few more workers areound here we will be checking the vehicles for any damage and docking your pay when they get returned!</t>";
				action = "";
				extraButton = "Button_1";
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "Return Vehicle";
			action = "call ExileLifeClient_gui_jobs_trader_hireVehicle_event_onReturnJobVehicleButtonClick";
		};
	};
};
class ExileLife_Trader_vehicleSupplier_JobForPerson
{
	title = "FRANKIE, THE VEHICLE LOAN SHARK";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Introduction";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>I was told to come here...</t><t shadow='0' size='1'><br/><br/>You here for a vehicle eh? Ok ok ok, I see it here in my manifest.<br/><br/>Upon collecting this vehicle your job details will be updated in your XM8.<br/><br/> Remember this is the <t color='#c72651'>Old Man's</t> property. We have trackers on all our Vehicles, so don't even think about stealing it or you'll see what its really like to be Exiled.</t>";
				action = "";
				extraButton = "Button_1";
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "Collect Vehicle";
			action = "call ExileLifeClient_gui_jobs_trader_hireVehicle_event_onJobVehicleButtonClick";
		};
	};
};
class ExileLife_Trader_vehicleSupplier_JobNotForPerson
{
	title = "FRANKIE, THE VEHICLE LOAN SHARK";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Introduction";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Who are you?</t><t shadow='0' size='1'><br/><br/>How it going bro? The names Frankie!  <br/> <br/>  The guards dont have the money or the resources to run this island. They barely have enough supplies to look after Athira and the Kavala docks let alone loan vehicles out for prison duties. <br/> <br/> That's where I come in. I rent out vehicles to anyone that happens to need one, be them guard or crook. <br/> I work for the <t color='#c72651'>Old Man</t>. Nothing happens on this Island without his express permission. The vehicles I offer are all his property. <br/><br/> Mess with the drivers all you want, but touch his propery and...well...anyone that goes against him loses. Period.</t>";
				action = "";
			};
		};
	};
};
class ExileLife_Trader_guardVehicleSupplier
{
	title = "BILLY, THE GARAGE ATTENDANT";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Introduction";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Who are you?</t><t shadow='0' size='1'><br/><br/>How it going bro? The names Billy!  <br/> <br/> I rent out or sell you vehicles to keep the $%*@* cons in line! <br/>";
				action = "";
			};
			class Button_2
			{
				name = "Buy Vehicle";
			};
			class Button_3
			{
				name = "ACCESS GARAGE";
				action = "call ExileLifeClient_gui_virtualGarageDialog_show;";
			};
		};
	};
};
class ExileLife_Trader_guardVehicleSupplier_CompletingJobForPerson
{
	title = "BILLY, THE GARAGE ATTENDANT";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Welcome Back";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>I want to return this vehicle...</t><t shadow='0' size='1'><br/><br/>Ah your back! You better not have gotten any scratches on it!<br/><br/>Remember these vehicles are the <t color='#c72651'>Guards</t> property.<br/> When we get a few more workers around here we will be checking the vehicles for any damage and docking your pay when they get returned!</t>";
				action = "";
				extraButton = "Button_1";
			};
			class Button_2
			{
				name = "Buy Vehicle";
				action = "this call ExileClient_gui_vehicleTraderDialog_show";
			};
			class Button_3
			{
				name = "ACCESS GARAGE";
				action = "call ExileLifeClient_gui_virtualGarageDialog_show;";
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "Return Vehicle";
			action = "call ExileLifeClient_gui_jobs_trader_hireVehicle_event_onReturnJobVehicleButtonClick";
		};
	};
};
class ExileLife_Trader_guardVehicleSupplier_JobForPerson
{
	title = "BILLY, THE GARAGE ATTENDANT";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Introduction";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>I was told to come here...</t><t shadow='0' size='1'><br/><br/>You here for a vehicle eh? Ok ok ok, I see it here in my manifest.<br/><br/>Upon collecting this vehicle your job details will be updated in your XM8.<br/><br/> Remember this is <t color='#c72651'>Guards</t> property. We have trackers on all our Vehicles, so don't even think about stealing it or you will get to experience life on the other side of these walls...</t>";
				action = "";
				extraButton = "Button_1";
			};
			class Button_2
			{
				name = "Buy Vehicle";
			};
			class Button_3
			{
				name = "ACCESS GARAGE";
				action = "call ExileLifeClient_gui_virtualGarageDialog_show;";
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "Collect Vehicle";
			action = "call ExileLifeClient_gui_jobs_trader_hireVehicle_event_onJobVehicleButtonClick";
		};
	};
};
class ExileLife_Trader_guardVehicleSupplier_JobNotForPerson
{
	title = "BILLY, THE GARAGE ATTENDANT";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Introduction";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Who are you?</t><t shadow='0' size='1'><br/><br/>How it going bro? The names Billy!  <br/> <br/> I rent out or sell you vehicles to keep the $%*@* cons in line! <br/>";
				action = "";
			};
			class Button_2
			{
				name = "Buy Vehicle";
			};
			class Button_3
			{
				name = "ACCESS GARAGE";
				action = "call ExileLifeClient_gui_virtualGarageDialog_show;";
			};
		};
	};
};
class ExileLife_Guard_QuarterMaster
{
	title = "ARCHER, THE GUARD QUARTERMASTER";
	onLoad = "";
	tradersgang = "Guard";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Who Am I?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Who am I</t> <br/> <br/><t shadow='0' size='1'> You cons are a nosy bunch arenât ya?   </t> <br/> <br/><t shadow='0' size='1'> Well since ya asked, they sent me here as part of TAP after the previous guy got himself shivved.  He got caught playinâ the Cartel off against the Yakuza. Idiot liked to talk about himself too much, if ya know what I mean.</t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "House Squatting";
				body = "";
				body2 = "";
				action = "Scene_2";
			};
			class Button_3
			{
				name = "Register Family";
				body = "";
				body2 = "";
				action = "Scene_3";
			};
			class Button_4
			{
				name = "Prisoners Allowance";
				body = "";
				body2 = "";
				action = "Scene_4";
			};
			class Button_5
			{
				name = "Fines";
				body = "";
				body2 = "";
				action = "Scene_5";
			};
			class Button_6
			{
				name = "Got any work?";
				body = "";
				body2 = "";
				action = "Scene_6";
			};
		};
		class Scene_2
		{
			class Button_1
			{
				name = "Info";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t> <br/> <br/> <br/> <t shadow='0' size='1'> So you want to claim a house do ya? Well thatâs gunna cost! </t> <br/> <br/><t shadow='0' size='1'> First you gotta pay me! Thatâs right, You pay me and I'll give you a sleeping bag to go pick out where u wanna bunk down. Just donât expect to claim any old house, we can't ensure your protection out of this here town so pick somewhere close you can lock up at night. </t> <br/> <br/><t shadow='0' size='1'> Donât expect us to protect you for free either. This transaction only gives you a few days to settle down, we expect you to show your gratitude for our protective services on a regular basis or you will come home to find some other poor bastard moved in. </t> <br/> <br/> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade your Squat</t> <br/> <br/><t shadow='0' size='1'> That hovel of yours a bit sparse is it? Well you've come to the right man! </t> <br/> <br/><t shadow='0' size='1'>Some claim Iâm an extortionist, I like to think of myself as a businessman trying to make the most of this godforsaken hell hole. If you want more stuff you gotta pay for it. Simple. My prices are below. Oh donât forget, this is only your down payment. Your protective service rates will now go up... we gotta protect more stuff ya see? </t> <br/> <br/> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t> <br/> <br/><t shadow='0' size='1'> You know how that saying goes, that you should count your blessings blah blah blah. When youâre in Exile with the likes of us lot those blessings are gunna cost ya! </t> <br/> <br/><t shadow='0' size='1' >Start counting out them poptabs and letâs keep you and your posessions safe eh! </t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "House Squatting";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t><br/><br/><t shadow='0' size='1'>Decided to take the plunge and put some roots down have we? Heres the deal:</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t><br/><br/><t shadow='0' size='1'>Why are you even wasting my time? You know you cant afford this!</t> <br/> <t shadow='0' size='1'> When you have enough cash here's the deal:</t>";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_purchaseSleepingBag";
				extraButton = "Button_1";
			};
			class Button_3
			{
				name = "Upgrade Your Dwelling";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade your Dwelling</t><br/> <br/><br/><t shadow='0' size='1'> Time for some more luxurious accommodations is it? </t> <br/> <br/><t shadow='0' size='1'> Which property are you interested in upgrading today?</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade Dwelling</t><br/><br/><t shadow='0' size='1'>You know you don't even have a house squatted out yet right?</t> <br/> <t shadow='0' size='1'>Come back when you have a property!</t>";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_upgradeHouse";
				extraButton = "Button_2";
			};
			class Button_4
			{
				name = "Protective Services";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t><br/> <br/><br/><t shadow='0' size='1'>Which property do you wish to purchase protection for today?</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t> <br/> <br/><t shadow='0' size='1'> You aint got nothin worth protecting! </t> ";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_protectHouse";
				extraButton = "Button_3";
			};
		};
		class Scene_3
		{
			class Button_1
			{
				name = "Family Name";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Family Registration</t> <br/> <br/><t shadow='0' size='1'> Crime runs in the family eh?  </t> <br/> <br/><t shadow='0' size='1'> Well they canât move in with ya without us knowinâ who they are. For a one-time payment, you can register your family and we wonât kick em out if they turn up at your digs. As a bonus, Iâll throw in a software upgrade for your XM8. Itâll let ya add or remove people from your family at will and mark locations of interest on your familyâs maps. Plus thereâs a sweet bonus GPS tracking feature in there that will let you know if one of themâs screwing you over. </t> ";
				body2 = "";
				action = "";
				extraButton = "";
			};
			class Button_2
			{
				name = "Register";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Family Registration</t> <br/> <br/><t shadow='0' size='1'> So its a deal then?  </t> <br/><t shadow='0' size='1'> All you gotta do now is fill in your name and pass over the cash and you can be on your way! </t> "; 
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Family Registration</t> <br/> <br/><t shadow='0' size='1'> Ummm...  </t> <br/> <br/><t shadow='0' size='1'> You got some screws loose in your head or something buddy? You're already part of a family douche! </t> ";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_registerFamily";
				extraButton = "Button_4";
			};			
		};
		class Scene_4
		{
			class Button_1
			{
				name = "Prisoners Allowance";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> HA! You think you just get given money for free because your in prison? This aint no beauty spa prison like they have on the mainland!   </t> <br/> <br/><t shadow='0' size='1'> You gotta earn yourself your allowance. That means you gotta work for me! You do your prison duties, and I'll make sure you get your allowance.</t> ";
				body2 = "";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_prisonersAllowanceChk";
				extraButton = "";
			};
			class Button_2
			{
				name = "Collect Allowance";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> I aint got nothin for ya, you pathetic excuse for a human being! </t> ";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> A hard worker I see! Good to see that some of you scum know ur place! Now let me see what Iâve got for yaâ¦  </t> ";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_prisonersAllowance";
				extraButton = "Button_5";
			};			
		};
		class Scene_5
		{
			class Button_1
			{
				name = "Check Fines";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoner Fines</t> <br/> <br/><t shadow='0' size='1'> Something something about fines   </t> <br/> <br/><t shadow='0' size='1'> something somethign more fines.</t> ";
				body2 = "";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_prisonersFinesChk";
				extraButton = "";
			};
			class Button_2
			{
				name = "Pay Fines";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoner Fines</t> <br/> <br/><t shadow='0' size='1'> Well aint that a surprise! You ain't got no fines! </t> ";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoner Fines</t> <br/> <br/><t shadow='0' size='1'> Somethign about having fines due  Now let me see what Iâve got for yaâ¦  </t> ";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_prisonersFines";
				extraButton = "Button_6";
			};			
		};
		class Scene_6
		{
			class Button_1
			{
				name = "Got any Work?";
				body ="<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Got any work for me?</t><br/><br/><t shadow='0' size='1'>Why do people keep asking me that?<br/><br/> GO CHECK THE F$@KN BOARD LIKE EVERYONE ELSE!!!</t>";
				body2 = "";
				action = ""; 
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "PURCHASE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onPurchaseTerritoryButtonClick;";
		};
		class Button_2
		{
			name = "UPGRADE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onUpgradeTerritoryButtonClick";
		};
		class Button_3
		{
			name = "PAY HERE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onProtectTerritoryButtonClick;";
		};
		class Button_4
		{
			name = "REGISTER";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onRegisterFamilyButtonClick;";
		};
		class Button_5
		{
			name = "COLLECT";
			action = "call ExileLifeClient_system_allowance_prisonAllowanceWithdrawalRequest";
		};
		class Button_6
		{
			name = "PAY FINE";
			action = "call ExileLifeClient_system_PrisonRecords_payFineRequest";
		};
	};
};
class ExileLife_Guard_QuarterMaster_CompletingJobForPerson
{
	title = "ARCHER, THE GUARD QUARTERMASTER";
	onLoad = "";
	tradersgang = "Guard";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Who Am I?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Who am I</t> <br/> <br/><t shadow='0' size='1'> You cons are a nosy bunch arenât ya?   </t> <br/> <br/><t shadow='0' size='1'> Well since ya asked, they sent me here as part of TAP after the previous guy got himself shivved.  He got caught playinâ the Cartel off against the Yakuza. Idiot liked to talk about himself too much, if ya know what I mean.</t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "House Squatting";
				body = "";
				body2 = "";
				action = "Scene_2";
			};
			class Button_3
			{
				name = "Register Family";
				body = "";
				body2 = "";
				action = "Scene_3";
			};
			class Button_4
			{
				name = "Prisoners Allowance";
				body = "";
				body2 = "";
				action = "Scene_4";
			};
			class Button_5
			{
				name = "Fines";
				body = "";
				body2 = "";
				action = "Scene_5";
			};
			class Button_6
			{
				name = "Got any work?";
				body = "";
				body2 = "";
				action = "Scene_6";
			};
		};
		class Scene_2
		{
			class Button_1
			{
				name = "Info";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t> <br/> <br/> <br/> <t shadow='0' size='1'> So you want to claim a house do ya? Well thatâs gunna cost! </t> <br/> <br/><t shadow='0' size='1'> First you gotta pay me! Thatâs right, You pay me and I'll give you a sleeping bag to go pick out where u wanna bunk down. Just donât expect to claim any old house, we can't ensure your protection out of this here town so pick somewhere close you can lock up at night. </t> <br/> <br/><t shadow='0' size='1'> Donât expect us to protect you for free either. This transaction only gives you a few days to settle down, we expect you to show your gratitude for our protective services on a regular basis or you will come home to find some other poor bastard moved in. </t> <br/> <br/> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade your Squat</t> <br/> <br/><t shadow='0' size='1'> That hovel of yours a bit sparse is it? Well you've come to the right man! </t> <br/> <br/><t shadow='0' size='1'>Some claim Iâm an extortionist, I like to think of myself as a businessman trying to make the most of this godforsaken hell hole. If you want more stuff you gotta pay for it. Simple. My prices are below. Oh donât forget, this is only your down payment. Your protective service rates will now go up... we gotta protect more stuff ya see? </t> <br/> <br/> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t> <br/> <br/><t shadow='0' size='1'> You know how that saying goes, that you should count your blessings blah blah blah. When youâre in Exile with the likes of us lot those blessings are gunna cost ya! </t> <br/> <br/><t shadow='0' size='1' >Start counting out them poptabs and letâs keep you and your posessions safe eh! </t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "House Squatting";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t><br/><br/><t shadow='0' size='1'>Decided to take the plunge and put some roots down have we? Heres the deal:</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t><br/><br/><t shadow='0' size='1'>Why are you even wasting my time? You know you cant afford this!</t> <br/> <t shadow='0' size='1'> When you have enough cash here's the deal:</t>";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_purchaseSleepingBag";
				extraButton = "Button_1";
			};
			class Button_3
			{
				name = "Upgrade Your Dwelling";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade your Dwelling</t><br/> <br/><br/><t shadow='0' size='1'> Time for some more luxurious accommodations is it? </t> <br/> <br/><t shadow='0' size='1'> Which property are you interested in upgrading today?</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade Dwelling</t><br/><br/><t shadow='0' size='1'>You know you don't even have a house squatted out yet right?</t> <br/> <t shadow='0' size='1'>Come back when you have a property!</t>";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_upgradeHouse";
				extraButton = "Button_2";
			};
			class Button_4
			{
				name = "Protective Services";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t><br/> <br/><br/><t shadow='0' size='1'>Which property do you wish to purchase protection for today?</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t> <br/> <br/><t shadow='0' size='1'> You aint got nothin worth protecting! </t> ";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_protectHouse";
				extraButton = "Button_3";
			};
		};
		class Scene_3
		{
			class Button_1
			{
				name = "Family Name";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Family Registration</t> <br/> <br/><t shadow='0' size='1'> Crime runs in the family eh?  </t> <br/> <br/><t shadow='0' size='1'> Well they canât move in with ya without us knowinâ who they are. For a one-time payment, you can register your family and we wonât kick em out if they turn up at your digs. As a bonus, Iâll throw in a software upgrade for your XM8. Itâll let ya add or remove people from your family at will and mark locations of interest on your familyâs maps. Plus thereâs a sweet bonus GPS tracking feature in there that will let you know if one of themâs screwing you over. </t> ";
				body2 = "";
				action = "";
				extraButton = "";
			};
			class Button_2
			{
				name = "Register";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Family Registration</t> <br/> <br/><t shadow='0' size='1'> So its a deal then?  </t> <br/><t shadow='0' size='1'> All you gotta do now is fill in your name and pass over the cash and you can be on your way! </t> "; 
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Family Registration</t> <br/> <br/><t shadow='0' size='1'> Ummm...  </t> <br/> <br/><t shadow='0' size='1'> You got some screws loose in your head or something buddy? You're already part of a family douche! </t> ";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_registerFamily";
				extraButton = "Button_4";
			};
		};
		class Scene_4
		{
			class Button_1
			{
				name = "Prisoners Allowance";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> HA! You think you just get given money for free because your in prison? This aint no beauty spa prison like they have on the mainland!   </t> <br/> <br/><t shadow='0' size='1'> You gotta earn yourself your allowance. That means you gotta work for me! You do your prison duties, and I'll make sure you get your allowance.</t> ";
				body2 = "";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_prisonersAllowanceChk";
				extraButton = "";
			};
			class Button_2
			{
				name = "Collect Allowance";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> I aint got nothin for ya, you pathetic excuse for a human being! </t> ";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> A hard worker I see! Good to see that some of you scum know ur place! Now let me see what Iâve got for yaâ¦  </t> ";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_prisonersAllowance";
				extraButton = "Button_5";
			};
		};
		class Scene_5
		{
			class Button_1
			{
				name = "Check Fines";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoner Fines</t> <br/> <br/><t shadow='0' size='1'> Something something about fines   </t> <br/> <br/><t shadow='0' size='1'> something somethign more fines.</t> ";
				body2 = "";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_prisonersFinesChk";
				extraButton = "";
			};
			class Button_2
			{
				name = "Pay Fines";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoner Fines</t> <br/> <br/><t shadow='0' size='1'> Well aint that a surprise! You ain't got no fines! </t> ";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoner Fines</t> <br/> <br/><t shadow='0' size='1'> Somethign about having fines due  Now let me see what Iâve got for yaâ¦  </t> ";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_prisonersFines";
				extraButton = "Button_6";
			};			
		};
		class Scene_6
		{
			class Button_1
			{
				name = "Got any Work?";
				body ="<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Got any work for me?</t><br/><br/><t shadow='0' size='1'>Why do people keep asking me that?<br/><br/> GO CHECK THE F$@KN BOARD LIKE EVERYONE ELSE!!!</t>";
				body2 = "";
				action = ""; 
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "PURCHASE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onPurchaseTerritoryButtonClick;";
		};
		class Button_2
		{
			name = "UPGRADE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onUpgradeTerritoryButtonClick";
		};
		class Button_3
		{
			name = "PAY HERE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onProtectTerritoryButtonClick;";
		};
		class Button_4
		{
			name = "REGISTER";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onRegisterFamilyButtonClick;";
		};
		class Button_5
		{
			name = "COLLECT";
			action = "call ExileLifeClient_system_allowance_prisonAllowanceWithdrawalRequest";
		};
		class Button_6
		{
			name = "PAY FINE";
			action = "call ExileLifeClient_system_PrisonRecords_payFineRequest";
		};
	};
};
class ExileLife_Guard_QuarterMaster_JobForPerson
{
	title = "ARCHER, THE GUARD QUARTERMASTER";
	onLoad = "";
	tradersgang = "Guard";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Who Am I?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Who am I</t> <br/> <br/><t shadow='0' size='1'> You cons are a nosy bunch arenât ya?   </t> <br/> <br/><t shadow='0' size='1'> Well since ya asked, they sent me here as part of TAP after the previous guy got himself shivved.  He got caught playinâ the Cartel off against the Yakuza. Idiot liked to talk about himself too much, if ya know what I mean.</t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "Jobs";
				body = "";
				body2 = "";
				action = "Scene_2";
			};
		};
		class Scene_2
		{
			class Button_1
			{
				name = "I was sent here";
				body ="<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Your here for that job right?</t><br/><br/><t shadow='0' size='1'>Alright well here's the supplies you need!</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>You got something for me do you?</t><br/><br/><t shadow='0' size='1'>C'mon hand it over!</t>";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_deliveryJob"; 
				extraButton = "Button_1";				
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "COLLECT";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onDeliveryJobButtonClick";
		};		
	};
};
class ExileLife_Guard_QuarterMaster_JobNotForPerson
{
	title = "ARCHER, THE GUARD QUARTERMASTER";
	onLoad = "";
	tradersgang = "Guard";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Who Am I?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Who am I</t> <br/> <br/><t shadow='0' size='1'> You cons are a nosy bunch arenât ya?   </t> <br/> <br/><t shadow='0' size='1'> Well since ya asked, they sent me here as part of TAP after the previous guy got himself shivved.  He got caught playinâ the Cartel off against the Yakuza. Idiot liked to talk about himself too much, if ya know what I mean.</t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "House Squatting";
				body = "";
				body2 = "";
				action = "Scene_2";
			};
			class Button_3
			{
				name = "Register Family";
				body = "";
				body2 = "";
				action = "Scene_3";
			};
			class Button_4
			{
				name = "Prisoners Allowance";
				body = "";
				body2 = "";
				action = "Scene_4";
			};
			class Button_5
			{
				name = "Fines";
				body = "";
				body2 = "";
				action = "Scene_5";
			};
			class Button_6
			{
				name = "Got any work?";
				body = "";
				body2 = "";
				action = "Scene_6";
			};
		};
		class Scene_2
		{
			class Button_1
			{
				name = "Info";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t> <br/> <br/> <br/> <t shadow='0' size='1'> So you want to claim a house do ya? Well thatâs gunna cost! </t> <br/> <br/><t shadow='0' size='1'> First you gotta pay me! Thatâs right, You pay me and I'll give you a sleeping bag to go pick out where u wanna bunk down. Just donât expect to claim any old house, we can't ensure your protection out of this here town so pick somewhere close you can lock up at night. </t> <br/> <br/><t shadow='0' size='1'> Donât expect us to protect you for free either. This transaction only gives you a few days to settle down, we expect you to show your gratitude for our protective services on a regular basis or you will come home to find some other poor bastard moved in. </t> <br/> <br/> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade your Squat</t> <br/> <br/><t shadow='0' size='1'> That hovel of yours a bit sparse is it? Well you've come to the right man! </t> <br/> <br/><t shadow='0' size='1'>Some claim Iâm an extortionist, I like to think of myself as a businessman trying to make the most of this godforsaken hell hole. If you want more stuff you gotta pay for it. Simple. My prices are below. Oh donât forget, this is only your down payment. Your protective service rates will now go up... we gotta protect more stuff ya see? </t> <br/> <br/> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t> <br/> <br/><t shadow='0' size='1'> You know how that saying goes, that you should count your blessings blah blah blah. When youâre in Exile with the likes of us lot those blessings are gunna cost ya! </t> <br/> <br/><t shadow='0' size='1' >Start counting out them poptabs and letâs keep you and your posessions safe eh! </t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "House Squatting";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t><br/><br/><t shadow='0' size='1'>Decided to take the plunge and put some roots down have we? Heres the deal:</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t><br/><br/><t shadow='0' size='1'>Why are you even wasting my time? You know you cant afford this!</t> <br/> <t shadow='0' size='1'> When you have enough cash here's the deal:</t>";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_purchaseSleepingBag";
				extraButton = "Button_1";
			};
			class Button_3
			{
				name = "Upgrade Your Dwelling";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade your Dwelling</t><br/> <br/><br/><t shadow='0' size='1'> Time for some more luxurious accommodations is it? </t> <br/> <br/><t shadow='0' size='1'> Which property are you interested in upgrading today?</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade Dwelling</t><br/><br/><t shadow='0' size='1'>You know you don't even have a house squatted out yet right?</t> <br/> <t shadow='0' size='1'>Come back when you have a property!</t>";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_upgradeHouse";
				extraButton = "Button_2";
			};
			class Button_4
			{
				name = "Protective Services";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t><br/> <br/><br/><t shadow='0' size='1'>Which property do you wish to purchase protection for today?</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t> <br/> <br/><t shadow='0' size='1'> You aint got nothin worth protecting! </t> ";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_protectHouse";
				extraButton = "Button_3";
			};
		};
		class Scene_3
		{
			class Button_1
			{
				name = "Family Name";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Family Registration</t> <br/> <br/><t shadow='0' size='1'> Crime runs in the family eh?  </t> <br/> <br/><t shadow='0' size='1'> Well they canât move in with ya without us knowinâ who they are. For a one-time payment, you can register your family and we wonât kick em out if they turn up at your digs. As a bonus, Iâll throw in a software upgrade for your XM8. Itâll let ya add or remove people from your family at will and mark locations of interest on your familyâs maps. Plus thereâs a sweet bonus GPS tracking feature in there that will let you know if one of themâs screwing you over. </t> ";
				body2 = "";
				action = "";
				extraButton = "";
			};
			class Button_2
			{
				name = "Register";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Family Registration</t> <br/> <br/><t shadow='0' size='1'> So its a deal then?  </t> <br/><t shadow='0' size='1'> All you gotta do now is fill in your name and pass over the cash and you can be on your way! </t> "; 
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Family Registration</t> <br/> <br/><t shadow='0' size='1'> Ummm...  </t> <br/> <br/><t shadow='0' size='1'> You got some screws loose in your head or something buddy? You're already part of a family douche! </t> ";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_registerFamily";
				extraButton = "Button_4";
			};
		};
		class Scene_4
		{
			class Button_1
			{
				name = "Prisoners Allowance";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> HA! You think you just get given money for free because your in prison? This aint no beauty spa prison like they have on the mainland!   </t> <br/> <br/><t shadow='0' size='1'> You gotta earn yourself your allowance. That means you gotta work for me! You do your prison duties, and I'll make sure you get your allowance.</t> ";
				body2 = "";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_prisonersAllowanceChk";
				extraButton = "";
			};
			class Button_2
			{
				name = "Collect Allowance";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> I aint got nothin for ya, you pathetic excuse for a human being! </t> ";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> A hard worker I see! Good to see that some of you scum know ur place! Now let me see what Iâve got for yaâ¦  </t> ";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_prisonersAllowance";
				extraButton = "Button_5";
			};
		};
		class Scene_5
		{
			class Button_1
			{
				name = "Check Fines";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoner Fines</t> <br/> <br/><t shadow='0' size='1'> Something something about fines   </t> <br/> <br/><t shadow='0' size='1'> something somethign more fines.</t> ";
				body2 = "";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_prisonersFinesChk";
				extraButton = "";
			};
			class Button_2
			{
				name = "Pay Fines";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoner Fines</t> <br/> <br/><t shadow='0' size='1'> Well aint that a surprise! You ain't got no fines! </t> ";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoner Fines</t> <br/> <br/><t shadow='0' size='1'> Somethign about having fines due  Now let me see what Iâve got for yaâ¦  </t> ";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_prisonersFines";
				extraButton = "Button_6";
			};			
		};
		class Scene_6
		{
			class Button_1
			{
				name = "Got any Work?";
				body ="<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Got any work for me?</t><br/><br/><t shadow='0' size='1'>Why do people keep asking me that?<br/><br/> GO CHECK THE F$@KN BOARD LIKE EVERYONE ELSE!!!</t>";
				body2 = "";
				action = ""; 
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "PURCHASE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onPurchaseTerritoryButtonClick;";
		};
		class Button_2
		{
			name = "UPGRADE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onUpgradeTerritoryButtonClick";
		};
		class Button_3
		{
			name = "PAY HERE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onProtectTerritoryButtonClick;";
		};
		class Button_4
		{
			name = "REGISTER";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onRegisterFamilyButtonClick;";
		};
		class Button_5
		{
			name = "COLLECT";
			action = "call ExileLifeClient_system_allowance_prisonAllowanceWithdrawalRequest";
		};
		class Button_6
		{
			name = "PAY FINE";
			action = "call ExileLifeClient_system_PrisonRecords_payFineRequest";
		};
	};
};
class ExileLife_Guard_Medic
{
	title = "ROGER, THE GUARD MEDIC";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Who are you?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Who am I</t> <br/> <br/><t shadow='0' size='1'> Hey! I'm the islands Head Guard Medic. </t> <br/><br/><t> Why am I here?  </t> <br/><br/><t> I got posted here by TAP because.... well it's a long story but I was asked to sign a document stating that this well known white dude with yellow hair and a fake-tan was 100% healthy and I refused... So here I am!</t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "Can I be a medic?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Can I join?</t> <br/> <br/> <br/> <t shadow='0' size='1'> Only Murderers have the required skillset to be a medic! </t> <br/><br/><t>So many hours spent intimately familiarising themselves with their victims, keeping them dangling on the precipice of death. Only allowing them to die when they so desire. </t><br/><br/><t>Once you sign onto the roster, jobs will be sent directly to your xm8 that you can choose to accept/decline. The higher your healer skill rank, the earlier you will get a job alert! </t><br/><t> Should a victim stop fighting to hold onto life before you arrive you will still be paid for your services. BUT... should they die by no fault of their own, and you fail to reach them in time, your reputation will suffer! </t><br/> ";
				body2 = "";
				action = "";
			};
			class Button_3
			{
				name = "Join the Roster!";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Sign me up!</t> <br/> <br/><t shadow='0' size='1'> If you have all the required skills and you think you're up for the challenge, then by all means let's see what you got, buddy! </t> ";
				body2 = "";
				action = "";
				extraButton = "Button_1";
			};
			class Button_4
			{
				name = "Leave the Roster!";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Leave the Roster!</t> <br/> <br/><t shadow='0' size='1'>Don't want to be on the Roster anymore? No problem.</t> ";
				body2 = "";
				action = "";
				extraButton = "Button_2";
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "JOIN";
			action = " 1 call ExileLifeClient_gui_gang_medic_event_onMedicRosterButtonClick;";
		};
		class Button_2
		{
			name = "LEAVE";
			action = " 1 call ExileLifeClient_gui_gang_medic_event_onMedicRosterButtonLeaveClick;";
		};
	};
};
class ExileLife_Yakuza_QuarterMaster
{	
	title = "DAICHI, YAKUZA KUMICHO";
	onLoad = "";
	tradersgang = "Yakuza";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Who Am I?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Who am I</t> <br/> <br/><t shadow='0' size='1'>A man's good name is as precious to him as its skin is to a tiger.	My name is Daichi. I am quartermaster of the Yakuza.</t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "House Squatting";
				body = "";
				body2 = "";
				action = "Scene_2";
			};
			class Button_4
			{
				name = "Gang Pay";
				body = "";
				body2 = "";
				action = "Scene_3";
			};
			class Button_5
			{
				name = "Got any work?";
				body = "";
				body2 = "";
				action = "Scene_4";
			};
		};
		class Scene_2
		{
			class Button_1
			{
				name = "Info";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t> <br/> <br/> <br/> <t shadow='0' size='1'>A home is a wise thing to have, for better than a banquet somewhere else is a good cup of tea and a bowl of rice at home.</t> <br/> <br/><t shadow='0' size='1'>First, you must purchase a sleeping bag. Only then can you begin the journey of finding a home. But you must find a house close by, for as soon as a man leaves his house, he makes seven enemies.<br/> <br/> After you have made your choice, you must make regular payments for protection. The strong will protect the weak and, in return, the weak will serve the strong. </t> <br/> <br/> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade your Squat</t> <br/> <br/><t shadow='0' size='1'> The biggest room in the world is the room for improvement. The cost of your improvement is below, but beware! This payment is simply for the improvement. Your regular protection payments will increase also.</t> <br/> <br/><t shadow='0' size='1'> You appear to be unhappy with my proposal. Remember, getting money is like digging with a needle. Spending it is like water soaking into the sand.</t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "House Squatting";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t><br/><br/><t shadow='0' size='1'>It is good that you have found a place to rest. As they say, sleep and wait for good luck. Here are my prices:</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t><br/><br/><t shadow='0' size='1'>It is true that poor men sleep the best, but only so long as they have enough money to buy a squat.</t> <br/> <t shadow='0' size='1'> When you return with money, the prices are as follows:</t>";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_purchaseSleepingBag";
				extraButton = "Button_1";
			};
			class Button_3
			{
				name = "Upgrade Your Dwelling";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade your Dwelling</t><br/> <br/><br/><t shadow='0' size='1'> </t> <br/> <br/><t shadow='0' size='1'> Which room do you desire to improve..</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade Dwelling</t><br/><br/><t shadow='0' size='1'>It is better to go home and make your net than to gaze longingly at the fish in the deep pool. When you have a property, then you can upgrade it.</t>";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_upgradeHouse";
				extraButton = "Button_2";
			};
			class Button_4
			{
				name = "Protective Services";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t><br/> <br/><br/><t shadow='0' size='1'>Which property do you wish to purchase protection for today?</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t> <br/> <br/><t shadow='0' size='1'>It is foolish to deal with a fool. Return when you have a home to protect.</t> ";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_protectHouse";
				extraButton = "Button_3";
			};
		};
		class Scene_3
		{
			class Button_1
			{
				name = "Gang Pay";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Gang Pay</t> <br/> <br/><t shadow='0' size='1'>If you're a beggar for three days, you won't be able to stop. I will pay you when you work for it.</t> ";
				body2 = "";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_gangAllowanceChk";
				extraButton = "";
			};
			class Button_2
			{
				name = "Collect Pay";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> The gods just laugh when men pray to them for wealth. </t> ";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'>Once you have made a fortune, know how to spend it. But beware! Wealth gets in the way of wisdom.</t> ";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_gangAllowance";
				extraButton = "Button_4";
			};
		};
		class Scene_4
		{
			class Button_1
			{
				name = "Got any Work?";
				body ="<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Got any work for me?</t><br/><br/><t shadow='0' size='1'>To complete my jobs, you must be worthy of respect. Sometimes it takes only an hour to get a reputation that lasts for a thousand years.</t>";
				body2 = "";
				action = ""; 
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "PURCHASE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onPurchaseTerritoryButtonClick;";
		};
		class Button_2
		{
			name = "UPGRADE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onUpgradeTerritoryButtonClick";
		};
		class Button_3
		{
			name = "PAY HERE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onProtectTerritoryButtonClick;";
		};
		class Button_4
		{
			name = "COLLECT";
			action = "call ExileLifeClient_system_allowance_gangAllowanceWithdrawalRequest";
		};
	};
};
class ExileLife_Yakuza_QuarterMaster_CompletingJobForPerson
{	 
	title = "DAICHI, YAKUZA KUMICHO";
	onLoad = "";
	tradersgang = "Yakuza";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Who Am I?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Who am I</t> <br/> <br/><t shadow='0' size='1'>A man's good name is as precious to him as its skin is to a tiger.	My name is Daichi. I am quartermaster of the Yakuza.</t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "House Squatting";
				body = "";
				body2 = "";
				action = "Scene_2";
			};
			class Button_4
			{
				name = "Gang Pay";
				body = "";
				body2 = "";
				action = "Scene_3";
			};
			class Button_5
			{
				name = "Got any work?";
				body = "";
				body2 = "";
				action = "Scene_4";
			};
		};
		class Scene_2
		{
			class Button_1
			{
				name = "Info";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t> <br/> <br/> <br/> <t shadow='0' size='1'>A home is a wise thing to have, for better than a banquet somewhere else is a good cup of tea and a bowl of rice at home.</t> <br/> <br/><t shadow='0' size='1'>First, you must purchase a sleeping bag. Only then can you begin the journey of finding a home. But you must find a house close by, for as soon as a man leaves his house, he makes seven enemies.<br/> <br/> After you have made your choice, you must make regular payments for protection. The strong will protect the weak and, in return, the weak will serve the strong.</t> <br/> <br/> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade your Squat</t> <br/> <br/><t shadow='0' size='1'>	The biggest room in the world is the room for improvement. The cost of your improvement is below, but beware! This payment is simply for the improvement. Your regular protection payments will increase also.</t> <br/> <br/><t shadow='0' size='1'> You appear to be unhappy with my proposal. Remember, getting money is like digging with a needle. Spending it is like water soaking into the sand.</t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "House Squatting";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t><br/><br/><t shadow='0' size='1'>It is good that you have found a place to rest. As they say, sleep and wait for good luck. Here are my prices:</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t><br/><br/><t shadow='0' size='1'>It is true that poor men sleep the best, but only so long as they have enough money to buy a squat.</t> <br/> <t shadow='0' size='1'> When you return with money, the prices are as follows:</t>";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_purchaseSleepingBag";
				extraButton = "Button_1";
			};
			class Button_3
			{
				name = "Upgrade Your Dwelling";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade your Dwelling</t><br/> <br/><br/><t shadow='0' size='1'> </t> <br/> <br/><t shadow='0' size='1'> Which room do you desire to improve..</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade Dwelling</t><br/><br/><t shadow='0' size='1'>It is better to go home and make your net than to gaze longingly at the fish in the deep pool. When you have a property, then you can upgrade it.</t>";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_upgradeHouse";
				extraButton = "Button_2";
			};
			class Button_4
			{
				name = "Protective Services";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t><br/> <br/><br/><t shadow='0' size='1'>Which property do you wish to purchase protection for today?</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t> <br/> <br/><t shadow='0' size='1'>It is foolish to deal with a fool. Return when you have a home to protect.</t> ";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_protectHouse";
				extraButton = "Button_3";
			};
		};
		class Scene_3
		{
			class Button_1
			{
			name = "Gang Pay";
			body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Gang Pay</t> <br/> <br/><t shadow='0' size='1'>If you're a beggar for three days, you won't be able to stop. I will pay you when you work for it.</t> ";
			body2 = "";
			action = "ExileLifeClient_gui_jobs_trader_quarterMaster_gangAllowanceChk";
			extraButton = "";
			};
			class Button_2
			{
			name = "Collect Pay";
			body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> The gods just laugh when men pray to them for wealth. </t> ";
			body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'>Once you have made a fortune, know how to spend it. But beware! Wealth gets in the way of wisdom.</t> ";
			action = "ExileLifeClient_gui_jobs_trader_quarterMaster_gangAllowance";
			extraButton = "Button_4";
			};
		};
		class Scene_4
		{
			class Button_1
			{
				name = "Got any Work?";
				body ="<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Got any work for me?</t><br/><br/><t shadow='0' size='1'>To complete my jobs, you must be worthy of respect. Sometimes it takes only an hour to get a reputation that lasts for a thousand years.</t>";
				body2 = "";
				action = ""; 
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "PURCHASE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onPurchaseTerritoryButtonClick;";
		};
		class Button_2
		{
			name = "UPGRADE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onUpgradeTerritoryButtonClick";
		};
		class Button_3
		{
			name = "PAY HERE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onProtectTerritoryButtonClick;";
		};
		class Button_4
		{
			name = "COLLECT";
			action = "call ExileLifeClient_system_allowance_gangAllowanceWithdrawalRequest";
		};
	};
};
class ExileLife_Yakuza_QuarterMaster_JobForPerson
{	 
	title = "DAICHI, YAKUZA KUMICHO";
	onLoad = "";
	tradersgang = "Yakuza";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Who Am I?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Who am I</t> <br/> <br/><t shadow='0' size='1'>A man's good name is as precious to him as its skin is to a tiger. My name is Daichi. I am quartermaster of the Yakuza.</t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "House Squatting";
				body = "";
				body2 = "";
				action = "Scene_2";
			};
			class Button_4
			{
				name = "Gang Pay";
				body = "";
				body2 = "";
				action = "Scene_3";
			};
			class Button_5
			{
				name = "Got any work?";
				body = "";
				body2 = "";
				action = "Scene_4";
			};
		};
		class Scene_2
		{
			class Button_1
			{
				name = "Info";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t> <br/> <br/> <br/> <t shadow='0' size='1'>A home is a wise thing to have, for better than a banquet somewhere else is a good cup of tea and a bowl of rice at home.</t> <br/> <br/><t shadow='0' size='1'>First, you must purchase a sleeping bag. Only then can you begin the journey of finding a home. But you must find a house close by, for as soon as a man leaves his house, he makes seven enemies.<br/> <br/>After you have made your choice, you must make regular payments for protection. The strong will protect the weak and, in return, the weak will serve the strong.</t> <br/> <br/> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade your Squat</t> <br/> <br/><t shadow='0' size='1'>	The biggest room in the world is the room for improvement. The cost of your improvement is below, but beware! This payment is simply for the improvement. Your regular protection payments will increase also.</t> <br/> <br/><t shadow='0' size='1'> You appear to be unhappy with my proposal. Remember, getting money is like digging with a needle. Spending it is like water soaking into the sand.</t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "House Squatting";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t><br/><br/><t shadow='0' size='1'>It is good that you have found a place to rest. As they say, sleep and wait for good luck. Here are my prices:</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t><br/><br/><t shadow='0' size='1'>It is true that poor men sleep the best, but only so long as they have enough money to buy a squat.</t> <br/> <t shadow='0' size='1'> When you return with money, the prices are as follows:</t>";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_purchaseSleepingBag";
				extraButton = "Button_1";
			};
			class Button_3
			{
				name = "Upgrade Your Dwelling";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade your Dwelling</t><br/> <br/><br/><t shadow='0' size='1'> </t> <br/> <br/><t shadow='0' size='1'> Which room do you desire to improve..</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade Dwelling</t><br/><br/><t shadow='0' size='1'>It is better to go home and make your net than to gaze longingly at the fish in the deep pool. When you have a property, then you can upgrade it.</t>";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_upgradeHouse";
				extraButton = "Button_2";
			};
			class Button_4
			{
				name = "Protective Services";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t><br/> <br/><br/><t shadow='0' size='1'>Which property do you wish to purchase protection for today?</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t> <br/> <br/><t shadow='0' size='1'>It is foolish to deal with a fool. Return when you have a home to protect.</t> ";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_protectHouse";
				extraButton = "Button_3";
			};
		};
		class Scene_3
		{
			class Button_1
			{
				name = "Gang Pay";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Gang Pay</t> <br/> <br/><t shadow='0' size='1'>If you're a beggar for three days, you won't be able to stop. I will pay you when you work for it.</t> ";
				body2 = "";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_gangAllowanceChk";
				extraButton = "";
			};
			class Button_2
			{
				name = "Collect Pay";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> The gods just laugh when men pray to them for wealth. </t> ";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'>Once you have made a fortune, know how to spend it. But beware! Wealth gets in the way of wisdom.</t> ";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_gangAllowance";
				extraButton = "Button_4";
			};
		};
		class Scene_4
		{
			class Button_1
			{
				name = "Got any Work?";
				body ="<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Got any work for me?</t><br/><br/><t shadow='0' size='1'>To complete my jobs, you must be worthy of respect. Sometimes it takes only an hour to get a reputation that lasts for a thousand years.</t>";
				body2 = "";
				action = ""; 
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "PURCHASE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onPurchaseTerritoryButtonClick;";
		};
		class Button_2
		{
			name = "UPGRADE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onUpgradeTerritoryButtonClick";
		};
		class Button_3
		{
			name = "PAY HERE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onProtectTerritoryButtonClick;";
		};
		class Button_4
		{
			name = "COLLECT";
			action = "call ExileLifeClient_system_allowance_gangAllowanceWithdrawalRequest";
		};
	};
};
class ExileLife_Yakuza_QuarterMaster_JobNotForPerson
{	 
	title = "DAICHI, YAKUZA KUMICHO";
	onLoad = "";
	tradersgang = "Yakuza";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Who Am I?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Who am I</t> <br/> <br/><t shadow='0' size='1'>A man's good name is as precious to him as its skin is to a tiger.	My name is Daichi. I am quartermaster of the Yakuza.</t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "House Squatting";
				body = "";
				body2 = "";
				action = "Scene_2";
			};
			class Button_4
			{
				name = "Gang Pay";
				body = "";
				body2 = "";
				action = "Scene_3";
			};
			class Button_5
			{
				name = "Got any work?";
				body = "";
				body2 = "";
				action = "Scene_4";
			};
		};
		class Scene_2
		{
			class Button_1
			{
				name = "Info";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t> <br/> <br/> <br/> <t shadow='0' size='1'>A home is a wise thing to have, for better than a banquet somewhere else is a good cup of tea and a bowl of rice at home.</t> <br/> <br/><t shadow='0' size='1'>First, you must purchase a sleeping bag. Only then can you begin the journey of finding a home. But you must find a house close by, for as soon as a man leaves his house, he makes seven enemies.<br/> <br/>After you have made your choice, you must make regular payments for protection. The strong will protect the weak and, in return, the weak will serve the strong. </t> <br/> <br/> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade your Squat</t> <br/> <br/><t shadow='0' size='1'>The biggest room in the world is the room for improvement. The cost of your improvement is below, but beware! This payment is simply for the improvement. Your regular protection payments will increase also.</t> <br/> <br/><t shadow='0' size='1'> You appear to be unhappy with my proposal. Remember, getting money is like digging with a needle. Spending it is like water soaking into the sand.</t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "House Squatting";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t><br/><br/><t shadow='0' size='1'>It is good that you have found a place to rest. As they say, sleep and wait for good luck. Here are my prices:</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t><br/><br/><t shadow='0' size='1'>It is true that poor men sleep the best, but only so long as they have enough money to buy a squat.</t> <br/> <t shadow='0' size='1'> When you return with money, the prices are as follows:</t>";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_purchaseSleepingBag";
				extraButton = "Button_1";
			};
			class Button_3
			{
				name = "Upgrade Your Dwelling";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade your Dwelling</t><br/> <br/><br/><t shadow='0' size='1'> </t> <br/> <br/><t shadow='0' size='1'> Which room do you desire to improve..</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade Dwelling</t><br/><br/><t shadow='0' size='1'>It is better to go home and make your net than to gaze longingly at the fish in the deep pool. When you have a property, then you can upgrade it.</t>";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_upgradeHouse";
				extraButton = "Button_2";
			};
			class Button_4
			{
				name = "Protective Services";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t><br/> <br/><br/><t shadow='0' size='1'>Which property do you wish to purchase protection for today?</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t> <br/> <br/><t shadow='0' size='1'>It is foolish to deal with a fool. Return when you have a home to protect.</t> ";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_protectHouse";
				extraButton = "Button_3";
			};
		};
		class Scene_3
		{
			class Button_1
			{
			name = "Gang Pay";
			body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Gang Pay</t> <br/> <br/><t shadow='0' size='1'>If you're a beggar for three days, you won't be able to stop. I will pay you when you work for it.</t> ";
			body2 = "";
			action = "ExileLifeClient_gui_jobs_trader_quarterMaster_gangAllowanceChk";
			extraButton = "";
			};
			class Button_2
			{
			name = "Collect Pay";
			body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> The gods just laugh when men pray to them for wealth. </t> ";
			body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'>Once you have made a fortune, know how to spend it. But beware! Wealth gets in the way of wisdom.</t> ";
			action = "ExileLifeClient_gui_jobs_trader_quarterMaster_gangAllowance";
			extraButton = "Button_4";
			};
		};
		class Scene_4
		{
			class Button_1
			{
				name = "Got any Work?";
				body ="<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Got any work for me?</t><br/><br/><t shadow='0' size='1'>To complete my jobs, you must be worthy of respect. Sometimes it takes only an hour to get a reputation that lasts for a thousand years.</t>";
				body2 = "";
				action = ""; 
			};
		};
	};
	class Extras
	{
		class Button_1
		{
		name = "PURCHASE";
		action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onPurchaseTerritoryButtonClick;";
		};
		class Button_2
		{
		name = "UPGRADE";
		action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onUpgradeTerritoryButtonClick";
		};
		class Button_3
		{
			name = "PAY HERE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onProtectTerritoryButtonClick;";
		};
		class Button_4
		{
			name = "COLLECT";
			action = "call ExileLifeClient_system_allowance_gangAllowanceWithdrawalRequest";
		};
	};
};
class ExileLife_Yakuza_Recruiter
{
	title = "HIROTOSHI, THE YAKUZA RECRUITER";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Who are you?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Who am I</t> <br/> <br/><t shadow='0'	size='1'> You not know who am I? You in wrong place. Leave now.</t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "Can I join?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Can I join?</t> <br/> <br/> <br/> <t shadow='0' size='1'> You want to join Yakuza? This is problem. I not know you. How do I know you not crazy person? </t> <br/><br/><t>We have strict recruitment policy. Three requirements.</t><br/> <t>Requirement first: happy family is rich family. You give us money to join us and we continue to be happy family.</t><br/> <t>Requirement second: happy family is family with honour. If you not have honour, we not let you in.</t><br/> 	<t>Requirement third: happy family is family with no idiots. You do job for us to show you not idiot.</t><br/><br/> <t>Big boss man say how money and honour you need to join. He can change requirement at any time so I call boss now and find out what you need.</t><br/> ";
				body2 = "";
				action = "";
				extraButton = "Button_1";
			};
			class Button_3
			{
				name = "I want to Join!";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Sign me up!</t> <br/> <br/><t shadow='0' size='1'> I tell you before, big boss man can change cost to join any time. If you not have money and respect you need, I beat you up. </t> <br/> <t shadow='0' size='1'> If you have all requirements and you ready to do big job for us, we are ready to begin.</t> ";
				body2 = "";
				action = "";
				extraButton = "Button_2";
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "CALL";
			action = " 'Yakuza' call ExileLifeClient_gui_gang_recruiter_event_onCallGangButtonClick;";
		};
		class Button_2
		{
			name = "JOIN";
			action = " 'Yakuza' call ExileLifeClient_gui_gang_recruiter_event_onJoinGangButtonClick;";
		};
	};
};
class ExileLife_Yakuza_Recruiter_CompletingJobForPerson
{	 
	title = "HIROTOSHI, THE YAKUZA RECRUITER";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Join the Yakuza";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Join the Yakuza</t> <br/> <br/> <br/> <t shadow='0' size='1'> You have return? </t> <br/> <br/><t shadow='0' size='1'> It is important that you have finish big job. </t> ";
				body2 = "";
				action = "";
				extraButton = "Button_1";				
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "Job Done";
			action = " 'Yakuza' call ExileLifeClient_gui_gang_recruiter_event_onCompleteJoinGangButtonClick;";
		};
	};
};
class ExileLife_Yakuza_Recruiter_JobForPerson
{	 
	title = "HIROTOSHI, THE YAKUZA RECRUITER";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Join the Yakuza";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Join the Yakuza</t> <br/> <br/> <br/> <t shadow='0' size='1'> You are back, but you not finish mission. I have big problem with this. I wish you to not come back until you have finish mission.</t> ";
				body2 = "";
				action = "";
			};
		};
	};
	class Extras
	{
	};
};
class ExileLife_Yakuza_Recruiter_JobNotForPerson
{
	title = "HIROTOSHI, THE YAKUZA RECRUITER";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Who are you?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Who am I</t> <br/> <br/><t shadow='0' size='1'> You not know who am I? You in wrong place. Leave now.</t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "Can I join?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Can I join?</t> <br/> <br/> <br/> <t shadow='0' size='1'> You want to join Yakuza? This is problem. I not know you. How do I know you not crazy person? </t> <br/><br/><t>We have strict recruitment policy. Three requirements.</t><br/>	<t>Requirement first: happy family is rich family. You give us money to join us and we continue to be happy family.</t><br/><t>Requirement second: happy family is family with honour. If you not have honour, we not let you in.</t><br/><t>Requirement third: happy family is family with no idiots. You do job for us to show you not idiot.</t><br/><br/>	<t>Big boss man say how money and honour you need to join. He can change requirement at any time so I call boss now and find out what you need.</t><br/> ";
				body2 = "";
				action = "";
				extraButton = "Button_1";			
			};
			class Button_3
			{
				name = "I want to Join!";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Sign me up!</t> <br/> <br/><t shadow='0' size='1'> You have job with other person already. Once you finish job with other man, you come back and do job for us.</t> ";
				body2 = "";
				action = "";
				extraButton = "Button_2";			
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "CALL";
			action = " 'Yakuza' call ExileLifeClient_gui_gang_recruiter_event_onCallGangButtonClick;";
		};		
	};
};
class ExileLife_Yakuza_Medic
{
	title = "AKARI, THE YAKUZA MEDIC";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Who are you?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Who am I</t> <br/> <br/><t shadow='0'	size='1'> You not know who am I? You in wrong place. Leave now.</t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "Can I be a medic?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Can I join?</t> <br/> <br/> <br/> <t shadow='0' size='1'> Only Murderers have the required skillset to be a medic! </t> <br/><br/><t>So many hours spent intimately familiarising themselves with their victims, keeping them dangling on the precipice of death. Only allowing them to die when they so desire. </t><br/><br/><t>Once you sign onto the roster, jobs will be sent directly to your xm8 that you can choose to accept/decline. The higher your healer skill rank, the earlier you will get a job alert! </t><br/><t> Should a victim stop fighting to hold onto life before you arrive you will still be paid for your services. BUT... should they die by no fault of their own, and you fail to reach them in time, your reputation will suffer! </t><br/> ";
				body2 = "";
				action = "";
			};
			class Button_3
			{
				name = "Join the Roster!";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Sign me up!</t> <br/> <br/><t shadow='0' size='1'> If you have all requirements and you ready to do big job for us, we are ready to begin.</t> ";
				body2 = "";
				action = "";
				extraButton = "Button_1";
			};
			class Button_4
			{
				name = "Leave the Roster!";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Leave the Roster!</t> <br/> <br/><t shadow='0' size='1'>Don't want to be on the Roster anymore? No problem.</t> ";
				body2 = "";
				action = "";
				extraButton = "Button_2";
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "JOIN";
			action = " 2 call ExileLifeClient_gui_gang_medic_event_onMedicRosterButtonClick;";
		};
		class Button_2
		{
			name = "LEAVE";
			action = " 2 call ExileLifeClient_gui_gang_medic_event_onMedicRosterButtonLeaveClick;";
		};
	};
};
class ExileLife_Mafia_QuarterMaster
{
	title = "MISTER GEPPETTO, MAFIA GODFATHER";
	onLoad = "";
	tradersgang = "Mafia";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Who Am I?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Who am I</t> <br/> <br/><t shadow='0' size='1'> You would like to know who I am? I am Mister Geppetto, Mafia puppet master! Quartermaster. Why did you mention puppets? What was I saying?</t> <br/> <br/><t shadow='0' size='1'> Ah, yes. When you need something, Mister Geppetto is the one to call, for I pull all the strings!</t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "House Squatting";
				body = "";
				body2 = "";
				action = "Scene_2";
			};
			class Button_4
			{
				name = "Gang Pay";
				body = "";
				body2 = "";
				action = "Scene_3";
			};
			class Button_5
			{
				name = "Got any work?";
				body = "";
				body2 = "";
				action = "Scene_4";
			};
		};
		class Scene_2
		{
			class Button_1
			{
				name = "Info";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t> <br/> <br/> <br/> <t shadow='0' size='1'> Oh, a home, such a wonderful thing. When you spend all day dancing to another's tune, you cannot help but need a place to lay your head.</t> <br/> <br/><t shadow='0' size='1'> Of course, you must buy your sleeping bag first. Then you can find a nice place to settle down. But don't go too far now. There is only so far my protection can reach. </t> <br/> <br/><t shadow='0' size='1'> Once you've picked out a nice little place for yourself, you'll have to come visit me again. I'm afraid you'll need to make regular payments if you want me to pull enough strings to keep your house safe all the time. It's a bit steep, I know, but I've got a family. As it turns out, real boys are expensive. </t> <br/> <br/> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade your Squat</t> <br/> <br/><t shadow='0' size='1'> Ooh, an upgrade! How lovely! I upgraded my son once.</t> <br/> <br/><t shadow='0' size='1'> You can see my prices below. Expensive, I know, but I must earn money somehow. Puppet-making is not valued in such a place. And don't forget, this is just a redecoration fee. The protection I offer will increase too... fancy places take more effort to protect. Don't want to be robbed by the unscrupulous now, do we? </t> <br/> <br/> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t> <br/> <br/><t shadow='0' size='1'> My arms are wide and my strings are long, but you must pay to keep them moving.</t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "House Squatting";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t><br/><br/><t shadow='0' size='1'>You're ready to find a place to rest your weary soul? How wonderful! Here are my prices:</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t><br/><br/><t shadow='0' size='1'>Oh dear. The puppet comes crawling to the puppet master, with nothing to pay him with.</t> <br/> <t shadow='0' size='1'> When you come back with enough money, this is what you will receive:</t>";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_purchaseSleepingBag";
				extraButton = "Button_1";
			};
			class Button_3
			{
				name = "Upgrade Your Dwelling";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade your Dwelling</t><br/> <br/><br/><t shadow='0' size='1'> Ah, you wish to renovate. What a lovely idea! </t> <br/> <br/><t shadow='0' size='1'> And which property shall we upgrade today?</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade Dwelling</t><br/><br/><t shadow='0' size='1'>Oh my, a man without a home is a man lost at sea. You can't upgrade a property that doesn't exist!</t>";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_upgradeHouse";
				extraButton = "Button_2";
			};
			class Button_4
			{
				name = "Protective Services";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t><br/> <br/><br/><t shadow='0' size='1'>Which property do you wish to purchase protection for today?</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t> <br/> <br/><t shadow='0' size='1'> Oh my, a man without a home is a man lost at sea. I can't protect something that doesn't exist! </t> ";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_protectHouse";
				extraButton = "Button_3";
			};
		};
		class Scene_3
		{
			class Button_1
			{
				name = "Gang Pay";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Gang Pay</t> <br/> <br/><t shadow='0' size='1'>Dear me. I'm afraid you have me all wrong. Just because I smile a speak kindly to you, doesn't mean I run a charity.</t> <br/> <br/><t shadow='0' size='1'> If you want your pay, you must dance; dance to my merry tune!</t> ";
				body2 = "";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_gangAllowanceChk";
				extraButton = "";
			};
			class Button_2
			{
				name = "Collect Pay";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> When you dance, you will earn your pay. </t> ";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> My dear, you put on such an excellent show this week! Here is your reward! </t> ";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_gangAllowance";
				extraButton = "Button_4";
			};			
		};
		class Scene_4
		{
			class Button_1
			{
				name = "Got any Work?";
				body ="<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Got any work for me?</t><br/><br/><t shadow='0' size='1'>I love it when new puppets - er, people - come to work for me. But how do I know if you are a good dancer or a bad one? Come back when you can prove your worth.</t>";
				body2 = "";
				action = ""; 
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "PURCHASE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onPurchaseTerritoryButtonClick;";
		};
		class Button_2
		{
			name = "UPGRADE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onUpgradeTerritoryButtonClick";
		};
		class Button_3
		{
			name = "PAY HERE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onProtectTerritoryButtonClick;";
		};
		class Button_4
		{
			name = "COLLECT";
			action = "call ExileLifeClient_system_allowance_gangAllowanceWithdrawalRequest";
		};
	};
};
class ExileLife_Mafia_QuarterMaster_CompletingJobForPerson
{
	title = "MISTER GEPPETTO, MAFIA GODFATHER";
	onLoad = "";
	tradersgang = "Mafia";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Who Am I?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Who am I</t> <br/> <br/><t shadow='0' size='1'> You would like to know who I am? I am Mister Geppetto, Mafia puppet master! Quartermaster. Why did you mention puppets? What was I saying?</t> <br/> <br/><t shadow='0' size='1'> Ah, yes. When you need something, Mister Geppetto is the one to call, for I pull all the strings!</t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "House Squatting";
				body = "";
				body2 = "";
				action = "Scene_2";
			};
			class Button_4
			{
				name = "Gang Pay";
				body = "";
				body2 = "";
				action = "Scene_3";
			};
			class Button_5
			{
				name = "Got any work?";
				body = "";
				body2 = "";
				action = "Scene_4";
			};
		};
		class Scene_2
		{
			class Button_1
			{
				name = "Info";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t> <br/> <br/> <br/> <t shadow='0' size='1'> Oh, a home, such a wonderful thing. When you spend all day dancing to another's tune, you cannot help but need a place to lay your head.</t> <br/> <br/><t shadow='0' size='1'> Of course, you must buy your sleeping bag first. Then you can find a nice place to settle down. But don't go too far now. There is only so far my protection can reach. </t> <br/> <br/><t shadow='0' size='1'> Once you've picked out a nice little place for yourself, you'll have to come visit me again. I'm afraid you'll need to make regular payments if you want me to pull enough strings to keep your house safe all the time. It's a bit steep, I know, but I've got a family. As it turns out, real boys are expensive. </t> <br/> <br/> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade your Squat</t> <br/> <br/><t shadow='0' size='1'> Ooh, an upgrade! How lovely! I upgraded my son once.</t> <br/> <br/><t shadow='0' size='1'> You can see my prices below. Expensive, I know, but I must earn money somehow. Puppet-making is not valued in such a place. And don't forget, this is just a redecoration fee. The protection I offer will increase too... fancy places take more effort to protect. Don't want to be robbed by the unscrupulous now, do we? </t> <br/> <br/> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t> <br/> <br/><t shadow='0' size='1'> My arms are wide and my strings are long, but you must pay to keep them moving.</t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "House Squatting";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t><br/><br/><t shadow='0' size='1'>You're ready to find a place to rest your weary soul? How wonderful! Here are my prices:</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t><br/><br/><t shadow='0' size='1'>Oh dear. The puppet comes crawling to the puppet master, with nothing to pay him with.</t> <br/> <t shadow='0' size='1'> When you come back with enough money, this is what you will receive:</t>";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_purchaseSleepingBag";
				extraButton = "Button_1";
			};
			class Button_3
			{
				name = "Upgrade Your Dwelling";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade your Dwelling</t><br/> <br/><br/><t shadow='0' size='1'> Ah, you wish to renovate. What a lovely idea! </t> <br/> <br/><t shadow='0' size='1'> And which property shall we upgrade today?</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade Dwelling</t><br/><br/><t shadow='0' size='1'>Oh my, a man without a home is a man lost at sea. You can't upgrade a property that doesn't exist!</t>";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_upgradeHouse";
				extraButton = "Button_2";
			};
			class Button_4
			{
				name = "Protective Services";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t><br/> <br/><br/><t shadow='0' size='1'>Which property do you wish to purchase protection for today?</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t> <br/> <br/><t shadow='0' size='1'> Oh my, a man without a home is a man lost at sea. I can't protect something that doesn't exist! </t> ";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_protectHouse";
				extraButton = "Button_3";
			};
		};
		class Scene_3
		{
			class Button_1
			{
				name = "Gang Pay";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Gang Pay</t> <br/> <br/><t shadow='0' size='1'>Dear me. I'm afraid you have me all wrong. Just because I smile a speak kindly to you, doesn't mean I run a charity.</t> <br/> <br/><t shadow='0' size='1'> If you want your pay, you must dance; dance to my merry tune!</t> ";
				body2 = "";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_gangAllowanceChk";
				extraButton = "";
			};
			class Button_2
			{
				name = "Collect Pay";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> When you dance, you will earn your pay. </t> ";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> My dear, you put on such an excellent show this week! Here is your reward! </t> ";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_gangAllowance";
				extraButton = "Button_4";
			};			
		};
		class Scene_4
		{
			class Button_1
			{
				name = "Got any Work?";
				body ="<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Got any work for me?</t><br/><br/><t shadow='0' size='1'>I love it when new puppets - er, people - come to work for me. But how do I know if you are a good dancer or a bad one? Come back when you can prove your worth.</t>";
				body2 = "";
				action = ""; 
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "PURCHASE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onPurchaseTerritoryButtonClick;";
		};
		class Button_2
		{
			name = "UPGRADE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onUpgradeTerritoryButtonClick";
		};
		class Button_3
		{
			name = "PAY HERE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onProtectTerritoryButtonClick;";
		};
		class Button_4
		{
			name = "COLLECT";
			action = "call ExileLifeClient_system_allowance_gangAllowanceWithdrawalRequest";
		};
	};
};
class ExileLife_Mafia_QuarterMaster_JobForPerson
{
	title = "MISTER GEPPETTO, MAFIA GODFATHER";
	onLoad = "";
	tradersgang = "Mafia";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Who Am I?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Who am I</t> <br/> <br/><t shadow='0' size='1'> You would like to know who I am? I am Mister Geppetto, Mafia puppet master! Quartermaster. Why did you mention puppets? What was I saying?</t> <br/> <br/><t shadow='0' size='1'> Ah, yes. When you need something, Mister Geppetto is the one to call, for I pull all the strings!</t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "House Squatting";
				body = "";
				body2 = "";
				action = "Scene_2";
			};
			class Button_4
			{
				name = "Gang Pay";
				body = "";
				body2 = "";
				action = "Scene_3";
			};
			class Button_5
			{
				name = "Got any work?";
				body = "";
				body2 = "";
				action = "Scene_4";
			};
		};
		class Scene_2
		{
			class Button_1
			{
				name = "Info";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t> <br/> <br/> <br/> <t shadow='0' size='1'> Oh, a home, such a wonderful thing. When you spend all day dancing to another's tune, you cannot help but need a place to lay your head.</t> <br/> <br/><t shadow='0' size='1'> Of course, you must buy your sleeping bag first. Then you can find a nice place to settle down. But don't go too far now. There is only so far my protection can reach. </t> <br/> <br/><t shadow='0' size='1'> Once you've picked out a nice little place for yourself, you'll have to come visit me again. I'm afraid you'll need to make regular payments if you want me to pull enough strings to keep your house safe all the time. It's a bit steep, I know, but I've got a family. As it turns out, real boys are expensive. </t> <br/> <br/> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade your Squat</t> <br/> <br/><t shadow='0' size='1'> Ooh, an upgrade! How lovely! I upgraded my son once.</t> <br/> <br/><t shadow='0' size='1'> You can see my prices below. Expensive, I know, but I must earn money somehow. Puppet-making is not valued in such a place. And don't forget, this is just a redecoration fee. The protection I offer will increase too... fancy places take more effort to protect. Don't want to be robbed by the unscrupulous now, do we? </t> <br/> <br/> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t> <br/> <br/><t shadow='0' size='1'> My arms are wide and my strings are long, but you must pay to keep them moving.</t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "House Squatting";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t><br/><br/><t shadow='0' size='1'>You're ready to find a place to rest your weary soul? How wonderful! Here are my prices:</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t><br/><br/><t shadow='0' size='1'>Oh dear. The puppet comes crawling to the puppet master, with nothing to pay him with.</t> <br/> <t shadow='0' size='1'> When you come back with enough money, this is what you will receive:</t>";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_purchaseSleepingBag";
				extraButton = "Button_1";
			};
			class Button_3
			{
				name = "Upgrade Your Dwelling";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade your Dwelling</t><br/> <br/><br/><t shadow='0' size='1'> Ah, you wish to renovate. What a lovely idea! </t> <br/> <br/><t shadow='0' size='1'> And which property shall we upgrade today?</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade Dwelling</t><br/><br/><t shadow='0' size='1'>Oh my, a man without a home is a man lost at sea. You can't upgrade a property that doesn't exist!</t>";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_upgradeHouse";
				extraButton = "Button_2";
			};
			class Button_4
			{
				name = "Protective Services";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t><br/> <br/><br/><t shadow='0' size='1'>Which property do you wish to purchase protection for today?</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t> <br/> <br/><t shadow='0' size='1'> Oh my, a man without a home is a man lost at sea. I can't protect something that doesn't exist! </t> ";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_protectHouse";
				extraButton = "Button_3";
			};
		};
		class Scene_3
		{
			class Button_1
			{
				name = "Gang Pay";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Gang Pay</t> <br/> <br/><t shadow='0' size='1'>Dear me. I'm afraid you have me all wrong. Just because I smile a speak kindly to you, doesn't mean I run a charity.</t> <br/> <br/><t shadow='0' size='1'> If you want your pay, you must dance; dance to my merry tune!</t> ";
				body2 = "";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_gangAllowanceChk";
				extraButton = "";
			};
			class Button_2
			{
				name = "Collect Pay";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> When you dance, you will earn your pay. </t> ";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> My dear, you put on such an excellent show this week! Here is your reward! </t> ";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_gangAllowance";
				extraButton = "Button_4";
			};			
		};
		class Scene_4
		{
			class Button_1
			{
				name = "Got any Work?";
				body ="<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Got any work for me?</t><br/><br/><t shadow='0' size='1'>I love it when new puppets - er, people - come to work for me. But how do I know if you are a good dancer or a bad one? Come back when you can prove your worth.</t>";
				body2 = "";
				action = ""; 
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "PURCHASE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onPurchaseTerritoryButtonClick;";
		};
		class Button_2
		{
			name = "UPGRADE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onUpgradeTerritoryButtonClick";
		};
		class Button_3
		{
			name = "PAY HERE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onProtectTerritoryButtonClick;";
		};
		class Button_4
		{
			name = "COLLECT";
			action = "call ExileLifeClient_system_allowance_gangAllowanceWithdrawalRequest";
		};
	};
};
class ExileLife_Mafia_QuarterMaster_JobNotForPerson
{
	title = "MISTER GEPPETTO, MAFIA GODFATHER";
	onLoad = "";
	tradersgang = "Mafia";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Who Am I?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Who am I</t> <br/> <br/><t shadow='0' size='1'> You would like to know who I am? I am Mister Geppetto, Mafia puppet master! Quartermaster. Why did you mention puppets? What was I saying?</t> <br/> <br/><t shadow='0' size='1'> Ah, yes. When you need something, Mister Geppetto is the one to call, for I pull all the strings!</t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "House Squatting";
				body = "";
				body2 = "";
				action = "Scene_2";
			};
			class Button_4
			{
				name = "Gang Pay";
				body = "";
				body2 = "";
				action = "Scene_3";
			};
			class Button_5
			{
				name = "Got any work?";
				body = "";
				body2 = "";
				action = "Scene_4";
			};
		};
		class Scene_2
		{
			class Button_1
			{
				name = "Info";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t> <br/> <br/> <br/> <t shadow='0' size='1'> Oh, a home, such a wonderful thing. When you spend all day dancing to another's tune, you cannot help but need a place to lay your head.</t> <br/> <br/><t shadow='0' size='1'> Of course, you must buy your sleeping bag first. Then you can find a nice place to settle down. But don't go too far now. There is only so far my protection can reach. </t> <br/> <br/><t shadow='0' size='1'> Once you've picked out a nice little place for yourself, you'll have to come visit me again. I'm afraid you'll need to make regular payments if you want me to pull enough strings to keep your house safe all the time. It's a bit steep, I know, but I've got a family. As it turns out, real boys are expensive. </t> <br/> <br/> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade your Squat</t> <br/> <br/><t shadow='0' size='1'> Ooh, an upgrade! How lovely! I upgraded my son once.</t> <br/> <br/><t shadow='0' size='1'> You can see my prices below. Expensive, I know, but I must earn money somehow. Puppet-making is not valued in such a place. And don't forget, this is just a redecoration fee. The protection I offer will increase too... fancy places take more effort to protect. Don't want to be robbed by the unscrupulous now, do we? </t> <br/> <br/> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t> <br/> <br/><t shadow='0' size='1'> My arms are wide and my strings are long, but you must pay to keep them moving.</t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "House Squatting";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t><br/><br/><t shadow='0' size='1'>You're ready to find a place to rest your weary soul? How wonderful! Here are my prices:</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t><br/><br/><t shadow='0' size='1'>Oh dear. The puppet comes crawling to the puppet master, with nothing to pay him with.</t> <br/> <t shadow='0' size='1'> When you come back with enough money, this is what you will receive:</t>";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_purchaseSleepingBag";
				extraButton = "Button_1";
			};
			class Button_3
			{
				name = "Upgrade Your Dwelling";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade your Dwelling</t><br/> <br/><br/><t shadow='0' size='1'> Ah, you wish to renovate. What a lovely idea! </t> <br/> <br/><t shadow='0' size='1'> And which property shall we upgrade today?</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade Dwelling</t><br/><br/><t shadow='0' size='1'>Oh my, a man without a home is a man lost at sea. You can't upgrade a property that doesn't exist!</t>";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_upgradeHouse";
				extraButton = "Button_2";
			};
			class Button_4
			{
				name = "Protective Services";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t><br/> <br/><br/><t shadow='0' size='1'>Which property do you wish to purchase protection for today?</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t> <br/> <br/><t shadow='0' size='1'> Oh my, a man without a home is a man lost at sea. I can't protect something that doesn't exist! </t> ";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_protectHouse";
				extraButton = "Button_3";
			};
		};
		class Scene_3
		{
			class Button_1
			{
				name = "Gang Pay";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Gang Pay</t> <br/> <br/><t shadow='0' size='1'>Dear me. I'm afraid you have me all wrong. Just because I smile a speak kindly to you, doesn't mean I run a charity.</t> <br/> <br/><t shadow='0' size='1'> If you want your pay, you must dance; dance to my merry tune!</t> ";
				body2 = "";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_gangAllowanceChk";
				extraButton = "";
			};
			class Button_2
			{
				name = "Collect Pay";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> When you dance, you will earn your pay. </t> ";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> My dear, you put on such an excellent show this week! Here is your reward! </t> ";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_gangAllowance";
				extraButton = "Button_4";
			};			
		};
		class Scene_4
		{
			class Button_1
			{
				name = "Got any Work?";
				body ="<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Got any work for me?</t><br/><br/><t shadow='0' size='1'>I love it when new puppets - er, people - come to work for me. But how do I know if you are a good dancer or a bad one? Come back when you can prove your worth.</t>";
				body2 = "";
				action = ""; 
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "PURCHASE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onPurchaseTerritoryButtonClick;";
		};
		class Button_2
		{
			name = "UPGRADE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onUpgradeTerritoryButtonClick";
		};
		class Button_3
		{
			name = "PAY HERE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onProtectTerritoryButtonClick;";
		};
		class Button_4
		{
			name = "COLLECT";
			action = "call ExileLifeClient_system_allowance_gangAllowanceWithdrawalRequest";
		};
	};
};
class ExileLife_Mafia_Recruiter
{
	title = "GIOVANNI, THE MAFIA RECRUITER";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Who are you?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Who am I</t> <br/> <br/><t shadow='0' size='1'> You do not ask who Giovanni is, Giovanni asks who you are. Unless you wish to find out exactly what Giovanni is like, I suggest you move along.</t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "Can I Join?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Can I Join?</t> <br/> <br/> <br/> <t shadow='0' size='1'> Ah, so you wish to join the family. But you see, I do not know you or anything about you. We in the Mafia have certain... standards. </t> <br/><br/><t>How about this: I tell you our little recruitment policy, you decide if you still wish to join us.</t><br/><t>First of all: we are family. We love you. We protect you. And you show your gratitude with moola, if you know what I mean. This is what family is all about.</t><br/><t>Second: we do not take in those who would bring dishonour to our name. You must have a certain level of respect for us to welcome you as a son. </t><br/><t>Third: brains are an important genetic train in the family line. We have a little test for you to pass, just to make sure you have what it takes to be one of us. </t><br/><br/><t>The boss, he is the one who decides how much cash and respect you need to be welcomed into the fold. Our boss is man of many faces. Sometimes he is kind, like father who loves his children. Sometimes he is harsh, like father disciplining with belt. He can change his mind about joining us at any time, so perhaps it best I give HQ a call to find out what you need. </t><br/> ";
				body2 = "";
				action = "";
				extraButton = "Button_1";			
			};
			class Button_3
			{
				name = "I want to join!";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Sign me up!</t> <br/> <br/><t shadow='0' size='1'> Like I said, the boss can change cost of joining at any time. If you have enough money and respect, you can begin the test. But here is my little warning: it is very important that you have everything you need or perhaps you find out exactly what Giovanni is like after all.";
				body2 = "";
				action = "";
				extraButton = "Button_2";			
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "CALL";
			action = " 'Mafia' call ExileLifeClient_gui_gang_recruiter_event_onCallGangButtonClick;";
		};		
		class Button_2
		{
			name = "JOIN";
			action = " 'Mafia' call ExileLifeClient_gui_gang_recruiter_event_onJoinGangButtonClick;";
		};
	};
};
class ExileLife_Mafia_Recruiter_CompletingJobForPerson
{
	title = "GIOVANNI, THE MAFIA RECRUITER";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Join the Mafia";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Join the Mafia</t> <br/> <br/> <br/> <t shadow='0' size='1'> Ah, I see that the new recruit has returned. </t> <br/> <br/><t shadow='0' size='1'> It is my sincere hope that you have finished your mission. </t> ";
				body2 = "";
				action = "";
				extraButton = "Button_1";				
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "Job Done";
			action = " 'Mafia' call ExileLifeClient_gui_gang_recruiter_event_onCompleteJoinGangButtonClick;";
		};
	};
};
class ExileLife_Mafia_Recruiter_JobForPerson
{
	title = "GIOVANNI, THE MAFIA RECRUITER";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Join the Mafia";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='u.8'>Join the Mafia</t> <br/> <br/> <br/> <t shadow='0' size='1'> Ah, you are back from little trip. But you see the problem here is that you have not finished your mission. Giovanni kindly requests that you go from his sight until you have done as you were asked.</t> ";
				body2 = "";
				action = "";
			};
		};
	};
	class Extras
	{
	};
};
class ExileLife_Mafia_Recruiter_JobNotForPerson
{
	title = "DIEGO, THE MAFIA RECRUITER";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Who are you?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Who am I</t> <br/> <br/><t shadow='0' size='1'> You do not ask who Giovanni is, Giovanni asks who you are. Unless you wish to find out exactly what Giovanni is like, I suggest you move along.</t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "Can I Join?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Can I Join?</t> <br/> <br/> <br/> <t shadow='0' size='1'> Ah, so you wish to join the family. But you see, I do not know you or anything about you. We in the Mafia have certain... standards. </t> <br/><br/><t>How about this: I tell you our little recruitment policy, you decide if you still wish to join us.</t><br/><t>First of all: we are family. We love you. We protect you. And you show your gratitude with moola, if you know what I mean. This is what family is all about.</t><br/><t>Second: we do not take in those who would bring dishonour to our name. You must have a certain level of respect for us to welcome you as a son. </t><br/><t>Third: brains are an important genetic train in the family line. We have a little test for you to pass, just to make sure you have what it takes to be one of us. </t><br/><br/><t>The boss, he is the one who decides how much cash and respect you need to be welcomed into the fold. Our boss is man of many faces. Sometimes he is kind, like father who loves his children. Sometimes he is harsh, like father disciplining with belt. He can change his mind about joining us at any time, so perhaps it best I give HQ a call to find out what you need. </t><br/> ";
				body2 = "";
				action = "";
				extraButton = "Button_1";			
			};
			class Button_3
			{
				name = "I want to join!";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Sign me up!</t> <br/> <br/><t shadow='0' size='1'> Like I said, the boss can change cost of joining at any time. If you have enough money and respect, you can begin the test. But here is my little warning: it is very important that you have everything you need or perhaps you find out exactly what Giovanni is like after all.";
				body2 = "";
				action = "";
				extraButton = "Button_2";			
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "CALL";
			action = " 'Mafia' call ExileLifeClient_gui_gang_recruiter_event_onCallGangButtonClick;";
		};		
	};
};
class ExileLife_Mafia_Medic
{
	title = "ROBERTO, THE MAFIA MEDIC";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Who are you?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Who am I</t> <br/> <br/><t shadow='0' size='1'> You do not ask who Roberto is, Roberto asks who you are. Unless you wish to find out exactly what Roberto is like, I suggest you move along.</t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "Can I be a medic?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Can I join?</t> <br/> <br/> <br/> <t shadow='0' size='1'> Only Murderers have the required skillset to be a medic! </t> <br/><br/><t>So many hours spent intimately familiarising themselves with their victims, keeping them dangling on the precipice of death. Only allowing them to die when they so desire. </t><br/><br/><t>Once you sign onto the roster, jobs will be sent directly to your xm8 that you can choose to accept/decline. The higher your healer skill rank, the earlier you will get a job alert! </t><br/><t> Should a victim stop fighting to hold onto life before you arrive you will still be paid for your services. BUT... should they die by no fault of their own, and you fail to reach them in time, your reputation will suffer! </t><br/> ";
				body2 = "";
				action = "";
			};
			class Button_3
			{
				name = "Join the Roster!";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Sign me up!</t> <br/> <br/><t shadow='0' size='1'> Here is my little warning: it is very important that you have everything you need or perhaps you find out exactly what Roberto is like after all.";
				body2 = "";
				action = "";
				extraButton = "Button_1";
			};
			class Button_4
			{
				name = "Leave the Roster!";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Leave the Roster!</t> <br/> <br/><t shadow='0' size='1'>Don't want to be on the Roster anymore? No problem.</t> ";
				body2 = "";
				action = "";
				extraButton = "Button_2";
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "JOIN";
			action = " 2 call ExileLifeClient_gui_gang_medic_event_onMedicRosterButtonClick;";
		};
		class Button_2
		{
			name = "LEAVE";
			action = " 2 call ExileLifeClient_gui_gang_medic_event_onMedicRosterButtonLeaveClick;";
		};
	};
};
class ExileLife_Cartel_QuarterMaster
{
	title = "JUAN, THE CARTEL EL JEFE";
	onLoad = "";
	tradersgang = "Cartel";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Who Am I?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Who am I</t> <br/> <br/><t shadow='0' size='1'> You cons are a nosy bunch arenât ya?   </t> <br/> <br/><t shadow='0' size='1'> Well since ya asked, they sent me here as part of TAP after the previous guy got himself shivved.  He got caught playinâ the Cartel off against the Yakuza. Idiot liked to talk about himself too much, if ya know what I mean.</t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "House Squatting";
				body = "";
				body2 = "";
				action = "Scene_2";
			};
			class Button_4
			{
				name = "Gang Pay";
				body = "";
				body2 = "";
				action = "Scene_3";
			};
			class Button_5
			{
				name = "Got any work?";
				body = "";
				body2 = "";
				action = "Scene_4";
			};
		};
		class Scene_2
		{
			class Button_1
			{
				name = "Info";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t> <br/> <br/> <br/> <t shadow='0' size='1'> So you want to claim a house do ya? Well thatâs gunna cost! </t> <br/> <br/><t shadow='0' size='1'> First you gotta pay me! Thatâs right, You pay me and I'll give you a sleeping bag to go pick out where u wanna bunk down. Just donât expect to claim any old house, we can't ensure your protection out of this here town so pick somewhere close you can lock up at night. </t> <br/> <br/><t shadow='0' size='1'> Donât expect us to protect you for free either. This transaction only gives you a few days to settle down, we expect you to show your gratitude for our protective services on a regular basis or you will come home to find some other poor bastard moved in. </t> <br/> <br/> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade your Squat</t> <br/> <br/><t shadow='0' size='1'> That hovel of yours a bit sparse is it? Well you've come to the right man! </t> <br/> <br/><t shadow='0' size='1'>Some claim Iâm an extortionist, I like to think of myself as a businessman trying to make the most of this godforsaken hell hole. If you want more stuff you gotta pay for it. Simple. My prices are below. Oh donât forget, this is only your down payment. Your protective service rates will now go up... we gotta protect more stuff ya see? </t> <br/> <br/> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t> <br/> <br/><t shadow='0' size='1'> You know how that saying goes, that you should count your blessings blah blah blah. When youâre in Exile with the likes of us lot those blessings are gunna cost ya! </t> <br/> <br/><t shadow='0' size='1' >Start counting out them poptabs and letâs keep you and your posessions safe eh! </t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "House Squatting";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t><br/><br/><t shadow='0' size='1'>Decided to take the plunge and put some roots down have we? Heres the deal:</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t><br/><br/><t shadow='0' size='1'>Why are you even wasting my time? You know you cant afford this!</t> <br/> <t shadow='0' size='1'> When you have enough cash here's the deal:</t>";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_purchaseSleepingBag";
				extraButton = "Button_1";
			};
			class Button_3
			{
				name = "Upgrade Your Dwelling";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade your Dwelling</t><br/> <br/><br/><t shadow='0' size='1'> Time for some more luxurious accommodations is it? </t> <br/> <br/><t shadow='0' size='1'> Which property are you interested in upgrading today?</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade Dwelling</t><br/><br/><t shadow='0' size='1'>You know you don't even have a house squatted out yet right?</t> <br/> <t shadow='0' size='1'>Come back when you have a property!</t>";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_upgradeHouse";
				extraButton = "Button_2";
			};
			class Button_4
			{
				name = "Protective Services";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t><br/> <br/><br/><t shadow='0' size='1'>Which property do you wish to purchase protection for today?</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t> <br/> <br/><t shadow='0' size='1'> You aint got nothin worth protecting! </t> ";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_protectHouse";
				extraButton = "Button_3";
			};
		};
		class Scene_3
		{
			class Button_1
			{
				name = "Gang Pay";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> HA! You think you just get given money for free because your in prison? This aint no beauty spa prison like they have on the mainland!   </t> <br/> <br/><t shadow='0' size='1'> You gotta earn yourself your allowance. That means you gotta work for me! You do your prison duties, and I'll make sure you get your allowance.</t> ";
				body2 = "";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_gangAllowanceChk";
				extraButton = "";
			};
			class Button_2
			{
				name = "Collect Pay";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> I aint got nothin for ya, you pathetic excuse for a human being! </t> ";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> A hard worker I see! Good to see that some of you scum know ur place! Now let me see what Iâve got for yaâ¦  </t> ";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_gangAllowance";
				extraButton = "Button_4";
			};			
		};
		class Scene_4
		{
			class Button_1
			{
				name = "Got any Work?";
				body ="<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Got any work for me?</t><br/><br/><t shadow='0' size='1'>You dont look very trustworthy to me! Maybe when you have earnt my trust I will have something for you!</t>";
				body2 = "";
				action = ""; 
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "PURCHASE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onPurchaseTerritoryButtonClick;";
		};
		class Button_2
		{
			name = "UPGRADE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onUpgradeTerritoryButtonClick";
		};
		class Button_3
		{
			name = "PAY HERE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onProtectTerritoryButtonClick;";
		};
		class Button_4
		{
			name = "COLLECT";
			action = "call ExileLifeClient_system_allowance_gangAllowanceWithdrawalRequest";
		};
	};
};
class ExileLife_Cartel_QuarterMaster_CompletingJobForPerson
{
	title = "JUAN, THE CARTEL EL JEFE";
	onLoad = "";
	tradersgang = "Cartel";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Who Am I?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Who am I</t> <br/> <br/><t shadow='0' size='1'> You cons are a nosy bunch arenât ya?   </t> <br/> <br/><t shadow='0' size='1'> Well since ya asked, they sent me here as part of TAP after the previous guy got himself shivved.  He got caught playinâ the Cartel off against the Yakuza. Idiot liked to talk about himself too much, if ya know what I mean.</t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "House Squatting";
				body = "";
				body2 = "";
				action = "Scene_2";
			};
			class Button_4
			{
				name = "Gang Pay";
				body = "";
				body2 = "";
				action = "Scene_3";
			};
			class Button_5
			{
				name = "Got any work?";
				body = "";
				body2 = "";
				action = "Scene_4";
			};
		};
		class Scene_2
		{
			class Button_1
			{
				name = "Info";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t> <br/> <br/> <br/> <t shadow='0' size='1'> So you want to claim a house do ya? Well thatâs gunna cost! </t> <br/> <br/><t shadow='0' size='1'> First you gotta pay me! Thatâs right, You pay me and I'll give you a sleeping bag to go pick out where u wanna bunk down. Just donât expect to claim any old house, we can't ensure your protection out of this here town so pick somewhere close you can lock up at night. </t> <br/> <br/><t shadow='0' size='1'> Donât expect us to protect you for free either. This transaction only gives you a few days to settle down, we expect you to show your gratitude for our protective services on a regular basis or you will come home to find some other poor bastard moved in. </t> <br/> <br/> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade your Squat</t> <br/> <br/><t shadow='0' size='1'> That hovel of yours a bit sparse is it? Well you've come to the right man! </t> <br/> <br/><t shadow='0' size='1'>Some claim Iâm an extortionist, I like to think of myself as a businessman trying to make the most of this godforsaken hell hole. If you want more stuff you gotta pay for it. Simple. My prices are below. Oh donât forget, this is only your down payment. Your protective service rates will now go up... we gotta protect more stuff ya see? </t> <br/> <br/> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t> <br/> <br/><t shadow='0' size='1'> You know how that saying goes, that you should count your blessings blah blah blah. When youâre in Exile with the likes of us lot those blessings are gunna cost ya! </t> <br/> <br/><t shadow='0' size='1' >Start counting out them poptabs and letâs keep you and your posessions safe eh! </t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "House Squatting";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t><br/><br/><t shadow='0' size='1'>Decided to take the plunge and put some roots down have we? Heres the deal:</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t><br/><br/><t shadow='0' size='1'>Why are you even wasting my time? You know you cant afford this!</t> <br/> <t shadow='0' size='1'> When you have enough cash here's the deal:</t>";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_purchaseSleepingBag";
				extraButton = "Button_1";
			};
			class Button_3
			{
				name = "Upgrade Your Dwelling";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade your Dwelling</t><br/> <br/><br/><t shadow='0' size='1'> Time for some more luxurious accommodations is it? </t> <br/> <br/><t shadow='0' size='1'> Which property are you interested in upgrading today?</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade Dwelling</t><br/><br/><t shadow='0' size='1'>You know you don't even have a house squatted out yet right?</t> <br/> <t shadow='0' size='1'>Come back when you have a property!</t>";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_upgradeHouse";
				extraButton = "Button_2";
			};
			class Button_4
			{
				name = "Protective Services";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t><br/> <br/><br/><t shadow='0' size='1'>Which property do you wish to purchase protection for today?</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t> <br/> <br/><t shadow='0' size='1'> You aint got nothin worth protecting! </t> ";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_protectHouse";
				extraButton = "Button_3";
			};
		};
		class Scene_3
		{
			class Button_1
			{
				name = "Gang Pay";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> HA! You think you just get given money for free because your in prison? This aint no beauty spa prison like they have on the mainland!   </t> <br/> <br/><t shadow='0' size='1'> You gotta earn yourself your allowance. That means you gotta work for me! You do your prison duties, and I'll make sure you get your allowance.</t> ";
				body2 = "";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_gangAllowanceChk";
				extraButton = "";
			};
			class Button_2
			{
				name = "Collect Pay";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> I aint got nothin for ya, you pathetic excuse for a human being! </t> ";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> A hard worker I see! Good to see that some of you scum know ur place! Now let me see what Iâve got for yaâ¦  </t> ";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_gangAllowance";
				extraButton = "Button_4";
			};
		};
		class Scene_4
		{
			class Button_1
			{
				name = "Got any Work?";
				body ="<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Got any work for me?</t><br/><br/><t shadow='0' size='1'>You dont look very trustworthy to me! Maybe when you have earnt my trust I will have something for you!</t>";
				body2 = "";
				action = ""; 
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "PURCHASE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onPurchaseTerritoryButtonClick;";
		};
		class Button_2
		{
			name = "UPGRADE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onUpgradeTerritoryButtonClick";
		};
		class Button_3
		{
			name = "PAY HERE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onProtectTerritoryButtonClick;";
		};
		class Button_4
		{
			name = "COLLECT";
			action = "call ExileLifeClient_system_allowance_gangAllowanceWithdrawalRequest";
		};
	};
};
class ExileLife_Cartel_QuarterMaster_JobForPerson
{
	title = "JUAN, THE CARTEL EL JEFE";
	onLoad = "";
	tradersgang = "Cartel";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Who Am I?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Who am I</t> <br/> <br/><t shadow='0' size='1'> You cons are a nosy bunch arenât ya?   </t> <br/> <br/><t shadow='0' size='1'> Well since ya asked, they sent me here as part of TAP after the previous guy got himself shivved.  He got caught playinâ the Cartel off against the Yakuza. Idiot liked to talk about himself too much, if ya know what I mean.</t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "House Squatting";
				body = "";
				body2 = "";
				action = "Scene_2";
			};
			class Button_4
			{
				name = "Gang Pay";
				body = "";
				body2 = "";
				action = "Scene_3";
			};
			class Button_5
			{
				name = "Got any work?";
				body = "";
				body2 = "";
				action = "Scene_4";
			};
		};
		class Scene_2
		{
			class Button_1
			{
				name = "Info";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t> <br/> <br/> <br/> <t shadow='0' size='1'> So you want to claim a house do ya? Well thatâs gunna cost! </t> <br/> <br/><t shadow='0' size='1'> First you gotta pay me! Thatâs right, You pay me and I'll give you a sleeping bag to go pick out where u wanna bunk down. Just donât expect to claim any old house, we can't ensure your protection out of this here town so pick somewhere close you can lock up at night. </t> <br/> <br/><t shadow='0' size='1'> Donât expect us to protect you for free either. This transaction only gives you a few days to settle down, we expect you to show your gratitude for our protective services on a regular basis or you will come home to find some other poor bastard moved in. </t> <br/> <br/> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade your Squat</t> <br/> <br/><t shadow='0' size='1'> That hovel of yours a bit sparse is it? Well you've come to the right man! </t> <br/> <br/><t shadow='0' size='1'>Some claim Iâm an extortionist, I like to think of myself as a businessman trying to make the most of this godforsaken hell hole. If you want more stuff you gotta pay for it. Simple. My prices are below. Oh donât forget, this is only your down payment. Your protective service rates will now go up... we gotta protect more stuff ya see? </t> <br/> <br/> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t> <br/> <br/><t shadow='0' size='1'> You know how that saying goes, that you should count your blessings blah blah blah. When youâre in Exile with the likes of us lot those blessings are gunna cost ya! </t> <br/> <br/><t shadow='0' size='1' >Start counting out them poptabs and letâs keep you and your posessions safe eh! </t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "House Squatting";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t><br/><br/><t shadow='0' size='1'>Decided to take the plunge and put some roots down have we? Heres the deal:</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t><br/><br/><t shadow='0' size='1'>Why are you even wasting my time? You know you cant afford this!</t> <br/> <t shadow='0' size='1'> When you have enough cash here's the deal:</t>";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_purchaseSleepingBag";
				extraButton = "Button_1";
			};
			class Button_3
			{
				name = "Upgrade Your Dwelling";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade your Dwelling</t><br/> <br/><br/><t shadow='0' size='1'> Time for some more luxurious accommodations is it? </t> <br/> <br/><t shadow='0' size='1'> Which property are you interested in upgrading today?</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade Dwelling</t><br/><br/><t shadow='0' size='1'>You know you don't even have a house squatted out yet right?</t> <br/> <t shadow='0' size='1'>Come back when you have a property!</t>";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_upgradeHouse";
				extraButton = "Button_2";
			};
			class Button_4
			{
				name = "Protective Services";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t><br/> <br/><br/><t shadow='0' size='1'>Which property do you wish to purchase protection for today?</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t> <br/> <br/><t shadow='0' size='1'> You aint got nothin worth protecting! </t> ";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_protectHouse";
				extraButton = "Button_3";
			};
		};
		class Scene_3
		{
			class Button_1
			{
				name = "Gang Pay";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> HA! You think you just get given money for free because your in prison? This aint no beauty spa prison like they have on the mainland!   </t> <br/> <br/><t shadow='0' size='1'> You gotta earn yourself your allowance. That means you gotta work for me! You do your prison duties, and I'll make sure you get your allowance.</t> ";
				body2 = "";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_gangAllowanceChk";
				extraButton = "";
			};
			class Button_2
			{
				name = "Collect Pay";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> I aint got nothin for ya, you pathetic excuse for a human being! </t> ";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> A hard worker I see! Good to see that some of you scum know ur place! Now let me see what Iâve got for yaâ¦  </t> ";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_gangAllowance";
				extraButton = "Button_4";
			};
		};
		class Scene_4
		{
			class Button_1
			{
				name = "Got any Work?";
				body ="<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Got any work for me?</t><br/><br/><t shadow='0' size='1'>You dont look very trustworthy to me! Maybe when you have earnt my trust I will have something for you!</t>";
				body2 = "";
				action = ""; 
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "PURCHASE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onPurchaseTerritoryButtonClick;";
		};
		class Button_2
		{
			name = "UPGRADE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onUpgradeTerritoryButtonClick";
		};
		class Button_3
		{
			name = "PAY HERE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onProtectTerritoryButtonClick;";
		};
		class Button_4
		{
			name = "COLLECT";
			action = "call ExileLifeClient_system_allowance_gangAllowanceWithdrawalRequest";
		};
	};
};
class ExileLife_Cartel_QuarterMaster_JobNotForPerson
{
	title = "JUAN, THE CARTEL EL JEFE";
	onLoad = "";
	tradersgang = "Cartel";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Who Am I?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Who am I</t> <br/> <br/><t shadow='0' size='1'> You cons are a nosy bunch arenât ya?   </t> <br/> <br/><t shadow='0' size='1'> Well since ya asked, they sent me here as part of TAP after the previous guy got himself shivved.  He got caught playinâ the Cartel off against the Yakuza. Idiot liked to talk about himself too much, if ya know what I mean.</t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "House Squatting";
				body = "";
				body2 = "";
				action = "Scene_2";
			};
			class Button_4
			{
				name = "Gang Pay";
				body = "";
				body2 = "";
				action = "Scene_3";
			};
			class Button_5
			{
				name = "Got any work?";
				body = "";
				body2 = "";
				action = "Scene_4";
			};
		};
		class Scene_2
		{
			class Button_1
			{
				name = "Info";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t> <br/> <br/> <br/> <t shadow='0' size='1'> So you want to claim a house do ya? Well thatâs gunna cost! </t> <br/> <br/><t shadow='0' size='1'> First you gotta pay me! Thatâs right, You pay me and I'll give you a sleeping bag to go pick out where u wanna bunk down. Just donât expect to claim any old house, we can't ensure your protection out of this here town so pick somewhere close you can lock up at night. </t> <br/> <br/><t shadow='0' size='1'> Donât expect us to protect you for free either. This transaction only gives you a few days to settle down, we expect you to show your gratitude for our protective services on a regular basis or you will come home to find some other poor bastard moved in. </t> <br/> <br/> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade your Squat</t> <br/> <br/><t shadow='0' size='1'> That hovel of yours a bit sparse is it? Well you've come to the right man! </t> <br/> <br/><t shadow='0' size='1'>Some claim Iâm an extortionist, I like to think of myself as a businessman trying to make the most of this godforsaken hell hole. If you want more stuff you gotta pay for it. Simple. My prices are below. Oh donât forget, this is only your down payment. Your protective service rates will now go up... we gotta protect more stuff ya see? </t> <br/> <br/> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t> <br/> <br/><t shadow='0' size='1'> You know how that saying goes, that you should count your blessings blah blah blah. When youâre in Exile with the likes of us lot those blessings are gunna cost ya! </t> <br/> <br/><t shadow='0' size='1' >Start counting out them poptabs and letâs keep you and your posessions safe eh! </t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "House Squatting";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t><br/><br/><t shadow='0' size='1'>Decided to take the plunge and put some roots down have we? Heres the deal:</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t><br/><br/><t shadow='0' size='1'>Why are you even wasting my time? You know you cant afford this!</t> <br/> <t shadow='0' size='1'> When you have enough cash here's the deal:</t>";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_purchaseSleepingBag";
				extraButton = "Button_1";
			};
			class Button_3
			{
				name = "Upgrade Your Dwelling";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade your Dwelling</t><br/> <br/><br/><t shadow='0' size='1'> Time for some more luxurious accommodations is it? </t> <br/> <br/><t shadow='0' size='1'> Which property are you interested in upgrading today?</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade Dwelling</t><br/><br/><t shadow='0' size='1'>You know you don't even have a house squatted out yet right?</t> <br/> <t shadow='0' size='1'>Come back when you have a property!</t>";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_upgradeHouse";
				extraButton = "Button_2";
			};
			class Button_4
			{
				name = "Protective Services";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t><br/> <br/><br/><t shadow='0' size='1'>Which property do you wish to purchase protection for today?</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t> <br/> <br/><t shadow='0' size='1'> You aint got nothin worth protecting! </t> ";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_protectHouse";
				extraButton = "Button_3";
			};
		};
		class Scene_3
		{
			class Button_1
			{
				name = "Gang Pay";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> HA! You think you just get given money for free because your in prison? This aint no beauty spa prison like they have on the mainland!   </t> <br/> <br/><t shadow='0' size='1'> You gotta earn yourself your allowance. That means you gotta work for me! You do your prison duties, and I'll make sure you get your allowance.</t> ";
				body2 = "";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_gangAllowanceChk";
				extraButton = "";
			};
			class Button_2
			{
				name = "Collect Pay";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> I aint got nothin for ya, you pathetic excuse for a human being! </t> ";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> A hard worker I see! Good to see that some of you scum know ur place! Now let me see what Iâve got for yaâ¦  </t> ";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_gangAllowance";
				extraButton = "Button_4";
			};
		};
		class Scene_4
		{
			class Button_1
			{
				name = "Got any Work?";
				body ="<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Got any work for me?</t><br/><br/><t shadow='0' size='1'>You dont look very trustworthy to me! Maybe when you have earnt my trust I will have something for you!</t>";
				body2 = "";
				action = ""; 
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "PURCHASE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onPurchaseTerritoryButtonClick;";
		};
		class Button_2
		{
			name = "UPGRADE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onUpgradeTerritoryButtonClick";
		};
		class Button_3
		{
			name = "PAY HERE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onProtectTerritoryButtonClick;";
		};
		class Button_4
		{
			name = "COLLECT";
			action = "call ExileLifeClient_system_allowance_gangAllowanceWithdrawalRequest";
		};
	};
};
class ExileLife_Cartel_Recruiter
{
	title = "DIEGO, THE CARTEL RECRUITER";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Who are you?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Who am I</t> <br/> <br/><t shadow='0' size='1'> If you need to ask me who, what, where or when I am, then you're in the wrong place. Stop wasting my time and move along you piece of mierda!</t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "Can I Join?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Can I join?</t> <br/> <br/> <br/> <t shadow='0' size='1'> You think you have what it takes to join the Cartel, amigo? You see the problem with that is, I don't know you or anything about you. You could be a Pinche pendejo for all know. </t> <br/><br/><t>We have a pretty strict recruitment policy, with three requirements.</t><br/><t>NÃºmero uno: we don't take beggars. You thought you could find the love and protection of a new family for free? Think again. </t><br/><t>NÃºmero dos: we don't take nobodies. You've gotta have a certain level of respect to join us. </t><br/><t>NÃºmero tres: we don't take idiots. You have to pass the initiation to get in, and let me tell you, it's no simple task. </t><br/><br/><t>The jefe decides how much money and respect you need to join. He can change the requirements at any time so its best I give HQ a call and find out what you need. </t><br/> ";
				body2 = "";
				action = "";
				extraButton = "Button_1";				
			};
			class Button_3
			{
				name = "I want to Join!";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Sign me up!</t> <br/> <br/><t shadow='0' size='1'> Like I said before, the jefe can change the cost of joining at any time. You better have enough money and respect or I'll have to give you one hell of a beating for wasting my time! </t> <br/> <t shadow='0' size='1'> If you have all that and you think you're up for the challenge, then by all means let's see what you got, amigo! </t> ";
				body2 = "";
				action = "";
				extraButton = "Button_2";				
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "CALL";
			action = " 'Cartel' call ExileLifeClient_gui_gang_recruiter_event_onCallGangButtonClick;";
		};		
		class Button_2
		{
			name = "JOIN";
			action = " 'cartel' call ExileLifeClient_gui_gang_recruiter_event_onJoinGangButtonClick;";
		};
	};
};
class ExileLife_Cartel_Recruiter_CompletingJobForPerson
{
	title = "DIEGO, THE CARTEL RECRUITER";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Join the Cartel";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Join the Cartel</t> <br/> <br/> <br/> <t shadow='0' size='1'> You're back are you? </t> <br/> <br/><t shadow='0' size='1'> You better have finished your mission! </t> ";
				body2 = "";
				action = "";
				extraButton = "Button_1";
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "Job Done";
			action = " 'cartel' call ExileLifeClient_gui_gang_recruiter_event_onCompleteJoinGangButtonClick;";
		};
	};
};
class ExileLife_Cartel_Recruiter_JobForPerson
{
	title = "DIEGO, THE CARTEL RECRUITER";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Join the Cartel";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Join the Cartel</t> <br/> <br/> <br/> <t shadow='0' size='1'> You're back are you? You think I don't know what you've been up to? Vete a la mierda!</t> <br/> <br/><t shadow='0' size='1'> I better not see you again until you've finished the job!</t> ";
				body2 = "";
				action = "";
			};
		};
	};
	class Extras
	{
	};
};
class ExileLife_Cartel_Recruiter_JobNotForPerson
{
	title = "DIEGO, THE CARTEL RECRUITER";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Who are you?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Who am I</t> <br/> <br/><t shadow='0' size='1'> If you need to ask me who, what, where or when I am, then you're in the wrong place. Stop wasting my time and move along you piece of mierda!</t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "Can I be a medic?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Can I join?</t> <br/> <br/> <br/> <t shadow='0' size='1'> Only Murderers have the required skillset to be a medic! </t> <br/><br/><t>So many hours spent intimately familiarising themselves with their victims, keeping them dangling on the precipice of death. Only allowing them to die when they so desire. </t><br/><br/><t>Once you sign onto the roster, jobs will be sent directly to your xm8 that you can choose to accept/decline. </t><br/><t> Should a victim stop fighting to hold onto life before you arrive you will still be paid for your services. BUT... should they die by no fault of their own, and you fail to reach them in time, your reputation will suffer! </t><br/> ";
				body2 = "";
				action = "";
			};
			class Button_3
			{
				name = "I want to join!";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Sign me up!</t> <br/> <br/><t shadow='0' size='1'> It looks like you're still in the middle of another mission. Once you've completed that job, come back and I'll hook you up. </t> ";
				body2 = "";
				action = "";
				extraButton = "Button_1";
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "CALL";
			action = " 'Cartel' call ExileLifeClient_gui_gang_recruiter_event_onCallGangButtonClick;";
		};
	};
};
class ExileLife_Cartel_Medic
{
	title = "NICOLAS, THE CARTEL MEDIC";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Who are you?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Who am I</t> <br/> <br/><t shadow='0' size='1'> If you need to ask me who, what, where or when I am, then you're in the wrong place. Stop wasting my time and move along you piece of mierda!</t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "Can I be a medic?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Can I join?</t> <br/> <br/> <br/> <t shadow='0' size='1'> Only Murderers have the required skillset to be a medic! </t> <br/><br/><t>So many hours spent intimately familiarising themselves with their victims, keeping them dangling on the precipice of death. Only allowing them to die when they so desire. </t><br/><br/><t>Once you sign onto the roster, jobs will be sent directly to your xm8 that you can choose to accept/decline. The higher your healer skill rank, the earlier you will get a job alert! </t><br/><t> Should a victim stop fighting to hold onto life before you arrive you will still be paid for your services. BUT... should they die by no fault of their own, and you fail to reach them in time, your reputation will suffer! </t><br/> ";
				body2 = "";
				action = "";
			};
			class Button_3
			{
				name = "Join the Roster!";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Sign me up!</t> <br/> <br/><t shadow='0' size='1'> You better have the skills or I'll have to give you one hell of a beating for wasting my time! </t> <br/> <t shadow='0' size='1'> If you have all that and you think you're up for the challenge, then by all means let's see what you got, amigo! </t> ";
				body2 = "";
				action = "";
				extraButton = "Button_1";
			};
			class Button_4
			{
				name = "Leave the Roster!";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Leave the Roster!</t> <br/> <br/><t shadow='0' size='1'>Don't want to be on the Roster anymore? No problem.</t> ";
				body2 = "";
				action = "";
				extraButton = "Button_2";
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "JOIN";
			action = " 2 call ExileLifeClient_gui_gang_medic_event_onMedicRosterButtonClick;";
		};
		class Button_2
		{
			name = "LEAVE";
			action = " 2 call ExileLifeClient_gui_gang_medic_event_onMedicRosterButtonLeaveClick;";
		};
	};
};
class ExileLife_Syndicate_QuarterMaster
{
	title = "REGGIE, THE SYNDICATE TREASURER";
	onLoad = "";
	tradersgang = "Syndicate";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Who Am I?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Who am I</t> <br/> <br/><t shadow='0' size='1'> You cons are a nosy bunch arenât ya?   </t> <br/> <br/><t shadow='0' size='1'> Well since ya asked, they sent me here as part of TAP after the previous guy got himself shivved.  He got caught playinâ the Cartel off against the Yakuza. Idiot liked to talk about himself too much, if ya know what I mean.</t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "House Squatting";
				body = "";
				body2 = "";
				action = "Scene_2";
			};
			class Button_4
			{
				name = "Gang Pay";
				body = "";
				body2 = "";
				action = "Scene_3";
			};
			class Button_5
			{
				name = "Got any work?";
				body = "";
				body2 = "";
				action = "Scene_4";
			};
		};
		class Scene_2
		{
			class Button_1
			{
				name = "Info";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t> <br/> <br/> <br/> <t shadow='0' size='1'> So you want to claim a house do ya? Well thatâs gunna cost! </t> <br/> <br/><t shadow='0' size='1'> First you gotta pay me! Thatâs right, You pay me and I'll give you a sleeping bag to go pick out where u wanna bunk down. Just donât expect to claim any old house, we can't ensure your protection out of this here town so pick somewhere close you can lock up at night. </t> <br/> <br/><t shadow='0' size='1'> Donât expect us to protect you for free either. This transaction only gives you a few days to settle down, we expect you to show your gratitude for our protective services on a regular basis or you will come home to find some other poor bastard moved in. </t> <br/> <br/> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade your Squat</t> <br/> <br/><t shadow='0' size='1'> That hovel of yours a bit sparse is it? Well you've come to the right man! </t> <br/> <br/><t shadow='0' size='1'>Some claim Iâm an extortionist, I like to think of myself as a businessman trying to make the most of this godforsaken hell hole. If you want more stuff you gotta pay for it. Simple. My prices are below. Oh donât forget, this is only your down payment. Your protective service rates will now go up... we gotta protect more stuff ya see? </t> <br/> <br/> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t> <br/> <br/><t shadow='0' size='1'> You know how that saying goes, that you should count your blessings blah blah blah. When youâre in Exile with the likes of us lot those blessings are gunna cost ya! </t> <br/> <br/><t shadow='0' size='1' >Start counting out them poptabs and letâs keep you and your posessions safe eh! </t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "House Squatting";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t><br/><br/><t shadow='0' size='1'>Decided to take the plunge and put some roots down have we? Heres the deal:</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t><br/><br/><t shadow='0' size='1'>Why are you even wasting my time? You know you cant afford this!</t> <br/> <t shadow='0' size='1'> When you have enough cash here's the deal:</t>";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_purchaseSleepingBag";
				extraButton = "Button_1";
			};
			class Button_3
			{
				name = "Upgrade Your Dwelling";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade your Dwelling</t><br/> <br/><br/><t shadow='0' size='1'> Time for some more luxurious accommodations is it? </t> <br/> <br/><t shadow='0' size='1'> Which property are you interested in upgrading today?</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade Dwelling</t><br/><br/><t shadow='0' size='1'>You know you don't even have a house squatted out yet right?</t> <br/> <t shadow='0' size='1'>Come back when you have a property!</t>";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_upgradeHouse";
				extraButton = "Button_2";
			};
			class Button_4
			{
				name = "Protective Services";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t><br/> <br/><br/><t shadow='0' size='1'>Which property do you wish to purchase protection for today?</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t> <br/> <br/><t shadow='0' size='1'> You aint got nothin worth protecting! </t> ";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_protectHouse";
				extraButton = "Button_3";
			};
		};
		class Scene_3
		{
			class Button_1
			{
				name = "Gang Pay";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> HA! You think you just get given money for free because your in prison? This aint no beauty spa prison like they have on the mainland!   </t> <br/> <br/><t shadow='0' size='1'> You gotta earn yourself your allowance. That means you gotta work for me! You do your prison duties, and I'll make sure you get your allowance.</t> ";
				body2 = "";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_gangAllowanceChk";
				extraButton = "";
			};
			class Button_2
			{
				name = "Collect Pay";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> I aint got nothin for ya, you pathetic excuse for a human being! </t> ";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> A hard worker I see! Good to see that some of you scum know ur place! Now let me see what Iâve got for yaâ¦  </t> ";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_gangAllowance";
				extraButton = "Button_4";
			};			
		};
		class Scene_4
		{
			class Button_1
			{
				name = "Got any Work?";
				body ="<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Got any work for me?</t><br/><br/><t shadow='0' size='1'>You dont look very trustworthy to me! Maybe when you have earnt my trust I will have something for you!</t>";
				body2 = "";
				action = ""; 
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "PURCHASE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onPurchaseTerritoryButtonClick;";
		};
		class Button_2
		{
			name = "UPGRADE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onUpgradeTerritoryButtonClick";
		};
		class Button_3
		{
			name = "PAY HERE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onProtectTerritoryButtonClick;";
		};
		class Button_4
		{
			name = "COLLECT";
			action = "call ExileLifeClient_system_allowance_gangAllowanceWithdrawalRequest";
		};
	};
};
class ExileLife_Syndicate_QuarterMaster_CompletingJobForPerson
{
	title = "REGGIE, THE SYNDICATE TREASURER";
	onLoad = "";
	tradersgang = "Syndicate";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Who Am I?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Who am I</t> <br/> <br/><t shadow='0' size='1'> You cons are a nosy bunch arenât ya?   </t> <br/> <br/><t shadow='0' size='1'> Well since ya asked, they sent me here as part of TAP after the previous guy got himself shivved.  He got caught playinâ the Cartel off against the Yakuza. Idiot liked to talk about himself too much, if ya know what I mean.</t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "House Squatting";
				body = "";
				body2 = "";
				action = "Scene_2";
			};
			class Button_4
			{
				name = "Gang Pay";
				body = "";
				body2 = "";
				action = "Scene_3";
			};
			class Button_5
			{
				name = "Got any work?";
				body = "";
				body2 = "";
				action = "Scene_4";
			};
		};
		class Scene_2
		{
			class Button_1
			{
				name = "Info";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t> <br/> <br/> <br/> <t shadow='0' size='1'> So you want to claim a house do ya? Well thatâs gunna cost! </t> <br/> <br/><t shadow='0' size='1'> First you gotta pay me! Thatâs right, You pay me and I'll give you a sleeping bag to go pick out where u wanna bunk down. Just donât expect to claim any old house, we can't ensure your protection out of this here town so pick somewhere close you can lock up at night. </t> <br/> <br/><t shadow='0' size='1'> Donât expect us to protect you for free either. This transaction only gives you a few days to settle down, we expect you to show your gratitude for our protective services on a regular basis or you will come home to find some other poor bastard moved in. </t> <br/> <br/> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade your Squat</t> <br/> <br/><t shadow='0' size='1'> That hovel of yours a bit sparse is it? Well you've come to the right man! </t> <br/> <br/><t shadow='0' size='1'>Some claim Iâm an extortionist, I like to think of myself as a businessman trying to make the most of this godforsaken hell hole. If you want more stuff you gotta pay for it. Simple. My prices are below. Oh donât forget, this is only your down payment. Your protective service rates will now go up... we gotta protect more stuff ya see? </t> <br/> <br/> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t> <br/> <br/><t shadow='0' size='1'> You know how that saying goes, that you should count your blessings blah blah blah. When youâre in Exile with the likes of us lot those blessings are gunna cost ya! </t> <br/> <br/><t shadow='0' size='1' >Start counting out them poptabs and letâs keep you and your posessions safe eh! </t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "House Squatting";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t><br/><br/><t shadow='0' size='1'>Decided to take the plunge and put some roots down have we? Heres the deal:</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t><br/><br/><t shadow='0' size='1'>Why are you even wasting my time? You know you cant afford this!</t> <br/> <t shadow='0' size='1'> When you have enough cash here's the deal:</t>";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_purchaseSleepingBag";
				extraButton = "Button_1";
			};
			class Button_3
			{
				name = "Upgrade Your Dwelling";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade your Dwelling</t><br/> <br/><br/><t shadow='0' size='1'> Time for some more luxurious accommodations is it? </t> <br/> <br/><t shadow='0' size='1'> Which property are you interested in upgrading today?</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade Dwelling</t><br/><br/><t shadow='0' size='1'>You know you don't even have a house squatted out yet right?</t> <br/> <t shadow='0' size='1'>Come back when you have a property!</t>";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_upgradeHouse";
				extraButton = "Button_2";
			};
			class Button_4
			{
				name = "Protective Services";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t><br/> <br/><br/><t shadow='0' size='1'>Which property do you wish to purchase protection for today?</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t> <br/> <br/><t shadow='0' size='1'> You aint got nothin worth protecting! </t> ";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_protectHouse";
				extraButton = "Button_3";
			};
		};
		class Scene_3
		{
			class Button_1
			{
				name = "Gang Pay";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> HA! You think you just get given money for free because your in prison? This aint no beauty spa prison like they have on the mainland!   </t> <br/> <br/><t shadow='0' size='1'> You gotta earn yourself your allowance. That means you gotta work for me! You do your prison duties, and I'll make sure you get your allowance.</t> ";
				body2 = "";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_gangAllowanceChk";
				extraButton = "";
			};
			class Button_2
			{
				name = "Collect Pay";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> I aint got nothin for ya, you pathetic excuse for a human being! </t> ";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> A hard worker I see! Good to see that some of you scum know ur place! Now let me see what Iâve got for yaâ¦  </t> ";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_gangAllowance";
				extraButton = "Button_4";
			};
		};
		class Scene_4
		{
			class Button_1
			{
				name = "Got any Work?";
				body ="<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Got any work for me?</t><br/><br/><t shadow='0' size='1'>You dont look very trustworthy to me! Maybe when you have earnt my trust I will have something for you!</t>";
				body2 = "";
				action = ""; 
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "PURCHASE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onPurchaseTerritoryButtonClick;";
		};
		class Button_2
		{
			name = "UPGRADE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onUpgradeTerritoryButtonClick";
		};
		class Button_3
		{
			name = "PAY HERE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onProtectTerritoryButtonClick;";
		};
		class Button_4
		{
			name = "COLLECT";
			action = "call ExileLifeClient_system_allowance_gangAllowanceWithdrawalRequest";
		};
	};
};
class ExileLife_Syndicate_QuarterMaster_JobForPerson
{
	title = "REGGIE, THE SYNDICATE TREASURER";
	onLoad = "";
	tradersgang = "Syndicate";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Who Am I?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Who am I</t> <br/> <br/><t shadow='0' size='1'> You cons are a nosy bunch arenât ya?   </t> <br/> <br/><t shadow='0' size='1'> Well since ya asked, they sent me here as part of TAP after the previous guy got himself shivved.  He got caught playinâ the Cartel off against the Yakuza. Idiot liked to talk about himself too much, if ya know what I mean.</t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "House Squatting";
				body = "";
				body2 = "";
				action = "Scene_2";
			};
			class Button_4
			{
				name = "Gang Pay";
				body = "";
				body2 = "";
				action = "Scene_3";
			};
			class Button_5
			{
				name = "Got any work?";
				body = "";
				body2 = "";
				action = "Scene_4";
			};
		};
		class Scene_2
		{
			class Button_1
			{
				name = "Info";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t> <br/> <br/> <br/> <t shadow='0' size='1'> So you want to claim a house do ya? Well thatâs gunna cost! </t> <br/> <br/><t shadow='0' size='1'> First you gotta pay me! Thatâs right, You pay me and I'll give you a sleeping bag to go pick out where u wanna bunk down. Just donât expect to claim any old house, we can't ensure your protection out of this here town so pick somewhere close you can lock up at night. </t> <br/> <br/><t shadow='0' size='1'> Donât expect us to protect you for free either. This transaction only gives you a few days to settle down, we expect you to show your gratitude for our protective services on a regular basis or you will come home to find some other poor bastard moved in. </t> <br/> <br/> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade your Squat</t> <br/> <br/><t shadow='0' size='1'> That hovel of yours a bit sparse is it? Well you've come to the right man! </t> <br/> <br/><t shadow='0' size='1'>Some claim Iâm an extortionist, I like to think of myself as a businessman trying to make the most of this godforsaken hell hole. If you want more stuff you gotta pay for it. Simple. My prices are below. Oh donât forget, this is only your down payment. Your protective service rates will now go up... we gotta protect more stuff ya see? </t> <br/> <br/> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t> <br/> <br/><t shadow='0' size='1'> You know how that saying goes, that you should count your blessings blah blah blah. When youâre in Exile with the likes of us lot those blessings are gunna cost ya! </t> <br/> <br/><t shadow='0' size='1' >Start counting out them poptabs and letâs keep you and your posessions safe eh! </t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "House Squatting";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t><br/><br/><t shadow='0' size='1'>Decided to take the plunge and put some roots down have we? Heres the deal:</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t><br/><br/><t shadow='0' size='1'>Why are you even wasting my time? You know you cant afford this!</t> <br/> <t shadow='0' size='1'> When you have enough cash here's the deal:</t>";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_purchaseSleepingBag";
				extraButton = "Button_1";
			};
			class Button_3
			{
				name = "Upgrade Your Dwelling";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade your Dwelling</t><br/> <br/><br/><t shadow='0' size='1'> Time for some more luxurious accommodations is it? </t> <br/> <br/><t shadow='0' size='1'> Which property are you interested in upgrading today?</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade Dwelling</t><br/><br/><t shadow='0' size='1'>You know you don't even have a house squatted out yet right?</t> <br/> <t shadow='0' size='1'>Come back when you have a property!</t>";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_upgradeHouse";
				extraButton = "Button_2";
			};
			class Button_4
			{
				name = "Protective Services";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t><br/> <br/><br/><t shadow='0' size='1'>Which property do you wish to purchase protection for today?</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t> <br/> <br/><t shadow='0' size='1'> You aint got nothin worth protecting! </t> ";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_protectHouse";
				extraButton = "Button_3";
			};
		};
		class Scene_3
		{
			class Button_1
			{
				name = "Gang Pay";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> HA! You think you just get given money for free because your in prison? This aint no beauty spa prison like they have on the mainland!   </t> <br/> <br/><t shadow='0' size='1'> You gotta earn yourself your allowance. That means you gotta work for me! You do your prison duties, and I'll make sure you get your allowance.</t> ";
				body2 = "";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_gangAllowanceChk";
				extraButton = "";
			};
			class Button_2
			{
				name = "Collect Pay";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> I aint got nothin for ya, you pathetic excuse for a human being! </t> ";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> A hard worker I see! Good to see that some of you scum know ur place! Now let me see what Iâve got for yaâ¦  </t> ";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_gangAllowance";
				extraButton = "Button_4";
			};
		};
		class Scene_4
		{
			class Button_1
			{
				name = "Got any Work?";
				body ="<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Got any work for me?</t><br/><br/><t shadow='0' size='1'>You dont look very trustworthy to me! Maybe when you have earnt my trust I will have something for you!</t>";
				body2 = "";
				action = ""; 
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "PURCHASE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onPurchaseTerritoryButtonClick;";
		};
		class Button_2
		{
			name = "UPGRADE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onUpgradeTerritoryButtonClick";
		};
		class Button_3
		{
			name = "PAY HERE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onProtectTerritoryButtonClick;";
		};
		class Button_4
		{
			name = "COLLECT";
			action = "call ExileLifeClient_system_allowance_gangAllowanceWithdrawalRequest";
		};
	};
};
class ExileLife_Syndicate_QuarterMaster_JobNotForPerson
{
	title = "REGGIE, THE SYNDICATE TREASURER";
	onLoad = "";
	tradersgang = "Syndicate";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Who Am I?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Who am I</t> <br/> <br/><t shadow='0' size='1'> You cons are a nosy bunch arenât ya?   </t> <br/> <br/><t shadow='0' size='1'> Well since ya asked, they sent me here as part of TAP after the previous guy got himself shivved.  He got caught playinâ the Cartel off against the Yakuza. Idiot liked to talk about himself too much, if ya know what I mean.</t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "House Squatting";
				body = "";
				body2 = "";
				action = "Scene_2";
			};
			class Button_4
			{
				name = "Gang Pay";
				body = "";
				body2 = "";
				action = "Scene_3";
			};
			class Button_5
			{
				name = "Got any work?";
				body = "";
				body2 = "";
				action = "Scene_4";
			};
		};
		class Scene_2
		{
			class Button_1
			{
				name = "Info";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t> <br/> <br/> <br/> <t shadow='0' size='1'> So you want to claim a house do ya? Well thatâs gunna cost! </t> <br/> <br/><t shadow='0' size='1'> First you gotta pay me! Thatâs right, You pay me and I'll give you a sleeping bag to go pick out where u wanna bunk down. Just donât expect to claim any old house, we can't ensure your protection out of this here town so pick somewhere close you can lock up at night. </t> <br/> <br/><t shadow='0' size='1'> Donât expect us to protect you for free either. This transaction only gives you a few days to settle down, we expect you to show your gratitude for our protective services on a regular basis or you will come home to find some other poor bastard moved in. </t> <br/> <br/> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade your Squat</t> <br/> <br/><t shadow='0' size='1'> That hovel of yours a bit sparse is it? Well you've come to the right man! </t> <br/> <br/><t shadow='0' size='1'>Some claim Iâm an extortionist, I like to think of myself as a businessman trying to make the most of this godforsaken hell hole. If you want more stuff you gotta pay for it. Simple. My prices are below. Oh donât forget, this is only your down payment. Your protective service rates will now go up... we gotta protect more stuff ya see? </t> <br/> <br/> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t> <br/> <br/><t shadow='0' size='1'> You know how that saying goes, that you should count your blessings blah blah blah. When youâre in Exile with the likes of us lot those blessings are gunna cost ya! </t> <br/> <br/><t shadow='0' size='1' >Start counting out them poptabs and letâs keep you and your posessions safe eh! </t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "House Squatting";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t><br/><br/><t shadow='0' size='1'>Decided to take the plunge and put some roots down have we? Heres the deal:</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>House Squatting</t><br/><br/><t shadow='0' size='1'>Why are you even wasting my time? You know you cant afford this!</t> <br/> <t shadow='0' size='1'> When you have enough cash here's the deal:</t>";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_purchaseSleepingBag";
				extraButton = "Button_1";
			};
			class Button_3
			{
				name = "Upgrade Your Dwelling";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade your Dwelling</t><br/> <br/><br/><t shadow='0' size='1'> Time for some more luxurious accommodations is it? </t> <br/> <br/><t shadow='0' size='1'> Which property are you interested in upgrading today?</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Upgrade Dwelling</t><br/><br/><t shadow='0' size='1'>You know you don't even have a house squatted out yet right?</t> <br/> <t shadow='0' size='1'>Come back when you have a property!</t>";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_upgradeHouse";
				extraButton = "Button_2";
			};
			class Button_4
			{
				name = "Protective Services";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t><br/> <br/><br/><t shadow='0' size='1'>Which property do you wish to purchase protection for today?</t>";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Protective Services</t> <br/> <br/><t shadow='0' size='1'> You aint got nothin worth protecting! </t> ";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_protectHouse";
				extraButton = "Button_3";
			};
		};
		class Scene_3
		{
			class Button_1
			{
				name = "Gang Pay";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> HA! You think you just get given money for free because your in prison? This aint no beauty spa prison like they have on the mainland!   </t> <br/> <br/><t shadow='0' size='1'> You gotta earn yourself your allowance. That means you gotta work for me! You do your prison duties, and I'll make sure you get your allowance.</t> ";
				body2 = "";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_gangAllowanceChk";
				extraButton = "";
			};
			class Button_2
			{
				name = "Collect Pay";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> I aint got nothin for ya, you pathetic excuse for a human being! </t> ";
				body2 = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Prisoners Allowance</t> <br/> <br/><t shadow='0' size='1'> A hard worker I see! Good to see that some of you scum know ur place! Now let me see what Iâve got for yaâ¦  </t> ";
				action = "ExileLifeClient_gui_jobs_trader_quarterMaster_gangAllowance";
				extraButton = "Button_4";
			};
		};
		class Scene_4
		{
			class Button_1
			{
				name = "Got any Work?";
				body ="<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='1.8'>Got any work for me?</t><br/><br/><t shadow='0' size='1'>You dont look very trustworthy to me! Maybe when you have earnt my trust I will have something for you!</t>";
				body2 = "";
				action = ""; 
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "PURCHASE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onPurchaseTerritoryButtonClick;";
		};
		class Button_2
		{
			name = "UPGRADE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onUpgradeTerritoryButtonClick";
		};
		class Button_3
		{
			name = "PAY HERE";
			action = "call ExileLifeClient_gui_jobs_trader_quarterMaster_event_onProtectTerritoryButtonClick;";
		};
		class Button_4
		{
			name = "COLLECT";
			action = "call ExileLifeClient_system_allowance_gangAllowanceWithdrawalRequest";
		};
	};
};
class ExileLife_Syndicate_Recruiter
{
	title = "BILLY, THE SYNDICATE RECRUITER";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Who are you?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Who am I</t> <br/> <br/><t shadow='0' size='1'> You really dunno hoo I am? I ain't gonna stand for that! Stop wastin' my time and move along, shithead!</t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "Can I join?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Can I join?</t> <br/> <br/> <br/> <t shadow='0' size='1'> You fink you got the balls ter join the Syndicate? See, problem wiv that is, I don't know you or nuffink bout choo. You could be some half-wit good-for-nuffink snitch for all I know. </t> <br/><br/><t> Our recruitment policy's a strict bugger innit.</t><br/><t>To start wiv, we don't take no beggars. You fort you could get in fer free? Fink again. </t><br/><t>Next up, we don't take no nobodies. You gotta have a bit o' street cred ter join our lot.</t><br/><t>Last - but let me tell you it ain't the least - we don't take no idiots. You gotta pass the 'nitiation test ter get in. And it ain't as simple as givin' up a bit o' cash. </t><br/><br/><t>The guv'nor decides how much money and cred you gotta have ter join. He can change what you need at any time so best I give the guv a little call ter find out. </t><br/> ";
				body2 = "";
				action = "";
				extraButton = "Button_1";
			};
			class Button_3
			{
				name = "I want to Join!";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Sign me up!</t> <br/> <br/><t shadow='0' size='1'> Like I said before, the guv'nor can change the cost of joining at any time. You better have 'nuff money and respect or I'll have to give you one helluva beatin' for wastin' my time! </t> <br/> <t shadow='0' size='1'> If you got what choo need and you reckon you can pass our little test, then let's see what you got, mista! </t> ";
				body2 = "";
				action = "";
				extraButton = "Button_2";
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "CALL";
			action = " 'Syndicate' call ExileLifeClient_gui_gang_recruiter_event_onCallGangButtonClick;";
		};
		class Button_2
		{
			name = "JOIN";
			action = " 'Syndicate' call ExileLifeClient_gui_gang_recruiter_event_onJoinGangButtonClick;";
		};
	};
};
class ExileLife_Syndicate_Recruiter_CompletingJobForPerson
{
	title = "BILLY, THE SYNDICATE RECRUITER";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Join the Syndicate";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Join the Syndicate</t> <br/> <br/> <br/> <t shadow='0' size='1'> You back? </t> <br/> <br/><t shadow='0' size='1'> Hope you bloody well finished your mission! </t> ";
				body2 = "";
				action = "";
				extraButton = "Button_1";				
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "Job Done";
			action = " 'Syndicate' call ExileLifeClient_gui_gang_recruiter_event_onCompleteJoinGangButtonClick;";
		};
	};
};
class ExileLife_Syndicate_Recruiter_JobForPerson
{
	title = "BILLY, THE SYNDICATE RECRUITER";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Join the Syndicate";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Join the Syndicate</t> <br/> <br/> <br/> <t shadow='0' size='1'> You back, eh? What choo fink you're playin' at? Fuck off</t> <br/> <br/><t shadow='0' size='1'> I better not see you again till you've finished the job!</t> ";
				body2 = "";
				action = "";
			};
		};
	};
	class Extras
	{
	};
};
class ExileLife_Syndicate_Recruiter_JobNotForPerson
{
	title = "BILLY, THE SYNDICATE RECRUITER";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Who are you?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Who am I</t> <br/> <br/><t shadow='0' size='1'> You really dunno hoo I am? I ain't gonna stand for that! Stop wastin' my time and move along, shithead!</t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "Can I join?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Can I join?</t> <br/> <br/> <br/> <t shadow='0' size='1'> You fink you got the balls ter join the Syndicate? See, problem wiv that is, I don't know you or nuffink bout choo. You could be some half-wit good-for-nuffink snitch for all I know. </t> <br/><br/><t> Our recruitment policy's a strict bugger innit.</t><br/><t>To start wiv, we don't take no beggars. You fort you could get in fer free? Fink again. </t><br/><t>Next up, we don't take no nobodies. You gotta have a bit o' street cred ter join our lot.</t><br/><t>Last - but let me tell you it ain't the least - we don't take no idiots. You gotta pass the 'nitiation test ter get in. And it ain't as simple as givin' up a bit o' cash. </t><br/><br/><t>The guv'nor decides how much money and cred you gotta have ter join. He can change what you need at any time so best I give the guv a little call ter find out. </t><br/> ";
				body2 = "";
				action = "";
				extraButton = "Button_1";			
			};
			class Button_3
			{
				name = "I want to Join!";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Sign me up!</t> <br/> <br/><t shadow='0' size='1'> Looks like you doin' a job fer some other tosser at the moment. Come back when you're done wiv his job, then you can start on mine. </t> ";
				body2 = "";
				action = "";
				extraButton = "Button_2";
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "CALL";
			action = " 'Syndicate' call ExileLifeClient_gui_gang_recruiter_event_onCallGangButtonClick;";
		};		
	};
};
class ExileLife_Syndicate_Medic
{
	title = "FREDDIE, THE SYNDICATE MEDIC";
	onLoad = "";
	class Main
	{
		class Scene_1
		{
			class Button_1
			{
				name = "Who are you?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Who am I</t> <br/> <br/><t shadow='0' size='1'> You really dunno hoo I am? I ain't gonna stand for that! Stop wastin' my time and move along, shithead!</t> ";
				body2 = "";
				action = "";
			};
			class Button_2
			{
				name = "Can I be a medic?";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Can I join?</t> <br/> <br/> <br/> <t shadow='0' size='1'> Only Murderers have the required skillset to be a medic! </t> <br/><br/><t>So many hours spent intimately familiarising themselves with their victims, keeping them dangling on the precipice of death. Only allowing them to die when they so desire. </t><br/><br/><t>Once you sign onto the roster, jobs will be sent directly to your xm8 that you can choose to accept/decline. The higher your healer skill rank, the earlier you will get a job alert! </t><br/><t> Should a victim stop fighting to hold onto life before you arrive you will still be paid for your services. BUT... should they die by no fault of their own, and you fail to reach them in time, your reputation will suffer! </t><br/> ";
				body2 = "";
				action = "";
			};
			class Button_3
			{
				name = "Join the Roster!";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Sign me up!</t> <br/> <br/><t shadow='0' size='1'> If you got what choo need and you reckon you av' the skills, then let's see what you got, mista! </t> ";
				body2 = "";
				action = "";
				extraButton = "Button_1";
			};
			class Button_4
			{
				name = "Leave the Roster!";
				body = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t> <br/><t shadow='0' align='center' valign='middle' size='1.8'>Leave the Roster!</t> <br/> <br/><t shadow='0' size='1'>Don't want to be on the Roster anymore? No problem.</t> ";
				body2 = "";
				action = "";
				extraButton = "Button_2";
			};
		};
	};
	class Extras
	{
		class Button_1
		{
			name = "JOIN";
			action = " 2 call ExileLifeClient_gui_gang_medic_event_onMedicRosterButtonClick;";
		};
		class Button_2
		{
			name = "LEAVE";
			action = " 2 call ExileLifeClient_gui_gang_medic_event_onMedicRosterButtonLeaveClick;";
		};
	};
};
};
class CfgDifficultyPresets
{
	class Veteran;
	defaultPreset = "ExileLifeRegular";
	class ExileLifeRegular: Veteran
	{
		BleedingRate = 0.0005;
		displayName = "Regular ExileLife";
		class Options
		{
			reducedDamage = "false";
			groupIndicators = 0;
			friendlyTags = 0;
			enemyTags = 0;
			detectedMines = 0;
			commands = 0;
			waypoints = 0;
			weaponInfo = 0;
			stanceIndicator = 0;
			staminaBar = "false";
			weaponCrosshair = "false";
			visionAid = "false";
			thirdPersonView = "true";
			cameraShake = "true";
			scoreTable = "false";
			deathMessages = "false";
			vonID = "false";
			mapContent = "false";
			autoReport = "false";
			multipleSaves = "false";
		};
	};
	class ExileLifeHardcore: Veteran
	{
		BleedingRate = 0.005;
		displayName = "Hardcore ExileLife";
		class Options
		{
			reducedDamage = "false";
			groupIndicators = 0;
			friendlyTags = 0;
			enemyTags = 0;
			detectedMines = 0;
			commands = 0;
			waypoints = 0;
			weaponInfo = 0;
			stanceIndicator = 0;
			staminaBar = "false";
			weaponCrosshair = "false";
			visionAid = "false";
			thirdPersonView = "false";
			cameraShake = "true";
			scoreTable = "false";
			deathMessages = "false";
			vonID = "false";
			mapContent = "false";
			autoReport = "false";
			multipleSaves = "false";
		};
	};
};
class CfgExileDelayedActions
{
	class Abstract
	{
		duration = 10;
		abortInCombatMode = 1;
		durationFunction = "";
		skilltype = "";
		skillLevel = -1;
		animation = "";
		animationarray[] = {};
		animationType = "switchMove";
		repeatAnimation = 0;
		animationLength= 0;
		failChance = 0;
		failChance_1 = 0;
		failChance_2 = 0;
		failChance_3 = 0;
		failChance_4 = 0;
		failChance_5 = 0;
		duration_1 = 0;
		duration_2 = 0;
		duration_3 = 0;
		duration_4 = 0;
		duration_5 = 0;
		conditionFunction = "";
		completedFunction = "";
		abortedFunction = "";
		failedFunction = "";
		repeatingCheckFunction = "";
	};
	class DigHoleHoe: Abstract
	{
		duration = 10;
		skilltype = "strength";
		skillLevel = 1; 
		failChance_1 = 0;
		failChance_2 = 0;
		failChance_3 = 0;
		failChance_4 = 0;
		failChance_5 = 0;
		duration_1 = 10;
		duration_2 = 9;
		duration_3 = 8;
		duration_4 = 7;
		duration_5 = 6;
		animationType = "playActionNow";
		repeatAnimation = 9;
		animationLength= 0.8;
		animation = "GestureExileLifeHoeSwing01";
		animationSound = "exilelife_assets\sound\hoe_hit.ogg";
		completedFunction = "ExileLifeClient_object_player_action_digging";
	};
	class DigGarden: Abstract
	{
		duration = 30;
		skilltype = "strength";
		skillLevel = 1; 
		duration_1 = 20;
		duration_2 = 18;
		duration_3 = 15;
		duration_4 = 12;
		duration_5 = 10;
		animationType = "playActionNow";
		repeatAnimation = 25;
		animationLength= 0.8;
		animation = "GestureExileSledgeHammerSwing01";
		animationSound = "exilelife_assets\sound\hoe_hit.ogg";
		completedFunction = "ExileLifeClient_object_farming_digGarden";
	};
	class DoPoo: Abstract
	{
		duration = 30;
		skilltype = "speed";
		skillLevel = 1; 
		duration_1 = 20;
		duration_2 = 18;
		duration_3 = 15;
		duration_4 = 12;
		duration_5 = 10;
		completedFunction = "ExileLifeClient_action_doPoo_completed";
		abortedFunction = "ExileLifeClient_action_doPoo_aborted";
		conditionFunction = "ExileLifeClient_action_doPoo_condition";
		failedFunction = "ExileLifeClient_action_doPoo_aborted";
	};
	class LockpickHouse: Abstract
	{
		duration = 30;
		skilltype = "lockpick";
		skillLevel = 3; 
		failChance_1 = 100;
		failChance_2 = 100;
		failChance_3 = 70;
		failChance_4 = 50;
		failChance_5 = 10;
		duration_1 = 120;
		duration_2 = 100;
		duration_3 = 80;
		duration_4 = 60;
		duration_5 = 30;
		animation = "InBaseMoves_assemblingVehicleErc";
		failedFunction = "ExileLifeClient_action_lockPick_house_failed";		
		conditionFunction = "ExileLifeClient_action_lockPick_house_condition";
		completedFunction = "ExileLifeClient_action_lockPick_house_completed";
	};
	class PatchRepairVehicle: Abstract
	{
		duration = 30;
		skilltype = "repair";
		skillLevel = 1; 
		duration_1 = 50;
		duration_2 = 40;
		duration_3 = 30;
		duration_4 = 20;
		duration_5 = 10;
		animation = "Exile_Acts_RepairVehicle01_Animation01";
		conditionFunction = "ExileLifeClient_action_patchRepairVehicle_condition";
		completedFunction = "ExileLifeClient_action_patchRepairVehicle_completed";
	};
	class RepairVehicle: Abstract
	{
		duration = 30;
		skilltype = "repair";
		skillLevel = 1; 
		duration_1 = 70;
		duration_2 = 60;
		duration_3 = 50;
		duration_4 = 40;
		duration_5 = 30;
		animation = "Exile_Acts_RepairVehicle01_Animation01";
		conditionFunction = "ExileClient_action_RepairVehicle_condition";
		completedFunction = "ExileClient_action_RepairVehicle_completed";
	};
	class HotwireVehicle: Abstract
	{
		duration = 40;
		skilltype = "lockpick";
		skillLevel = 1; 
		failChance_1 = 80;
		failChance_2 = 60;
		failChance_3 = 50;
		failChance_4 = 30;
		failChance_5 = 1;
		duration_1 = 80;
		duration_2 = 60;
		duration_3 = 40;
		duration_4 = 30;
		duration_5 = 20;
		animation = "Exile_Acts_RepairVehicle01_Animation01";
		conditionFunction = "ExileClient_action_hotwireVehicle_condition";
		completedFunction = "ExileClient_action_hotwireVehicle_completed";
		failedFunction = "ExileClient_action_hotwireVehicle_failed";
	};
	class StealFlag: Abstract
	{
		duration = 60;
		abortInCombatMode = 0;
		durationFunction = "ExileClient_action_stealFlag_duration";
		animation = "Exile_Acts_RepairVehicle01_Animation01";
		conditionFunction = "ExileClient_action_stealFlag_condition";
		completedFunction = "ExileClient_action_stealFlag_completed";
	};
	class HideBody: Abstract
	{
		duration = 10;
		animation = "Exile_Shovel_Dig01";
		conditionFunction = "ExileClient_action_HideBody_condition";
		completedFunction = "ExileClient_action_HideBody_completed";
	};
	class PlantChargeWood: Abstract
	{
		duration = 180;
		abortInCombatMode = 0;
		animation = "Exile_Acts_RepairVehicle01_Animation01"; 
		conditionFunction = "ExileClient_action_breaching_condition";
		completedFunction = "ExileClient_action_breaching_completed";
		failedFunction = "ExileClient_action_breaching_failed";
		abortedFunction = "ExileClient_action_breaching_aborted";
	};
	class PlantChargeMetal: PlantChargeWood
	{
		duration = 300;
	};
	class PlantChargeConcrete: PlantChargeWood
	{
		duration = 420;
	};
	class PlantChargeCache: PlantChargeWood
	{
		duration = 40;
		skilltype = "repair";
		skillLevel = 1; 
		duration_1 = 50;
		duration_2 = 40;
		duration_3 = 30;
		duration_4 = 20;
		duration_5 = 10;
		animation = "Exile_Acts_RepairVehicle01_Animation01";
	};
	class RepairConstruction : Abstract
	{
		animation = "Exile_Acts_RepairVehicle01_Animation01";
		durationFunction = "ExileClient_action_repairConstruction_duration";
		conditionFunction = "ExileClient_action_repairConstruction_condition";
		completedFunction = "ExileClient_action_repairConstruction_completed";
	};
	class RefuelContainer: Abstract
	{
		duration = 10;
		animation = "Acts_AidlPercMstpSloWWpstDnon_warmup_2_loop";
		durationFunction = "ExileLifeClient_action_refuelContainer_duration";
		conditionFunction = "ExileLifeClient_action_refuelContainer_condition";
		completedFunction = "ExileLifeClient_action_refuelContainer_completed";
		abortedFunction = "ExileLifeClient_action_refuelContainer_aborted";
	};
	class RefuelTanker: Abstract
	{
		duration = 30;
		animation = "Acts_AidlPercMstpSloWWpstDnon_warmup_2_loop";
		conditionFunction = "ExileLifeClient_action_refuelTanker_condition";
		completedFunction = "ExileLifeClient_action_refuelTanker_completed";
	};
	class collectPrisonOre: Abstract
	{
		duration = 60;
		animation = "";
		conditionFunction = "ExileLifeClient_action_collectPrisonOre_condition";
		completedFunction = "ExileLifeClient_action_collectPrisonOre_completed";
	};
	class stealCargo: Abstract
	{
		duration = 60;
		animation = "Exile_Acts_RepairVehicle01_Animation01";
		conditionFunction = "ExileLifeClient_action_stealCargo_condition";
		completedFunction = "ExileLifeClient_action_stealCargo_completed";
		skilltype = "strength";
		skillLevel = 1; 
		duration_1 = 80;
		duration_2 = 60;
		duration_3 = 40;
		duration_4 = 30;
		duration_5 = 20;
	};
	class RefuelFuelStation: Abstract
	{
		duration = 30;
		animation = "Acts_AidlPercMstpSloWWpstDnon_warmup_2_loop";
		conditionFunction = "ExileLifeClient_action_refuelFuelStation_condition";
		completedFunction = "ExileLifeClient_action_refuelFuelStation_completed";
	};
	class bandage: Abstract
	{
		duration = 30;
		skilltype = "heal";
		skillLevel = 1; 
		duration_1 = 30;
		duration_2 = 25;
		duration_3 = 20;
		duration_4 = 10;
		duration_5 = 5;
		repeatAnimation = 7;
		animationLength= 4;
		animationarray[] ={
			"AinvPknlMstpSlayWnonDnon_medic", 
			"AinvPknlMstpSlayWrflDnon_medic", 
			"AinvPknlMstpSlayWpstDnon_medic", 
			"AinvPknlMstpSlayWrflDnon_medic", 
			"AinvPknlMstpSlayWnonDnon_medic", 
			"AinvPknlMstpSlayWnonDnon_medic", 
			"AinvPknlMstpSlayWrflDnon_medic", 
			"AinvPknlMstpSlayWpstDnon_medic", 
			"AinvPknlMstpSlayWrflDnon_medic", 
			"AinvPknlMstpSlayWnonDnon_medic", 
			"AinvPpneMstpSlayWnonDnon_medic", 
			"AinvPpneMstpSlayWrflDnon_medic", 
			"AinvPpneMstpSlayWpstDnon_medic", 
			"AinvPpneMstpSlayWrflDnon_medic", 
			"AinvPpneMstpSlayWnonDnon_medic"  
		};
		conditionFunction = "ExileLifeClient_action_bandage_condition";
		completedFunction = "ExileLifeClient_action_bandage_completed";
	};
	class resuscitate: Abstract
	{
		duration = 10;
		conditionFunction = "ExileLifeClient_action_resuscitate_condition";
		completedFunction = "ExileLifeClient_action_resuscitate_completed";
	};
	class cementShoes: Abstract
	{
		duration = 10;
		animation = "Exile_Acts_RepairVehicle01_Animation01";
		conditionFunction = "ExileLifeClient_action_cementShoes_condition";
		completedFunction = "ExileLifeClient_action_cementShoes_completed";
	};
	class breakCementShoes: Abstract
	{
		duration = 30;
		skilltype = "strength";
		skillLevel = 1; 
		duration_1 = 50;
		duration_2 = 40;
		duration_3 = 30;
		duration_4 = 20;
		duration_5 = 10;
		animation = "Exile_Acts_RepairVehicle01_Animation01";
		conditionFunction = "ExileLifeClient_action_cementShoes_condition";
		completedFunction = "ExileLifeClient_action_cementShoes_completed";
	};
	class HackLock: Abstract
	{
		animationType = "switchMove";
		animation = "Acts_TerminalOpen";
		abortInCombatMode = 0;
		failChanceFunction = "ExileClient_action_hackLock_failChance";
		durationFunction = "ExileClient_action_hackLock_duration";
		conditionFunction = "ExileClient_action_hackLock_condition";
		completedFunction = "ExileClient_action_hackLock_completed";
		failedFunction = "ExileClient_action_hackLock_failed";
		abortedFunction = "ExileClient_action_hackLock_aborted";
	};
	class GrindLock: Abstract
	{
		animationType = "switchMove";
		animation = "Exile_Acts_RepairVehicle01_Animation01";
		abortInCombatMode = 0;
		failChanceFunction = "ExileClient_action_grindLock_failChance";
		durationFunction = "ExileClient_action_grindLock_duration";
		conditionFunction = "ExileClient_action_grindLock_condition";
		completedFunction = "ExileClient_action_grindLock_completed";
		failedFunction = "ExileClient_action_grindLock_failed";
		abortedFunction = "ExileClient_action_grindLock_aborted";
	};
	class Smother: Abstract
	{
		abortInCombatMode = 0;
		skilltype = "heal";
		skillLevel = 0; 
		duration_1 = 40;
		duration_2 = 35;
		duration_3 = 30;
		duration_4 = 1; 
		duration_5 = 1; 
		animation = "Exile_Acts_RepairVehicle01_Animation01"; 
		conditionFunction = "ExileLifeClient_action_smother_condition";
		completedFunction = "ExileLifeClient_action_smother_completed";
	};
	class Revive: Abstract
	{
		abortInCombatMode = 0;
		skilltype = "heal";
		skillLevel = 0; 
		duration_1 = 30;
		duration_2 = 25;
		duration_3 = 20;
		duration_4 = 1; 
		duration_5 = 1; 
		animation = "Exile_Acts_RepairVehicle01_Animation01"; 
		conditionFunction = "ExileLifeClient_action_revive_condition";
		completedFunction = "ExileLifeClient_action_revive_completed";
		failedFunction = "ExileLifeClient_action_revive_aborted";
		abortedFunction = "ExileLifeClient_action_revive_aborted";
	};
	class Rest: Abstract
	{
		duration = 5;
		abortInCombatMode = 1;
		durationFunction = "ExileLifeClient_action_resting_duration";
		completedFunction = "ExileLifeClient_action_resting_completed";
		abortedFunction = "ExileLifeClient_action_resting_aborted";
		repeatingCheckFunction = "ExileLifeClient_action_resting_repeating";
		conditionFunction = "ExileLifeClient_action_resting_condition";
		animation = "Acts_InjuredLyingRifle01";
		animationType = "switchMove";
	};
	class drawBlood: Abstract
	{
		duration = 20;
		skilltype = "heal";
		skillLevel = 1; 
		duration_1 = 30;
		duration_2 = 25;
		duration_3 = 20;
		duration_4 = 15;
		duration_5 = 15;
		animation[] = {
			"AinvPknlMstpSlayWnonDnon_medic", 
			"AinvPknlMstpSlayWrflDnon_medic", 
			"AinvPknlMstpSlayWpstDnon_medic", 
			"AinvPknlMstpSlayWrflDnon_medic", 
			"AinvPknlMstpSlayWnonDnon_medic", 
			"AinvPknlMstpSlayWnonDnon_medic", 
			"AinvPknlMstpSlayWrflDnon_medic", 
			"AinvPknlMstpSlayWpstDnon_medic", 
			"AinvPknlMstpSlayWrflDnon_medic", 
			"AinvPknlMstpSlayWnonDnon_medic", 
			"AinvPpneMstpSlayWnonDnon_medic", 
			"AinvPpneMstpSlayWrflDnon_medic", 
			"AinvPpneMstpSlayWpstDnon_medic", 
			"AinvPpneMstpSlayWrflDnon_medic", 
			"AinvPpneMstpSlayWnonDnon_medic"  
		};
		animationType = "playMoveNow";
		conditionFunction = "ExileLifeClient_action_drawBlood_condition";
		completedFunction = "ExileLifeClient_action_drawBlood_completed";
		abortedFunction = "ExileLifeClient_action_drawBlood_aborted";
	};
	class forceConsume: Abstract
	{
		duration = 10;
		animation = "Exile_Acts_RepairVehicle01_Animation01";
		conditionFunction = "ExileLifeClient_action_forceConsume_condition";
		completedFunction = "ExileLifeClient_action_forceConsume_completed";
		abortedFunction = "ExileLifeClient_action_forceConsume_aborted";
	};
	class injectBlood: Abstract
	{
		duration = 10;
		animation[] ={
			"AinvPknlMstpSlayWnonDnon_medic", 
			"AinvPknlMstpSlayWrflDnon_medic", 
			"AinvPknlMstpSlayWpstDnon_medic", 
			"AinvPknlMstpSlayWrflDnon_medic", 
			"AinvPknlMstpSlayWnonDnon_medic", 
			"AinvPknlMstpSlayWnonDnon_medic", 
			"AinvPknlMstpSlayWrflDnon_medic", 
			"AinvPknlMstpSlayWpstDnon_medic", 
			"AinvPknlMstpSlayWrflDnon_medic", 
			"AinvPknlMstpSlayWnonDnon_medic", 
			"AinvPpneMstpSlayWnonDnon_medic", 
			"AinvPpneMstpSlayWrflDnon_medic", 
			"AinvPpneMstpSlayWpstDnon_medic", 
			"AinvPpneMstpSlayWrflDnon_medic", 
			"AinvPpneMstpSlayWnonDnon_medic"  
		};
		animationType = "playMoveNow";
		conditionFunction = "ExileLifeClient_action_injectBlood_condition";
		completedFunction = "ExileLifeClient_action_injectBlood_completed";
		abortedFunction = "ExileLifeClient_action_injectBlood_aborted";
	};
	class testBlood: Abstract
	{
		duration = 10;
		animation = "Exile_Acts_RepairVehicle01_Animation01";
		conditionFunction = "ExileLifeClient_action_testBlood_condition";
		completedFunction = "ExileLifeClient_action_testBlood_completed";
	};
};
class CfgExileHUD
{
	class ShortItemNames
	{
		SmokeShell[] 						= {"WHITE", 	"SMOKE"};
		1Rnd_Smoke_Grenade_shell[] 			= {"WHITE", 	"SMOKE"};
		3Rnd_Smoke_Grenade_shell[] 			= {"WHITE", 	"SMOKE"};
		SmokeShellBlue[] 					= {"BLUE", 		"SMOKE"};
		1Rnd_SmokeBlue_Grenade_shell[] 		= {"BLUE", 		"SMOKE"};
		3Rnd_SmokeBlue_Grenade_shell[] 		= {"BLUE", 		"SMOKE"};
		SmokeShellGreen[] 					= {"GREEN", 	"SMOKE"};
		1Rnd_SmokeGreen_Grenade_shell[] 	= {"GREEN", 	"SMOKE"};
		3Rnd_SmokeGreen_Grenade_shell[] 	= {"GREEN", 	"SMOKE"};
		SmokeShellOrange[] 					= {"ORANGE", 	"SMOKE"};
		1Rnd_SmokeOrange_Grenade_shell[]	= {"ORANGE", 	"SMOKE"};
		3Rnd_SmokeOrange_Grenade_shell[] 	= {"ORANGE", 	"SMOKE"};
		SmokeShellPurple[] 					= {"PURPLE", 	"SMOKE"};
		1Rnd_SmokePurple_Grenade_shell[] 	= {"PURPLE", 	"SMOKE"};
		3Rnd_SmokePurple_Grenade_shell[] 	= {"PURPLE", 	"SMOKE"};
		SmokeShellRed[] 					= {"RED", 		"SMOKE"};
		1Rnd_SmokeRed_Grenade_shell[] 		= {"RED", 		"SMOKE"};
		3Rnd_SmokeRed_Grenade_shell[] 		= {"RED", 		"SMOKE"};
		SmokeShellYellow[] 					= {"YELLOW", 	"SMOKE"};
		1Rnd_SmokeYellow_Grenade_shell[] 	= {"YELLOW", 	"SMOKE"};
		3Rnd_SmokeYellow_Grenade_shell[] 	= {"YELLOW", 	"SMOKE"};
		UGL_FlareCIR_F[] 					= {"IR", 		"FLARE"};
		3Rnd_UGL_FlareCIR_F[] 				= {"IR", 		"FLARE"};
		UGL_FlareGreen_F[] 					= {"GREEN", 	"FLARE"};
		3Rnd_UGL_FlareGreen_F[] 			= {"GREEN", 	"FLARE"};
		UGL_FlareRed_F[] 					= {"RED", 		"FLARE"};
		3Rnd_UGL_FlareRed_F[] 				= {"RED", 		"FLARE"};
		UGL_FlareWhite_F[] 					= {"WHITE", 	"FLARE"};
		3Rnd_UGL_FlareWhite_F[] 			= {"WHITE", 	"FLARE"};
		UGL_FlareYellow_F[] 				= {"YELLOW", 	"FLARE"};
		3Rnd_UGL_FlareYellow_F[] 			= {"YELLOW", 	"FLARE"};
		Chemlight_blue[] 					= {"BLUE", 		"LIGHT"};
		Chemlight_green[] 					= {"GREEN", 	"LIGHT"};
		Chemlight_red[] 					= {"RED", 		"LIGHT"};
		Chemlight_yellow[] 					= {"YELLOW", 	"LIGHT"};
		1Rnd_HE_Grenade_shell[] 			= {"40MM"};
		3Rnd_HE_Grenade_shell[] 			= {"40MM"};
		O_IR_Grenade[] 						= {"IR"};
		I_IR_Grenade[] 						= {"IR"};
		B_IR_Grenade[] 						= {"IR"};
		HandGrenade[] 						= {"RGO"};
		MiniGrenade[] 						= {"RGN"};
		Exile_Item_ZipTie[]					= {"ZIP", 		"TIE"};
		ExileLife_Item_Flare_Green[] 		= {"GREEN", 	"FLARE"};
		ExileLife_Item_Flare_Red[] 			= {"RED", 		"FLARE"};
		ExileLife_Item_Flare_White[] 		= {"WHITE", 	"FLARE"};
		ExileLife_Item_Flare_Yellow[] 		= {"YELLOW", 	"FLARE"};
		ExileLife_Item_Apple[] 			    = {"APPLE"};
		ExileLife_Item_Orange[] 			= {"ORANGE"};
		ExileLife_Item_Banana[] 			= {"BANANA"};
		ExileLife_Item_Potato[] 			= {"POTATO"};
		ExileLife_Item_Stone[] 			    = {"STONE"};
	};
};
class CfgExileLoadingScreen
{
	templates[] =
	{
		{ "Arma has stopped responding...", 										"Brett Nordin" },
		{ "Installing snapbuild...", 												"Mezo" },
		{ "Hiding your backpack...", 												"Markkos" },
		{ "Prepare to rage quit...", 												"Spackler" },
		{ "C0000005 ACCESS_VIOLATION", 												"DB" },
		{ "Spawning into crying corner...", 										"Magz" },
		{ "Publishing your mission file on MPGH...", 								"Valthos" },
		{ "Attempting integer division by zero...", 								"eraser1" },
		{ "Toilet door is being loaded...", 										"tom" },
		{ "Soon(TM)",																"WolfkillArcadia" },
		{ "Click Click... Wait", 													"TheGyro" },
		{ "Removing your workshop subscriptions...", 								"File_Delete" },
		{ "WARNING: THIS GAME IS EARLY ACCESS ALPHA.", 								"BrainlessDude" },
		{ "Hardening bushes...", 													"Gaina" },
		{ "Learning how to Arma...", 												"ka0s" },
		{ "Injecting Backdoor Trojan...", 											"bambam" },
		{ "Blowing up your vehicles...", 											"SomeRandomScorpion" },
		{ "Eating chicken...", 														"ManuDiet" },
		{ "Resetting your poptabs...", 												"Colonelfury" },
		{ ".... . . .. ... .", 														"WimpSnark" },
		{ "Loading next loading screen...",											"Vodor" },
		{ "HODOR!",																	"Hodor" },
		{ "[Insert funny loading screen joke here]",								"polivilas" },
		{ "Add toaster to improve loading speed...", 								"zAfLu" },
		{ "Error Type Number, Not a Number, Expected Number, Number", 				"Grim"},
		{ "Do you think it's going to load?", 										"[T.G] Razor" },
		{ "Preparing bicycle of death...", 											"BaroN" },
		{ "Filling Jerry Cans...", 													"Abomination" },
		{ "Mining Bitcoins to pay the server...", 									"XuluniX" },
		{ "Constructing additional pylons...", 										"KrypTarch" },
		{ "Looking at pictures of cats...", 										"DudeMan" },
		{ "Releasing bugs back into their habitat...", 								"MadMoo" },
		{ "Exile_zombies.sqf failed to load",		 								"Pustekuchen" },
		{ "Wait a bit, I'm in the middle of some calibrations...",		 			"acer5200" },
		{ "Adding soap to a rope...",		 										"Tankiouse" },
		{ "Point of No Return",		 												"Commander Malc" },
		{ "Making another memory error",		 									"SynysterDemon" },
		{ "LINUS!",								 									"Beardageddon" },
		{ "Loading Bambi Slayers...",							 					"GolovaRaoul" },
		{ "9879821876, I'm sure you haven't read this number..",					"maxicraft68" },
		{ "Loading loading screen suggestions...",						 			"ThatGuyYouKnow" },
		{ "Initiating lag...",									 					"Crazy Mike" },
		{ "Auto hovering the chopper...",					 						"xMarch" },
		{ "Restarting for no reason...",					 						"DarkWatcher" },
		{ "Kurwa!",											 						"Flosstradamus" },
		{ "Self-destruction in 10 seconds...",										"Darkzy" },
		{ "You have that read wrong",												"Axl" },
		{ "Initializing 1000m-pistol-whipping AI...",								"Major Mittens" },
		{ "Deploying spike strips to bridges...",									"dizzler" },
		{ "Kicked by BattlEye: Script Restriction #1337",							"Mr Hanky" },
		{ "A good bush for an ambush...",											"Reaper7Strike" },
		{ "Kuplion is awesome!!",													"kuplion" },
		{ "Spawning inevitable death...",											"KIMBOF1" },
		{ "Rigging broken parachute...",											"Gordon301" },
 		{ "Log in successful, informing raiders...",								"Feary" },
 		{ "Booby trapping push bikes...",											"HonestDave" },
 		{ "Deploying Raiding Bandits...",											"Zentarix" },
 		{ "I got knife, let's steal... *dies at car*",								"Reaper7Strike" },
 		{ "Feeding horse for power...",												"primedead" },
 		{ "Your XM8 shut down unexpectedly. Please restart your PC.",				"Przemek" },
 		{ "Hiding IEDs on the road...",												"Aramet" },
 		{ "Refining death mechanics...",											"Nightshredder" },
 		{ "Chopping down some shrubberies... with a... herring!",					"Tobias Solem" },
 		{ "No.",																	"Vishpala" },
 		{ "Servers are dumb",														"Andrew_S90" }
	};
};
class CfgExileSelections
{
	class GNT_C185
	{
		class driver
		{
			selections[]={{-0.256207,0.266304,-0.501907}};
		};
		class cargo
		{
			selections[]={{0.192368,0.265785,-0.502125},{0.176559,-0.64402,-0.509307},{-0.237976,-0.644402,-0.50931}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class GNT_C185F
	{
		class driver
		{
			selections[]={{-0.256073,0.165916,-0.196804}};
		};
		class cargo
		{
			selections[]={{0.192558,0.165443,-0.19649},{0.176811,-0.744598,-0.203876},{-0.237831,-0.744759,-0.203886}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class GNT_C185T
	{
		class driver
		{
			selections[]={{-0.25618,0.266319,-0.501915}};
		};
		class cargo
		{
			selections[]={{0.192368,0.265755,-0.502115},{0.176559,-0.644035,-0.50934},{-0.237984,-0.644318,-0.50924}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class B_Heli_Light_01_F
	{
		class driver
		{
			selections[]={{-0.374823,1.18665,-0.0438075}};
		};
		class cargo
		{
			selections[]={{-0.288498,0.272263,-0.0888104},{0.300203,0.23658,-0.0897832},{0.825016,0.963249,-0.333086},{-0.798944,0.0632248,-0.335676},{-0.832724,0.970711,-0.34092},{0.827204,0.0653076,-0.338562}};
			path[]={{-10},{-10},{1},{2},{3},{4}};
		};
		class turret
		{
			selections[]={{0.366716,1.18437,-0.0431471}};
			path[]={{0}};
		};
	};
	class B_Heli_Light_01_armed_F
	{
		class driver
		{
			selections[]={{-0.374823,1.18665,-0.0438075}};
		};
		class cargo
		{
			selections[]={};
			path[]={};
		};
		class turret
		{
			selections[]={{0.366714,1.18438,-0.0431471}};
			path[]={{0}};
		};
	};
	class C_Heli_Light_01_civil_F
	{
		class driver
		{
			selections[]={{-0.373158,2.03548,0.752798}};
		};
		class cargo
		{
			selections[]={{0.307795,1.1257,0.642728},{-0.330084,1.13381,0.649127}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={{0.368382,2.0332,0.753458}};
			path[]={{0}};
		};
	};
	class O_Heli_Light_02_F
	{
		class driver
		{
			selections[]={{0.435719,3.46618,-1.06931}};
		};
		class cargo
		{
			selections[]={{0.55681,2.52369,-0.990719},{0.0459976,2.71758,-0.965829},{-0.607925,2.61597,-0.969089},{0.56744,0.477211,-0.942882},{0.0117722,0.469772,-0.970472},{-0.595413,0.476166,-0.966298},{0.234703,1.55914,-0.867352},{-0.270561,1.58994,-0.941651}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={{-0.460649,3.46624,-1.06842}};
			path[]={{0}};
		};
	};
	class O_Heli_Light_02_unarmed_F
	{
		class driver
		{
			selections[]={{0.43569,3.46619,-1.06931}};
		};
		class cargo
		{
			selections[]={{0.556608,2.52351,-0.990579},{0.0460148,2.71769,-0.965817},{-0.607908,2.61597,-0.969089},{0.567369,0.477257,-0.942922},{0.0117245,0.469803,-0.970592},{-0.595879,0.476204,-0.966123},{0.234655,1.55877,-0.867545},{-0.270542,1.58982,-0.941669}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={{-0.460649,3.46625,-1.06842}};
			path[]={{0}};
		};
	};
	class O_Heli_Light_02_v2_F
	{
		class driver
		{
			selections[]={{0.435692,3.46619,-1.06931}};
		};
		class cargo
		{
			selections[]={{0.55628,2.52324,-0.990339},{0.0460205,2.71786,-0.965741},{-0.607891,2.61598,-0.969086},{0.56732,0.47728,-0.942961},{0.0116653,0.469757,-0.97066},{-0.596148,0.476234,-0.966022},{0.234606,1.55871,-0.867824},{-0.270523,1.5897,-0.94169}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={{-0.460646,3.46626,-1.06842}};
			path[]={{0}};
		};
	};
	class B_Heli_Attack_01_F
	{
		class driver
		{
			selections[]={{-0.0530148,3.90562,-0.568796}};
		};
		class cargo
		{
			selections[]={};
			path[]={};
		};
		class turret
		{
			selections[]={{-0.0676861,2.48053,-0.222655}};
			path[]={{0}};
		};
	};
	class O_Heli_Attack_02_F
	{
		class driver
		{
			selections[]={{0.0390377,3.0807,-0.35813}};
		};
		class cargo
		{
			selections[]={{-0.0420494,1.6802,-1.66509},{-0.141718,0.997391,-1.69001},{-0.0774975,0.407898,-1.72499},{-0.136099,-0.204041,-1.80181},{0.19784,0.991501,-1.69108},{0.301657,1.49978,-1.64477},{0.268785,0.384949,-1.74883},{0.318624,-0.269951,-1.78196}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={{0.0792427,4.32634,-0.759324}};
			path[]={{0}};
		};
	};
	class O_Heli_Attack_02_black_F
	{
		class driver
		{
			selections[]={{0.0390377,3.08069,-0.358128}};
		};
		class cargo
		{
			selections[]={{-0.0420456,1.68019,-1.66509},{-0.141714,0.997398,-1.69001},{-0.0775089,0.407875,-1.72498},{-0.135893,-0.204041,-1.80166},{0.197935,0.991753,-1.69096},{0.301687,1.49968,-1.64506},{0.268711,0.385063,-1.74885},{0.318314,-0.269913,-1.78205}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={{0.0792618,4.32635,-0.759324}};
			path[]={{0}};
		};
	};
	class B_Heli_Transport_01_F
	{
		class driver
		{
			selections[]={{-0.441162,5.54001,-0.902555}};
		};
		class cargo
		{
			selections[]={{0.780022,1.19497,-1.12686},{0.754333,2.73972,-1.08366},{-0.66614,1.22334,-1.12008},{-0.710432,2.7273,-1.10588},{0.258192,1.28727,-1.12261},{-0.2101,1.31505,-1.11707},{0.302452,2.6932,-1.10713},{-0.196957,2.64622,-1.12029}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={{-0.394163,4.07333,-0.798412},{0.658655,5.54001,-0.902555},{0.520807,4.05775,-0.796521}};
			path[]={{1},{0},{2}};
		};
	};
	class B_Heli_Transport_01_camo_F
	{
		class driver
		{
			selections[]={{-0.44116,5.54,-0.902555}};
		};
		class cargo
		{
			selections[]={{0.779985,1.19495,-1.12685},{0.75423,2.7397,-1.08401},{-0.666216,1.22314,-1.12038},{-0.710131,2.72798,-1.10566},{0.25819,1.28721,-1.12264},{-0.210106,1.31504,-1.11705},{0.302431,2.69331,-1.10707},{-0.197046,2.64621,-1.12039}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={{-0.394163,4.07333,-0.798412},{0.658657,5.54,-0.902555},{0.520805,4.05775,-0.796521}};
			path[]={{1},{0},{2}};
		};
	};
	class I_Heli_Transport_02_F
	{
		class driver
		{
			selections[]={{0.745209,6.36018,-1.79773}};
		};
		class cargo
		{
			selections[]={{0.947247,-0.608322,-1.74854},{-0.967558,-1.62138,-1.72834},{-1.10735,1.62867,-1.6869},{1.08293,4.25459,-1.71578},{-1.06961,-1.08168,-1.65363},{1.05392,1.03391,-1.67135},{1.05393,0.506714,-1.67383},{-1.0723,0.0458527,-1.65116},{1.04753,3.70451,-1.71331},{-1.05156,3.84513,-1.70143},{1.08292,4.78178,-1.71331},{1.04064,-0.0543823,-1.69049},{-1.07478,-0.520584,-1.67029},{-1.08594,1.09486,-1.68633},{-1.06849,0.571228,-1.67029},{-1.07609,3.19193,-1.70371}};
			path[]={{1},{2},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={{-0.799219,6.36017,-1.79773}};
			path[]={{0}};
		};
	};
	class I_Heli_light_03_F
	{
		class driver
		{
			selections[]={{0.483927,3.81342,-0.375299}};
		};
		class cargo
		{
			selections[]={{0.682646,2.73264,-0.543276},{-0.722105,2.95506,-0.512855},{-0.345604,1.24496,-0.256592},{-0.377815,3.09515,-0.55809},{0.242781,3.1768,-0.601345},{0.253679,1.27113,-0.266905}};
			path[]={{1},{2},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={{-0.468275,3.81567,-0.361241}};
			path[]={{0}};
		};
	};
	class I_Heli_light_03_unarmed_F
	{
		class driver
		{
			selections[]={{0.492634,3.81342,-0.561788}};
		};
		class cargo
		{
			selections[]={{0.271395,3.28049,-0.446618},{-0.263695,3.29352,-0.417704},{-0.297035,1.26389,-0.45782},{0.256977,1.31113,-0.468871},{0.265692,2.68457,-0.412904},{-0.21941,2.70644,-0.456135}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={{-0.459574,3.81566,-0.547735}};
			path[]={{0}};
		};
	};
	class B_Plane_CAS_01_F
	{
		class driver
		{
			selections[]={{-0.00296211,4.86451,0.312551}};
		};
		class cargo
		{
			selections[]={};
			path[]={};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class O_Plane_CAS_02_F
	{
		class driver
		{
			selections[]={{0.0209274,2.88761,-0.893395}};
		};
		class cargo
		{
			selections[]={};
			path[]={};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class I_Plane_Fighter_03_CAS_F
	{
		class driver
		{
			selections[]={{0.0628815,2.66847,-0.833918}};
		};
		class cargo
		{
			selections[]={};
			path[]={};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class I_Plane_Fighter_03_AA_F
	{
		class driver
		{
			selections[]={{0.0628738,2.66856,-0.833918}};
		};
		class cargo
		{
			selections[]={};
			path[]={};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class B_Heli_Transport_03_F
	{
		class driver
		{
			selections[]={{0.471346,7.63042,-0.688491}};
		};
		class cargo
		{
			selections[]={{-0.980665,-0.80114,-1.21169},{-1.00673,2.75153,-1.28189},{-0.878845,1.52163,-1.26324},{-0.980072,0.93351,-1.21131},{-0.928951,0.34256,-1.22214},{-0.873278,-0.34951,-1.26791},{0.89081,2.76933,-1.14055},{0.789923,2.13885,-1.22903},{0.780277,1.56014,-1.21177},{-1.04177,2.1519,-1.17479},{0.832466,0.416801,-1.19941},{0.863394,-0.227585,-1.17889},{0.837076,0.977249,-1.14817},{0.90074,-0.773811,-1.21394},{0.854445,-1.31753,-1.30444},{-0.984333,-1.35039,-1.27188}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{3},{4}};
		};
		class turret
		{
			selections[]={{-0.771263,4.03524,-1.009},{-0.532774,7.63017,-0.688834},{0.692728,4.00097,-1.01173}};
			path[]={{1},{0},{2}};
		};
	};
	class B_Heli_Transport_03_unarmed_F
	{
		class driver
		{
			selections[]={{0.471348,7.63042,-0.688492}};
		};
		class cargo
		{
			selections[]={{-0.980667,-0.801132,-1.21169},{-1.00674,2.75156,-1.28189},{-0.878696,1.52177,-1.26323},{-0.980038,0.933487,-1.2113},{-0.928957,0.342552,-1.22214},{-0.873276,-0.349724,-1.26798},{0.890848,2.76931,-1.14055},{0.789829,2.13882,-1.22899},{0.780273,1.56013,-1.2118},{-1.04182,2.15194,-1.17479},{0.832319,0.416763,-1.19944},{0.863409,-0.227585,-1.17888},{0.837078,0.977257,-1.14817},{0.900345,-0.773895,-1.21402},{0.854445,-1.31752,-1.30443},{-0.984333,-1.35038,-1.27188},{-0.941412,4.00089,-1.01087},{0.864286,4.01943,-1.01359}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{3},{4},{1},{2}};
		};
		class turret
		{
			selections[]={{-0.532774,7.63017,-0.688834}};
			path[]={{0}};
		};
	};
	class O_Heli_Transport_04_F
	{
		class driver
		{
			selections[]={{-0.743334,3.98355,-0.913627}};
		};
		class cargo
		{
			selections[]={};
			path[]={};
		};
		class turret
		{
			selections[]={{-0.81069,3.18697,-1.28905},{0.565466,3.98304,-0.913983}};
			path[]={{1},{0}};
		};
	};
	class O_Heli_Transport_04_ammo_F
	{
		class driver
		{
			selections[]={{-0.743336,3.98355,-0.677624}};
		};
		class cargo
		{
			selections[]={};
			path[]={};
		};
		class turret
		{
			selections[]={{-0.810795,3.18698,-1.05301},{0.565462,3.98304,-0.677981}};
			path[]={{1},{0}};
		};
	};
	class O_Heli_Transport_04_bench_F
	{
		class driver
		{
			selections[]={{-0.743334,3.98355,-0.91363}};
		};
		class cargo
		{
			selections[]={{0.365473,1.39304,-1.874},{0.36002,0.562454,-1.87673},{0.348963,-0.280144,-1.8822},{0.379173,-1.10135,-1.86579},{-0.556824,-1.10304,-1.874},{-0.55134,-0.267654,-1.87673},{-0.540382,0.570229,-1.8822},{-0.570496,1.39571,-1.86579}};
			path[]={{2},{3},{4},{5},{6},{7},{8},{9}};
		};
		class turret
		{
			selections[]={{-0.810421,3.18804,-1.28829},{0.565472,3.98304,-0.913984}};
			path[]={{1},{0}};
		};
	};
	class O_Heli_Transport_04_box_F
	{
		class driver
		{
			selections[]={{-0.743336,3.98355,-0.677616}};
		};
		class cargo
		{
			selections[]={};
			path[]={};
		};
		class turret
		{
			selections[]={{-0.81094,3.18698,-1.05297},{0.565462,3.98304,-0.677981}};
			path[]={{1},{0}};
		};
	};
	class O_Heli_Transport_04_covered_F
	{
		class driver
		{
			selections[]={{-0.743328,3.98356,-0.677629}};
		};
		class cargo
		{
			selections[]={{0.220755,1.90108,-1.23475},{-0.385355,1.95834,-1.18929},{0.192371,1.2877,-1.15838},{-0.389107,1.35442,-1.18354},{0.145,0.71904,-1.19106},{-0.384743,0.777985,-1.17377},{0.191088,0.206993,-1.15936},{-0.429817,0.188072,-1.21646},{0.229076,-0.265236,-1.15402},{-0.359644,-0.258949,-1.20516},{-0.397076,-0.881302,-1.16845},{-0.338737,-1.32311,-1.16989},{0.262308,-0.831619,-1.23517},{0.202288,-1.30688,-1.20816},{0.211304,-2.0228,-1.20444},{-0.424479,-2.0179,-1.2163}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{2},{3}};
		};
		class turret
		{
			selections[]={{-0.811644,3.19582,-1.05157},{0.565474,3.98304,-0.677985}};
			path[]={{1},{0}};
		};
	};
	class O_Heli_Transport_04_fuel_F
	{
		class driver
		{
			selections[]={{-0.743338,3.98355,-0.531207}};
		};
		class cargo
		{
			selections[]={};
			path[]={};
		};
		class turret
		{
			selections[]={{-0.810654,3.18697,-0.90664},{0.565464,3.98304,-0.531561}};
			path[]={{1},{0}};
		};
	};
	class O_Heli_Transport_04_medevac_F
	{
		class driver
		{
			selections[]={{-0.74334,3.98357,-0.677628}};
		};
		class cargo
		{
			selections[]={{-1.03646,-1.1898,-1.31832},{0.794689,-1.06316,-1.3114},{0.785164,1.3104,-1.29132},{-1.06062,0.250221,-1.25408}};
			path[]={{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={{-0.8116,3.1877,-1.05174},{0.565462,3.98305,-0.67798}};
			path[]={{1},{0}};
		};
	};
	class O_Heli_Transport_04_repair_F
	{
		class driver
		{
			selections[]={{-0.743334,3.98355,-0.677622}};
		};
		class cargo
		{
			selections[]={};
			path[]={};
		};
		class turret
		{
			selections[]={{-0.81082,3.18698,-1.053},{0.565464,3.98304,-0.677981}};
			path[]={{1},{0}};
		};
	};
	class B_APC_Tracked_01_rcws_F
	{
		class driver
		{
			selections[]={{-0.81778,-0.170609,-1.49384}};
		};
		class cargo
		{
			selections[]={{-0.0489426,-0.00174713,0.0646167},{0.00328064,-0.0227127,0.0661011},{0.00327301,-0.0226746,0.0660601},{0.00119019,0.0159378,0.0819831},{0.00230408,-0.0238762,0.0664239},{-0.00889587,0.00211334,0.0692792},{-0.0320511,0.0123291,0.0713449},{-0.00498962,-0.0130234,0.0706844}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={{-0.0508804,-0.118603,-0.452654},{-0.642792,-1.06043,-0.851429}};
			path[]={{0},{1}};
		};
	};
	class B_APC_Tracked_01_AA_F
	{
		class driver
		{
			selections[]={{-0.518188,-1.09371,-1.48154}};
		};
		class cargo
		{
			selections[]={};
			path[]={};
		};
		class turret
		{
			selections[]={{0.667618,-1.72716,-0.166016},{0.374184,-1.05313,-0.164898}};
			path[]={{0},{0,0}};
		};
	};
	class O_APC_Tracked_02_cannon_F
	{
		class driver
		{
			selections[]={{-0.0460892,-0.126015,-0.452628}};
		};
		class cargo
		{
			selections[]={{-0.00858307,0.00062561,0.0703354},{0.00260162,0.0142136,0.0805731},{-0.00724792,-0.0493164,0.0461969},{-0.00038147,-0.0221558,0.0578156},{0.00310516,-0.0239182,0.0659666},{-0.0319214,0.0113373,0.0714397},{-0.048233,-0.00468063,0.0643463},{-0.00454712,-0.0128441,0.070405}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={{-0.0519409,-0.114826,-0.452633},{-0.0524292,-0.116138,-0.452636}};
			path[]={{0},{0,0}};
		};
	};
	class O_APC_Tracked_02_AA_F
	{
		class driver
		{
			selections[]={{-0.49176,-2.71126,-1.65621}};
		};
		class cargo
		{
			selections[]={};
			path[]={};
		};
		class turret
		{
			selections[]={{0.672272,-3.37712,-0.30333},{0.350433,-2.6742,-0.299632}};
			path[]={{0},{0,0}};
		};
	};
	class I_APC_tracked_03_cannon_F
	{
		class driver
		{
			selections[]={{-0.480309,1.42779,-1.78879}};
		};
		class cargo
		{
			selections[]={{0.00345612,-0.0197449,0.0660486},{0.0018692,-0.0199738,0.0667706},{0.00335693,-0.019577,0.0660768},{-0.00729752,-0.0444565,0.0459466},{-0.00845718,0.00606537,0.0699258},{-0.0314369,0.015274,0.0714469},{-0.0488777,-0.000976563,0.0655246}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={{0.522572,-0.785439,-0.583921},{-0.676121,-0.139732,-0.602881}};
			path[]={{0},{0,0}};
		};
	};
	class I_MBT_03_cannon_F
	{
		class driver
		{
			selections[]={{0.888496,0.723412,-2.30037}};
		};
		class cargo
		{
			selections[]={};
			path[]={};
		};
		class turret
		{
			selections[]={{0.769737,-0.884979,-0.897495},{0.397369,-0.264683,-0.935608}};
			path[]={{0},{0,0}};
		};
	};
	class B_MBT_01_cannon_F
	{
		class driver
		{
			selections[]={{-0.0462036,-0.125229,-0.45263}};
		};
		class cargo
		{
			selections[]={{-0.00580597,-0.468262,0.208829},{-0.00357056,-0.0454254,0.0547543},{-0.00765228,-0.0543175,0.0457678},{0.00284576,-0.0346947,0.106388},{-0.0103455,-0.0485191,0.0470276},{0.00386047,-0.036705,0.0629673}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={{-0.0509491,-0.115601,-0.452639},{0.675934,-0.762611,-0.274631}};
			path[]={{0},{0,0}};
		};
	};
	class B_MBT_01_arty_F
	{
		class driver
		{
			selections[]={{-0.721069,-0.0111542,-2.25148}};
		};
		class cargo
		{
			selections[]={};
			path[]={};
		};
		class turret
		{
			selections[]={{-0.0542068,-0.111893,-0.452622},{1.52936,-2.87109,-0.722082}};
			path[]={{0},{0,0}};
		};
	};
	class B_MBT_01_mlrs_F
	{
		class driver
		{
			selections[]={{-0.72113,0.419006,-1.0233}};
		};
		class cargo
		{
			selections[]={};
			path[]={};
		};
		class turret
		{
			selections[]={{-0.0536346,-0.110062,-0.452611}};
			path[]={{0}};
		};
	};
	class O_MBT_02_cannon_F
	{
		class driver
		{
			selections[]={{-0.0388718,0.346302,-1.82363}};
		};
		class cargo
		{
			selections[]={};
			path[]={};
		};
		class turret
		{
			selections[]={{0.724525,-1.36408,-0.980382},{0.307259,-0.435619,-0.976297}};
			path[]={{0},{0,0}};
		};
	};
	class O_MBT_02_arty_F
	{
		class driver
		{
			selections[]={{-0.0389252,-0.309502,-2.36954}};
		};
		class cargo
		{
			selections[]={};
			path[]={};
		};
		class turret
		{
			selections[]={{-0.0514603,-0.114204,-0.452649},{1.74606,-2.34688,-0.82306}};
			path[]={{0},{0,0}};
		};
	};
	class B_MRAP_01_F
	{
		class driver
		{
			selections[]={{-0.520063,-1.43124,-0.438801}};
		};
		class cargo
		{
			selections[]={{0.515207,-1.40712,-0.36861},{0.487928,-2.57125,-0.335176},{-0.564989,-2.48822,-0.351775}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class B_MRAP_01_gmg_F
	{
		class driver
		{
			selections[]={{-0.520121,-1.39827,-0.99525}};
		};
		class cargo
		{
			selections[]={{0.515221,-1.37418,-0.925014},{0.487925,-2.53837,-0.891603}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={{-0.56208,-2.47311,-0.909727}};
			path[]={{0}};
		};
	};
	class B_MRAP_01_hmg_F
	{
		class driver
		{
			selections[]={{-0.519997,-1.43221,-0.994998}};
		};
		class cargo
		{
			selections[]={{0.514961,-1.40784,-0.925061},{0.487656,-2.57278,-0.891606}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={{-0.57003,-2.49975,-0.909726}};
			path[]={{0}};
		};
	};
	class O_MRAP_02_F
	{
		class driver
		{
			selections[]={{0.0153046,-0.762108,-0.657634}};
		};
		class cargo
		{
			selections[]={{0.491898,-2.08635,-0.667093},{-0.364853,-2.15816,-0.660241},{0.261681,-3.30734,-0.505543},{-0.348564,-3.20543,-0.527423}};
			path[]={{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class O_MRAP_02_hmg_F
	{
		class driver
		{
			selections[]={{0.00579834,-0.124115,0.13411}};
		};
		class cargo
		{
			selections[]={{0.00449371,-0.024168,0.187327},{-0.03228,0.0126648,0.0723605},{0.0072937,-0.113373,0.124445}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={{-0.0362167,0.012291,0.0618591}};
			path[]={{0}};
		};
	};
	class O_MRAP_02_gmg_F
	{
		class driver
		{
			selections[]={{0.00576019,-0.124855,0.134109}};
		};
		class cargo
		{
			selections[]={{0.00467682,-0.0238247,0.18739},{-0.0323868,0.0132046,0.0723205},{0.00727081,-0.113241,0.124444}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={{0.284241,-2.08627,-0.920509}};
			path[]={{0}};
		};
	};
	class C_Offroad_01_F
	{
		class driver
		{
			selections[]={{-0.00275421,-0.0491428,-0.0437002}};
		};
		class cargo
		{
			selections[]={{-0.00272369,-0.0140057,0.0253754},{-0.000968933,-0.0326805,0.107801},{-0.00839233,-0.0544071,0.0459247},{-0.0122681,-0.0513592,0.0490742},{-0.0118484,-0.0522575,0.0490742}};
			path[]={{-10},{0},{1},{2},{3}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class I_G_Offroad_01_F
	{
		class driver
		{
			selections[]={{0.000411987,-0.044632,-0.0432978}};
		};
		class cargo
		{
			selections[]={{0.000762939,-0.0107346,0.0254107},{0.00243378,-0.030674,0.107807},{-0.00577545,-0.0519028,0.0459304},{-0.0103226,-0.0470619,0.0490727},{-0.0103378,-0.0469894,0.0490732}};
			path[]={{-10},{0},{1},{2},{3}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class I_G_Offroad_01_armed_F
	{
		class driver
		{
			selections[]={{-0.00202179,-0.0447426,-0.0436778}};
		};
		class cargo
		{
			selections[]={{-0.000137329,-0.0109901,0.0257211}};
			path[]={{-10}};
		};
		class turret
		{
			selections[]={{0.0396042,0.0139465,0.975883}};
			path[]={{0}};
		};
	};
	class B_G_Offroad_01_F
	{
		class driver
		{
			selections[]={{-9.15527e-005,-0.0468597,-0.0432992}};
		};
		class cargo
		{
			selections[]={{0.00025177,-0.0135803,0.0254164},{0.00197601,-0.0342751,0.107809},{-0.00619507,-0.0566101,0.0459313},{-0.0107422,-0.0520744,0.0490737},{-0.0107422,-0.0521202,0.0490727}};
			path[]={{-10},{0},{1},{2},{3}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class O_G_Offroad_01_F
	{
		class driver
		{
			selections[]={{-0.00202179,-0.047924,-0.0432749}};
		};
		class cargo
		{
			selections[]={{-0.0022049,-0.0146141,0.025425},{-0.000839233,-0.0345478,0.107819},{-0.00850677,-0.0550537,0.0459261},{-0.0122681,-0.0500603,0.049067},{-0.0118256,-0.0508041,0.0490694}};
			path[]={{-10},{0},{1},{2},{3}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class B_G_Offroad_01_armed_F
	{
		class driver
		{
			selections[]={{-0.00133514,-0.0441208,-0.0437293}};
		};
		class cargo
		{
			selections[]={{0.000244141,-0.0103607,0.0257406}};
			path[]={{-10}};
		};
		class turret
		{
			selections[]={{0.040947,0.0143127,0.975883}};
			path[]={{0}};
		};
	};
	class O_G_Offroad_01_armed_F
	{
		class driver
		{
			selections[]={{-0.419067,0.345242,-1.00159}};
		};
		class cargo
		{
			selections[]={{0.41803,0.247345,-1.02279}};
			path[]={{-10}};
		};
		class turret
		{
			selections[]={{0.533615,-1.92236,-0.246942}};
			path[]={{0}};
		};
	};
	class C_Quadbike_01_F
	{
		class driver
		{
			selections[]={{-0.0146637,-0.348648,-0.357202}};
		};
		class cargo
		{
			selections[]={{-0.000961304,-0.739872,-0.361821}};
			path[]={{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class B_Quadbike_01_F
	{
		class driver
		{
			selections[]={{-0.0146561,-0.348473,-0.357256}};
		};
		class cargo
		{
			selections[]={{-0.000968933,-0.739868,-0.361821}};
			path[]={{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class O_Quadbike_01_F
	{
		class driver
		{
			selections[]={{-0.0146713,-0.348862,-0.357149}};
		};
		class cargo
		{
			selections[]={{-0.000976563,-0.739979,-0.36182}};
			path[]={{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class I_Quadbike_01_F
	{
		class driver
		{
			selections[]={{-0.0146561,-0.348572,-0.357225}};
		};
		class cargo
		{
			selections[]={{-0.000968933,-0.739864,-0.361821}};
			path[]={{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class I_G_Quadbike_01_F
	{
		class driver
		{
			selections[]={{-0.0146561,-0.348698,-0.35719}};
		};
		class cargo
		{
			selections[]={{-0.000961304,-0.73988,-0.361821}};
			path[]={{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class B_G_Quadbike_01_F
	{
		class driver
		{
			selections[]={{-0.0146713,-0.349129,-0.357075}};
		};
		class cargo
		{
			selections[]={{-0.000976563,-0.740013,-0.36182}};
			path[]={{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class O_G_Quadbike_01_F
	{
		class driver
		{
			selections[]={{-0.0146637,-0.348675,-0.357199}};
		};
		class cargo
		{
			selections[]={{-0.000968933,-0.739834,-0.361821}};
			path[]={{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class I_MRAP_03_F
	{
		class driver
		{
			selections[]={{0.0117111,0.920513,-0.533345}};
		};
		class cargo
		{
			selections[]={{0.67804,-0.202209,-0.497061},{0.0175705,-0.146225,-0.533025}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={{-0.733009,-0.193501,-0.55811}};
			path[]={{0}};
		};
	};
	class I_MRAP_03_hmg_F
	{
		class driver
		{
			selections[]={{0.0118484,0.919056,-1.22959}};
		};
		class cargo
		{
			selections[]={{0.0173569,-0.155396,-1.22963}};
			path[]={{-10}};
		};
		class turret
		{
			selections[]={{0.692261,-0.189384,-1.27114},{-0.728012,-0.186584,-1.25583}};
			path[]={{0},{1}};
		};
	};
	class I_MRAP_03_gmg_F
	{
		class driver
		{
			selections[]={{0.0112457,-0.0572281,0.133829}};
		};
		class cargo
		{
			selections[]={{-0.0320053,0.0123138,0.0720587}};
			path[]={{-10}};
		};
		class turret
		{
			selections[]={{0.0102768,-0.0529137,0.15007},{0.00242615,-0.0521774,0.14895}};
			path[]={{0},{1}};
		};
	};
	class B_Truck_01_transport_F
	{
		class driver
		{
			selections[]={{-0.747498,4.08039,-0.485872}};
		};
		class cargo
		{
			selections[]={{0.811821,4.02884,-0.411519},{-0.900505,0.317745,-0.00257969},{-0.778168,-1.04706,-0.0237064},{-0.876205,-1.75279,0.0305638},{-0.812775,-2.44632,0.0514526},{-0.801697,-3.1504,-0.00734854},{-0.804039,-3.74315,-0.0344887},{-0.782921,-4.53878,0.152543},{0.881889,0.213816,0.0560093},{0.855766,-0.517574,-0.0562391},{0.907356,-1.06364,0.166045},{0.92498,-1.76526,0.125966},{0.903305,-2.53235,0.0338955},{0.973953,-3.22316,0.123972},{0.912979,-3.86791,0.170173},{0.860802,-4.50733,0.178381},{-0.729164,-0.375569,0.0311165}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{0},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{1},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class B_Truck_01_covered_F
	{
		class driver
		{
			selections[]={{-0.73275,4.0774,-0.485344}};
		};
		class cargo
		{
			selections[]={{0.82711,4.02369,-0.411516},{-0.893143,0.316811,-0.00265837},{-0.790512,-1.04774,-0.00426197},{-0.877747,-1.75331,0.0257058},{-0.803696,-2.44667,0.0513101},{-0.802505,-3.15105,-0.0074048},{-0.74543,-3.74254,-0.0345502},{-0.774933,-4.53799,0.15195},{0.90155,0.212656,0.0469842},{0.874588,-0.51667,0.0585675},{0.898026,-1.14997,0.0552192},{0.824745,-1.87106,0.106086},{0.821838,-2.53249,0.109571},{0.991913,-3.22361,0.167195},{0.931351,-3.86814,0.0912251},{0.877213,-4.50637,0.178302},{-0.666733,-0.3755,0.0313125}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{0},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{1},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class O_Truck_02_covered_F
	{
		class driver
		{
			selections[]={{-0.581665,2.75568,-0.404126}};
		};
		class cargo
		{
			selections[]={{0.194489,2.70899,-0.379365},{0.735672,2.67202,-0.378172},{-0.834129,0.879173,-0.170911},{0.914001,0.829601,-0.11504},{-0.917679,0.197197,-0.207017},{0.919373,0.116295,-0.0238409},{-0.961433,-0.554264,-0.158774},{0.927734,-0.612404,-0.115764},{-0.870499,-1.17096,-0.258324},{0.833977,-1.17538,-0.142351},{-0.860199,-1.90205,-0.211107},{0.944717,-1.86303,-0.109841},{-0.998291,-2.50959,-0.165689},{0.838509,-2.56244,-0.0822301},{-0.87764,-3.23612,-0.101442},{0.897263,-3.24594,-0.0901504}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{0},{1}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class O_Truck_02_transport_F
	{
		class driver
		{
			selections[]={{-0.5793,2.75443,-0.404125}};
		};
		class cargo
		{
			selections[]={{0.196945,2.7072,-0.37941},{0.738037,2.67008,-0.37823},{-0.83625,0.877136,-0.170518},{0.914955,0.831314,-0.114655},{-0.9188,0.196381,-0.207132},{0.91983,0.116646,-0.0237198},{-0.960777,-0.554203,-0.158817},{0.925568,-0.612701,-0.116294},{-0.868233,-1.17013,-0.258217},{0.832886,-1.17548,-0.142385},{-0.860344,-1.90162,-0.21104},{0.944611,-1.86367,-0.109532},{-0.998016,-2.50957,-0.16564},{0.83744,-2.56265,-0.0825691},{-0.875847,-3.23662,-0.101331},{0.895279,-3.24682,-0.0900426}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{0},{1}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class I_Truck_02_covered_F
	{
		class driver
		{
			selections[]={{-0.579269,2.75424,-0.404141}};
		};
		class cargo
		{
			selections[]={{0.196976,2.70721,-0.379425},{0.738068,2.67018,-0.378255},{-0.836288,0.876945,-0.170491},{0.914871,0.831154,-0.114554},{-0.91861,0.19635,-0.207118},{0.919617,0.116661,-0.0237737},{-0.960724,-0.554302,-0.158832},{0.925461,-0.612629,-0.116333},{-0.868187,-1.17002,-0.258215},{0.832985,-1.1754,-0.142376},{-0.860504,-1.9014,-0.210991},{0.944496,-1.86383,-0.109403},{-0.997795,-2.50961,-0.16562},{0.837189,-2.56267,-0.0826068},{-0.875633,-3.23668,-0.101307},{0.895119,-3.24688,-0.0900235}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{0},{1}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class I_Truck_02_transport_F
	{
		class driver
		{
			selections[]={{-0.579239,2.75435,-0.404112}};
		};
		class cargo
		{
			selections[]={{0.196991,2.70686,-0.379418},{0.738106,2.66952,-0.378225},{-0.836777,0.87751,-0.170437},{0.915672,0.831699,-0.114583},{-0.919762,0.196415,-0.207227},{0.920822,0.11681,-0.0234699},{-0.96138,-0.553974,-0.158786},{0.926048,-0.612751,-0.116181},{-0.868195,-1.17049,-0.258369},{0.831848,-1.1756,-0.142515},{-0.85907,-1.90204,-0.21119},{0.94474,-1.86318,-0.109793},{-0.999352,-2.50935,-0.165676},{0.839714,-2.56228,-0.0817747},{-0.877815,-3.23602,-0.101446},{0.896461,-3.24633,-0.0901098}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{0},{1}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class O_Truck_03_transport_F
	{
		class driver
		{
			selections[]={{-0.672623,2.62984,-0.215975}};
		};
		class cargo
		{
			selections[]={{0.759865,2.53268,-0.197335},{-0.922997,-0.55447,0.145935},{-0.898666,-2.15337,0.161669},{-0.896057,-2.90437,0.2224},{-0.846184,-3.63902,0.230224},{-0.858597,-4.50956,0.311588},{0.95533,-0.553316,0.134771},{0.920784,-1.39356,0.309127},{0.861343,-2.09378,0.224024},{-0.876747,-1.36725,0.145483},{0.965942,-3.55287,0.353559},{0.945641,-4.53869,0.319166},{0.897652,-2.87291,0.23311}};
			path[]={{-10},{-10},{-10},{-10},{-10},{0},{-10},{-10},{-10},{-10},{-10},{1},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class O_Truck_03_covered_F
	{
		class driver
		{
			selections[]={{-0.647552,2.63103,-0.216058}};
		};
		class cargo
		{
			selections[]={{0.785202,2.53423,-0.197419},{-0.897896,-0.55442,0.146005},{-0.775681,-2.15232,0.161688},{-0.873055,-2.90342,0.242571},{-0.822182,-3.63744,0.230486},{-0.833832,-4.5079,0.311597},{0.980957,-0.554558,0.284973},{0.823273,-1.39451,0.222917},{0.88546,-2.09483,0.223743},{-0.90049,-1.36719,0.245353},{0.884682,-3.55287,0.277143},{0.969658,-4.53886,0.319171},{0.920715,-2.87284,0.233648}};
			path[]={{-10},{-10},{-10},{-10},{-10},{0},{-10},{-10},{-10},{-10},{-10},{1},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class O_Truck_03_device_F
	{
		class driver
		{
			selections[]={{-0.667671,2.35461,0.0519609}};
		};
		class cargo
		{
			selections[]={{0.76445,2.25642,0.0709901}};
			path[]={{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class C_Hatchback_01_F
	{
		class driver
		{
			selections[]={{-0.000595093,-0.048172,-0.0432925}};
		};
		class cargo
		{
			selections[]={{9.15527e-005,-0.014801,0.0254154},{-0.0414124,0.000179291,0.0643616},{-0.0318604,0.00911331,0.0723467}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class C_Hatchback_01_sport_F
	{
		class driver
		{
			selections[]={{-0.000816345,-0.0517311,-0.0434122}};
		};
		class cargo
		{
			selections[]={{0.000137329,-0.02034,0.0253325},{-0.0422287,-0.00533295,0.0643649},{-0.0319977,0.00153351,0.0722518}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class C_SUV_01_F
	{
		class driver
		{
			selections[]={{0.0271683,0.00702667,0.0421019}};
		};
		class cargo
		{
			selections[]={{0.000541687,-0.0114937,0.0254054},{-0.00106049,-0.0102768,0.0702801},{-0.0408096,-0.000442505,0.0642815}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class B_Truck_01_mover_F
	{
		class driver
		{
			selections[]={{-0.757172,3.68771,-0.175419}};
		};
		class cargo
		{
			selections[]={{0.775032,3.63485,-0.100302}};
			path[]={{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class B_Truck_01_box_F
	{
		class driver
		{
			selections[]={{-0.780052,4.21526,-0.574368}};
		};
		class cargo
		{
			selections[]={{0.752342,4.16311,-0.49913}};
			path[]={{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class C_Van_01_transport_F
	{
		class driver
		{
			selections[]={{0.00167847,-0.00905228,-0.0444064}};
		};
		class cargo
		{
			selections[]={{0.0665817,-0.0258751,0.0609789},{-0.0242081,0.054184,0.0633831},{0.00519562,0.0253334,0.118214},{0.00514221,0.0250053,0.118212},{0.00512695,0.0246811,0.118209},{0.00510406,0.0241394,0.118207},{0.00512695,0.0235901,0.118206},{0.00511932,0.0231133,0.118204},{0.00504303,0.0233192,0.118205},{0.241287,-2.34433,-0.215616},{-0.233856,-2.84007,-0.222046},{0.263062,-2.918,-0.215613}};
			path[]={{-10},{-10},{0},{5},{1},{6},{2},{7},{3},{8},{4},{9}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class I_G_Van_01_transport_F
	{
		class driver
		{
			selections[]={{-0.458542,0.251678,-0.297942}};
		};
		class cargo
		{
			selections[]={{0.571213,0.275528,-0.19875},{0.121284,0.201595,-0.175565},{-0.313553,-0.642521,-0.222057},{0.266342,-0.486465,-0.215626},{-0.341255,-1.26065,-0.222056},{0.316658,-1.11939,-0.21562},{-0.253517,-1.85191,-0.222043},{0.163689,-1.7045,-0.215602},{-0.365318,-2.45753,-0.222029},{0.245903,-2.34392,-0.215591},{-0.235527,-2.84422,-0.222021},{0.266739,-2.92053,-0.215587}};
			path[]={{-10},{-10},{0},{5},{1},{6},{2},{7},{3},{8},{4},{9}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class C_Van_01_box_F
	{
		class driver
		{
			selections[]={{-3.8147e-005,-0.0109138,-0.0435443}};
		};
		class cargo
		{
			selections[]={{0.0667419,-0.028038,0.0608492},{-0.0284576,0.049675,0.0632348}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class B_G_Van_01_transport_F
	{
		class driver
		{
			selections[]={{-0.458496,0.250893,-0.297889}};
		};
		class cargo
		{
			selections[]={{0.571327,0.2771,-0.198716},{0.121559,0.203995,-0.175471},{-0.315254,-0.642624,-0.222054},{0.266945,-0.486214,-0.215622},{-0.340729,-1.26069,-0.222056},{0.31469,-1.11961,-0.215627},{-0.249687,-1.85152,-0.222059},{0.158684,-1.70452,-0.215626},{-0.360275,-2.45749,-0.222053},{0.241692,-2.34412,-0.215613},{-0.234451,-2.84186,-0.222034},{0.265511,-2.91953,-0.215596}};
			path[]={{-10},{-10},{0},{5},{1},{6},{2},{7},{3},{8},{4},{9}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class O_G_Van_01_transport_F
	{
		class driver
		{
			selections[]={{-0.458488,0.251438,-0.297981}};
		};
		class cargo
		{
			selections[]={{0.571243,0.275475,-0.198716},{0.121536,0.201534,-0.175511},{-0.313599,-0.642651,-0.222058},{0.26619,-0.486256,-0.215627},{-0.341431,-1.26064,-0.222056},{0.317039,-1.11943,-0.215619},{-0.25351,-1.85188,-0.222044},{0.163918,-1.70444,-0.215601},{-0.365585,-2.45764,-0.222027},{0.246132,-2.34377,-0.215591},{-0.235413,-2.84421,-0.222021},{0.266876,-2.92052,-0.215587}};
			path[]={{-10},{-10},{0},{5},{1},{6},{2},{7},{3},{8},{4},{9}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class C_Kart_01_F
	{
		class driver
		{
			selections[]={{-0.0112991,-0.211384,0.243923}};
		};
		class cargo
		{
			selections[]={};
			path[]={};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class C_Kart_01_Fuel_F
	{
		class driver
		{
			selections[]={{-0.0113068,-0.21138,0.243924}};
		};
		class cargo
		{
			selections[]={};
			path[]={};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class C_Kart_01_Blu_F
	{
		class driver
		{
			selections[]={{-0.0112915,-0.21138,0.243923}};
		};
		class cargo
		{
			selections[]={};
			path[]={};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class C_Kart_01_Red_F
	{
		class driver
		{
			selections[]={{-0.0113068,-0.211384,0.243923}};
		};
		class cargo
		{
			selections[]={};
			path[]={};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class C_Kart_01_Vrana_F
	{
		class driver
		{
			selections[]={{-0.0112991,-0.21138,0.243924}};
		};
		class cargo
		{
			selections[]={};
			path[]={};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class dbo_CIV_new_bike
	{
		class driver
		{
			selections[]={{-0.0181084,-0.318169,1.13739}};
		};
		class cargo
		{
			selections[]={};
			path[]={};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class dbo_CIV_ol_bike
	{
		class driver
		{
			selections[]={{0.00187302,-0.254639,0.205034}};
		};
		class cargo
		{
			selections[]={};
			path[]={};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Hatchback_Beige
	{
		class driver
		{
			selections[]={{-0.37159,-0.037674,-0.673427}};
		};
		class cargo
		{
			selections[]={{0.371841,-0.0576859,-0.695304},{0.31469,-1.14083,-0.678605},{-0.402512,-1.06092,-0.648402}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Hatchback_Green
	{
		class driver
		{
			selections[]={{-0.371712,-0.0356522,-0.673563}};
		};
		class cargo
		{
			selections[]={{0.372223,-0.055687,-0.695315},{0.313171,-1.13779,-0.677545},{-0.40242,-1.05952,-0.648524}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Hatchback_Blue
	{
		class driver
		{
			selections[]={{-0.371429,-0.0356712,-0.673487}};
		};
		class cargo
		{
			selections[]={{0.372223,-0.0551643,-0.695338},{0.314163,-1.13783,-0.677726},{-0.402306,-1.05889,-0.648462}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Hatchback_BlueCustom
	{
		class driver
		{
			selections[]={{-0.371521,-0.0373421,-0.673511}};
		};
		class cargo
		{
			selections[]={{0.372505,-0.0568886,-0.69533},{0.313774,-1.13808,-0.677694},{-0.402222,-1.05811,-0.648513}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Hatchback_BeigeCustom
	{
		class driver
		{
			selections[]={{-0.371338,-0.0357742,-0.67348}};
		};
		class cargo
		{
			selections[]={{0.372246,-0.054615,-0.69534},{0.314064,-1.13652,-0.677375},{-0.402267,-1.05772,-0.64846}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Hatchback_Yellow
	{
		class driver
		{
			selections[]={{-0.37159,-0.0373306,-0.673518}};
		};
		class cargo
		{
			selections[]={{0.372589,-0.0567436,-0.695332},{0.313805,-1.13794,-0.677645},{-0.402184,-1.05827,-0.648532}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Hatchback_Grey
	{
		class driver
		{
			selections[]={{-0.371605,-0.0355759,-0.673515}};
		};
		class cargo
		{
			selections[]={{0.372185,-0.0545692,-0.69534},{0.313637,-1.13639,-0.677272},{-0.402344,-1.05724,-0.648497}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Hatchback_Black
	{
		class driver
		{
			selections[]={{-0.371254,-0.0365524,-0.67347}};
		};
		class cargo
		{
			selections[]={{0.372292,-0.0547829,-0.695343},{0.313774,-1.13589,-0.677159},{-0.402267,-1.05666,-0.648483}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Hatchback_Dark
	{
		class driver
		{
			selections[]={{-0.371666,-0.0354729,-0.673541}};
		};
		class cargo
		{
			selections[]={{0.372185,-0.0555153,-0.695331},{0.313423,-1.13748,-0.677521},{-0.402382,-1.05855,-0.648502}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Hatchback_Rusty1
	{
		class driver
		{
			selections[]={{-0.371712,-0.0356674,-0.673563}};
		};
		class cargo
		{
			selections[]={{0.372223,-0.0557556,-0.695316},{0.313217,-1.13771,-0.67753},{-0.402458,-1.05921,-0.648533}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Hatchback_Rusty2
	{
		class driver
		{
			selections[]={{-0.371712,-0.0370789,-0.673512}};
		};
		class cargo
		{
			selections[]={{0.372559,-0.0563431,-0.69531},{0.313484,-1.13771,-0.677515},{-0.402176,-1.05862,-0.648545}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Hatchback_Rusty3
	{
		class driver
		{
			selections[]={{-0.371834,-0.0373192,-0.673465}};
		};
		class cargo
		{
			selections[]={{0.37178,-0.0574074,-0.695327},{0.314041,-1.13925,-0.678122},{-0.402626,-1.06024,-0.648434}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Hatchback_Sport_Red
	{
		class driver
		{
			selections[]={{-0.371941,-0.0409737,-0.673533}};
		};
		class cargo
		{
			selections[]={{0.372017,-0.0619812,-0.695383},{0.313927,-1.14426,-0.679418},{-0.402695,-1.06668,-0.648571}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Hatchback_Sport_Blue
	{
		class driver
		{
			selections[]={{-0.371902,-0.0385094,-0.67349}};
		};
		class cargo
		{
			selections[]={{0.371895,-0.0595932,-0.695373},{0.314453,-1.1428,-0.679141},{-0.402527,-1.06468,-0.648508}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Hatchback_Sport_Orange
	{
		class driver
		{
			selections[]={{-0.371803,-0.0411224,-0.673505}};
		};
		class cargo
		{
			selections[]={{0.37207,-0.0620041,-0.695388},{0.314583,-1.1447,-0.679647},{-0.402664,-1.06715,-0.64853}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Hatchback_Sport_White
	{
		class driver
		{
			selections[]={{-0.372307,-0.0375748,-0.673509}};
		};
		class cargo
		{
			selections[]={{0.371552,-0.0577011,-0.695371},{0.31385,-1.14021,-0.678368},{-0.402336,-1.06259,-0.648527}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Hatchback_Sport_Beige
	{
		class driver
		{
			selections[]={{-0.371849,-0.0402145,-0.673498}};
		};
		class cargo
		{
			selections[]={{0.371918,-0.061367,-0.695388},{0.314232,-1.14423,-0.679489},{-0.402596,-1.0663,-0.648541}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Hatchback_Sport_Green
	{
		class driver
		{
			selections[]={{-0.371765,-0.0414925,-0.673493}};
		};
		class cargo
		{
			selections[]={{0.371964,-0.0620232,-0.695384},{0.313934,-1.14421,-0.679418},{-0.40274,-1.06778,-0.648566}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_HEMMT
	{
		class driver
		{
			selections[]={{-0.747498,4.07927,-0.485666}};
		};
		class cargo
		{
			selections[]={{0.811539,4.02793,-0.411471},{-0.901024,0.317625,-0.00233841},{-0.778374,-1.04704,-0.0239964},{-0.876945,-1.75295,0.0304589},{-0.812874,-2.44632,0.0514512},{-0.801666,-3.15039,-0.00735092},{-0.80381,-3.74315,-0.0343585},{-0.782745,-4.5388,0.152563},{0.881638,0.213737,0.0560679},{0.855064,-0.51755,-0.0565481},{0.907478,-1.06363,0.166093},{0.92511,-1.76518,0.125996},{0.903023,-2.53232,0.0339084},{0.972626,-3.22318,0.123166},{0.912895,-3.86787,0.170117},{0.860603,-4.5074,0.178384},{-0.729111,-0.375523,0.0311236}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{0},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{1},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Hunter
	{
		class driver
		{
			selections[]={{-0.520096,-1.43598,-0.438347}};
		};
		class cargo
		{
			selections[]={{0.514915,-1.41231,-0.368657},{0.487633,-2.57618,-0.335178},{-0.565117,-2.49176,-0.351688}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Ifrit
	{
		class driver
		{
			selections[]={{0.0152893,-0.761848,-0.657664}};
		};
		class cargo
		{
			selections[]={{0.491959,-2.08683,-0.66714},{-0.364738,-2.15819,-0.660189},{0.26162,-3.30756,-0.505548},{-0.348534,-3.20565,-0.52743}};
			path[]={{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Ikarus_Blue
	{
		class driver
		{
			selections[]={{-0.853882,3.93476,-0.214134}};
		};
		class cargo
		{
			selections[]={{-0.96405,0.636158,-0.304799},{-0.982727,3.06097,-0.291568},{-1.01398,-0.161346,-0.287577},{0.770737,1.82536,-0.292629},{0.784813,-3.33429,-0.278183},{-1.02808,-1.64264,-0.278186},{0.783249,-1.59517,-0.278189},{0.229065,0.981873,-0.300176},{-1.03169,-2.47708,-0.280608},{0.262299,-3.16325,-0.279455},{0.262794,-1.67657,-0.27946},{0.226837,1.80831,-0.287354},{0.231483,-2.47694,-0.240849},{0.30735,2.67923,-0.262327},{-0.986191,-3.22534,-0.276511},{-0.991585,-0.927979,-0.289399},{-0.902107,2.2633,-0.272786},{-0.949455,1.45092,-0.272757},{0.715134,0.995211,-0.265231},{-0.27845,-5.2997,0.158065},{-0.305511,-0.69986,0.158066},{-0.389595,-3.78166,0.158067},{-0.826294,-4.50942,0.158067}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Ikarus_Red
	{
		class driver
		{
			selections[]={{-0.852989,3.93784,-0.214138}};
		};
		class cargo
		{
			selections[]={{-0.962456,0.638514,-0.304704},{-0.980629,3.06223,-0.291467},{-1.01157,-0.161129,-0.287568},{0.773315,1.82509,-0.292662},{0.78212,-3.33376,-0.278236},{-1.02541,-1.64296,-0.278226},{0.785553,-1.59521,-0.278203},{0.230835,0.982065,-0.300175},{-1.03067,-2.47775,-0.280622},{0.261726,-3.16264,-0.279505},{0.263222,-1.67731,-0.279532},{0.227486,1.80786,-0.287423},{0.231674,-2.4773,-0.240855},{0.30751,2.67936,-0.262324},{-0.986267,-3.22606,-0.27645},{-0.991745,-0.928699,-0.28934},{-0.901207,2.26136,-0.272598},{-0.949585,1.45156,-0.272576},{0.699936,1.0424,-0.271404},{-0.275307,-5.29978,0.15807},{-0.302704,-0.699478,0.15807},{-0.392212,-3.78387,0.158074},{-0.82225,-4.51084,0.158077}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Ikarus_Party
	{
		class driver
		{
			selections[]={{-0.852509,3.93784,-0.214141}};
		};
		class cargo
		{
			selections[]={{-0.962166,0.638538,-0.304704},{-0.980446,3.062,-0.291487},{-1.01144,-0.161476,-0.287598},{0.773407,1.82495,-0.292675},{0.782043,-3.33398,-0.27822},{-1.02536,-1.64263,-0.278197},{0.785606,-1.59504,-0.278189},{0.230919,0.981884,-0.300191},{-1.03082,-2.47814,-0.280658},{0.261734,-3.16224,-0.279541},{0.26326,-1.67737,-0.279539},{0.227203,1.80828,-0.287377},{0.231712,-2.47648,-0.240847},{0.307465,2.68008,-0.262289},{-0.986206,-3.22662,-0.276401},{-0.991661,-0.928247,-0.289299},{-0.900246,2.2591,-0.272507},{-0.94957,1.45181,-0.272554},{0.714256,1.00165,-0.26477},{-0.274834,-5.2998,0.158072},{-0.300865,-0.699215,0.158076},{-0.393272,-3.78471,0.158077},{-0.823586,-4.51046,0.158072}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Kart_BluKing
	{
		class driver
		{
			selections[]={{-0.0112915,-0.211384,0.243923}};
		};
		class cargo
		{
			selections[]={};
			path[]={};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Kart_RedStone
	{
		class driver
		{
			selections[]={{-0.0112991,-0.211384,0.243923}};
		};
		class cargo
		{
			selections[]={};
			path[]={};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Kart_Vrana
	{
		class driver
		{
			selections[]={{-0.0112991,-0.21138,0.243924}};
		};
		class cargo
		{
			selections[]={};
			path[]={};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Kart_Green
	{
		class driver
		{
			selections[]={{-0.0112991,-0.211384,0.243924}};
		};
		class cargo
		{
			selections[]={};
			path[]={};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Kart_Blue
	{
		class driver
		{
			selections[]={{-0.0113068,-0.211384,0.243923}};
		};
		class cargo
		{
			selections[]={};
			path[]={};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Kart_Orange
	{
		class driver
		{
			selections[]={{-0.0113068,-0.211384,0.243924}};
		};
		class cargo
		{
			selections[]={};
			path[]={};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Kart_White
	{
		class driver
		{
			selections[]={{-0.0112991,-0.21138,0.243924}};
		};
		class cargo
		{
			selections[]={};
			path[]={};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Kart_Yellow
	{
		class driver
		{
			selections[]={{-0.0112991,-0.21138,0.243923}};
		};
		class cargo
		{
			selections[]={};
			path[]={};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Kart_Black
	{
		class driver
		{
			selections[]={{-0.0113068,-0.21138,0.243924}};
		};
		class cargo
		{
			selections[]={};
			path[]={};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Lada_Green
	{
		class driver
		{
			selections[]={{0.0151825,-0.0519867,0.142465}};
		};
		class cargo
		{
			selections[]={{0.000961304,0.0343208,-0.0336213},{0.000831604,0.0346184,-0.0336223},{0.000732422,0.0348644,-0.0336223},{0.047905,-0.0108166,-0.00649118}};
			path[]={{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Lada_Taxi
	{
		class driver
		{
			selections[]={{0.0146484,-0.0516167,0.142457}};
		};
		class cargo
		{
			selections[]={{0.000495911,0.0342121,-0.0336251},{0.00038147,0.0342293,-0.033618},{0.000289917,0.0341492,-0.033617},{0.0474472,-0.0117607,-0.00648689}};
			path[]={{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Lada_Red
	{
		class driver
		{
			selections[]={{0.0146408,-0.05159,0.142461}};
		};
		class cargo
		{
			selections[]={{0.000495911,0.0342789,-0.0336232},{0.00037384,0.0342846,-0.0336213},{0.000274658,0.0341644,-0.0336227},{0.0474243,-0.0117626,-0.00649118}};
			path[]={{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Lada_White
	{
		class driver
		{
			selections[]={{0.015152,-0.0579491,0.142488}};
		};
		class cargo
		{
			selections[]={{0.000762939,0.0251656,-0.0335875},{0.000144958,0.0266304,-0.0336018},{-0.000534058,0.0302887,-0.0336099},{0.0461197,-0.0131626,-0.00647354}};
			path[]={{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Lada_Hipster
	{
		class driver
		{
			selections[]={{0.0150909,-0.0515842,0.142465}};
		};
		class cargo
		{
			selections[]={{0.000907898,0.0345459,-0.0336218},{0.000793457,0.0348148,-0.0336232},{0.000701904,0.0350037,-0.0336227},{0.0479126,-0.0108967,-0.00649118}};
			path[]={{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Landrover_Civ_02
	{
		class driver
		{
			selections[]={{-0.00171661,-0.0100212,0.0678673}};
		};
		class cargo
		{
			selections[]={{-0.0326309,0.00799179,0.0717058},{0.00236511,-0.0265236,0.0660696},{-0.00906372,-0.000391006,0.0706477},{0.00241852,-0.0276833,0.0660872},{0.0019989,0.0106926,0.0802846},{0.0141907,0.0692387,0.108403},{0.0142441,0.0709991,0.108402},{0.000465393,0.0142307,0.0819917}};
			path[]={{-10},{-10},{-10},{-10},{-10},{0},{1},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_LandRover_Red
	{
		class driver
		{
			selections[]={{-0.00189209,-0.00963974,0.0678654}};
		};
		class cargo
		{
			selections[]={{-0.0327988,0.00816917,0.0718465},{0.0022583,-0.0269833,0.0660534},{-0.00891876,0.000797272,0.0708389},{0.00247955,-0.0265408,0.0660858},{0.00180054,0.0114803,0.0798016},{0.0141678,0.0696144,0.108401},{0.0142365,0.071146,0.1084},{0.000915527,0.0138626,0.0818577}};
			path[]={{-10},{-10},{-10},{-10},{-10},{0},{1},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_LandRover_Urban
	{
		class driver
		{
			selections[]={{-0.000320435,-0.0101528,0.0678725}};
		};
		class cargo
		{
			selections[]={{-0.0315704,0.0093441,0.0718508},{0.00317383,-0.0243378,0.0660496},{-0.00816345,0.00377274,0.0708933},{0.00312805,-0.0223236,0.0660806},{0.00244141,0.0170631,0.0798774},{0.0147095,0.0742931,0.108397},{0.558464,-2.14132,-0.317484},{-0.618004,-2.05644,-0.336291}};
			path[]={{-10},{-10},{-10},{-10},{-10},{0},{1},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_LandRover_Green
	{
		class driver
		{
			selections[]={{-0.508438,0.0964603,-0.485146}};
		};
		class cargo
		{
			selections[]={{0.469803,0.148079,-0.509947},{-0.66143,-0.562551,-0.252489},{0.637993,-0.662474,-0.253589},{-0.665993,-1.28805,-0.252461},{0.629707,-1.37324,-0.238335},{-0.566238,-2.06983,-0.30972},{0.561401,-2.14181,-0.317488},{-0.622551,-2.05556,-0.336262}};
			path[]={{-10},{-10},{-10},{-10},{-10},{0},{1},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_LandRover_Sand
	{
		class driver
		{
			selections[]={{-0.508743,0.096611,-0.485145}};
		};
		class cargo
		{
			selections[]={{0.469444,0.147995,-0.509927},{-0.661751,-0.562292,-0.252494},{0.637894,-0.662539,-0.253452},{-0.666039,-1.28796,-0.252462},{0.630272,-1.37338,-0.238883},{-0.566727,-2.0697,-0.30972},{0.562126,-2.14191,-0.317489},{-0.623016,-2.05571,-0.33626}};
			path[]={{-10},{-10},{-10},{-10},{-10},{0},{1},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_LandRover_Desert
	{
		class driver
		{
			selections[]={{-0.50885,0.0967922,-0.485145}};
		};
		class cargo
		{
			selections[]={{0.469162,0.148146,-0.50985},{-0.661819,-0.562086,-0.252494},{0.637337,-0.662588,-0.253308},{-0.666138,-1.28787,-0.252461},{0.63118,-1.37353,-0.239161},{-0.567459,-2.06962,-0.309721},{0.562042,-2.14198,-0.317488},{-0.622421,-2.05592,-0.336389}};
			path[]={{-10},{-10},{-10},{-10},{-10},{0},{1},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class LR_Ambulance_Base
	{
		class driver
		{
			selections[]={{-0.507408,0.821371,-0.485245}};
		};
		class cargo
		{
			selections[]={{0.470947,0.874916,-0.509515},{-0.658936,0.160141,-0.25265},{0.636154,0.0629368,-0.25288},{-0.663078,-0.565281,-0.252619},{0.628326,-0.651379,-0.241261},{-0.621643,-1.33227,-0.24016}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_LandRover_Ambulance_Green
	{
		class driver
		{
			selections[]={{-0.507248,0.824203,-0.485244}};
		};
		class cargo
		{
			selections[]={{0.470978,0.877483,-0.509367},{-0.657143,0.159929,-0.252705},{0.633514,0.0628853,-0.252886},{-0.661346,-0.565348,-0.252619},{0.629089,-0.652363,-0.241741},{-0.62323,-1.33121,-0.24078}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_LandRover_Ambulance_Desert
	{
		class driver
		{
			selections[]={{-0.507393,0.82283,-0.485246}};
		};
		class cargo
		{
			selections[]={{0.470169,0.874966,-0.509442},{-0.660225,0.16144,-0.252697},{0.63739,0.061327,-0.252893},{-0.665031,-0.563536,-0.252621},{0.632248,-0.653412,-0.241634},{-0.625824,-1.33022,-0.240587}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_LandRover_Ambulance_Sand
	{
		class driver
		{
			selections[]={{-0.506676,0.824368,-0.485242}};
		};
		class cargo
		{
			selections[]={{0.47084,0.875917,-0.509481},{-0.658928,0.160795,-0.252658},{0.635773,0.0620823,-0.252885},{-0.663376,-0.564404,-0.252622},{0.63063,-0.652086,-0.241302},{-0.625206,-1.33154,-0.240199}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Octavius_White
	{
		class driver
		{
			selections[]={{-0.00088501,-0.0476723,-0.0433607}};
		};
		class cargo
		{
			selections[]={{0.000152588,-0.0159111,0.0253882},{-0.0424423,0.000741959,0.0644636},{-0.0319748,0.00946045,0.0722666}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Octavius_Black
	{
		class driver
		{
			selections[]={{-0.000259399,-0.0483627,-0.0433006}};
		};
		class cargo
		{
			selections[]={{0.000350952,-0.0155487,0.0254149},{-0.0415497,0.00127029,0.0643935},{-0.0317459,0.0121841,0.0723195}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Offroad_Red
	{
		class driver
		{
			selections[]={{-0.00122833,-0.048214,-0.0434895}};
		};
		class cargo
		{
			selections[]={{-0.000816345,-0.0136032,0.0254054},{0.00110626,-0.0333481,0.1078},{-0.00674438,-0.0543671,0.0459232},{-0.0108414,-0.0496368,0.049067},{-0.0104218,-0.0498314,0.049067}};
			path[]={{-10},{0},{1},{2},{3}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Offroad_Beige
	{
		class driver
		{
			selections[]={{-0.00138092,-0.0483093,-0.0435772}};
		};
		class cargo
		{
			selections[]={{-0.000938416,-0.0136452,0.0253797},{0.00106049,-0.0332947,0.1078},{-0.00676727,-0.0541191,0.0459242},{-0.0108566,-0.0490303,0.049068},{-0.010437,-0.0488892,0.0490689}};
			path[]={{-10},{0},{1},{2},{3}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Offroad_White
	{
		class driver
		{
			selections[]={{0.000244141,-0.0480118,-0.0434694}};
		};
		class cargo
		{
			selections[]={{0.000549316,-0.0122337,0.0254068},{0.0022049,-0.0326996,0.107803},{-0.00598145,-0.0557594,0.0459266},{-0.0105362,-0.0519638,0.0490704},{-0.0105362,-0.0519447,0.0490723}};
			path[]={{-10},{0},{1},{2},{3}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Offroad_Blue
	{
		class driver
		{
			selections[]={{-0.00131989,-0.0483189,-0.0435305}};
		};
		class cargo
		{
			selections[]={{-0.000862122,-0.0135078,0.0253901},{0.00115204,-0.0330696,0.107801},{-0.00666809,-0.0539932,0.0459242},{-0.0107269,-0.049099,0.0490685},{-0.0103607,-0.049263,0.0490694}};
			path[]={{-10},{0},{1},{2},{3}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Offroad_DarkRed
	{
		class driver
		{
			selections[]={{0.000480652,-0.0454712,-0.0434351}};
		};
		class cargo
		{
			selections[]={{0.000747681,-0.0103378,0.0254111},{0.00239563,-0.0301056,0.107807},{-0.0058136,-0.0513458,0.0459309},{-0.0103683,-0.0470734,0.0490737},{-0.010376,-0.048008,0.0490718}};
			path[]={{-10},{0},{1},{2},{3}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Offroad_BlueCustom
	{
		class driver
		{
			selections[]={{-0.417053,0.20784,-0.450957}};
		};
		class cargo
		{
			selections[]={{0.418671,0.111519,-0.472694},{0.149223,-2.33553,-0.474407},{-0.384346,-2.25701,-0.493414},{0.236992,-0.950924,-0.557517},{-0.410492,-1.00377,-0.554673}};
			path[]={{-10},{0},{1},{2},{3}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Offroad_Guerilla01
	{
		class driver
		{
			selections[]={{-0.417366,0.207272,-0.451006}};
		};
		class cargo
		{
			selections[]={{0.418419,0.10923,-0.472715},{0.148865,-2.33184,-0.474419},{-0.383095,-2.25256,-0.493418},{0.237183,-0.945766,-0.557518},{-0.410301,-0.999817,-0.554673}};
			path[]={{-10},{0},{1},{2},{3}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Offroad_Guerilla02
	{
		class driver
		{
			selections[]={{-0.417412,0.20583,-0.450942}};
		};
		class cargo
		{
			selections[]={{0.418427,0.109985,-0.472718},{0.149002,-2.33275,-0.474417},{-0.383194,-2.25294,-0.49342},{0.237167,-0.946712,-0.55752},{-0.410332,-0.999832,-0.554672}};
			path[]={{-10},{0},{1},{2},{3}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Offroad_Guerilla03
	{
		class driver
		{
			selections[]={{-0.417122,0.207726,-0.450994}};
		};
		class cargo
		{
			selections[]={{0.418648,0.111485,-0.472701},{0.149208,-2.33544,-0.474406},{-0.384338,-2.25701,-0.493414},{0.237,-0.951256,-0.557518},{-0.4105,-1.00454,-0.554672}};
			path[]={{-10},{0},{1},{2},{3}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Offroad_Guerilla04
	{
		class driver
		{
			selections[]={{-0.417885,0.205639,-0.450788}};
		};
		class cargo
		{
			selections[]={{0.418129,0.109097,-0.472698},{0.148918,-2.33244,-0.474423},{-0.383514,-2.25331,-0.493425},{0.236938,-0.948132,-0.557526},{-0.410538,-1.00289,-0.554677}};
			path[]={{-10},{0},{1},{2},{3}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Offroad_Guerilla05
	{
		class driver
		{
			selections[]={{-0.417068,0.208984,-0.451137}};
		};
		class cargo
		{
			selections[]={{0.418686,0.111931,-0.472707},{0.149109,-2.33498,-0.474408},{-0.383919,-2.25521,-0.49342},{0.237022,-0.94865,-0.557523},{-0.410461,-1.00314,-0.554676}};
			path[]={{-10},{0},{1},{2},{3}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Offroad_Guerilla06
	{
		class driver
		{
			selections[]={{-0.418678,0.204853,-0.450762}};
		};
		class cargo
		{
			selections[]={{0.41729,0.10857,-0.472712},{0.149773,-2.33271,-0.474417},{-0.383194,-2.25443,-0.493421},{0.237083,-0.948235,-0.557523},{-0.410591,-1.00251,-0.554677}};
			path[]={{-10},{0},{1},{2},{3}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Offroad_Guerilla07
	{
		class driver
		{
			selections[]={{-0.417366,0.206505,-0.450954}};
		};
		class cargo
		{
			selections[]={{0.418442,0.110172,-0.472707},{0.148941,-2.33235,-0.474419},{-0.383171,-2.25284,-0.493421},{0.237183,-0.946796,-0.55752},{-0.410324,-1.00096,-0.554674}};
			path[]={{-10},{0},{1},{2},{3}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Offroad_Guerilla08
	{
		class driver
		{
			selections[]={{-0.41703,0.208775,-0.451052}};
		};
		class cargo
		{
			selections[]={{0.418701,0.112385,-0.472693},{0.149223,-2.33569,-0.474404},{-0.384163,-2.25621,-0.493416},{0.237,-0.9496,-0.557521},{-0.410484,-1.00376,-0.554675}};
			path[]={{-10},{0},{1},{2},{3}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Offroad_Guerilla09
	{
		class driver
		{
			selections[]={{-0.417267,0.207417,-0.451122}};
		};
		class cargo
		{
			selections[]={{0.418587,0.111259,-0.472739},{0.149162,-2.33518,-0.474407},{-0.384293,-2.25682,-0.493415},{0.236992,-0.951107,-0.557517},{-0.410484,-1.00436,-0.554671}};
			path[]={{-10},{0},{1},{2},{3}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Offroad_Guerilla10
	{
		class driver
		{
			selections[]={{-0.417015,0.208862,-0.451131}};
		};
		class cargo
		{
			selections[]={{0.418747,0.111652,-0.472708},{0.149017,-2.33469,-0.474411},{-0.383888,-2.25496,-0.493421},{0.236984,-0.948219,-0.557524},{-0.410469,-1.00257,-0.554677}};
			path[]={{-10},{0},{1},{2},{3}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Offroad_Guerilla11
	{
		class driver
		{
			selections[]={{-0.417,0.208431,-0.451073}};
		};
		class cargo
		{
			selections[]={{0.418755,0.111252,-0.472705},{0.148941,-2.3341,-0.474414},{-0.383659,-2.25405,-0.493422},{0.237015,-0.947754,-0.557525},{-0.410469,-1.0025,-0.554678}};
			path[]={{-10},{0},{1},{2},{3}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Offroad_Guerilla12
	{
		class driver
		{
			selections[]={{-0.417068,0.207478,-0.450943}};
		};
		class cargo
		{
			selections[]={{0.418678,0.111259,-0.472698},{0.149193,-2.33532,-0.474407},{-0.38427,-2.2567,-0.493416},{0.236992,-0.950603,-0.557519},{-0.4105,-1.00347,-0.554673}};
			path[]={{-10},{0},{1},{2},{3}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Offroad_Rusty1
	{
		class driver
		{
			selections[]={{-0.417,0.207161,-0.450888}};
		};
		class cargo
		{
			selections[]={{0.418732,0.110966,-0.472694},{0.149124,-2.33508,-0.474409},{-0.38427,-2.25657,-0.493417},{0.236984,-0.950714,-0.557518},{-0.410507,-1.00385,-0.554674}};
			path[]={{-10},{0},{1},{2},{3}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Offroad_Rusty2
	{
		class driver
		{
			selections[]={{-0.417999,0.205513,-0.450716}};
		};
		class cargo
		{
			selections[]={{0.417969,0.109276,-0.472697},{0.149185,-2.33302,-0.47442},{-0.383606,-2.25388,-0.493423},{0.2369,-0.947891,-0.557525},{-0.410576,-1.00266,-0.554678}};
			path[]={{-10},{0},{1},{2},{3}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Offroad_Rusty3
	{
		class driver
		{
			selections[]={{-0.417252,0.207699,-0.451132}};
		};
		class cargo
		{
			selections[]={{0.418579,0.111481,-0.472738},{0.149239,-2.33554,-0.474406},{-0.384323,-2.25698,-0.493415},{0.237007,-0.950836,-0.557518},{-0.410492,-1.00365,-0.554673}};
			path[]={{-10},{0},{1},{2},{3}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Offroad_Armed_Guerilla01
	{
		class driver
		{
			selections[]={{-0.419312,0.345247,-1.00142}};
		};
		class cargo
		{
			selections[]={{0.417282,0.246208,-1.02301}};
			path[]={{-10}};
		};
		class turret
		{
			selections[]={{0.533485,-2.05092,-0.246944}};
			path[]={{0}};
		};
	};
	class Exile_Car_Offroad_Armed_Guerilla02
	{
		class driver
		{
			selections[]={{-0.418991,0.344948,-1.00146}};
		};
		class cargo
		{
			selections[]={{0.418381,0.247261,-1.02289}};
			path[]={{-10}};
		};
		class turret
		{
			selections[]={{0.536316,-1.9402,-0.246941}};
			path[]={{0}};
		};
	};
	class Exile_Car_Offroad_Armed_Guerilla03
	{
		class driver
		{
			selections[]={{-0.418846,0.346207,-1.00156}};
		};
		class cargo
		{
			selections[]={{0.41851,0.247158,-1.02296}};
			path[]={{-10}};
		};
		class turret
		{
			selections[]={{0.533714,-1.91593,-0.246939}};
			path[]={{0}};
		};
	};
	class Exile_Car_Offroad_Armed_Guerilla04
	{
		class driver
		{
			selections[]={{-0.419098,0.345442,-1.00139}};
		};
		class cargo
		{
			selections[]={{0.417305,0.246197,-1.02312}};
			path[]={{-10}};
		};
		class turret
		{
			selections[]={{0.532982,-2.05704,-0.246938}};
			path[]={{0}};
		};
	};
	class Exile_Car_Offroad_Armed_Guerilla05
	{
		class driver
		{
			selections[]={{-0.420105,0.344194,-1.00139}};
		};
		class cargo
		{
			selections[]={{0.416534,0.245014,-1.02298}};
			path[]={{-10}};
		};
		class turret
		{
			selections[]={{0.503181,-2.1826,-0.246939}};
			path[]={{0}};
		};
	};
	class Exile_Car_Offroad_Armed_Guerilla06
	{
		class driver
		{
			selections[]={{-0.419334,0.34576,-1.00143}};
		};
		class cargo
		{
			selections[]={{0.417679,0.247169,-1.02311}};
			path[]={{-10}};
		};
		class turret
		{
			selections[]={{0.536873,-1.95455,-0.246936}};
			path[]={{0}};
		};
	};
	class Exile_Car_Offroad_Armed_Guerilla07
	{
		class driver
		{
			selections[]={{-0.418846,0.343994,-1.00136}};
		};
		class cargo
		{
			selections[]={{0.418182,0.246311,-1.02298}};
			path[]={{-10}};
		};
		class turret
		{
			selections[]={{0.533844,-1.92246,-0.24694}};
			path[]={{0}};
		};
	};
	class Exile_Car_Offroad_Armed_Guerilla08
	{
		class driver
		{
			selections[]={{-0.420006,0.344236,-1.00136}};
		};
		class cargo
		{
			selections[]={{0.41655,0.245029,-1.02304}};
			path[]={{-10}};
		};
		class turret
		{
			selections[]={{0.509933,-2.16278,-0.246937}};
			path[]={{0}};
		};
	};
	class Exile_Car_Offroad_Armed_Guerilla09
	{
		class driver
		{
			selections[]={{-0.419426,0.344856,-1.00136}};
		};
		class cargo
		{
			selections[]={{0.417244,0.24556,-1.02308}};
			path[]={{-10}};
		};
		class turret
		{
			selections[]={{0.536674,-2.01582,-0.246941}};
			path[]={{0}};
		};
	};
	class Exile_Car_Offroad_Armed_Guerilla10
	{
		class driver
		{
			selections[]={{-0.419876,0.343952,-1.00122}};
		};
		class cargo
		{
			selections[]={{0.416298,0.24468,-1.02313}};
			path[]={{-10}};
		};
		class turret
		{
			selections[]={{0.512764,-2.15396,-0.246934}};
			path[]={{0}};
		};
	};
	class Exile_Car_Offroad_Armed_Guerilla11
	{
		class driver
		{
			selections[]={{-0.418854,0.346062,-1.00153}};
		};
		class cargo
		{
			selections[]={{0.418152,0.247555,-1.02301}};
			path[]={{-10}};
		};
		class turret
		{
			selections[]={{0.53653,-1.95052,-0.246938}};
			path[]={{0}};
		};
	};
	class Exile_Car_Offroad_Armed_Guerilla12
	{
		class driver
		{
			selections[]={{-0.418816,0.346657,-1.00157}};
		};
		class cargo
		{
			selections[]={{0.418144,0.246494,-1.02303}};
			path[]={{-10}};
		};
		class turret
		{
			selections[]={{0.535904,-1.94355,-0.246937}};
			path[]={{0}};
		};
	};
	class Exile_Car_Offroad_Repair_Civillian
	{
		class driver
		{
			selections[]={{-0.000526428,-0.0437775,-0.0433536}};
		};
		class cargo
		{
			selections[]={{0.000366211,-0.0104256,0.0253687},{-0.00332642,-0.46632,0.206713},{-0.0286179,-0.487427,0.173008}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Offroad_Repair_Red
	{
		class driver
		{
			selections[]={{-0.000442505,-0.044117,-0.0433693}};
		};
		class cargo
		{
			selections[]={{0.000495911,-0.0107727,0.025373},{-0.00323486,-0.467056,0.206737},{-0.0285339,-0.488178,0.173006}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Offroad_Repair_Beige
	{
		class driver
		{
			selections[]={{-0.000534058,-0.0439186,-0.0433922}};
		};
		class cargo
		{
			selections[]={{0.000549316,-0.0105247,0.0253658},{-0.0031662,-0.466831,0.206667},{-0.0285339,-0.487598,0.173006}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Offroad_Repair_White
	{
		class driver
		{
			selections[]={{-0.000572205,-0.0435562,-0.043355}};
		};
		class cargo
		{
			selections[]={{0.000617981,-0.009552,0.0253859},{-0.00305176,-0.4655,0.2068},{-0.0282669,-0.486477,0.173012}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Offroad_Repair_Blue
	{
		class driver
		{
			selections[]={{-0.000617981,-0.0455246,-0.0433331}};
		};
		class cargo
		{
			selections[]={{0.000106812,-0.0131645,0.0253758},{-0.00354004,-0.469788,0.206783},{-0.0286331,-0.490627,0.172999}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Offroad_Repair_DarkRed
	{
		class driver
		{
			selections[]={{-0.000656128,-0.0447083,-0.043386}};
		};
		class cargo
		{
			selections[]={{0.000404358,-0.0113106,0.0253625},{-0.00328064,-0.46722,0.206691},{-0.0286331,-0.488655,0.173004}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Offroad_Repair_BlueCustom
	{
		class driver
		{
			selections[]={{-0.000389099,-0.0455589,-0.0433559}};
		};
		class cargo
		{
			selections[]={{0.000473022,-0.0125809,0.0253792},{-0.00330353,-0.467846,0.206801},{-0.0285034,-0.488197,0.173008}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Offroad_Repair_Guerilla01
	{
		class driver
		{
			selections[]={{-0.00164795,-0.0453701,-0.0433788}};
		};
		class cargo
		{
			selections[]={{-0.000724792,-0.0131626,0.0253654},{-0.00448608,-0.469992,0.206736},{-0.0296021,-0.490295,0.173}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Offroad_Repair_Guerilla02
	{
		class driver
		{
			selections[]={{-0.00087738,-0.0452538,-0.0433483}};
		};
		class cargo
		{
			selections[]={{-0.000114441,-0.0129662,0.0253797},{-0.00379944,-0.46941,0.206792},{-0.0287704,-0.489887,0.173006}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Offroad_Repair_Guerilla03
	{
		class driver
		{
			selections[]={{-0.000335693,-0.0457153,-0.043335}};
		};
		class cargo
		{
			selections[]={{0.000411987,-0.0115128,0.0253825},{-0.0033493,-0.467773,0.206799},{-0.0285568,-0.489765,0.173007}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Offroad_Repair_Guerilla04
	{
		class driver
		{
			selections[]={{-0.00171661,-0.0459366,-0.0433578}};
		};
		class cargo
		{
			selections[]={{-0.00112915,-0.0133877,0.0253782},{-0.00502014,-0.469913,0.206786},{-0.0301743,-0.490532,0.173003}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Offroad_Repair_Guerilla05
	{
		class driver
		{
			selections[]={{-0.000617981,-0.0445251,-0.0433631}};
		};
		class cargo
		{
			selections[]={{0.000617981,-0.0103683,0.0253782},{-0.00305176,-0.465786,0.206772},{-0.0283127,-0.486187,0.173011}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Offroad_Repair_Guerilla06
	{
		class driver
		{
			selections[]={{-1.52588e-005,-0.043087,-0.0433164}};
		};
		class cargo
		{
			selections[]={{0.000717163,-0.0101776,0.025403},{-0.00317383,-0.46653,0.206929},{-0.0283279,-0.487679,0.173033}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Offroad_Repair_Guerilla07
	{
		class driver
		{
			selections[]={{-0.000854492,-0.0437012,-0.0433741}};
		};
		class cargo
		{
			selections[]={{0.000198364,-0.0104141,0.0253716},{0.399696,-2.16794,-0.431602},{-0.494804,-2.46002,-0.47988}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Offroad_Repair_Guerilla08
	{
		class driver
		{
			selections[]={{-0.417931,0.209473,-0.450985}};
		};
		class cargo
		{
			selections[]={{0.418594,0.111908,-0.472734},{0.398689,-2.16729,-0.431629},{-0.492584,-2.46062,-0.47988}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Offroad_Repair_Guerilla09
	{
		class driver
		{
			selections[]={{-0.417946,0.208508,-0.450866}};
		};
		class cargo
		{
			selections[]={{0.418549,0.110268,-0.472718},{0.399712,-2.16756,-0.431565},{-0.493385,-2.46059,-0.479881}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Offroad_Repair_Guerilla10
	{
		class driver
		{
			selections[]={{-0.419022,0.207634,-0.450794}};
		};
		class cargo
		{
			selections[]={{0.416931,0.108616,-0.472722},{0.402107,-2.17001,-0.431522},{-0.49604,-2.45852,-0.479885}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Offroad_Repair_Guerilla11
	{
		class driver
		{
			selections[]={{-0.417816,0.206982,-0.450717}};
		};
		class cargo
		{
			selections[]={{0.418358,0.108913,-0.472707},{0.400459,-2.16804,-0.431454},{-0.494263,-2.46029,-0.479868}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Offroad_Repair_Guerilla12
	{
		class driver
		{
			selections[]={{-0.418121,0.208481,-0.450858}};
		};
		class cargo
		{
			selections[]={{0.418488,0.109962,-0.472711},{0.400475,-2.16778,-0.431479},{-0.493614,-2.46061,-0.479875}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class TractorOld
	{
		class driver
		{
			selections[]={{-0.0787964,-1.68858,-0.265375}};
		};
		class cargo
		{
			selections[]={};
			path[]={};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_OldTractor_Red
	{
		class driver
		{
			selections[]={{-0.0799255,-1.69053,-0.265329}};
		};
		class cargo
		{
			selections[]={};
			path[]={};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Strider
	{
		class driver
		{
			selections[]={{0.0118637,0.921307,-0.533658}};
		};
		class cargo
		{
			selections[]={{0.677811,-0.202007,-0.497213},{0.0178757,-0.145527,-0.532902}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={{-0.73317,-0.193134,-0.55819}};
			path[]={{0}};
		};
	};
	class Exile_Car_SUV_Red
	{
		class driver
		{
			selections[]={{0.0271454,0.00691223,0.0421023}};
		};
		class cargo
		{
			selections[]={{0.000526428,-0.0115967,0.0253873},{-0.000701904,-0.0105705,0.0701642},{-0.0410843,0.000354767,0.0643692}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_SUV_Black
	{
		class driver
		{
			selections[]={{0.0271378,0.00678253,0.0421019}};
		};
		class cargo
		{
			selections[]={{0.000511169,-0.0118179,0.0254054},{-0.00111389,-0.0107269,0.0702987},{-0.0408707,-0.000591278,0.0643167}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_SUV_Grey
	{
		class driver
		{
			selections[]={{0.0271912,0.0071373,0.0421014}};
		};
		class cargo
		{
			selections[]={{0.000541687,-0.0113564,0.0254064},{-0.00104523,-0.0100403,0.0702834},{-0.0407562,-0.000328064,0.0642724}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_SUV_Orange
	{
		class driver
		{
			selections[]={{0.027153,0.00691223,0.0421023}};
		};
		class cargo
		{
			selections[]={{0.000526428,-0.0116425,0.0253959},{-0.00119019,-0.0105057,0.0703239},{-0.0408401,-0.000423431,0.0643096}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_SUV_Rusty1
	{
		class driver
		{
			selections[]={{0.0271378,0.0066185,0.0421028}};
		};
		class cargo
		{
			selections[]={{0.000511169,-0.0122032,0.0254116},{-0.00128937,-0.0112038,0.0703492},{-0.040863,-0.00104904,0.0643001}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_SUV_Rusty2
	{
		class driver
		{
			selections[]={{0.027153,0.00710297,0.0421014}};
		};
		class cargo
		{
			selections[]={{0.000541687,-0.0113258,0.0253906},{-0.000793457,-0.0101929,0.0701981},{-0.0409546,0.000411987,0.0643582}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_SUV_Rusty3
	{
		class driver
		{
			selections[]={{0.0271835,0.0068512,0.0421019}};
		};
		class cargo
		{
			selections[]={{0.000534058,-0.0115814,0.025373},{-0.000640869,-0.0105476,0.0701475},{-0.0411987,0.00075531,0.0643802}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class SUV_Base
	{
		class driver
		{
			selections[]={{-0.426826,0.525753,0.0331712}};
		};
		class cargo
		{
			selections[]={{0.418381,0.40517,0.0516033},{0.432289,-0.441101,0.00292397},{-0.445557,-0.44762,0.0160704},{-0.313499,-1.54,0.0478525},{0.241417,-1.51352,0.0512333}};
			path[]={{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_SUVXL_Black
	{
		class driver
		{
			selections[]={{-0.426826,0.525711,0.0331726}};
		};
		class cargo
		{
			selections[]={{0.418304,0.405117,0.0515933},{0.432213,-0.44112,0.00288534},{-0.445618,-0.447659,0.0160217},{-0.312546,-1.5406,0.0476604},{0.240768,-1.51324,0.0516386}};
			path[]={{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Tempest
	{
		class driver
		{
			selections[]={{-0.672485,2.62984,-0.215972}};
		};
		class cargo
		{
			selections[]={{0.759796,2.53213,-0.197327},{-0.923569,-0.554388,0.146202},{-0.899162,-2.1527,0.161611},{-0.894897,-2.90489,0.222035},{-0.845375,-3.63934,0.230001},{-0.858101,-4.50954,0.311601},{0.955078,-0.553873,0.134734},{0.921616,-1.39408,0.309165},{0.861824,-2.09369,0.224352},{-0.876617,-1.36662,0.145427},{0.966705,-3.55272,0.35358},{0.945526,-4.53857,0.319164},{0.897827,-2.87205,0.233448}};
			path[]={{-10},{-10},{-10},{-10},{-10},{0},{-10},{-10},{-10},{-10},{-10},{1},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_TowTractor_White
	{
		class driver
		{
			selections[]={{-0.601646,-0.964909,-0.816053}};
		};
		class cargo
		{
			selections[]={{0.0018158,-0.0326195,0.107808}};
			path[]={{0}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Tractor_Base
	{
		class driver
		{
			selections[]={{-0.088501,-2.15174,-0.134808}};
		};
		class cargo
		{
			selections[]={};
			path[]={};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Tractor_Red
	{
		class driver
		{
			selections[]={{-0.0884933,-2.15163,-0.134809}};
		};
		class cargo
		{
			selections[]={};
			path[]={};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class UAZ_Base
	{
		class driver
		{
			selections[]={{-0.346458,0.0945053,1.01129}};
		};
		class cargo
		{
			selections[]={{-0.00164032,6.29425e-005,-0.0484591},{-0.00126648,-0.000465393,-0.0484591},{-0.0010376,-0.000808716,-0.0484605},{-0.000862122,-0.000614166,-0.0484586},{-0.000747681,-0.00031662,-0.0484567},{-0.000656128,-0.000389099,-0.0484576}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_UAZ_Green
	{
		class driver
		{
			selections[]={{-0.344536,0.0986881,1.01563}};
		};
		class cargo
		{
			selections[]={{0.452492,0.0959549,1.03165},{-0.45517,-0.833557,1.14213},{-0.474915,-1.38246,1.13252},{0.559525,-0.833546,1.14213},{0.063797,-0.833344,1.14213},{0.584801,-1.3419,1.13251}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class UAZ_Open_Base
	{
		class driver
		{
			selections[]={{-0.346375,0.0947857,1.01129}};
		};
		class cargo
		{
			selections[]={{-0.000778198,0.0285339,0.120563},{-0.000396729,0.0279617,0.120564},{-0.000160217,0.0275688,0.120562},{0,0.027607,0.120562},{-0.00075531,-0.000415802,-0.0484571},{0.000205994,0.0279503,0.120564}};
			path[]={{2},{3},{0},{4},{-10},{1}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_UAZ_Open_Green
	{
		class driver
		{
			selections[]={{-0.342323,0.101803,1.01563}};
		};
		class cargo
		{
			selections[]={{0.455231,0.00540924,1.04347},{-0.452827,-0.835869,1.16992},{-0.492317,-1.37098,1.14217},{0.561447,-0.837971,1.16997},{0.0647202,-0.871197,1.00172},{0.594246,-1.3395,1.14223}};
			path[]={{2},{3},{0},{4},{-10},{1}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Ural_RU
	{
		class driver
		{
			selections[]={{-0.345032,0.0968971,1.01129}};
		};
		class cargo
		{
			selections[]={{0.00250244,-0.0220509,0.0658631},{-0.00591278,0.0157909,0.0496764},{-0.00496674,0.0173588,0.0799417},{-0.00596619,-0.015913,0.0713968},{0.000579834,-0.00773811,0.0694575},{0.000343323,-0.00798416,0.0694599},{0.00299835,-0.0239506,0.0666194},{0.00136566,-0.0230141,0.0658245},{-0.0488129,-0.00520706,0.063427},{0.00199127,-0.0227299,0.0669861},{-0.000793457,0.0301342,0.120562},{-0.000213623,0.0297012,0.120562},{-0.00787354,0.00166702,0.0692444},{-1.03252,0.381168,0.0616012}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{1},{0},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Ural_Covered_Blue
	{
		class driver
		{
			selections[]={{-0.558937,1.74282,-0.305972}};
		};
		class cargo
		{
			selections[]={{0.62796,1.59156,-0.334299},{0.171532,1.6515,-0.347471},{0.918022,-0.486729,0.0965524},{-0.976997,-0.309311,0.0686851},{0.928009,-1.14622,0.085331},{-0.957092,-0.938118,0.0902872},{0.922371,-1.74319,0.0899448},{-0.946335,-1.64135,0.0881853},{0.939484,-2.48548,0.0794439},{-0.896729,-2.29239,0.0904193},{0.996666,-3.08069,0.0485444},{-1.00037,-2.8304,0.0538259},{0.896057,0.196232,0.0953765},{-1.0293,0.380123,0.0615544}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{1},{0},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Ural_Covered_Yellow
	{
		class driver
		{
			selections[]={{-0.559212,1.74264,-0.305981}};
		};
		class cargo
		{
			selections[]={{0.62767,1.59144,-0.334321},{0.171005,1.65175,-0.347439},{0.917046,-0.487581,0.0967665},{-0.975639,-0.307467,0.0687709},{0.927284,-1.14766,0.0853105},{-0.956665,-0.937126,0.0903234},{0.922394,-1.74387,0.0898619},{-0.946175,-1.64096,0.0882049},{0.93869,-2.48577,0.0790763},{-0.89711,-2.2923,0.0902781},{0.99662,-3.08095,0.0485396},{-1.00029,-2.83019,0.0538197},{0.8965,0.195564,0.095439},{-1.02913,0.380314,0.0617537}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{1},{0},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Ural_Covered_Worker
	{
		class driver
		{
			selections[]={{-0.558678,1.74298,-0.305963}};
		};
		class cargo
		{
			selections[]={{0.628235,1.59162,-0.334288},{0.171555,1.65173,-0.347458},{0.917336,-0.487259,0.0966134},{-0.976402,-0.30863,0.0686955},{0.927895,-1.14672,0.0853243},{-0.957199,-0.937832,0.0902834},{0.922775,-1.74333,0.0898972},{-0.946854,-1.64127,0.0881567},{0.940292,-2.48553,0.0793109},{-0.897636,-2.2923,0.090343},{0.997269,-3.08076,0.0486465},{-1.00077,-2.83028,0.0538998},{0.896393,0.196095,0.0953894},{-1.02941,0.380219,0.0616078}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{1},{0},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Ural_Covered_Military
	{
		class driver
		{
			selections[]={{-0.559441,1.74266,-0.30598}};
		};
		class cargo
		{
			selections[]={{0.627419,1.59152,-0.334311},{0.170761,1.65189,-0.347426},{0.916939,-0.487865,0.0967541},{-0.975769,-0.307594,0.068758},{0.927322,-1.14748,0.0853128},{-0.956573,-0.937233,0.0903287},{0.922302,-1.74383,0.0898442},{-0.945702,-1.64103,0.0882339},{0.93837,-2.48582,0.079185},{-0.896721,-2.29229,0.0903225},{0.996407,-3.08094,0.0485048},{-1.00014,-2.83023,0.0537925},{0.896248,0.195705,0.0954289},{-1.02882,0.380283,0.0618763}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{1},{0},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Ural_Open_RU
	{
		class driver
		{
			selections[]={{-0.344849,0.0971642,1.01129}};
		};
		class cargo
		{
			selections[]={{0.00268555,-0.0217094,0.065886},{-0.00572205,0.0161877,0.0496788},{-0.00482178,0.0176525,0.0799432},{-0.00588989,-0.0156879,0.0714126},{0.000701904,-0.00743866,0.0694585},{0.000495911,-0.00760937,0.0694599},{0.00321198,-0.0235138,0.0666304},{0.00170898,-0.0228024,0.0658236},{-0.0480576,-0.00578117,0.0636544},{0.00294495,-0.0228691,0.0670586},{0.000175476,0.0301666,0.12056},{-0.954697,-3.04876,2.06424},{0.946884,-0.0226135,2.10534},{-0.983589,0.161255,2.0715}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{1},{0},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Ural_Open_Blue
	{
		class driver
		{
			selections[]={{-0.509811,1.52463,1.70403}};
		};
		class cargo
		{
			selections[]={{0.67717,1.37335,1.67569},{0.220863,1.43357,1.66259},{0.964256,-0.70429,2.10686},{-0.926422,-0.528431,2.07877},{0.973816,-1.36533,2.09529},{-0.906975,-1.15662,2.10037},{0.96962,-1.96292,2.09979},{-0.897446,-1.85943,2.09821},{0.987137,-2.70558,2.08893},{-0.850204,-2.50994,2.10011},{1.04663,-3.30153,2.05883},{-0.954292,-3.04707,2.06421},{0.94799,-0.0248394,2.10542},{-0.984207,0.162773,2.07165}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{1},{0},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Ural_Open_Yellow
	{
		class driver
		{
			selections[]={{-0.510025,1.52465,1.70403}};
		};
		class cargo
		{
			selections[]={{0.676888,1.37337,1.67564},{0.220589,1.43331,1.66262},{0.965172,-0.70356,2.1074},{-0.927437,-0.526993,2.07897},{0.974907,-1.36646,2.09525},{-0.907745,-1.15528,2.10034},{0.970284,-1.96452,2.09973},{-0.897392,-1.85799,2.09826},{0.986946,-2.70597,2.08862},{-0.851318,-2.51027,2.09993},{1.04729,-3.30037,2.05893},{-0.954628,-3.0485,2.06423},{0.947098,-0.0240822,2.10538},{-0.981865,0.161736,2.0719}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{1},{0},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Ural_Open_Worker
	{
		class driver
		{
			selections[]={{-0.50985,1.52484,1.70404}};
		};
		class cargo
		{
			selections[]={{0.677277,1.37381,1.67576},{0.220802,1.43384,1.66258},{0.964653,-0.705545,2.10662},{-0.927132,-0.528227,2.07852},{0.974663,-1.36592,2.09528},{-0.907715,-1.15591,2.10034},{0.969635,-1.96364,2.09991},{-0.897797,-1.85865,2.09821},{0.989014,-2.70563,2.08943},{-0.850853,-2.51039,2.10023},{1.04781,-3.30001,2.059},{-0.955338,-3.04869,2.06435},{0.947472,-0.0228996,2.10534},{-0.983803,0.161823,2.07135}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{1},{0},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Ural_Open_Military
	{
		class driver
		{
			selections[]={{-0.511032,1.52372,1.70398}};
		};
		class cargo
		{
			selections[]={{0.675835,1.37255,1.67561},{0.219292,1.43284,1.66256},{0.965302,-0.705618,2.10709},{-0.927277,-0.525913,2.0789},{0.975182,-1.36699,2.09527},{-0.908432,-1.15579,2.10029},{0.97097,-1.96314,2.09975},{-0.898109,-1.8598,2.09816},{0.986359,-2.70454,2.08869},{-0.849419,-2.51128,2.1001},{1.04485,-3.29992,2.05852},{-0.952171,-3.0491,2.06379},{0.944939,-0.0237198,2.10539},{-0.980537,0.161339,2.07195}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{1},{0},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Van_Black
	{
		class driver
		{
			selections[]={{-0.458237,0.251198,-0.298124}};
		};
		class cargo
		{
			selections[]={{0.571327,0.275749,-0.198707},{0.121597,0.201309,-0.175435},{-0.313507,-0.642574,-0.222057},{0.266113,-0.486256,-0.215626},{-0.341049,-1.26064,-0.222057},{0.316551,-1.11942,-0.215621},{-0.252609,-1.85178,-0.222048},{0.162819,-1.70452,-0.215607},{-0.365059,-2.45768,-0.22203},{0.245789,-2.34378,-0.215592},{-0.235344,-2.84414,-0.222022},{0.26664,-2.92024,-0.215589}};
			path[]={{-10},{-10},{0},{5},{1},{6},{2},{7},{3},{8},{4},{9}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Van_White
	{
		class driver
		{
			selections[]={{-0.458389,0.251286,-0.298083}};
		};
		class cargo
		{
			selections[]={{0.571251,0.277035,-0.198704},{0.121536,0.202888,-0.175436},{-0.314423,-0.642544,-0.222053},{0.266243,-0.48653,-0.215625},{-0.340355,-1.26041,-0.22206},{0.314606,-1.11947,-0.215628},{-0.250206,-1.85173,-0.222057},{0.159874,-1.70436,-0.215621},{-0.361519,-2.45761,-0.222047},{0.242737,-2.34401,-0.215608},{-0.234566,-2.84254,-0.222031},{0.265892,-2.91969,-0.215593}};
			path[]={{-10},{-10},{0},{5},{1},{6},{2},{7},{3},{8},{4},{9}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Van_Red
	{
		class driver
		{
			selections[]={{-0.458405,0.251808,-0.298124}};
		};
		class cargo
		{
			selections[]={{0.571228,0.27684,-0.198698},{0.121513,0.202206,-0.175432},{-0.314255,-0.642654,-0.222055},{0.266396,-0.486397,-0.215625},{-0.341194,-1.26057,-0.222057},{0.31604,-1.11945,-0.215623},{-0.252113,-1.85169,-0.22205},{0.162209,-1.70452,-0.215611},{-0.364555,-2.45756,-0.222033},{0.245628,-2.34387,-0.215593},{-0.235291,-2.84402,-0.222022},{0.266533,-2.92024,-0.21559}};
			path[]={{-10},{-10},{0},{5},{1},{6},{2},{7},{3},{8},{4},{9}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Van_Guerilla01
	{
		class driver
		{
			selections[]={{-0.458488,0.251556,-0.298119}};
		};
		class cargo
		{
			selections[]={{0.571312,0.277077,-0.198702},{0.121666,0.202377,-0.175432},{-0.314201,-0.642586,-0.222055},{0.266159,-0.486259,-0.215626},{-0.3405,-1.26071,-0.22206},{0.315819,-1.1195,-0.215623},{-0.251915,-1.8516,-0.222051},{0.161461,-1.70458,-0.215614},{-0.363358,-2.45761,-0.222039},{0.245071,-2.34383,-0.215596},{-0.235298,-2.84392,-0.222023},{0.266556,-2.9204,-0.215588}};
			path[]={{-10},{-10},{0},{5},{1},{6},{2},{7},{3},{8},{4},{9}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Van_Guerilla02
	{
		class driver
		{
			selections[]={{-0.458313,0.25034,-0.298042}};
		};
		class cargo
		{
			selections[]={{0.571327,0.276909,-0.198684},{0.121696,0.203506,-0.175429},{-0.315277,-0.642704,-0.222053},{0.266762,-0.486252,-0.215624},{-0.340851,-1.26066,-0.222058},{0.314934,-1.1195,-0.215627},{-0.250175,-1.8516,-0.222058},{0.159683,-1.70438,-0.215622},{-0.361336,-2.4576,-0.222049},{0.242966,-2.34412,-0.215607},{-0.23465,-2.84251,-0.222031},{0.265862,-2.91977,-0.215593}};
			path[]={{-10},{-10},{0},{5},{1},{6},{2},{7},{3},{8},{4},{9}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Van_Guerilla03
	{
		class driver
		{
			selections[]={{-0.458443,0.248756,-0.297854}};
		};
		class cargo
		{
			selections[]={{0.57135,0.274158,-0.198714},{0.121689,0.20097,-0.17544},{-0.31485,-0.642563,-0.222053},{0.268982,-0.486244,-0.215615},{-0.345566,-1.26091,-0.222036},{0.32148,-1.11907,-0.215597},{-0.256981,-1.8522,-0.222025},{0.166153,-1.70448,-0.21559},{-0.366714,-2.45763,-0.222021},{0.246338,-2.34377,-0.21559},{-0.235512,-2.84448,-0.22202},{0.266846,-2.92052,-0.215588}};
			path[]={{-10},{-10},{0},{5},{1},{6},{2},{7},{3},{8},{4},{9}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Van_Guerilla04
	{
		class driver
		{
			selections[]={{-0.458466,0.251751,-0.298106}};
		};
		class cargo
		{
			selections[]={{0.571182,0.27705,-0.198702},{0.121666,0.202187,-0.17544},{-0.314056,-0.642471,-0.222056},{0.266212,-0.486305,-0.215626},{-0.340431,-1.26051,-0.22206},{0.315331,-1.11957,-0.215625},{-0.251556,-1.85177,-0.222051},{0.161873,-1.70436,-0.215611},{-0.364014,-2.45764,-0.222035},{0.2453,-2.34384,-0.215595},{-0.235191,-2.84378,-0.222024},{0.266487,-2.92027,-0.21559}};
			path[]={{-10},{-10},{0},{5},{1},{6},{2},{7},{3},{8},{4},{9}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Van_Guerilla05
	{
		class driver
		{
			selections[]={{-0.458138,0.251598,-0.298212}};
		};
		class cargo
		{
			selections[]={{0.571426,0.277069,-0.19868},{0.121719,0.202221,-0.175437},{-0.314156,-0.642628,-0.222055},{0.266335,-0.486229,-0.215625},{-0.340546,-1.26075,-0.222059},{0.315666,-1.11942,-0.215624},{-0.251747,-1.85156,-0.222052},{0.161972,-1.70454,-0.215611},{-0.364388,-2.45766,-0.222033},{0.245094,-2.34389,-0.215596},{-0.235146,-2.8436,-0.222025},{0.266487,-2.92039,-0.215588}};
			path[]={{-10},{-10},{0},{5},{1},{6},{2},{7},{3},{8},{4},{9}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Van_Guerilla06
	{
		class driver
		{
			selections[]={{-0.458229,0.250832,-0.298076}};
		};
		class cargo
		{
			selections[]={{0.571289,0.277004,-0.198699},{0.121574,0.202927,-0.175429},{-0.314461,-0.642628,-0.222054},{0.266472,-0.486237,-0.215624},{-0.340538,-1.26058,-0.222059},{0.315216,-1.11952,-0.215625},{-0.250496,-1.85156,-0.222057},{0.160118,-1.70445,-0.215621},{-0.36235,-2.45763,-0.222043},{0.244102,-2.34384,-0.215601},{-0.234924,-2.84327,-0.222027},{0.266403,-2.92002,-0.21559}};
			path[]={{-10},{-10},{0},{5},{1},{6},{2},{7},{3},{8},{4},{9}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Van_Guerilla07
	{
		class driver
		{
			selections[]={{-0.458214,0.249851,-0.298158}};
		};
		class cargo
		{
			selections[]={{0.571228,0.276718,-0.198659},{0.121727,0.203632,-0.175459},{-0.315689,-0.642715,-0.22205},{0.267075,-0.486217,-0.215622},{-0.340935,-1.26055,-0.222057},{0.315224,-1.11966,-0.215625},{-0.25061,-1.85153,-0.222056},{0.160179,-1.70445,-0.21562},{-0.361435,-2.45764,-0.222049},{0.242058,-2.34404,-0.215612},{-0.23436,-2.84185,-0.222035},{0.265747,-2.91958,-0.215594}};
			path[]={{-10},{-10},{0},{5},{1},{6},{2},{7},{3},{8},{4},{9}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Van_Guerilla08
	{
		class driver
		{
			selections[]={{-0.458542,0.251968,-0.297977}};
		};
		class cargo
		{
			selections[]={{0.571251,0.276138,-0.198739},{0.121368,0.201927,-0.175534},{-0.313614,-0.642593,-0.222058},{0.266151,-0.48624,-0.215626},{-0.341179,-1.26068,-0.222056},{0.316757,-1.11948,-0.21562},{-0.252625,-1.85172,-0.222047},{0.162842,-1.70449,-0.215607},{-0.36483,-2.45762,-0.222031},{0.245689,-2.34377,-0.215592},{-0.235413,-2.84401,-0.222022},{0.266525,-2.92046,-0.215588}};
			path[]={{-10},{-10},{0},{5},{1},{6},{2},{7},{3},{8},{4},{9}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Van_Box_Black
	{
		class driver
		{
			selections[]={{0.000114441,-0.0112572,-0.0434046}};
		};
		class cargo
		{
			selections[]={{0.0665894,-0.0285721,0.0610585},{-0.0284958,0.0495186,0.0632534}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Van_Box_White
	{
		class driver
		{
			selections[]={{0.000282288,-0.0114136,-0.0433378}};
		};
		class cargo
		{
			selections[]={{0.0665283,-0.0288734,0.0613089},{-0.0284729,0.0496025,0.0632582}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Van_Box_Red
	{
		class driver
		{
			selections[]={{-0.459602,0.250593,-0.296637}};
		};
		class cargo
		{
			selections[]={{0.570412,0.275341,-0.197693},{0.11673,0.201328,-0.175488}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Van_Box_Guerilla01
	{
		class driver
		{
			selections[]={{-0.459518,0.250999,-0.297206}};
		};
		class cargo
		{
			selections[]={{0.572166,0.276798,-0.199321},{0.117882,0.200077,-0.175615}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Van_Box_Guerilla02
	{
		class driver
		{
			selections[]={{-0.459534,0.250988,-0.297208}};
		};
		class cargo
		{
			selections[]={{0.572113,0.276566,-0.199224},{0.117851,0.199913,-0.175611}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Van_Box_Guerilla03
	{
		class driver
		{
			selections[]={{-0.459526,0.250896,-0.297205}};
		};
		class cargo
		{
			selections[]={{0.572113,0.276428,-0.199074},{0.117859,0.200058,-0.175601}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Van_Box_Guerilla04
	{
		class driver
		{
			selections[]={{-0.459579,0.251022,-0.297216}};
		};
		class cargo
		{
			selections[]={{0.572136,0.276619,-0.199369},{0.117828,0.199841,-0.175609}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Van_Box_Guerilla05
	{
		class driver
		{
			selections[]={{-0.459602,0.250748,-0.297185}};
		};
		class cargo
		{
			selections[]={{0.572121,0.276363,-0.199345},{0.117798,0.199764,-0.175605}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Van_Box_Guerilla06
	{
		class driver
		{
			selections[]={{-0.459541,0.250729,-0.297214}};
		};
		class cargo
		{
			selections[]={{0.572182,0.276867,-0.199465},{0.117889,0.199936,-0.175637}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Van_Box_Guerilla07
	{
		class driver
		{
			selections[]={{-0.459579,0.250389,-0.297143}};
		};
		class cargo
		{
			selections[]={{0.572105,0.276237,-0.199323},{0.11776,0.200066,-0.175603}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Van_Box_Guerilla08
	{
		class driver
		{
			selections[]={{-0.459541,0.25106,-0.297206}};
		};
		class cargo
		{
			selections[]={{0.572075,0.276497,-0.199147},{0.117775,0.200066,-0.175602}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Van_Fuel_Black
	{
		class driver
		{
			selections[]={{-0.000267029,-0.0115356,-0.0436306}};
		};
		class cargo
		{
			selections[]={{0.0666885,-0.0277214,0.0603518},{-0.0284805,0.0497894,0.0631962}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Van_Fuel_White
	{
		class driver
		{
			selections[]={{-0.000198364,-0.0110168,-0.0436444}};
		};
		class cargo
		{
			selections[]={{0.0666656,-0.0274696,0.0605712},{-0.0285034,0.0498352,0.0632119}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Van_Fuel_Red
	{
		class driver
		{
			selections[]={{-0.000190735,-0.0110893,-0.0436425}};
		};
		class cargo
		{
			selections[]={{0.0667267,-0.0272217,0.0602441},{-0.0284729,0.0495224,0.0631895}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Van_Fuel_Guerilla01
	{
		class driver
		{
			selections[]={{-0.000160217,-0.0111923,-0.0436482}};
		};
		class cargo
		{
			selections[]={{0.0667419,-0.0271606,0.0603218},{-0.0284729,0.0498428,0.0631952}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Van_Fuel_Guerilla02
	{
		class driver
		{
			selections[]={{-0.000183105,-0.0111732,-0.0436077}};
		};
		class cargo
		{
			selections[]={{0.0666656,-0.027916,0.0605946},{-0.028595,0.0500488,0.0632124}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Van_Fuel_Guerilla03
	{
		class driver
		{
			selections[]={{-0.000244141,-0.0113754,-0.0436378}};
		};
		class cargo
		{
			selections[]={{0.0667419,-0.0276222,0.0604134},{-0.0284042,0.0497894,0.0632019}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Volha_Blue
	{
		class driver
		{
			selections[]={{0.000137329,-0.00773621,-0.11008}};
		};
		class cargo
		{
			selections[]={{-7.62939e-005,-0.00860596,-0.081007},{-0.000167847,-0.00882721,-0.0835009},{-0.000213623,-0.00868988,-0.0810061},{-0.106369,-0.00260925,0.268798}};
			path[]={{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Volha_White
	{
		class driver
		{
			selections[]={{0.000694275,-0.0087204,-0.110079}};
		};
		class cargo
		{
			selections[]={{0.00037384,-0.0087738,-0.0810056},{0.000259399,-0.00827026,-0.0835009},{0.000198364,-0.00769806,-0.0810065},{-0.105949,-0.00137329,0.268797}};
			path[]={{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Volha_Black
	{
		class driver
		{
			selections[]={{0.000686646,-0.00874329,-0.110079}};
		};
		class cargo
		{
			selections[]={{0.00037384,-0.00868225,-0.081007},{0.00025177,-0.00830078,-0.0835009},{0.000190735,-0.00782776,-0.0810061},{-0.105949,-0.00146484,0.268797}};
			path[]={{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Car_Zamak
	{
		class driver
		{
			selections[]={{-0.581032,2.75439,-0.404123}};
		};
		class cargo
		{
			selections[]={{0.194916,2.70762,-0.379395},{0.73597,2.67067,-0.378221},{-0.835777,0.878529,-0.170538},{0.91507,0.829746,-0.114507},{-0.918594,0.197208,-0.207108},{0.920013,0.116314,-0.0236855},{-0.961151,-0.554401,-0.158818},{0.925743,-0.612392,-0.116257},{-0.86882,-1.17024,-0.258185},{0.83419,-1.17523,-0.142262},{-0.861725,-1.90156,-0.210905},{0.946136,-1.86341,-0.109213},{-1.00077,-2.50911,-0.165685},{0.841148,-2.56202,-0.0812335},{-0.880241,-3.23528,-0.101627},{0.899567,-3.24501,-0.0902967}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{0},{1}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Bike_MountainBike
	{
		class driver
		{
			selections[]={{-0.0181046,-0.318066,1.13715}};
		};
		class cargo
		{
			selections[]={};
			path[]={};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Bike_OldBike
	{
		class driver
		{
			selections[]={{0.00187683,-0.254547,0.205349}};
		};
		class cargo
		{
			selections[]={};
			path[]={};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Bike_QuadBike_Black
	{
		class driver
		{
			selections[]={{-0.0146561,-0.348896,-0.357139}};
		};
		class cargo
		{
			selections[]={{-0.000961304,-0.739868,-0.361817}};
			path[]={{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Bike_QuadBike_Blue
	{
		class driver
		{
			selections[]={{-0.0146484,-0.348907,-0.357138}};
		};
		class cargo
		{
			selections[]={{-0.000953674,-0.739857,-0.361818}};
			path[]={{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Bike_QuadBike_Red
	{
		class driver
		{
			selections[]={{-0.0147018,-0.348518,-0.357242}};
		};
		class cargo
		{
			selections[]={{-0.000991821,-0.741257,-0.361815}};
			path[]={{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Bike_QuadBike_White
	{
		class driver
		{
			selections[]={{-0.0147095,-0.348457,-0.357261}};
		};
		class cargo
		{
			selections[]={{-0.00100708,-0.7411,-0.361817}};
			path[]={{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Bike_QuadBike_Nato
	{
		class driver
		{
			selections[]={{-0.0146713,-0.349628,-0.356942}};
		};
		class cargo
		{
			selections[]={{-0.000961304,-0.742554,-0.361811}};
			path[]={{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Bike_QuadBike_Csat
	{
		class driver
		{
			selections[]={{-0.014679,-0.349445,-0.35699}};
		};
		class cargo
		{
			selections[]={{-0.000976563,-0.742432,-0.361811}};
			path[]={{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Bike_QuadBike_Fia
	{
		class driver
		{
			selections[]={{-0.014389,-0.352985,-0.356035}};
		};
		class cargo
		{
			selections[]={{-0.000663757,-0.745037,-0.361807}};
			path[]={{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Bike_QuadBike_Guerilla01
	{
		class driver
		{
			selections[]={{-0.0147095,-0.348614,-0.357218}};
		};
		class cargo
		{
			selections[]={{-0.000991821,-0.741341,-0.361815}};
			path[]={{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Bike_QuadBike_Guerilla02
	{
		class driver
		{
			selections[]={{-0.0146942,-0.348595,-0.357221}};
		};
		class cargo
		{
			selections[]={{-0.000991821,-0.739986,-0.361822}};
			path[]={{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Chopper_Hellcat_Green
	{
		class driver
		{
			selections[]={{0.492615,3.81346,-0.561776}};
		};
		class cargo
		{
			selections[]={{0.270916,3.28131,-0.446844},{-0.263767,3.29353,-0.417714},{-0.297115,1.26394,-0.457849},{0.257132,1.31174,-0.468655},{0.266449,2.6844,-0.412625},{-0.219461,2.70648,-0.456067}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={{-0.459663,3.81565,-0.547733}};
			path[]={{0}};
		};
	};
	class Exile_Chopper_Hellcat_FIA
	{
		class driver
		{
			selections[]={{0.49262,3.81345,-0.561775}};
		};
		class cargo
		{
			selections[]={{0.271099,3.28099,-0.44675},{-0.263754,3.29353,-0.417713},{-0.297083,1.26393,-0.457837},{0.257063,1.31149,-0.468767},{0.266068,2.68448,-0.412753},{-0.219416,2.70646,-0.456127}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={{-0.459583,3.81566,-0.547734}};
			path[]={{0}};
		};
	};
	class UH1H_Clo
	{
		class driver
		{
			selections[]={{0.519148,3.11723,-0.884327}};
		};
		class cargo
		{
			selections[]={{-0.679665,0.934769,-0.94407},{0.666822,0.874023,-0.922603},{-0.618872,0.891617,-0.984937},{-0.282829,1.71438,-0.878743},{0.778158,1.67681,-0.911706},{-0.813164,1.67673,-0.911751},{0.255775,1.67664,-0.911795},{0.605618,0.924614,-0.954837},{-0.0321293,0.0147095,0.0711999}};
			path[]={{1},{2},{-10},{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={{-0.583241,3.21166,-0.938683}};
			path[]={{0}};
		};
	};
	class Exile_Chopper_Huey_Green
	{
		class driver
		{
			selections[]={{0.519148,3.11723,-0.884328}};
		};
		class cargo
		{
			selections[]={{-0.679665,0.934769,-0.944071},{0.666822,0.874023,-0.922603},{-0.618874,0.891586,-0.984941},{-0.282816,1.71438,-0.878743},{0.778152,1.67681,-0.911708},{-0.813173,1.67673,-0.911754},{0.25577,1.67654,-0.911843},{0.605509,0.924622,-0.954881},{-0.032114,0.014679,0.0711589}};
			path[]={{1},{2},{-10},{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={{-0.583241,3.21166,-0.938683}};
			path[]={{0}};
		};
	};
	class Exile_Chopper_Huey_Desert
	{
		class driver
		{
			selections[]={{0.519148,3.11723,-0.884327}};
		};
		class cargo
		{
			selections[]={{-0.679665,0.934769,-0.94407},{0.666822,0.874023,-0.922603},{-0.618872,0.891594,-0.98494},{-0.282871,1.71438,-0.878744},{0.778099,1.67679,-0.911721},{-0.813202,1.67668,-0.911775},{0.255766,1.67648,-0.91187},{0.605505,0.924622,-0.954885},{-0.032114,0.014679,0.0711546}};
			path[]={{1},{2},{-10},{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={{-0.583241,3.21166,-0.938683}};
			path[]={{0}};
		};
	};
	class UH1H_M240
	{
		class driver
		{
			selections[]={{0.519148,3.09864,-0.891768}};
		};
		class cargo
		{
			selections[]={{0.896778,1.63419,-1.20447},{-1.00225,1.63494,-1.20301},{0.775465,1.66324,-1.26409},{0.173374,1.59614,-1.2443},{0.722399,2.56386,-1.21375},{-0.940891,1.58997,-1.24278},{-0.372772,2.6105,-1.21383},{-0.78356,2.30981,-1.1999}};
			path[]={{2},{3},{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={{-0.508575,0.956978,-1.00999},{0.495096,0.850342,-0.992823},{-0.583239,3.21166,-0.938682}};
			path[]={{0},{1},{4}};
		};
	};
	class Exile_Chopper_Huey_Armed_Green
	{
		class driver
		{
			selections[]={{0.519148,3.09864,-0.891768}};
		};
		class cargo
		{
			selections[]={{0.896776,1.63419,-1.20447},{-1.00225,1.63494,-1.20301},{0.775465,1.66324,-1.2641},{0.173372,1.59614,-1.2443},{0.722366,2.56385,-1.21375},{-0.940887,1.58997,-1.24279},{-0.372822,2.61048,-1.21382},{-0.783487,2.30986,-1.19997}};
			path[]={{2},{3},{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={{-0.508575,0.956978,-1.00999},{0.495096,0.850342,-0.992823},{-0.583239,3.21166,-0.938682}};
			path[]={{0},{1},{4}};
		};
	};
	class Exile_Chopper_Huey_Armed_Desert
	{
		class driver
		{
			selections[]={{0.519148,3.09863,-0.891768}};
		};
		class cargo
		{
			selections[]={{0.896778,1.63419,-1.20447},{-1.00225,1.63493,-1.20301},{0.775473,1.66323,-1.26412},{0.173376,1.59614,-1.24432},{0.722464,2.56389,-1.21376},{-0.940866,1.58998,-1.24282},{-0.372742,2.6105,-1.21383},{-0.783508,2.30984,-1.19995}};
			path[]={{2},{3},{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={{-0.508575,0.95697,-1.00998},{0.495096,0.850334,-0.992823},{-0.583241,3.21165,-0.938683}};
			path[]={{0},{1},{4}};
		};
	};
	class Exile_Chopper_Hummingbird_Green
	{
		class driver
		{
			selections[]={{-0.374823,1.18665,-0.0438075}};
		};
		class cargo
		{
			selections[]={{-0.2885,0.272263,-0.0888104},{0.300201,0.23658,-0.0897832},{0.825016,0.963249,-0.333086},{-0.798946,0.0632248,-0.335676},{-0.832726,0.970711,-0.340919},{0.8272,0.0653152,-0.338562}};
			path[]={{-10},{-10},{1},{2},{3},{4}};
		};
		class turret
		{
			selections[]={{0.366716,1.18438,-0.0431471}};
			path[]={{0}};
		};
	};
	class Exile_Chopper_Hummingbird_Civillian_Blue
	{
		class driver
		{
			selections[]={{-0.373159,2.03548,0.752798}};
		};
		class cargo
		{
			selections[]={{0.307495,1.12669,0.642678},{-0.330084,1.13381,0.649127}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={{0.368382,2.0332,0.753458}};
			path[]={{0}};
		};
	};
	class Exile_Chopper_Hummingbird_Civillian_Red
	{
		class driver
		{
			selections[]={{-0.373156,2.03548,0.752798}};
		};
		class cargo
		{
			selections[]={{0.307796,1.12571,0.642728},{-0.330084,1.13381,0.649126}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={{0.368382,2.03321,0.753458}};
			path[]={{0}};
		};
	};
	class Exile_Chopper_Hummingbird_Civillian_ION
	{
		class driver
		{
			selections[]={{-0.373159,2.03548,0.752798}};
		};
		class cargo
		{
			selections[]={{0.307795,1.1257,0.642728},{-0.330084,1.13381,0.649127}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={{0.368382,2.0332,0.753458}};
			path[]={{0}};
		};
	};
	class Exile_Chopper_Hummingbird_Civillian_BlueLine
	{
		class driver
		{
			selections[]={{-0.373156,2.03548,0.752798}};
		};
		class cargo
		{
			selections[]={{0.307566,1.12675,0.642651},{-0.330084,1.13381,0.649126}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={{0.368382,2.03321,0.753458}};
			path[]={{0}};
		};
	};
	class Exile_Chopper_Hummingbird_Civillian_Digital
	{
		class driver
		{
			selections[]={{-0.373159,2.03548,0.752798}};
		};
		class cargo
		{
			selections[]={{0.307795,1.1257,0.642728},{-0.330084,1.13381,0.649127}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={{0.368382,2.0332,0.753458}};
			path[]={{0}};
		};
	};
	class Exile_Chopper_Hummingbird_Civillian_Elliptical
	{
		class driver
		{
			selections[]={{-0.373156,2.03548,0.752798}};
		};
		class cargo
		{
			selections[]={{0.307796,1.1257,0.642728},{-0.330084,1.13381,0.649126}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={{0.368382,2.03321,0.753458}};
			path[]={{0}};
		};
	};
	class Exile_Chopper_Hummingbird_Civillian_Furious
	{
		class driver
		{
			selections[]={{-0.373159,2.03548,0.752798}};
		};
		class cargo
		{
			selections[]={{0.307795,1.1257,0.642728},{-0.330084,1.13381,0.649127}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={{0.368382,2.0332,0.753458}};
			path[]={{0}};
		};
	};
	class Exile_Chopper_Hummingbird_Civillian_GrayWatcher
	{
		class driver
		{
			selections[]={{-0.373156,2.03548,0.752798}};
		};
		class cargo
		{
			selections[]={{0.307796,1.1257,0.642728},{-0.330084,1.13381,0.649126}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={{0.368382,2.03321,0.753458}};
			path[]={{0}};
		};
	};
	class Exile_Chopper_Hummingbird_Civillian_Jeans
	{
		class driver
		{
			selections[]={{-0.373159,2.03548,0.752798}};
		};
		class cargo
		{
			selections[]={{0.307795,1.1257,0.642728},{-0.330084,1.13381,0.649127}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={{0.368382,2.0332,0.753458}};
			path[]={{0}};
		};
	};
	class Exile_Chopper_Hummingbird_Civillian_Light
	{
		class driver
		{
			selections[]={{-0.373156,2.03548,0.752798}};
		};
		class cargo
		{
			selections[]={{0.307795,1.1257,0.642728},{-0.330084,1.13381,0.649126}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={{0.368382,2.03321,0.753458}};
			path[]={{0}};
		};
	};
	class Exile_Chopper_Hummingbird_Civillian_Shadow
	{
		class driver
		{
			selections[]={{-0.373159,2.03548,0.752798}};
		};
		class cargo
		{
			selections[]={{0.307795,1.1257,0.642728},{-0.330084,1.13381,0.649127}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={{0.368382,2.0332,0.753458}};
			path[]={{0}};
		};
	};
	class Exile_Chopper_Hummingbird_Civillian_Sheriff
	{
		class driver
		{
			selections[]={{-0.373156,2.03548,0.752798}};
		};
		class cargo
		{
			selections[]={{0.307795,1.1257,0.642728},{-0.33041,1.13467,0.649142}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={{0.368382,2.03321,0.753458}};
			path[]={{0}};
		};
	};
	class Exile_Chopper_Hummingbird_Civillian_Speedy
	{
		class driver
		{
			selections[]={{-0.373159,2.03548,0.752798}};
		};
		class cargo
		{
			selections[]={{0.307795,1.1257,0.642728},{-0.330084,1.13381,0.649127}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={{0.368382,2.0332,0.753458}};
			path[]={{0}};
		};
	};
	class Exile_Chopper_Hummingbird_Civillian_Sunset
	{
		class driver
		{
			selections[]={{-0.373156,2.03548,0.752798}};
		};
		class cargo
		{
			selections[]={{0.307796,1.1257,0.642728},{-0.330082,1.13381,0.649126}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={{0.368382,2.03321,0.753458}};
			path[]={{0}};
		};
	};
	class Exile_Chopper_Hummingbird_Civillian_Vrana
	{
		class driver
		{
			selections[]={{-0.373159,2.03548,0.752798}};
		};
		class cargo
		{
			selections[]={{0.307795,1.1257,0.642728},{-0.330084,1.13381,0.649127}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={{0.368382,2.0332,0.753458}};
			path[]={{0}};
		};
	};
	class Exile_Chopper_Hummingbird_Civillian_Wasp
	{
		class driver
		{
			selections[]={{-0.373156,2.03548,0.752798}};
		};
		class cargo
		{
			selections[]={{0.307795,1.1257,0.642728},{-0.330084,1.13381,0.649126}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={{0.368382,2.03321,0.753458}};
			path[]={{0}};
		};
	};
	class Exile_Chopper_Hummingbird_Civillian_Wave
	{
		class driver
		{
			selections[]={{-0.373159,2.03548,0.752798}};
		};
		class cargo
		{
			selections[]={{0.307535,1.12673,0.642651},{-0.330084,1.13381,0.649127}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={{0.368382,2.0332,0.753458}};
			path[]={{0}};
		};
	};
	class Exile_Chopper_Huron_Black
	{
		class driver
		{
			selections[]={{0.471348,7.63043,-0.688492}};
		};
		class cargo
		{
			selections[]={{-0.98061,-0.801041,-1.2121},{-1.00673,2.75127,-1.28184},{-0.879248,1.52135,-1.26327},{-0.980368,0.933723,-1.21143},{-0.92894,0.342575,-1.22218},{-0.873344,-0.349289,-1.26782},{0.890648,2.76945,-1.14054},{0.790308,2.13897,-1.22912},{0.780275,1.56017,-1.21177},{-1.04173,2.15187,-1.17479},{0.83252,0.416817,-1.1994},{0.863396,-0.227585,-1.17888},{0.837078,0.977249,-1.14817},{0.90032,-0.773903,-1.21403},{0.854445,-1.31752,-1.30444},{-0.984333,-1.35038,-1.27188},{-0.941412,4.00089,-1.01086},{0.864286,4.01943,-1.01359}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{3},{4},{1},{2}};
		};
		class turret
		{
			selections[]={{-0.532774,7.63017,-0.688834}};
			path[]={{0}};
		};
	};
	class Exile_Chopper_Huron_Green
	{
		class driver
		{
			selections[]={{0.471348,7.63043,-0.688492}};
		};
		class cargo
		{
			selections[]={{-0.980576,-0.801201,-1.21155},{-1.00705,2.75201,-1.28193},{-0.878496,1.5221,-1.26327},{-0.979689,0.933258,-1.21131},{-0.928949,0.342506,-1.22212},{-0.873165,-0.350327,-1.26811},{0.891279,2.76904,-1.14063},{0.788677,2.13828,-1.22829},{0.780239,1.56009,-1.21189},{-1.04224,2.15207,-1.17469},{0.831993,0.416801,-1.19994},{0.863415,-0.227615,-1.17888},{0.837053,0.977249,-1.14818},{0.898581,-0.774445,-1.21444},{0.854446,-1.31752,-1.30444},{-0.984333,-1.35038,-1.27188},{-0.941412,4.00089,-1.01086},{0.864286,4.01944,-1.01359}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{3},{4},{1},{2}};
		};
		class turret
		{
			selections[]={{-0.532772,7.63017,-0.688835}};
			path[]={{0}};
		};
	};
	class Exile_Chopper_Mohawk_FIA
	{
		class driver
		{
			selections[]={{0.745205,6.36018,-1.79773}};
		};
		class cargo
		{
			selections[]={{0.947247,-0.608315,-1.74854},{-0.967558,-1.62138,-1.72834},{-1.10735,1.62867,-1.6869},{1.08293,4.25459,-1.71578},{-1.06961,-1.08168,-1.65363},{1.05392,1.03392,-1.67135},{1.05393,0.506721,-1.67383},{-1.0723,0.0458603,-1.65116},{1.04753,3.70452,-1.71331},{-1.05156,3.84514,-1.70143},{1.08292,4.78179,-1.71331},{1.04063,-0.0543823,-1.69049},{-1.07477,-0.520576,-1.67029},{-1.08594,1.09486,-1.68633},{-1.06849,0.571228,-1.67029},{-1.0761,3.19193,-1.70371}};
			path[]={{1},{2},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={{-0.799221,6.36018,-1.79773}};
			path[]={{0}};
		};
	};
	class Exile_Chopper_Orca_CSAT
	{
		class driver
		{
			selections[]={{0.435562,3.46624,-1.0693}};
		};
		class cargo
		{
			selections[]={{0.55558,2.52254,-0.989409},{0.0458546,2.71809,-0.965556},{-0.607861,2.61616,-0.96908},{0.56712,0.477219,-0.943027},{0.0113811,0.46904,-0.970784},{-0.596922,0.47567,-0.966079},{0.234129,1.55923,-0.868855},{-0.270281,1.58949,-0.941759}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={{-0.460606,3.46627,-1.06841}};
			path[]={{0}};
		};
	};
	class Exile_Chopper_Orca_Black
	{
		class driver
		{
			selections[]={{0.435585,3.46622,-1.06931}};
		};
		class cargo
		{
			selections[]={{0.555759,2.52274,-0.989726},{0.0459232,2.71809,-0.965608},{-0.60788,2.6161,-0.969055},{0.567183,0.477249,-0.943026},{0.0114403,0.469223,-0.970778},{-0.596861,0.475876,-0.965985},{0.234198,1.5591,-0.868808},{-0.270334,1.58951,-0.941746}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={{-0.460609,3.46627,-1.06841}};
			path[]={{0}};
		};
	};
	class Exile_Chopper_Orca_BlackCustom
	{
		class driver
		{
			selections[]={{0.435621,3.46621,-1.06931}};
		};
		class cargo
		{
			selections[]={{0.556015,2.52298,-0.990056},{0.0460186,2.71797,-0.965689},{-0.607885,2.61604,-0.969066},{0.567263,0.47728,-0.943003},{0.0116043,0.469658,-0.970712},{-0.596577,0.476273,-0.965862},{0.234482,1.55874,-0.868263},{-0.270487,1.58957,-0.941711}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={{-0.460621,3.46627,-1.06842}};
			path[]={{0}};
		};
	};
	class Exile_Chopper_Taru_CSAT
	{
		class driver
		{
			selections[]={{-0.743336,3.98355,-0.91363}};
		};
		class cargo
		{
			selections[]={{0.365473,1.39304,-1.874},{0.36002,0.562447,-1.87673},{0.348965,-0.280159,-1.8822},{0.379173,-1.10135,-1.86579},{-0.556824,-1.10304,-1.874},{-0.551342,-0.267654,-1.87673},{-0.540382,0.570229,-1.8822},{-0.570496,1.39569,-1.86579}};
			path[]={{2},{3},{4},{5},{6},{7},{8},{9}};
		};
		class turret
		{
			selections[]={{-0.809811,3.18808,-1.28804},{0.565472,3.98304,-0.913984}};
			path[]={{1},{0}};
		};
	};
	class Exile_Chopper_Taru_Black
	{
		class driver
		{
			selections[]={{-0.743338,3.98355,-0.91363}};
		};
		class cargo
		{
			selections[]={{0.365473,1.39304,-1.874},{0.36002,0.562454,-1.87673},{0.348965,-0.280151,-1.8822},{0.379173,-1.10135,-1.86579},{-0.556822,-1.10303,-1.874},{-0.55134,-0.267647,-1.87673},{-0.540382,0.570229,-1.8822},{-0.570496,1.3957,-1.86579}};
			path[]={{2},{3},{4},{5},{6},{7},{8},{9}};
		};
		class turret
		{
			selections[]={{-0.810001,3.1881,-1.28812},{0.565472,3.98304,-0.913984}};
			path[]={{1},{0}};
		};
	};
	class Exile_Chopper_Taru_Covered_CSAT
	{
		class driver
		{
			selections[]={{-0.743328,3.98355,-0.677628}};
		};
		class cargo
		{
			selections[]={{0.22076,1.90108,-1.23476},{-0.385353,1.95832,-1.1893},{0.192709,1.28783,-1.15832},{-0.389233,1.35446,-1.18341},{0.144962,0.71907,-1.19103},{-0.385656,0.778633,-1.17393},{0.191029,0.207512,-1.15948},{-0.431452,0.188011,-1.2165},{0.228977,-0.265137,-1.15409},{-0.359201,-0.259102,-1.20528},{-0.39809,-0.881996,-1.16758},{-0.33856,-1.3231,-1.16987},{0.262196,-0.831573,-1.23514},{0.206675,-1.30769,-1.20709},{0.211306,-2.0228,-1.20444},{-0.424477,-2.01791,-1.2163}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{2},{3}};
		};
		class turret
		{
			selections[]={{-0.811333,3.19371,-1.04759},{0.565475,3.98304,-0.677985}};
			path[]={{1},{0}};
		};
	};
	class Exile_Chopper_Taru_Covered_Black
	{
		class driver
		{
			selections[]={{-0.74333,3.98355,-0.677629}};
		};
		class cargo
		{
			selections[]={{0.220776,1.90107,-1.23481},{-0.385359,1.95834,-1.18928},{0.19256,1.28777,-1.15834},{-0.389122,1.35443,-1.18349},{0.144997,0.719055,-1.19105},{-0.385305,0.778336,-1.17384},{0.191122,0.207329,-1.15943},{-0.430872,0.188087,-1.21645},{0.228977,-0.26516,-1.15408},{-0.359253,-0.259087,-1.20528},{-0.398098,-0.881996,-1.16757},{-0.338564,-1.32311,-1.16987},{0.262196,-0.831566,-1.23514},{0.205711,-1.30745,-1.20719},{0.211306,-2.0228,-1.20444},{-0.424479,-2.0179,-1.2163}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{2},{3}};
		};
		class turret
		{
			selections[]={{-0.811483,3.19405,-1.04821},{0.565474,3.98304,-0.677985}};
			path[]={{1},{0}};
		};
	};
	class Exile_Chopper_Taru_Transport_CSAT
	{
		class driver
		{
			selections[]={{-0.743334,3.98355,-0.913626}};
		};
		class cargo
		{
			selections[]={};
			path[]={};
		};
		class turret
		{
			selections[]={{-0.810715,3.18698,-1.28904},{0.565464,3.98304,-0.913984}};
			path[]={{1},{0}};
		};
	};
	class Exile_Chopper_Taru_Transport_Black
	{
		class driver
		{
			selections[]={{-0.743336,3.98355,-0.913629}};
		};
		class cargo
		{
			selections[]={};
			path[]={};
		};
		class turret
		{
			selections[]={{-0.81057,3.18693,-1.28907},{0.565466,3.98304,-0.913982}};
			path[]={{1},{0}};
		};
	};
	class Exile_Boat_MotorBoat_Police
	{
		class driver
		{
			selections[]={{0.0615959,0.00519562,0.0256062}};
		};
		class cargo
		{
			selections[]={{0.000490189,-0.00857544,0.0254097},{0.000465393,-0.00869751,0.0253677}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Boat_MotorBoat_Orange
	{
		class driver
		{
			selections[]={{0.0617218,0.00353241,0.0255585}};
		};
		class cargo
		{
			selections[]={{0.000480652,-0.00862122,0.0253754},{0.000465393,-0.00872803,0.0253754}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Boat_MotorBoat_White
	{
		class driver
		{
			selections[]={{0.0615978,0.00517273,0.0256081}};
		};
		class cargo
		{
			selections[]={{0.000478745,-0.00862885,0.0253735},{0.000465393,-0.00872803,0.0253773}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Boat_RubberDuck_CSAT
	{
		class driver
		{
			selections[]={{0.0166569,-0.0551682,0.104486}};
		};
		class cargo
		{
			selections[]={{0.0167465,0.0631485,0.0550156},{0.0164928,0.0631485,0.0545774},{0.0271378,-0.0663528,0.202452},{0.00767899,-0.0231628,0.145529}};
			path[]={{0},{1},{2},{3}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Boat_RubberDuck_Digital
	{
		class driver
		{
			selections[]={{0.0166569,-0.0551682,0.104486}};
		};
		class cargo
		{
			selections[]={{0.0167465,0.0631485,0.0550156},{0.0164928,0.0631485,0.0545774},{0.0271378,-0.0663528,0.202452},{0.00767899,-0.0231628,0.145529}};
			path[]={{0},{1},{2},{3}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Boat_RubberDuck_Orange
	{
		class driver
		{
			selections[]={{0.0166569,-0.0551682,0.104486}};
		};
		class cargo
		{
			selections[]={{0.0167465,0.0631485,0.0550156},{0.0164928,0.0631485,0.0545774},{0.0271378,-0.0663528,0.202452},{0.00767899,-0.0231628,0.145529}};
			path[]={{0},{1},{2},{3}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Boat_RubberDuck_Blue
	{
		class driver
		{
			selections[]={{0.0166569,-0.0551682,0.104486}};
		};
		class cargo
		{
			selections[]={{0.0167465,0.0631485,0.0550156},{0.0164928,0.0631485,0.0545774},{0.0271378,-0.0663528,0.202452},{0.00767899,-0.0231628,0.145529}};
			path[]={{0},{1},{2},{3}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Boat_RubberDuck_Black
	{
		class driver
		{
			selections[]={{0.0166569,-0.0551682,0.104486}};
		};
		class cargo
		{
			selections[]={{0.0167465,0.0631485,0.0550156},{0.0164928,0.0631485,0.0545774},{0.0271378,-0.0663528,0.202452},{0.00767899,-0.0231628,0.145529}};
			path[]={{0},{1},{2},{3}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Exile_Boat_SDV_CSAT
	{
		class driver
		{
			selections[]={{0.000593185,0.0262985,0.127645}};
		};
		class cargo
		{
			selections[]={{-0.0384064,-0.0848236,0.109874},{-0.0383644,-0.0848999,0.109885}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={{0.000169754,0.0289078,0.128582}};
			path[]={{0}};
		};
	};
	class Exile_Boat_SDV_Digital
	{
		class driver
		{
			selections[]={{0.000717163,0.0261154,0.127669}};
		};
		class cargo
		{
			selections[]={{-0.0384083,-0.0848846,0.10988},{-0.0382442,-0.0848312,0.109887}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={{8.58307e-005,0.0290604,0.128695}};
			path[]={{0}};
		};
	};
	class Exile_Boat_SDV_Grey
	{
		class driver
		{
			selections[]={{0.000501633,0.026413,0.127617}};
		};
		class cargo
		{
			selections[]={{-0.0384007,-0.0847626,0.109868},{-0.0383186,-0.0848694,0.109886}};
			path[]={{-10},{-10}};
		};
		class turret
		{
			selections[]={{0.000108719,0.0290375,0.128666}};
			path[]={{0}};
		};
	};
	class Exile_Plane_Cessna
	{
		class driver
		{
			selections[]={{-0.256237,0.266281,-0.5019}};
		};
		class cargo
		{
			selections[]={{0.192383,0.265854,-0.50211},{0.176575,-0.643951,-0.509142},{-0.237961,-0.644592,-0.509477}};
			path[]={{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class volha_Civ_01
	{
		class driver
		{
			selections[]={{-0.360138,0.0147705,-0.78298}};
		};
		class cargo
		{
			selections[]={{0.406574,0.0878448,-0.715643},{-0.336567,-0.763214,-0.72948},{0.425392,-0.768951,-0.739796},{0.127518,-1.95448,-0.681242}};
			path[]={{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class volha_Civ_02
	{
		class driver
		{
			selections[]={{-0.360115,0.0146637,-0.782982}};
		};
		class cargo
		{
			selections[]={{0.40659,0.087738,-0.715646},{-0.336559,-0.763229,-0.729479},{0.4254,-0.768784,-0.739793},{0.127502,-1.9545,-0.681242}};
			path[]={{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class volha_Civ_03
	{
		class driver
		{
			selections[]={{-0.36013,0.0148773,-0.782979}};
		};
		class cargo
		{
			selections[]={{0.40657,0.0880127,-0.715639},{-0.336571,-0.763107,-0.729481},{0.425396,-0.769028,-0.739796},{0.127514,-1.9545,-0.681242}};
			path[]={{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Landrover_Des
	{
		class driver
		{
			selections[]={{-0.506546,0.108292,-0.485136}};
		};
		class cargo
		{
			selections[]={{0.471333,0.158569,-0.510056},{-0.652729,-0.563751,-0.25245},{0.630791,-0.662003,-0.253831},{-0.657791,-1.28905,-0.252433},{0.622639,-1.3735,-0.23742},{-0.560364,-2.07066,-0.309711},{0.5536,-2.14114,-0.317466},{-0.607296,-2.05589,-0.336899}};
			path[]={{-10},{-10},{-10},{-10},{-10},{0},{1},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Landrover_Civ_01
	{
		class driver
		{
			selections[]={{-0.506546,0.108459,-0.485136}};
		};
		class cargo
		{
			selections[]={{0.471333,0.158813,-0.510091},{-0.652557,-0.563721,-0.25245},{0.630783,-0.662003,-0.253844},{-0.657562,-1.28902,-0.252429},{0.622414,-1.37354,-0.237408},{-0.560661,-2.07065,-0.309712},{0.55386,-2.14113,-0.317468},{-0.607365,-2.05595,-0.336863}};
			path[]={{-10},{-10},{-10},{-10},{-10},{0},{1},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Landrover_Civ_01_Urban1
	{
		class driver
		{
			selections[]={{-0.506538,0.107697,-0.485138}};
		};
		class cargo
		{
			selections[]={{0.471321,0.160202,-0.510054},{-0.651627,-0.563736,-0.252447},{0.629993,-0.662003,-0.253777},{-0.656902,-1.28903,-0.252441},{0.62207,-1.37343,-0.237541},{-0.560841,-2.07066,-0.309712},{0.556992,-2.1411,-0.317482},{-0.614658,-2.05592,-0.336648}};
			path[]={{-10},{-10},{-10},{-10},{-10},{0},{1},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Landrover_Civ_03
	{
		class driver
		{
			selections[]={{-0.506409,0.1082,-0.485137}};
		};
		class cargo
		{
			selections[]={{0.471527,0.15863,-0.510101},{-0.652634,-0.563873,-0.252447},{0.631378,-0.661926,-0.253875},{-0.658344,-1.28906,-0.252429},{0.622692,-1.3734,-0.237528},{-0.55867,-2.07065,-0.309703},{0.553116,-2.14117,-0.317465},{-0.610188,-2.05582,-0.336978}};
			path[]={{-10},{-10},{-10},{-10},{-10},{0},{1},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class LR_Ambulance_01
	{
		class driver
		{
			selections[]={{-0.506523,0.829788,-0.485242}};
		};
		class cargo
		{
			selections[]={{0.471352,0.881531,-0.509775},{-0.651459,0.159973,-0.252599},{0.62632,0.0623016,-0.253047},{-0.655495,-0.565384,-0.252575},{0.621967,-0.650284,-0.240242},{-0.617096,-1.33372,-0.23901}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class LR_Ambulance_02
	{
		class driver
		{
			selections[]={{-0.506508,0.829636,-0.485243}};
		};
		class cargo
		{
			selections[]={{0.471382,0.881912,-0.509674},{-0.650581,0.159943,-0.252594},{0.625885,0.0623932,-0.252949},{-0.655285,-0.56543,-0.252585},{0.622341,-0.650421,-0.240392},{-0.617676,-1.33339,-0.239389}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class UH1H_Closed_TK
	{
		class driver
		{
			selections[]={{0.519148,3.11723,-0.884327}};
		};
		class cargo
		{
			selections[]={{-0.679665,0.934769,-0.94407},{0.666822,0.874023,-0.922603},{-0.6189,0.891777,-0.984931},{-0.282646,1.71436,-0.878741},{0.778322,1.67688,-0.911672},{-0.812958,1.67683,-0.911697},{0.255842,1.67674,-0.911744},{0.60574,0.924599,-0.954792},{-0.0321369,0.0147629,0.0712428}};
			path[]={{1},{2},{-10},{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={{-0.583241,3.21166,-0.938683}};
			path[]={{0}};
		};
	};
	class UH1H_M240_TK
	{
		class driver
		{
			selections[]={{0.519148,3.09864,-0.891768}};
		};
		class cargo
		{
			selections[]={{0.896776,1.63419,-1.20447},{-1.00225,1.63494,-1.20301},{0.775558,1.66322,-1.26399},{0.173376,1.59613,-1.24418},{0.721884,2.56361,-1.21366},{-0.941084,1.58996,-1.24267},{-0.373192,2.61034,-1.21377},{-0.783073,2.31014,-1.20039}};
			path[]={{2},{3},{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={{-0.508577,0.956978,-1.00998},{0.495094,0.850342,-0.992823},{-0.583241,3.21166,-0.938682}};
			path[]={{0},{1},{4}};
		};
	};
	class B_APC_Wheeled_01_cannon_F
	{
		class driver
		{
			selections[]={{-0.533119,0.812683,-1.52234}};
		};
		class cargo
		{
			selections[]={{-0.00854492,0.00886536,0.069809},{0.00312805,0.0188141,0.0309114},{-0.00959015,0.019577,0.0775681},{0.00226593,-0.0228729,0.0223455},{-0.00836563,-0.0420227,0.046957},{-0.031456,0.0287781,0.0751305},{0.00315475,0.0184784,0.0306883},{-0.00938797,0.00793457,0.0693855}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={{0.566055,-1.97739,-0.208199},{0.198837,-1.22818,-0.208364}};
			path[]={{0},{0,0}};
		};
	};
	class O_APC_Wheeled_02_rcws_F
	{
		class driver
		{
			selections[]={{-0.197205,-0.298538,-1.31811}};
		};
		class cargo
		{
			selections[]={{0.864738,-3.87024,-0.954178},{-0.13147,-3.93274,-1.0496},{0.863522,-2.62872,-0.978002},{-0.149502,-2.71019,-1.05227},{0.872505,-3.2998,-1.0486},{-0.11573,-3.26552,-0.970794},{0.818466,-2.05443,-0.938668},{-0.167103,-2.07521,-0.896795}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={{-0.0480995,-0.116928,-0.45265},{-0.27599,-1.07854,-0.845204}};
			path[]={{0},{1}};
		};
	};
	class B_MBT_01_TUSK_F
	{
		class driver
		{
			selections[]={{-0.0459061,-0.12262,-0.452644}};
		};
		class cargo
		{
			selections[]={{-0.00410461,-0.464417,0.208023},{-0.00327682,-0.0432892,0.0547466},{-0.00595093,-0.0526276,0.0458684},{0.00325775,-0.0333405,0.106069},{-0.0100212,-0.0470276,0.0470819},{0.00358582,-0.0353546,0.0628691}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={{-0.0493927,-0.116135,-0.452647},{0.628986,-0.710037,-0.64051}};
			path[]={{0},{0,0}};
		};
	};
	class I_APC_Wheeled_03_cannon_F
	{
		class driver
		{
			selections[]={{-0.0403366,1.26404,-1.51558}};
		};
		class cargo
		{
			selections[]={{0.00240326,0.0215759,0.0810757},{0.00320816,-0.0170746,0.0660906},{-0.00043869,-0.0149994,0.0578079},{-0.0318909,0.0178223,0.071435},{-0.00897598,0.00769043,0.069315},{-0.0091362,-0.0462189,0.055479},{-0.00465393,-0.00691223,0.0704403},{0.00323868,-0.0171509,0.0658407}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={{-0.0386047,0.0172272,0.0430374},{-0.107918,-0.0556641,-0.987075}};
			path[]={{0},{0,0}};
		};
	};
	class Ikarus_Base
	{
		class driver
		{
			selections[]={{-0.851151,3.93997,-0.214146}};
		};
		class cargo
		{
			selections[]={{-0.961136,0.640854,-0.304607},{-0.979622,3.06471,-0.291253},{-1.01073,-0.158218,-0.287315},{0.773998,1.82841,-0.292373},{0.781502,-3.33754,-0.277909},{-1.02489,-1.63689,-0.277692},{0.786018,-1.58829,-0.27759},{0.231026,0.98732,-0.29971},{-1.02837,-2.47432,-0.280259},{0.261074,-3.16533,-0.279264},{0.263191,-1.67531,-0.279359},{0.226448,1.80962,-0.287246},{0.231941,-2.47473,-0.240832},{0.307339,2.6828,-0.262156},{-0.966446,-3.27206,-0.283432},{-0.990402,-0.920868,-0.288634},{-0.896942,2.2529,-0.271753},{-0.949383,1.45804,-0.271999},{0.715233,1.00255,-0.264444},{-0.272835,-5.29997,0.158076},{-0.301567,-0.699478,0.158074},{-0.391579,-3.78313,0.158072},{-0.825119,-4.51001,0.15807}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Ikarus_Civ_Base
	{
		class driver
		{
			selections[]={{-0.851143,3.93991,-0.214146}};
		};
		class cargo
		{
			selections[]={{-0.96114,0.640839,-0.304608},{-0.979626,3.06467,-0.291255},{-1.01073,-0.158234,-0.287316},{0.774002,1.82843,-0.292373},{0.781502,-3.33739,-0.277924},{-1.02489,-1.63739,-0.277737},{0.786018,-1.58817,-0.27758},{0.231003,0.987656,-0.299683},{-1.02819,-2.47398,-0.280227},{0.261017,-3.16579,-0.279223},{0.263165,-1.67511,-0.279342},{0.226463,1.80959,-0.287248},{0.231926,-2.47517,-0.240835},{0.307411,2.68221,-0.262186},{-0.986076,-3.22955,-0.276141},{-0.990673,-0.922791,-0.288808},{-0.896122,2.25093,-0.271845},{-0.949379,1.4592,-0.271895},{0.715218,1.0034,-0.264352},{-0.272205,-5.3,0.158078},{-0.301128,-0.699402,0.158074},{-0.391815,-3.78333,0.158072},{-0.824905,-4.51009,0.158071}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Ikarus_Civ_02
	{
		class driver
		{
			selections[]={{-0.851139,3.9399,-0.214146}};
		};
		class cargo
		{
			selections[]={{-0.961132,0.640823,-0.304609},{-0.979618,3.06468,-0.291254},{-1.01073,-0.158279,-0.287319},{0.774002,1.8284,-0.292376},{0.781494,-3.33733,-0.277927},{-1.02488,-1.63951,-0.277925},{0.786026,-1.59116,-0.277844},{0.231003,0.987701,-0.299676},{-1.02772,-2.47322,-0.280147},{0.260845,-3.16663,-0.279147},{0.26302,-1.67377,-0.279223},{0.225677,1.81067,-0.28713},{0.231991,-2.47363,-0.240821},{0.307274,2.68372,-0.26211},{-0.98587,-3.23161,-0.275962},{-0.989716,-0.917664,-0.288621},{-0.864067,2.22166,-0.279183},{-0.949181,1.45935,-0.272163},{0.715256,1.00194,-0.264509},{-0.2733,-5.29999,0.158074},{-0.301918,-0.699539,0.158072},{-0.391357,-3.78296,0.158071},{-0.825325,-4.50992,0.158069}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Lada_Civ_01
	{
		class driver
		{
			selections[]={{-0.342529,-0.0471649,-0.710351}};
		};
		class cargo
		{
			selections[]={{0.34343,-0.0516205,-0.703833},{-0.329865,-0.84903,-0.691311},{0.363815,-0.848694,-0.68574},{-0.0792236,-1.76491,-0.728607}};
			path[]={{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Lada_Civ_02
	{
		class driver
		{
			selections[]={{-0.342525,-0.0471344,-0.710352}};
		};
		class cargo
		{
			selections[]={{0.343433,-0.0513763,-0.703834},{-0.329857,-0.848938,-0.69131},{0.363819,-0.84903,-0.68574},{-0.079174,-1.76413,-0.728606}};
			path[]={{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Lada_Civ_03
	{
		class driver
		{
			selections[]={{-0.342529,-0.0471191,-0.710351}};
		};
		class cargo
		{
			selections[]={{0.343433,-0.0514374,-0.703833},{-0.329857,-0.848969,-0.691311},{0.363815,-0.848892,-0.68574},{-0.0791931,-1.76451,-0.728607}};
			path[]={{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Lada_Civ_04
	{
		class driver
		{
			selections[]={{-0.342541,-0.0471191,-0.710351}};
		};
		class cargo
		{
			selections[]={{0.343418,-0.0516052,-0.703834},{-0.329868,-0.84903,-0.691311},{0.363808,-0.848724,-0.68574},{-0.079216,-1.76488,-0.728607}};
			path[]={{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Lada_Militia
	{
		class driver
		{
			selections[]={{-0.342522,-0.0471344,-0.709815}};
		};
		class cargo
		{
			selections[]={{0.343433,-0.0515442,-0.703295},{-0.329857,-0.848999,-0.690773},{0.363815,-0.84877,-0.685204},{-0.0792122,-1.76474,-0.728074}};
			path[]={{-10},{-10},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Ural_Open_Base
	{
		class driver
		{
			selections[]={{-0.509117,1.52705,1.70417}};
		};
		class cargo
		{
			selections[]={{0.677872,1.37671,1.67594},{0.221512,1.43709,1.66279},{0.96212,-0.706665,2.10738},{-0.923096,-0.529251,2.07775},{0.969444,-1.36476,2.09531},{-0.902218,-1.15741,2.10067},{0.963223,-1.96207,2.10012},{-0.89225,-1.86104,2.09849},{0.98275,-2.70352,2.09},{-0.843468,-2.51158,2.10086},{1.0411,-3.29944,2.05789},{-0.949089,-3.04993,2.06324},{0.941177,-0.0220337,2.1052},{-0.979359,0.160477,2.07116}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{1},{0},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Ural_Civ_01
	{
		class driver
		{
			selections[]={{-0.557285,1.746,-0.305796}};
		};
		class cargo
		{
			selections[]={{0.629745,1.59549,-0.334021},{0.173603,1.65613,-0.347072},{0.912254,-0.484665,0.0971789},{-0.970619,-0.310394,0.0688052},{0.921295,-1.1458,0.0853415},{-0.950424,-0.938446,0.0907068},{0.916225,-1.743,0.0898576},{-0.940483,-1.64215,0.0885377},{0.933826,-2.48524,0.0794501},{-0.892727,-2.29317,0.0905948},{0.992954,-3.08049,0.0479288},{-0.997314,-2.83099,0.0532827},{0.894009,0.195724,0.0954447},{-1.02644,0.379623,0.0621104}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{1},{0},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Ural_Civ_02
	{
		class driver
		{
			selections[]={{-0.557301,1.746,-0.305795}};
		};
		class cargo
		{
			selections[]={{0.629745,1.59549,-0.333979},{0.173531,1.65613,-0.347092},{0.912231,-0.485321,0.0969687},{-0.970619,-0.310562,0.0687151},{0.921291,-1.14583,0.0853424},{-0.950428,-0.938431,0.0907068},{0.916183,-1.74298,0.0898709},{-0.940456,-1.64214,0.0885391},{0.934219,-2.48528,0.0796733},{-0.89249,-2.29303,0.0906649},{0.992947,-3.08049,0.0479288},{-0.99733,-2.83098,0.0532856},{0.893791,0.195953,0.0954323},{-1.02663,0.379684,0.0619922}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{1},{0},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Ural_Civ_03
	{
		class driver
		{
			selections[]={{-0.557297,1.74602,-0.305794}};
		};
		class cargo
		{
			selections[]={{0.629753,1.59549,-0.333989},{0.173523,1.65611,-0.347096},{0.912228,-0.485062,0.097033},{-0.970615,-0.310532,0.0687361},{0.921295,-1.14581,0.0853424},{-0.950424,-0.938431,0.0907073},{0.916237,-1.743,0.0898576},{-0.940475,-1.64215,0.0885382},{0.934151,-2.48532,0.0796289},{-0.892426,-2.29303,0.090683},{0.992973,-3.08049,0.0479321},{-0.997375,-2.83099,0.0532937},{0.893684,0.196121,0.0954208},{-1.02673,0.379669,0.0619183}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{1},{0},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Ural_Open_Civ_01
	{
		class driver
		{
			selections[]={{-0.509106,1.52716,1.70417}};
		};
		class cargo
		{
			selections[]={{0.677925,1.37666,1.67599},{0.22168,1.43726,1.66286},{0.960419,-0.704666,2.10687},{-0.922382,-0.529587,2.07864},{0.969421,-1.36473,2.0953},{-0.902252,-1.15738,2.10067},{0.964241,-1.96191,2.09986},{-0.892296,-1.86107,2.0985},{0.98243,-2.70419,2.08967},{-0.844433,-2.51202,2.10059},{1.04117,-3.29944,2.0579},{-0.949234,-3.04993,2.06326},{0.942001,-0.0230103,2.1054},{-0.978424,0.160736,2.07198}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{1},{0},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Ural_Open_Civ_02
	{
		class driver
		{
			selections[]={{-0.509129,1.52702,1.70417}};
		};
		class cargo
		{
			selections[]={{0.677917,1.37653,1.67595},{0.221733,1.43716,1.66288},{0.960381,-0.704025,2.10698},{-0.922432,-0.529602,2.07864},{0.969467,-1.36475,2.0953},{-0.902275,-1.15738,2.10067},{0.964256,-1.96193,2.09986},{-0.892296,-1.86108,2.0985},{0.982307,-2.70424,2.0896},{-0.844357,-2.51201,2.10061},{1.04114,-3.29942,2.05789},{-0.949181,-3.04993,2.06325},{0.942039,-0.023056,2.1054},{-0.97842,0.160721,2.07199}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{1},{0},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
	class Ural_Open_Civ_03
	{
		class driver
		{
			selections[]={{-0.509117,1.5271,1.70417}};
		};
		class cargo
		{
			selections[]={{0.677925,1.3766,1.67596},{0.221733,1.43723,1.66288},{0.960323,-0.703781,2.10708},{-0.922417,-0.529327,2.07876},{0.96946,-1.36475,2.0953},{-0.902283,-1.15741,2.10067},{0.964523,-1.96196,2.0998},{-0.892288,-1.8611,2.0985},{0.981693,-2.70415,2.08929},{-0.844707,-2.51213,2.10051},{1.04115,-3.29944,2.0579},{-0.949207,-3.04993,2.06326},{0.942165,-0.0231781,2.10541},{-0.978294,0.16069,2.07206}};
			path[]={{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{-10},{1},{0},{-10},{-10}};
		};
		class turret
		{
			selections[]={};
			path[]={};
		};
	};
};
class CfgExileToasts
{
	class InfoEmpty
	{
		template = "%1";
		color[] = {0.247, 0.831, 0.988, 1};
	};
	class InfoTitleOnly
	{
		template = "<t size='22' font='PuristaMedium'>%1</t>";
		color[] = {0.247, 0.831, 0.988, 1};
	};
	class InfoTitleAndText
	{
		template = "<t size='22' font='PuristaMedium'>%1</t><br/><t color='#ff979ba1' size='19' font='PuristaLight'>%2</t>";
		color[] = {0.247, 0.831, 0.988, 1};
	};
	class SuccessEmpty
	{
		template = "%1";
		color[] = {0.627, 0.874, 0.231, 1};
	};
	class SuccessTitleOnly
	{
		template = "<t size='22' font='PuristaMedium'>%1</t>";
		color[] = {0.627, 0.874, 0.231, 1};
	};
	class SuccessTitleAndText
	{
		template = "<t size='22' font='PuristaMedium'>%1</t><br/><t color='#ff979ba1' size='19' font='PuristaLight'>%2</t>";
		color[] = {0.627, 0.874, 0.231, 1};
	};
	class ErrorEmpty
	{
		template = "%1";
		color[] = {0.780, 0.149, 0.318, 1};
	};
	class ErrorTitleOnly
	{
		template = "<t size='22' font='PuristaMedium'>%1</t>";
		color[] = {0.780, 0.149, 0.318, 1};
	};
	class ErrorTitleAndText
	{
		template = "<t size='22' font='PuristaMedium'>%1</t><br/><t color='#ff979ba1' size='19' font='PuristaLight'>%2</t>";
		color[] = {0.780, 0.149, 0.318, 1};
	};
	class WarningEmpty
	{
		template = "%1";
		color[] = {0.871, 0.796, 0.227, 1};
	};
	class WarningTitleOnly
	{
		template = "<t size='22' font='PuristaMedium'>%1</t>";
		color[] = {0.871, 0.796, 0.227, 1};
	};
	class WarningTitleAndText
	{
		template = "<t size='22' font='PuristaMedium'>%1</t><br/><t color='#ff979ba1' size='19' font='PuristaLight'>%2</t>";
		color[] = {0.871, 0.796, 0.227, 1};
	};
	class JobAdded
	{
		template = "<t size='22' font='PuristaMedium' align='center' valign='middle'>JOB ADDED</t><br/><t color='#ff979ba1' size='19' font='PuristaLight'>----------------------------------------------------<br/>%1</t>";
		color[] = {0.247, 0.831, 0.988, 1};
	};
	class JobInProgress
	{
		template = "<t size='22' font='PuristaMedium' align='center' valign='middle'>JOB IN PROGRESS</t><br/><t color='#ff979ba1' size='19' font='PuristaLight'>----------------------------------------------------<br/>%1</t>";
		color[] = {0.247, 0.831, 0.988, 1};
	};	
	class SideQuestAdded
	{
		template = "<t size='22' font='PuristaMedium' align='center' valign='middle'>SIDE QUEST ADDED</t><br/><t color='#ff979ba1' size='19' font='PuristaLight'>----------------------------------------------------<br/>%1</t>";
		color[] = {0.247, 0.831, 0.988, 1};
	};
	class SideQuestCompleted
	{
		template = "<t size='22' font='PuristaMedium' align='center' valign='middle'>SIDE QUEST COMPLETED</t><br/><t color='#ff979ba1' size='19' font='PuristaLight'>----------------------------------------------------<br/>%1</t>";
		color[] = {0.627, 0.874, 0.231, 1};
	};
	class JobCompleted
	{
		template = "<t size='22' font='PuristaMedium' align='center' valign='middle'>JOB COMPLETED</t><br/><t color='#ff979ba1' size='19' font='PuristaLight'>----------------------------------------------------<br/>%1</t>";
		color[] = {0.627, 0.874, 0.231, 1};
	};
	class JobFailed
	{
		template = "<t size='22' font='PuristaMedium' align='center' valign='middle'>JOB FAILED</t><br/><t color='#ff979ba1' size='19' font='PuristaLight'>----------------------------------------------------<br/>%1</t>";
		color[] = {0.780, 0.149, 0.318, 1};
	};
	class JobForfeited
	{
		template = "<t size='22' font='PuristaMedium' align='center' valign='middle'>JOB FORFEITED</t><br/><t color='#ff979ba1' size='19' font='PuristaLight'>----------------------------------------------------<br/>%1</t>";
		color[] = {0.780, 0.149, 0.318, 1};
	};
};
class CfgFlagsNative
{
	class BI
	{
		name = "Bohemia Interactive";
		texture = "exile_assets\texture\flag\flag_mate_bis_co.paa";
		uids[] = {"76561197977933359","76561197968664825","76561198003485468","76561198050098256","76561198007169107","76561197971697870","76561198085333695","76561197991855773"};
	};
	class Vish
	{
		name = "Vish";
		texture = "exile_assets\texture\flag\flag_mate_vish_co.paa";
		uids[] = {"76561198075905447"};
	};
	class Hollow
	{
		name = "Hollow";
		texture = "exile_assets\texture\flag\flag_mate_hollow_co.paa";
		uids[] = {"76561198182951970"};
	};
	class Legion
	{
		name = "Legion";
		texture = "exile_assets\texture\flag\flag_mate_legion_ca.paa";
		uids[] = {"76561198010969041","76561198124983829","76561198094881952","76561198111208683","76561198015966307","76561198078247060","76561198034836765","76561197998832240","76561197970701357","76561198123330495"};
	};
	class DogesOfMassDestruction
	{
		name = "21 DMD";
		texture = "exile_assets\texture\flag\flag_mate_21dmd_co.paa";
		uids[] = {"76561198021615590"};
	};
	class Spawny
	{
		name = "sp4wny";
		texture = "exile_assets\texture\flag\flag_mate_spawny_co.paa";
		uids[] = {"76561197960452768"};
	};
	class Tomms
	{
		name = "Tomms";
		texture = "exile_assets\texture\flag\flag_mate_secretone_co.paa";
		uids[] = {"76561198003041335"};
	};
	class StitchMoonz
	{
		name = "StitchMoonz";
		texture = "exile_assets\texture\flag\flag_mate_stitchmoonz_co.paa";
		uids[] = {"76561198112458056"};
	};
	class Blue 
	{
		name = "Blue";
		texture = "\A3\Data_F\Flags\flag_blue_co.paa";
		uids[] = {};
	};
	class Green 
	{
		name = "Green";
		texture = "\A3\Data_F\Flags\flag_green_co.paa";
		uids[] = {};
	};
	class Red 
	{
		name = "Red";
		texture = "\A3\Data_F\Flags\flag_red_co.paa";
		uids[] = {};
	};
	class White 
	{
		name = "White";
		texture = "\A3\Data_F\Flags\flag_white_co.paa";
		uids[] = {};
	};
	class CountryUK 
	{
		name = "United Kingdom";
		texture = "\A3\Data_F\Flags\flag_uk_co.paa";
		uids[] = {};
	};
	class CountryDE
	{
		name = "Germany";
		texture = "exile_assets\texture\flag\flag_country_de_co.paa";
		uids[] = {};
	};
	class CountryAT
	{
		name = "Austria";
		texture = "exile_assets\texture\flag\flag_country_at_co.paa";
		uids[] = {};
	};
	class CountrySCT
	{
		name = "Scotland";
		texture = "exile_assets\texture\flag\flag_country_sct_co.paa";
		uids[] = {};
	};
	class CountryEE
	{
		name = "Estonia";
		texture = "exile_assets\texture\flag\flag_country_ee_co.paa";
		uids[] = {};
	};
	class CountryCZ
	{
		name = "Czech Republic";
		texture = "exile_assets\texture\flag\flag_country_cz_co.paa";
		uids[] = {};
	};
	class CountryNL
	{
		name = "The Netherlands";
		texture = "exile_assets\texture\flag\flag_country_nl_co.paa";
		uids[] = {};
	};
	class CountryHR
	{
		name = "Croatia";
		texture = "exile_assets\texture\flag\flag_country_hr_co.paa";
		uids[] = {};
	};
	class CountryCN 
	{
		name = "Canada";
		texture = "exile_assets\texture\flag\flag_country_cn_co.paa";
		uids[] = {};
	};
	class CountryRU
	{	
		name = "Russia";
		texture = "exile_assets\texture\flag\flag_country_ru_co.paa";
		uids[] = {};
	};
	class CountryIR
	{	
		name = "Ireland";
		texture = "exile_assets\texture\flag\flag_country_ir_co.paa";
		uids[] = {};
	};
	class CountryBY
	{	
		name = "Belarus";
		texture = "exile_assets\texture\flag\flag_country_by_co.paa";
		uids[] = {};
	};
	class CountryFI
	{	
		name = "Finland";
		texture = "exile_assets\texture\flag\flag_country_fi_co.paa";
		uids[] = {};
	};
	class CountryFR
	{	
		name = "France";
		texture = "exile_assets\texture\flag\flag_country_fr_co.paa";
		uids[] = {};
	};
	class CountryAU
	{	
		name = "Australia";
		texture = "exile_assets\texture\flag\flag_country_au_co.paa";
		uids[] = {};
	};
	class CountryBE
	{	
		name = "Belgium";
		texture = "exile_assets\texture\flag\flag_country_be_co.paa";
		uids[] = {};
	};
	class CountrySE
	{	
		name = "Sweden";
		texture = "exile_assets\texture\flag\flag_country_se_co.paa";
		uids[] = {};
	};
	class CountryPL
	{
		name = "Poland";
		texture = "exile_assets\texture\flag\flag_country_pl_co.paa";
		uids[] = {};
	};
	class CountryPL2
	{
		name = "Poland 2";
		texture = "exile_assets\texture\flag\flag_country_pl2_co.paa";
		uids[] = {};
	};
	class CountryPT
	{
		name = "Portugal";
		texture = "exile_assets\texture\flag\flag_country_pt_co.paa";
		uids[] = {};
	};
	class Zand3rs
	{
		name = "Zand3rs";
		texture = "exile_assets\texture\flag\flag_mate_zanders_streched_co.paa";
		uids[] = {};
	};
	class Brunswik
	{
		name = "Brunswik";
		texture = "exile_assets\texture\flag\flag_misc_brunswik_co.paa";
		uids[] = {};
	};
	class Dorset
	{
		name = "Dorset";
		texture = "exile_assets\texture\flag\flag_misc_dorset_co.paa";
		uids[] = {};
	};
	class Svarog
	{
		name = "Children of Svarog";
		texture = "exile_assets\texture\flag\flag_misc_svarog_co.paa";
		uids[] = {};
	};
	class Exile
	{	
		name = "Exile";
		texture = "exile_assets\texture\flag\flag_misc_exile_co.paa";
		uids[] = {};
	};
	class UTcity
	{	
		name = "UTcity";
		texture = "exile_assets\texture\flag\flag_misc_utcity_co.paa";
		uids[] = {};
	};
	class Dickbutt
	{
		name = "Dickbut";
		texture = "exile_assets\texture\flag\flag_misc_dickbutt_co.paa";
		uids[] = {};
	};
	class Rainbow
	{
		name = "Rainbow";
		texture = "exile_assets\texture\flag\flag_misc_rainbow_co.paa";
		uids[] = {};
	};
	class BattlEye 
	{
		name = "BattlEye";
		texture = "exile_assets\texture\flag\flag_misc_battleye_co.paa";
		uids[] = {};
	};
	class BSS
	{
		name = "Bluescreen Simulator";
		texture = "exile_assets\texture\flag\flag_misc_bss_co.paa";
		uids[] = {};
	};
	class Skippy 
	{
		name = "Skippy";
		texture = "exile_assets\texture\flag\flag_misc_skippy_co.paa";
		uids[] = {};
	};
	class KiwiFern 
	{
		name = "Silver Fern";
		texture = "exile_assets\texture\flag\flag_misc_kiwifern_co.paa";
		uids[] = {};
	};
	class Trololol
	{	
		name = "Trololol";
		texture = "exile_assets\texture\flag\flag_misc_trololol_co.paa";
		uids[] = {};
	};
	class DreamCat
	{	
		name = "Dream Cat";
		texture = "exile_assets\texture\flag\flag_misc_dream_cat_co.paa";
		uids[] = {};
	};
	class Pirate
	{	
		name = "Pirate";
		texture = "exile_assets\texture\flag\flag_misc_pirate_co.paa";
		uids[] = {};
	};
	class Pedobear
	{
		name = "Pedobear";
		texture = "exile_assets\texture\flag\flag_misc_pedobear_co.paa";
		uids[] = {};
	};
	class Petoria
	{	
		name = "Petoria";
		texture = "exile_assets\texture\flag\flag_misc_petoria_co.paa";
		uids[] = {};
	};
	class Smashing
	{
		name = "Smashing";
		texture = "exile_assets\texture\flag\flag_misc_smashing_co.paa";
		uids[] = {};
	};
	class LemonParty
	{
		name = "Lemon Party";
		texture = "exile_assets\texture\flag\flag_misc_lemonparty_co.paa";
		uids[] = {};
	};
	class RMA
	{
		name = "Respect my autoritah!";
		texture = "exile_assets\texture\flag\flag_misc_rma_co.paa";
		uids[] = {};
	};
	class CP
	{
		name = "ClarkyCallad";
		texture = "exile_assets\texture\flag\flag_cp_co.paa";
		uids[] = {};
	};
	class Trouble2_NA
	{
		name = "Trouble2";
		texture = "exile_assets\texture\flag\flag_trouble2_co.paa";
		uids[] = {};
	};
	class ExileCity
	{
		name = "Exile City";
		texture = "exile_assets\texture\flag\flag_exile_city_co.paa";
		uids[] = {};
	};
	class Eraser1
	{
		name = "eraser1";
		texture = "exile_assets\texture\flag\flag_misc_eraser1_co.paa";
		uids[] = {};
	};
	class Trespassers
	{
		name = "Trespassers will be eaten";
		texture = "exile_assets\texture\flag\flag_misc_willbeeaten_co.paa";
		uids[] = {};
	};
	class PrivateProperty
	{
		name = "Private Property";
		texture = "exile_assets\texture\flag\flag_misc_privateproperty_co.paa";
		uids[] = {};
	};
	class NuCoolR
	{
		name = "Nu Cool R";
		texture = "exile_assets\texture\flag\flag_misc_nuclear_co.paa";
		uids[] = {};
	};
	class LazerKiwi
	{
		name = "Lazer Kiwi";
		texture = "exile_assets\texture\flag\flag_misc_lazerkiwi_co.paa";
		uids[] = {};
	};
	class Beardageddon
	{
		name = "Beardageddon";
		texture = "exile_assets\texture\flag\flag_misc_beardageddon_co.paa";
		uids[] = {};
	};
	class CountryDK
	{
		name = "Denmark";
		texture = "exile_assets\texture\flag\flag_country_dk_co.paa";
		uids[] = {};
	};
	class CountryIT
	{
		name = "Italy";
		texture = "exile_assets\texture\flag\flag_country_it_co.paa";
		uids[] = {};
	};
};
class CfgFontFamilies
{
	class RobotoRegular
	{
		spaceWidth = 0.7;
		spacing = 0.065;
		fonts[] = 
		{
			"\exile_assets\font\RobotoRegular\RobotoRegular6",
			"\exile_assets\font\RobotoRegular\RobotoRegular7",
			"\exile_assets\font\RobotoRegular\RobotoRegular8",
			"\exile_assets\font\RobotoRegular\RobotoRegular9",
			"\exile_assets\font\RobotoRegular\RobotoRegular10",
			"\exile_assets\font\RobotoRegular\RobotoRegular11",
			"\exile_assets\font\RobotoRegular\RobotoRegular12",
			"\exile_assets\font\RobotoRegular\RobotoRegular13",
			"\exile_assets\font\RobotoRegular\RobotoRegular14",
			"\exile_assets\font\RobotoRegular\RobotoRegular15",
			"\exile_assets\font\RobotoRegular\RobotoRegular16",
			"\exile_assets\font\RobotoRegular\RobotoRegular17",
			"\exile_assets\font\RobotoRegular\RobotoRegular18",
			"\exile_assets\font\RobotoRegular\RobotoRegular19",
			"\exile_assets\font\RobotoRegular\RobotoRegular20",
			"\exile_assets\font\RobotoRegular\RobotoRegular21",
			"\exile_assets\font\RobotoRegular\RobotoRegular22",
			"\exile_assets\font\RobotoRegular\RobotoRegular23",
			"\exile_assets\font\RobotoRegular\RobotoRegular24",
			"\exile_assets\font\RobotoRegular\RobotoRegular25",
			"\exile_assets\font\RobotoRegular\RobotoRegular26",
			"\exile_assets\font\RobotoRegular\RobotoRegular27",
			"\exile_assets\font\RobotoRegular\RobotoRegular28",
			"\exile_assets\font\RobotoRegular\RobotoRegular29",
			"\exile_assets\font\RobotoRegular\RobotoRegular30",
			"\exile_assets\font\RobotoRegular\RobotoRegular31",
			"\exile_assets\font\RobotoRegular\RobotoRegular34",
			"\exile_assets\font\RobotoRegular\RobotoRegular35",
			"\exile_assets\font\RobotoRegular\RobotoRegular37",
			"\exile_assets\font\RobotoRegular\RobotoRegular46"
		};
	};
	class RobotoMedium
	{
		spaceWidth = 0.7;
		spacing = 0.065;
		fonts[] = 
		{
			"\exile_assets\font\RobotoMedium\RobotoMedium6",
			"\exile_assets\font\RobotoMedium\RobotoMedium7",
			"\exile_assets\font\RobotoMedium\RobotoMedium8",
			"\exile_assets\font\RobotoMedium\RobotoMedium9",
			"\exile_assets\font\RobotoMedium\RobotoMedium10",
			"\exile_assets\font\RobotoMedium\RobotoMedium11",
			"\exile_assets\font\RobotoMedium\RobotoMedium12",
			"\exile_assets\font\RobotoMedium\RobotoMedium13",
			"\exile_assets\font\RobotoMedium\RobotoMedium14",
			"\exile_assets\font\RobotoMedium\RobotoMedium15",
			"\exile_assets\font\RobotoMedium\RobotoMedium16",
			"\exile_assets\font\RobotoMedium\RobotoMedium17",
			"\exile_assets\font\RobotoMedium\RobotoMedium18",
			"\exile_assets\font\RobotoMedium\RobotoMedium19",
			"\exile_assets\font\RobotoMedium\RobotoMedium20",
			"\exile_assets\font\RobotoMedium\RobotoMedium21",
			"\exile_assets\font\RobotoMedium\RobotoMedium22",
			"\exile_assets\font\RobotoMedium\RobotoMedium23",
			"\exile_assets\font\RobotoMedium\RobotoMedium24",
			"\exile_assets\font\RobotoMedium\RobotoMedium25",
			"\exile_assets\font\RobotoMedium\RobotoMedium26",
			"\exile_assets\font\RobotoMedium\RobotoMedium27",
			"\exile_assets\font\RobotoMedium\RobotoMedium28",
			"\exile_assets\font\RobotoMedium\RobotoMedium29",
			"\exile_assets\font\RobotoMedium\RobotoMedium30",
			"\exile_assets\font\RobotoMedium\RobotoMedium31",
			"\exile_assets\font\RobotoMedium\RobotoMedium34",
			"\exile_assets\font\RobotoMedium\RobotoMedium35",
			"\exile_assets\font\RobotoMedium\RobotoMedium37",
			"\exile_assets\font\RobotoMedium\RobotoMedium46"
		};
	};
	class OrbitronLight
	{
		spaceWidth = 0.7;
		spacing = 0.065;
		fonts[] = 
		{
			"\exile_assets\font\OrbitronLight\OrbitronLight6",
			"\exile_assets\font\OrbitronLight\OrbitronLight7",
			"\exile_assets\font\OrbitronLight\OrbitronLight8",
			"\exile_assets\font\OrbitronLight\OrbitronLight9",
			"\exile_assets\font\OrbitronLight\OrbitronLight10",
			"\exile_assets\font\OrbitronLight\OrbitronLight11",
			"\exile_assets\font\OrbitronLight\OrbitronLight12",
			"\exile_assets\font\OrbitronLight\OrbitronLight13",
			"\exile_assets\font\OrbitronLight\OrbitronLight14",
			"\exile_assets\font\OrbitronLight\OrbitronLight15",
			"\exile_assets\font\OrbitronLight\OrbitronLight16",
			"\exile_assets\font\OrbitronLight\OrbitronLight17",
			"\exile_assets\font\OrbitronLight\OrbitronLight18",
			"\exile_assets\font\OrbitronLight\OrbitronLight19",
			"\exile_assets\font\OrbitronLight\OrbitronLight20",
			"\exile_assets\font\OrbitronLight\OrbitronLight21",
			"\exile_assets\font\OrbitronLight\OrbitronLight22",
			"\exile_assets\font\OrbitronLight\OrbitronLight23",
			"\exile_assets\font\OrbitronLight\OrbitronLight24",
			"\exile_assets\font\OrbitronLight\OrbitronLight25",
			"\exile_assets\font\OrbitronLight\OrbitronLight26",
			"\exile_assets\font\OrbitronLight\OrbitronLight27",
			"\exile_assets\font\OrbitronLight\OrbitronLight28",
			"\exile_assets\font\OrbitronLight\OrbitronLight29",
			"\exile_assets\font\OrbitronLight\OrbitronLight30",
			"\exile_assets\font\OrbitronLight\OrbitronLight31",
			"\exile_assets\font\OrbitronLight\OrbitronLight34",
			"\exile_assets\font\OrbitronLight\OrbitronLight35",
			"\exile_assets\font\OrbitronLight\OrbitronLight37",
			"\exile_assets\font\OrbitronLight\OrbitronLight46"
		};
	};
	class OrbitronMedium
	{
		spaceWidth = 0.7;
		spacing = 0.065;
		fonts[] = 
		{
			"\exile_assets\font\OrbitronMedium\OrbitronMedium6",
			"\exile_assets\font\OrbitronMedium\OrbitronMedium7",
			"\exile_assets\font\OrbitronMedium\OrbitronMedium8",
			"\exile_assets\font\OrbitronMedium\OrbitronMedium9",
			"\exile_assets\font\OrbitronMedium\OrbitronMedium10",
			"\exile_assets\font\OrbitronMedium\OrbitronMedium11",
			"\exile_assets\font\OrbitronMedium\OrbitronMedium12",
			"\exile_assets\font\OrbitronMedium\OrbitronMedium13",
			"\exile_assets\font\OrbitronMedium\OrbitronMedium14",
			"\exile_assets\font\OrbitronMedium\OrbitronMedium15",
			"\exile_assets\font\OrbitronMedium\OrbitronMedium16",
			"\exile_assets\font\OrbitronMedium\OrbitronMedium17",
			"\exile_assets\font\OrbitronMedium\OrbitronMedium18",
			"\exile_assets\font\OrbitronMedium\OrbitronMedium19",
			"\exile_assets\font\OrbitronMedium\OrbitronMedium20",
			"\exile_assets\font\OrbitronMedium\OrbitronMedium21",
			"\exile_assets\font\OrbitronMedium\OrbitronMedium22",
			"\exile_assets\font\OrbitronMedium\OrbitronMedium23",
			"\exile_assets\font\OrbitronMedium\OrbitronMedium24",
			"\exile_assets\font\OrbitronMedium\OrbitronMedium25",
			"\exile_assets\font\OrbitronMedium\OrbitronMedium26",
			"\exile_assets\font\OrbitronMedium\OrbitronMedium27",
			"\exile_assets\font\OrbitronMedium\OrbitronMedium28",
			"\exile_assets\font\OrbitronMedium\OrbitronMedium29",
			"\exile_assets\font\OrbitronMedium\OrbitronMedium30",
			"\exile_assets\font\OrbitronMedium\OrbitronMedium31",
			"\exile_assets\font\OrbitronMedium\OrbitronMedium34",
			"\exile_assets\font\OrbitronMedium\OrbitronMedium35",
			"\exile_assets\font\OrbitronMedium\OrbitronMedium37",
			"\exile_assets\font\OrbitronMedium\OrbitronMedium46"
		};
	};
	class PressStart2P
	{
		spaceWidth = 0.7;
		spacing = 0.065;
		fonts[] = 
		{
			"\exile_assets\font\PressStart2P\PressStart2P6",
			"\exile_assets\font\PressStart2P\PressStart2P7",
			"\exile_assets\font\PressStart2P\PressStart2P8",
			"\exile_assets\font\PressStart2P\PressStart2P9",
			"\exile_assets\font\PressStart2P\PressStart2P10",
			"\exile_assets\font\PressStart2P\PressStart2P11",
			"\exile_assets\font\PressStart2P\PressStart2P12",
			"\exile_assets\font\PressStart2P\PressStart2P13",
			"\exile_assets\font\PressStart2P\PressStart2P14",
			"\exile_assets\font\PressStart2P\PressStart2P15",
			"\exile_assets\font\PressStart2P\PressStart2P16",
			"\exile_assets\font\PressStart2P\PressStart2P17",
			"\exile_assets\font\PressStart2P\PressStart2P18",
			"\exile_assets\font\PressStart2P\PressStart2P19",
			"\exile_assets\font\PressStart2P\PressStart2P20",
			"\exile_assets\font\PressStart2P\PressStart2P21",
			"\exile_assets\font\PressStart2P\PressStart2P22",
			"\exile_assets\font\PressStart2P\PressStart2P23",
			"\exile_assets\font\PressStart2P\PressStart2P24",
			"\exile_assets\font\PressStart2P\PressStart2P25",
			"\exile_assets\font\PressStart2P\PressStart2P26",
			"\exile_assets\font\PressStart2P\PressStart2P27",
			"\exile_assets\font\PressStart2P\PressStart2P28",
			"\exile_assets\font\PressStart2P\PressStart2P29",
			"\exile_assets\font\PressStart2P\PressStart2P30",
			"\exile_assets\font\PressStart2P\PressStart2P31",
			"\exile_assets\font\PressStart2P\PressStart2P34",
			"\exile_assets\font\PressStart2P\PressStart2P35",
			"\exile_assets\font\PressStart2P\PressStart2P37",
			"\exile_assets\font\PressStart2P\PressStart2P46"
		};
	};	
};
class CfgFunctions
{
	class A3
	{
		class MP
		{
			file = "exilelife_client\trashBin";
			class execFSM {};
			class execVM {};
			class execRemote {};
			class addScore {};
			class setRespawnDelay {};
			class onPlayerConnected {};
			class initPlayable {};
			class missionTimeLeft {};
			class MP {};
			class MPexec {};
			class initMultiplayer {};
			class call {};
			class spawn {};
			class deleteVehicleCrew {};
			class admin{};
			class spawnOrdered{};
		};
	};
	class ExileLifeClient
	{
		class Bootstrap
		{
			file = "exilelife_client\bootstrap";
			class preStart { preStart = 1; };
			class preInit { preInit = 1; };
			class postInit { postInit = 1; };		
		};
	};
	class ExileClient
	{
		class Bootstrap
		{
			file = "exile_client\bootstrap";
			class preStart
			{
				preStart = 0;
			};
		};
	};	
};
class CfgGesturesMale
{
	class Default;
	class States
	{
		class GestureExileAxeSwing01: Default
		{
			file = "\exile_assets\animation\Exile_Axe_Swing01.rtm";
			looped = 0;
			speed = 1.5;
			mask = "launcher";
			headBobStrength = 0.2;
			headBobMode = 2;
			disableWeapons = 0;
			rightHandIKBeg = 1;
			rightHandIKEnd = 1;
			leftHandIKBeg = 1;
			leftHandIKEnd = 1;
		};
		class GestureExileSledgeHammerSwing01: Default
		{
			file = "\exile_assets\animation\Exile_SledgeHammer_Swing01.rtm";
			looped = 0;
			speed = 0.75;
			mask = "launcher";
			headBobStrength = 0.2;
			headBobMode = 2;
			disableWeapons = 0;
			rightHandIKBeg = 1;
			rightHandIKEnd = 1;
			leftHandIKBeg = 1;
			leftHandIKEnd = 1;
		};
		class GestureExileSuicide01: Default
		{
			file = "\exile_assets\animation\Exile_Suicide01.rtm";
			looped = 0;
			speed = 0.143541;
			mask = "rightHand";
			headBobStrength = 0.2;
			headBobMode = 2;
			disableWeapons = 1;
			rightHandIKBeg = 1;
			rightHandIKEnd = 1;
			leftHandIKBeg = 1;
			leftHandIKEnd = 1;
		};
		class GestureExileSuicide02: Default
		{
			file = "\exile_assets\animation\Exile_Suicide02.rtm";
			looped = 0;
			speed = 0.124481;
			mask = "rightHand";
			headBobStrength = 0.2;
			headBobMode = 2;
			disableWeapons = 1;
			rightHandIKBeg = 1;
			rightHandIKEnd = 1;
			leftHandIKBeg = 1;
			leftHandIKEnd = 1;
		};
		class GestureExileRussianRoulette01: Default
		{
			file = "\exile_assets\animation\Exile_RussianRoulette01.rtm";
			looped = 0;
			speed = 0.3; 
			mask = "upperTorsoSelfShoot"; 
			headBobStrength = 0.2;
			headBobMode = 2;
			disableWeapons = 1;
            disableWeaponsLong = 1;
			rightHandIKBeg = 0;
			rightHandIKEnd = 0;
			leftHandIKBeg = 0;
			leftHandIKEnd = 0;
			rightHandIKCurve[] = {};
			showItemInRightHand = 0;
			showHandGun = 1;
			weaponLowered = 0;
			canPullTrigger = 1;
			forceAim = 1;
			enableOptics = false;
            showWeaponAim = false;
		};
		class GestureExileSuicideCancel01: Default
		{
			file = "\A3\anims_f\Data\Anim\Sdr\gst\GestureHi";
			looped = 0;
			speed = 1;
			mask = "rightHand";
			headBobStrength = 0.2;
			headBobMode = 2;
			disableWeapons = 1;
			rightHandIKBeg = 1;
			rightHandIKEnd = 1;
			leftHandIKBeg = 1;
			leftHandIKEnd = 1;
		};
		class GestureExileSledgeHammerSwingSequence: Default
		{
			file = "\exile_assets\animation\Exile_SledgeHammer_Swing01.rtm";
			ConnectTo[] = {"GestureExileSledgeHammerSwingX2", 2.5};
			looped = 1;
			speed = 0.75;
			mask = "launcher";
			headBobStrength = 0.2;
			headBobMode = 2;
			disableWeapons = 0;
			rightHandIKBeg = 1;
			rightHandIKEnd = 1;
			leftHandIKBeg = 1;
			leftHandIKEnd = 1;
		};
		class GestureExileSledgeHammerSwingX2: Default
		{
			file = "\exile_assets\animation\Exile_SledgeHammer_Swing01.rtm";
			ConnectTo[] = {"GestureExileSledgeHammerSwingX3", 2.5};
			looped = 0;
			speed = 0.75;
			mask = "launcher";
			headBobStrength = 0.2;
			headBobMode = 2;
			disableWeapons = 0;
			rightHandIKBeg = 1;
			rightHandIKEnd = 1;
			leftHandIKBeg = 1;
			leftHandIKEnd = 1;
		};
		class GestureExileSledgeHammerSwingX3: Default
		{
			file = "\exile_assets\animation\Exile_SledgeHammer_Swing01.rtm";
			ConnectTo[] = {"GestureExileSledgeHammerSwingX4", 2.5};
			looped = 0;
			speed = 0.75;
			mask = "launcher";
			headBobStrength = 0.2;
			headBobMode = 2;
			disableWeapons = 0;
			rightHandIKBeg = 1;
			rightHandIKEnd = 1;
			leftHandIKBeg = 1;
			leftHandIKEnd = 1;
		};
		class GestureExileSledgeHammerSwingX4: Default
		{
			file = "\exile_assets\animation\Exile_SledgeHammer_Swing01.rtm";
			ConnectTo[] = {"GestureExileSledgeHammerSwingX5", 2.5};
			looped = 0;
			speed = 0.75;
			mask = "launcher";
			headBobStrength = 0.2;
			headBobMode = 2;
			disableWeapons = 0;
			rightHandIKBeg = 1;
			rightHandIKEnd = 1;
			leftHandIKBeg = 1;
			leftHandIKEnd = 1;
		};
		class GestureExileSledgeHammerSwingX5: Default
		{
			file = "\exile_assets\animation\Exile_SledgeHammer_Swing01.rtm";
			looped = 0;
			speed = 0.75;
			mask = "launcher";
			headBobStrength = 0.2;
			headBobMode = 2;
			disableWeapons = 0;
			rightHandIKBeg = 1;
			rightHandIKEnd = 1;
			leftHandIKBeg = 1;
			leftHandIKEnd = 1;
		};
		class GestureExileLifeHoeSwing01: Default
		{
			file = "\exile_assets\animation\Exile_SledgeHammer_Swing01.rtm";
			looped = 0;
			speed = 0.75;
			mask = "launcher";
			headBobStrength = 0.2;
			headBobMode = 2;
			disableWeapons = 0;
			rightHandIKBeg = 1;
			rightHandIKEnd = 1;
			leftHandIKBeg = 1;
			leftHandIKEnd = 1;
		};
		class GestureExileLifeFlipOff01: Default
		{
			file = "\exilelife_assets\animation\FlippingOff.rtm";
			looped = 0;
			speed = 0.5;
			mask = "leftHand";
			headBobStrength = 0.2;
			headBobMode = 2;
			disableWeapons = 1;
			rightHandIKBeg = 1;
			rightHandIKEnd = 1;
			leftHandIKBeg = 1;
			leftHandIKEnd = 1;
		};
		class GestureExileLifePointKill01: Default
		{
			file = "\exilelife_assets\animation\PointKill.rtm";
			looped = 0;
			speed = 0.5;
			mask = "rightHand";
			headBobStrength = 0.2;
			headBobMode = 2;
			disableWeapons = 1;
			rightHandIKBeg = 1;
			rightHandIKEnd = 1;
			leftHandIKBeg = 1;
			leftHandIKEnd = 1;
		};
		class GestureExileLifePoint01: Default
		{
			file = "\exilelife_assets\animation\Pointing.rtm";
			looped = 0;
			speed = 0.6;
			mask = "rightHand";
			headBobStrength = 0.2;
			headBobMode = 2;
			disableWeapons = 1;
			rightHandIKBeg = 1;
			rightHandIKEnd = 1;
			leftHandIKBeg = 1;
			leftHandIKEnd = 1;
		};
		class GestureExileLifeWave01: Default
		{
			file = "\exilelife_assets\animation\Waving.rtm";
			looped = 0;
			speed = 0.6;
			mask = "rightHand";
			headBobStrength = 0.2;
			headBobMode = 2;
			disableWeapons = 1;
			rightHandIKBeg = 1;
			rightHandIKEnd = 1;
			leftHandIKBeg = 1;
			leftHandIKEnd = 1;
		};
		class GestureExileLifeApplause01: Default
		{
			file = "\exilelife_assets\animation\Applause.rtm";
			looped = 0;
			speed = 0.6;
			mask = "launcher";
			headBobStrength = 0.2;
			headBobMode = 2;
			disableWeapons = 1;
			rightHandIKBeg = 1;
			rightHandIKEnd = 1;
			leftHandIKBeg = 1;
			leftHandIKEnd = 1;
		};
	};
	class BlendAnims
	{
		upperTorsoSelfShoot[] = {"head",1,"neck1",1,"neck",1,"weapon",0,"LeftShoulder",1,"LeftArm",1,"LeftArmRoll",1,"LeftForeArm",1,"LeftForeArmRoll",1,"LeftHand",1,"LeftHandRing",1,"LeftHandPinky1",1,"LeftHandPinky2",1,"LeftHandPinky3",1,"LeftHandRing1",1,"LeftHandRing2",1,"LeftHandRing3",1,"LeftHandMiddle1",1,"LeftHandMiddle2",1,"LeftHandMiddle3",1,"LeftHandIndex1",1,"LeftHandIndex2",1,"LeftHandIndex3",1,"LeftHandThumb1",1,"LeftHandThumb2",1,"LeftHandThumb3",1,"RightShoulder",1,"RightArm",1,"RightArmRoll",1,"RightForeArm",1,"RightForeArmRoll",1,"RightHand",1,"RightHandRing",1,"RightHandPinky1",1,"RightHandPinky2",1,"RightHandPinky3",1,"RightHandRing1",1,"RightHandRing2",1,"RightHandRing3",1,"RightHandMiddle1",1,"RightHandMiddle2",1,"RightHandMiddle3",1,"RightHandIndex1",1,"RightHandIndex2",1,"RightHandIndex3",1,"RightHandThumb1",1,"RightHandThumb2",1,"RightHandThumb3",0,"Spine",1,"Spine1",1,"Spine2",1,"Spine3",1,"pelvis",1};
	};
};
class CfgGlasses
{
	class G_Balaclava_blk;
	class ExileLife_Mask_VendettaMask: G_Balaclava_blk
	{
		scope = 2;
		author = "ExileLife Mod Team";
		displayName = "ExileLife Vendetta Mask";
		descriptionShort = "No Armor";
		picture = "\exilelife_assets\Models\Items\Clothing\Masks\Images\ExileLife_Clothing_VendettaMask.paa";
		model = "\exilelife_assets\Models\Items\Clothing\Masks\ExileLife_Clothing_VendettaMask.p3d";
        identityTypes[] = {};
		hiddenSelections[]=
		{
			"camo"
		};
		hiddenSelectionsTextures[]=
		{
			"\exilelife_assets\Models\Items\Clothing\Masks\Images\ExileLife_Clothing_VendettaMask_co.paa"
		};
	};
	class ExileLife_Mask_CreeperMask: G_Balaclava_blk
	{
		scope = 2;
		author = "ExileLife Mod Team";
		displayName = "ExileLife Creeper Mask";
		descriptionShort = "No Armor";
		picture = "\exilelife_assets\Models\Items\Clothing\Masks\Images\ExileLife_Clothing_CreeperMask.paa";
		model = "\exilelife_assets\Models\Items\Clothing\Masks\ExileLife_Clothing_CreeperMask.p3d";
        identityTypes[] = {};
		hiddenSelections[]=
		{
			"camo"
		};
		hiddenSelectionsTextures[]=
		{
			"\exilelife_assets\Models\Items\Clothing\Masks\Images\ExileLife_Clothing_CreeperMask_co.paa"
		};
	};
	class ExileLife_Mask_GasMask: G_Balaclava_blk
	{
		scope = 2;
		author = "ExileLife Mod Team";
		displayName = "ExileLife Gas Mask";
		descriptionShort = "No Armor";
		picture = "\exile_assets\texture\item\Exile_Clothing_Gasmask.paa";
		model = "\exile_assets\model\Exile_Clothing_Gasmask.p3d";
	    identityTypes[] = {};		
		hiddenSelections[] = {};
		hiddenSelectionsTextures[] = {};
	};
};
class CfgInGameUI
{
	class Actions
	{
		align = "0x00 + 0x08";
		shadow = 0;
		x = (safeZoneX + safeZoneW * 0.5);
		y = (safeZoneY + safeZoneH * 0.6);
		w = 300 * pixelW;
		font = "PuristaMedium";
		size = 18 * pixelH;
		rows = "5*SafeZoneH";
		arrowWidth = 0.015;
		arrowHeight = 0.02;
		iconArrowUp = "\A3\ui_f\data\igui\cfg\actions\arrow_up_gs.paa";
		iconArrowDown = "\A3\ui_f\data\igui\cfg\actions\arrow_down_gs.paa";
		background = "\A3\ui_f\data\igui\cfg\imageCornerElement_ca.paa";
		underlineSelected = 0;
		colorBackground[] = {19/255, 22/255, 27/255, 0.9};
		colorText[] = {111/255, 113/255, 122/255, 1};
		colorSelect[] = {1, 1, 1, 1};
		colorBackgroundSelected[] = {63/255, 212/255, 252/255, 0.6};
	};
	class DefaultAction
	{
		font = "PuristaMedium";
		size = 18 * pixelH;
		colorText[] = {255/255, 180/255, 24/255, 1};
		shadow = 2;
		showHint = 0;
		showNext = 0;
		showLine = 0;
		relativeToCursor = 1;
		offsetX = 0.0;
		offsetY = 0.045;
		hotspotX = 0.0;
		hotspotY = 0.0;
		textTipFade = 0.4;
		textTipDelay = 0.4;
	};
	class CommandBar
	{
		left = -1;
		top = -1;
		show = 0;
	};
};
class CfgInventoryGlobalVariable 
{
    maxSoldierLoad = 1700;
};
class CfgJobs
{
class ExileLife_Trader_Receivings
{
	path = "trader_receivings";
	closeDialog = "RscExileLifeInformation";
	shortName = "Receivings Trader Supplies";
	shortDescription = "Fetch Supplies";
	longDescription = "The Receivings Trader needed some supplies delivered to him. He said that they were on the other side of town, should be an easy task.";
	completedText = "That's how we do it! Supplies delivered! Here's 200 poptabs to spend in the market.";
	failedText = "So you decided to take your time getting those supplies, huh? Hope it was worth wasting my time, asshole";
	forfeitedText = "My supplies now! Mwahahaha";
	deniedCompletionText = "<t shadow='0' align='center' valign='middle' size='10'><img image='\exilelife_assets\texture\mod\logo_welcome.paa'/></t><br/><t shadow='0' align='center' valign='middle' size='2'></t><br/><br/><t shadow='0' size='0.8'>I don't have time for your games, boy! Go grab those supplies and bring them back here!</t>";
	deniedProgressionText = "";
	reward[] =
	{
		{"MONEY",{"PLAYER","200"}}
	};
	class Time
	{
		weight = 1;
		activeTime[] = {0,0,30};
		timeToComplete[] = {0,0,30};
	};
	class Progression
	{
		class Step0
		{
			destinationPOS[] = {13811.7, 18964.6, 17.891};
			shortName = "Supplier";
			shortDescription = "Meet the Supplier";
			longDescription = "";
			type = "talk";
			use3DMarkers = 1;
			requiredItems[] = {};
			givenItems[] =
			{
				{"PHYSICAL",{"ExileLife_Item_GoldOre",1}}
			};
			trader = "ExileLife_Trader_Supplier_JobForPerson";
		};
		class Step1
		{
			destinationPOS[] = {14055.9,18638.7,1};
			shortName = "Return";
			shortDescription = "See Receiving Trader";
			longDescription = "";
			type = "talk";
			use3DMarkers = 1;
			requiredItems[] =
			{
				{"PHYSICAL",{"ExileLife_Item_GoldOre",1}}
			};
			givenItems[] =
			{
			};
		};
	};
};
class TEMPLATE_JOB
{
	path = "";
	closeDialog = "";
	shortName = "";
	shortDescription = "";
	longDescription = "";
	completedText = "";
	failedText = "";
	failedWithVehicleText = "";
	forfeitedText = "";
	forfeitedWithVehicleText = "";
	deniedCompletionText = "";
	deniedProgressionText = "";
	startingEquipment[] = {}; 
	disableJobForfeit = 0; 
	disableMsgonRestart = 0; 
	givenVehicle = ""; 
    hireVehicle = 0; 
	vehicleDestroyedPunishment = 1; 
	vehicleDestroyedInstigatorPunishment = 1; 
	vehicleCargoTheftPermitted = 1; 
    returnVehicle = 2; 
	getVehicle = 1; 
	RequiredRank = 2; 
	RequiredClasses[] = {}; 
	RequiredSkills[] = {}; 
	RequiredGangs[] = {}; 
	RequiredMembers = 1; 
    JobBoard = "generic"; 
	cancelOnDisconnect = 0; 
	cancelOnRestart = 0; 
	reward[] = {};
		punishmentForfeit[] = {}; 
		punishmentFail[] = {};
	class Time
	{
		maxAllowed = 1; 
		weight = 1;	
		activeTime[] = {0,0,30};  
		timeToComplete[] = {0,0,0}; 
		class Gang{
			class Mafia{
				timeToDelayUberMsg[]={{0,0},{1,0},{2,0},{3,0},{4,0},{5,0},{6,0}};
			};
			class Cartel{
				timeToDelayUberMsg[]={{0,0},{1,0},{2,0},{3,0},{4,0},{5,0},{6,0}};
			};
			class Syndicate{
				timeToDelayUberMsg[]={{0,0},{1,0},{2,0},{3,0},{4,0},{5,0},{6,0}};
			};
			class Yakuza{
				timeToDelayUberMsg[]={{0,0},{1,0},{2,0},{3,0},{4,0},{5,0},{6,0}};
			};
			class Guard{
				timeToDelayUberMsg[]={{0,0},{1,0},{2,0},{3,0},{4,0},{5,0},{6,0}};
			};
			class Rogue{
				timeToDelayUberMsg[]={{0,0},{1,0},{2,0},{3,0},{4,0},{5,0},{6,0}};
			};
		};
		class Skills{
			class Lockpick{
				timeToDelayUberMsg[]={{0,0},{1,0},{2,0},{3,0},{4,0},{5,0},{6,0}};
			};
			class Strength{
				timeToDelayUberMsg[]={{0,0},{1,0},{2,0},{3,0},{4,0},{5,0},{6,0}};
			};
			class Speed{
				timeToDelayUberMsg[]={{0,0},{1,0},{2,0},{3,0},{4,0},{5,0},{6,0}};
			};
			class Heal{
				timeToDelayUberMsg[]={{0,0},{1,0},{2,0},{3,0},{4,0},{5,0},{6,0}};
			};
			class Repair{
				timeToDelayUberMsg[]={{0,0},{1,0},{2,0},{3,0},{4,0},{5,0},{6,0}};
			};
		};
		class Class{
			class Thief{
				timeToDelayUberMsg[]={{0,0},{1,0},{2,0},{3,0},{4,0},{5,0},{6,0}};
			};
			class Murderer{
				timeToDelayUberMsg[]={{0,0},{1,0},{2,0},{3,0},{4,0},{5,0},{6,0}};
			};
			class Thug{
				timeToDelayUberMsg[]={{0,0},{1,0},{2,0},{3,0},{4,0},{5,0},{6,0}};
			};
			class Smuggler{
				timeToDelayUberMsg[]={{0,0},{1,0},{2,0},{3,0},{4,0},{5,0},{6,0}};
			};
			class Guard{
				timeToDelayUberMsg[]={{0,0},{1,0},{2,0},{3,0},{4,0},{5,0},{6,0}};
			};
		};
	};
	class Progression
	{
		class Step0
		{
			uberDestination = 0; 
			destinationType = ""; 
			randomGangMission[] = {}; 
			destinationPOS[] = {}; 
			shortName = "";
			shortDescription = "";
			longDescription = "";
			type = ""; 
			givenVehicle = ""; 
			use3DMarkers = 1; 
			requiredItems[] ={}; 
			requiredVehicleItems[] = {}; 
			givenItems[] = {}; 
			givenVehicleItems[] = {}; 
			trader = ""; 
            delaySideQuestNotification = 1; 
            disableSideQuestNotification = 1;  
            sideQuestPOS[] = {13754,18927.1,1};   
			notifyGang[] = {"Mafia","Yakuza","Cartel","Syndicate"}; 
			notifyRank[] = {2,3,4,5,6}; 
			notifyDelay = 0; 
			notifyMsg = "Our informant in the Guards just saw a request come in to transfer ore from the labor mines to Kavala!"; 
		};
	};
};
class testJob
{
    path = "";
    shortName = "testJob";
    shortDescription = "testJob";
    longDescription = "This is a test job for debugging";
    completedText = "This is a test job for debugging";
    failedText = "This is a test job for debugging";
    forfeitedText = "This is a test job for debugging";
    deniedCompletionText = "This is a test job for debugging";
    cancelOnRestart = 0;
    JobBoard = "generic";
    RequiredMembers = 2; 
    reward[] =
    {
        {"MONEY",{"PLAYER","500"}}
    };
    class Time
    {
        maxAllowed = 1;
        weight = 2;
        activeTime[] = {0,3,0};
        timeToComplete[] = {2,0,0};
    };
    class Progression
    {
        class Step0
        {
            destinationPOS[] = {14041,18712.6,1};
            shortName = "This is a test job for debugging";
            shortDescription = "This is a test job for debugging";
            longDescription = "This is a test job for debugging";
            type = "talk"; 
            use3DMarkers = 1;
            trader = "ExileLife_Guard_QuarterMaster_JobForPerson";
            givenItems[] =
            {
            };
        };
    };
};
class Tutorial
{
	path = "tutorial";
	closeDialog = "";
	shortName = "Receivings Trader";
	shortDescription = "Talk to the Receivings Trader";
	longDescription = "The man on the radio told me to go talk to the Receivings trader. Maybe it would be a good idea to do so...";
	completedText = "Welcome Inmate! Here are a few essentials to get you started!";
	failedText = "I think I can survive just fine without his help.";
	forfeitedText = "I don't need his help, I don't need anyones help!";
	deniedCompletionText = "";
	deniedProgressionText = "";
	reward[] =
	{
		{"PHYSICAL",{"Exile_Item_XM8",1}},
		{"PHYSICAL",{"ItemMap",1}},
		{"PHYSICAL",{"Exile_Item_EMRE",2}},
		{"PHYSICAL",{"Exile_Item_PlasticBottleFreshWater",2}}
	};
	class Time
	{
		timeToComplete[] = {0,2,0};
	};
	class Progression
	{
		class Step0
		{
			destinationPOS[] = {14055.9,18638.7,1};
			shortName = "Receivings Trader";
			shortDescription = "Talk to the Receivings Trader";
			longDescription = "Maybe he can help me get started?";
			type = "talk";
			use3DMarkers = 1;
			requiredItems[] ={};
			givenItems[] = {};
		};
	};
};
class joinCartel
{
	path = "joinCartel";
	shortName = "Cartel Gang Initiation";
	shortDescription = "Joining the Cartel isnt easy...";
	longDescription = "I've been given me some kind of initiation. Seems I have to collect some abandoned vehicle on another gangs turf...";
	completedText = "Congratulations! Keep the Car as a little welcome gift and come meet ur new Family at Gang HQ!";
	failedText = "You Pinche punetas! You show your face nearby anytime soon and we'll shove it up your Â¡Capullo! ";
	forfeitedText = "Blacklisted: Don't you dare show ur face around us for a few days!";
	deniedCompletionText = "I guess Im not finished...";	
	cancelOnDisconnect = 1; 
	cancelOnRestart = 1; 
	reward[] =
	{
		{"RESPECT",{"500"}},
		{"MONEY",{"PLAYER","1000"}},
		{"PHYSICAL",{"hgun_Pistol_heavy_02_F",1}},
		{"PHYSICAL",{"6Rnd_45ACP_Cylinder",2}}
	};
	class Time
	{
		timeToComplete[] = {0,3,0};
	};
	class Progression
	{
		class Step0
		{
			destinationType = "gang"; 
			randomGangMission[] = {"mafia","yakuza","syndicate"}; 
			shortName = "Collect Vehicle";
			shortDescription = "Collect Abandoned Vehicle";
			longDescription = "A few of our guys ran into some trouble a few hrs ago and had to abandon a vehicle inside another gangs territory...Go collect it!";
			type = "car"; 
			use3DMarkers = 1;
			trader = "ExileLife_Cartel_Recruiter_JobForPerson";				
		};		
		class Step1
		{
			destinationPOS[] = {13913,18629.39,0.88}; 
			shortName = "Good Job";
			shortDescription = "Complete SideQuest";
			longDescription = "I need to finish the side job then get this car back to the recruiter!";
			type = "talk";
			use3DMarkers = 1;
			trader = "ExileLife_Cartel_Recruiter_JobForPerson";
		};
		class Step2
		{
			destinationPOS[] = {13913,18629.39,0.88}; 
			shortName = "Return Vehicle";
			shortDescription = "Return Vehicle";
			longDescription = "I need to get this car back to the recruiter!";
			type = "talk";
			use3DMarkers = 1;
			trader = "ExileLife_Cartel_Recruiter_CompletingJobForPerson";
		};		
	};
};
class farmingSmall
{
    path = "basicJob";
    shortName = "Farming";
    shortDescription = "Farming";
    longDescription = "The guards have grown tired of week old supplies from the mainland. <br/><br/> Take some <t color='#c72651'>farming supplies</t> and grow some pumpkins and potatoes.";
    completedText = "Hmmm they look Gooooood!!! The <t color='#c72651'>old man</t> is going to be impressed when he comes to dinner tonight! The funds have been placed in your account!";
    failedText = "The guards wont be happy to hear of this! I head they invited the <t color='#c72651'>old man</t> to dinner...";
    forfeitedText = "Forget this business of working for the guards!</t>!";
    deniedCompletionText = "I guess I don't have it all...";
    cancelOnRestart = 0;
    JobBoard = "generic";
    reward[] =
    {
        {"MONEY",{"PLAYER","500"}}
    };
    class Time
    {
        maxAllowed = 2;
        weight = 2;
        activeTime[] = {0,3,0};
        timeToComplete[] = {2,0,0};
    };
    class Progression
    {
        class Step0
        {
            destinationPOS[] = {14041,18712.6,1};
            shortName = "Farming Supplies";
            shortDescription = "Collect Farming Supplies";
            longDescription = "I need to collect some <t color='#c72651'>farming supplies</t> and then find me some fertile soil to grow in!";
            type = "talk"; 
            use3DMarkers = 1;
            trader = "ExileLife_Guard_QuarterMaster_JobForPerson";
            givenItems[] =
            {
                {"PHYSICAL",{"ExileLife_Item_Potato",5}}, 
                {"PHYSICAL",{"ExileLife_Item_PumpkinSeeds",1}}, 
                {"PHYSICAL",{"ExileLife_Item_Fertilizer",1}},
                {"PHYSICAL",{"Exile_Item_WaterCanisterDirtyWater",1}},
                {"PHYSICAL",{"ExileLife_Melee_GardenHoe",1}}
            };
        };
        class Step1
        {
            destinationPOS[] = {14041,18712.6,1};
            sideQuestPOS[] = {13934.9,16804.2,1};
            shortName = "Farming";
            shortDescription = "Farm Crops";
            longDescription = "I need to grow <t color='#c72651'>30</t> Potatoes and <t color='#c72651'>30</t> Pumpkins and deliver them to QuarterMaster!";
            type = "talk"; 
            use3DMarkers = 1;
            requiredItems[] =
            {
                {"PHYSICAL",{"ExileLife_Item_Potato",25}},
                {"PHYSICAL",{"ExileLife_Item_Pumpkin",25}},
                {"PHYSICAL",{"ExileLife_Melee_GardenHoe",1}}
            };
            trader = "ExileLife_Guard_QuarterMaster_JobForPerson";
            disableSideQuestNotification = 1;
        };
    };
};
class fishingSmall
{
    path = "basicJob";
    shortName = "Fishing";
    shortDescription = "Fishing";
    longDescription = "We are surrounded by water yet the Guards cant seem to catch any fish. <br/><br/> Take some <t color='#c72651'>dog food</t> and see if you can catch some.";
    completedText = "So you managed to catch some fish!!! The <t color='#c72651'>old man</t> loves fresh fish! I might just drop him a 'line' and see if he wants a 'bite'!";
    failedText = "Your about as rotten as the growth between my... F#$K You!";
    forfeitedText = "Forget this business of working for the guards!</t>!";
    deniedCompletionText = "I guess I don't have it all...";
    cancelOnRestart = 0;
    JobBoard = "generic";
    reward[] =
    {
        {"MONEY",{"PLAYER","300"}}
    };
    class Time
    {
        maxAllowed = 2;
        weight = 2;
        activeTime[] = {0,3,0};
        timeToComplete[] = {2,0,0};
    };
    class Progression
    {
        class Step0
        {
            destinationPOS[] = {14041,18712.6,1};
            shortName = "Fishing Supplies";
            shortDescription = "Collect Fishing Supplies";
            longDescription = "I need to collect some <t color='#c72651'>fishing supplies</t>!";
            type = "talk"; 
            use3DMarkers = 1;
            trader = "ExileLife_Guard_QuarterMaster_JobForPerson";
            givenItems[] =
            {
                {"PHYSICAL",{"ExileLife_Melee_FishingRod",1}},
                {"PHYSICAL",{"ExileLife_Item_Worm",20}},
                {"PHYSICAL",{"Exile_Item_DogFood",3}},
                {"PHYSICAL",{"Exile_Item_CanOpener",1}},
                {"PHYSICAL",{"Exile_Item_Knife",1}}
            };
        };
        class Step1
        {
            destinationPOS[] = {14041,18712.6,1};
            sideQuestPOS[] = {17773.4,18216.5,1};
            shortName = "Fishing";
            shortDescription = "Gone Fishing";
            longDescription = "I need to catch and fillet <t color='#c72651'>10</t> Mullet and deliver them to the QuarterMaster!";
            type = "talk"; 
            use3DMarkers = 1;
            requiredItems[] =
            {
                {"PHYSICAL",{"Exile_Item_MulletFilet_Raw",10}},
                {"PHYSICAL",{"ExileLife_Melee_FishingRod",1}}
            };
            trader = "ExileLife_Guard_QuarterMaster_JobForPerson";
            disableSideQuestNotification = 1;
        };
    };
};
class fuelstationRefuel
{
	path = "fuelstationRefuel";
	shortName = "Fuel Delivery";
	shortDescription = "Fuel Delivery";
	longDescription = "A fuel station is running critically low of fuel!<br/><br/>Go and collect a <t color='#c72651'>fuel truck</t> and pick up the fuel from the docks!<br/>";
	completedText = "Good job convict! The funds have been placed in your account!";
	failedText = "You bloody idiot! How on earth did you mange to mess this up? We wont forget this!";
	failedWithVehicleText = "That truck was owned by the <t color='#c72651'>old man</t> you bloody idiot! You will pay for this!";
	forfeitedText = "Forget this business of working for the guards!";
	forfeitedWithVehicleText = "The fuel tankers mine. Screw the <t color='#c72651'>old man</t>!";
	deniedCompletionText = "I guess Im not finished...";
	cancelOnRestart = 1;
    hireVehicle = 1;
	vehicleDestroyedPunishment = 1; 
	vehicleDestroyedInstigatorPunishment = 1;
	returnVehicle = 3; 
	getVehicle = 1; 
    JobBoard = "generic";
	reward[] =
	{
		{"MONEY",{"PLAYER","400"}}
	};
	class Time
	{
		maxAllowed = 3;
		weight = 2;
		activeTime[] = {0,1,0};
		timeToComplete[] = {0,1,0};
	};
	class Progression
	{
		class Step0
		{
			destinationPOS[] = {13754,18927.1,1};
			shortName = "Fuel Truck";
			shortDescription = "Collect Fuel Truck";
			longDescription = "I need to collect a <t color='#c72651'>fuel truck</t> from the vehicle trader!";
			type = "talk"; 
			use3DMarkers = 1;
			givenVehicle = "Exile_Car_Van_Fuel_Black";
			trader = "ExileLife_Trader_vehicleSupplier_JobForPerson";
		};
		class Step1
		{
			destinationPOS[] = {3169.6,12891.7, 1.2};
			shortName = "Collect Fuel";
			shortDescription = "Fill the Fuel Truck";
			longDescription = "I need to take the fuel truck and fill it up at the <t color='#c72651'>oil refinery</t> by the docks!";
			type = "refuel";
			use3DMarkers = 1;
		};
		class Step2
		{
			destinationType = "fuelstation"; 
			shortName = "Refuel Fuel Station";
			shortDescription = "Refuel The Fuel Station";
			longDescription = "I need to take this fuel truck and refuel the <t color='#c72651'>fuel station</t> marked on the map!";
			type = "refuel";
			use3DMarkers = 1;
			givenVehicle = "";
		};
		class Step3
		{
			destinationPOS[] = {13754,18927.1,1};
			shortName = "Fuel Truck";
			shortDescription = "Return the Fuel Truck";
			longDescription = "I need to return the <t color='#c72651'>fuel truck</t> to the vehicle trader!";
			type = "talk"; 
			use3DMarkers = 1;
			trader = "ExileLife_Trader_vehicleSupplier_CompletingJobForPerson";
		};
	};
};
class generatorAthira
{
	path = "generatorAthira";
	shortName = "Refuel Generator";
	shortDescription = "Refuel Athira's Generator";
	longDescription = "The generator that runs the power in our city is running out of fuel. Please help by collecting <t color='#c72651'>1 full fuel barrel</t> and fill up the generator on the North Eastern part of town.<br/>Our guys tell us that the generator will fail at any time now! </t>";
	completedText = "Thank you so much! Our city will have power for a few more hours thanks to you!";
	failedText = "You inconsiderate asshole. You decided to take your time, didn't you? Luckly, we got a shipment of fuel from people who actually care.";
	forfeitedText = "I need the fuel more than they do, I'm sure they will be fine.";
	deniedCompletionText = "I guess Im not finished...";
	JobBoard = "generic";
	reward[] =
	{
		{"MONEY",{"PLAYER","50"}},
		{"PHYSICAL",{"Exile_Item_FuelBarrelEmpty",1}}
	};
	class Time
	{
		maxAllowed = 1; 
		weight = 1;
		activeTime[] = {0,0,30};
		timeToComplete[] = {0,2,0};
	};
	class Progression
	{
		class Step0
		{
			destinationPOS[] = {14251, 18308.6, 1};
			shortName = "Refuel Generator";
			shortDescription = "Collect Fuel Barrel";
			longDescription = "I need to collect a <t color='#c72651'>fuel barrel</t> from the fuel trader!";
			type = "talk"; 
			use3DMarkers = 1;
			givenItems[] =
			{
				{"PHYSICAL",{"Exile_Item_FuelBarrelEmpty",1}}
			};
			trader = "ExileLife_Trader_barrelSupplier_JobForPerson";			
		};
		class Step1
		{
			destinationPOS[] = {14444.4, 18992.9, 0};
			shortName = "Refuel Generator";
			shortDescription = "Refuel Athira's Generator";
			longDescription = "I need to fill <t color='#c72651'>1 full fuel barrel</t> and refuel Athira's generator!";
			type = "refuel"; 
			use3DMarkers = 1;
			requiredItems[] =
			{
				{"PHYSICAL",{"Exile_Item_FuelBarrelFull",1}}
			};
		};		
	};
};
class generatorRefuel
{
	path = "generatorRefuel";
	shortName = "Refuel Generator";
	shortDescription = "Refuel Generator";
	longDescription = "One of the generators that powers the island has run out of fuel. Stay on the guards good side by taking <t color='#c72651'>1 full fuel barrel</t> and filling up the generator!<br/>";
	completedText = "I see the power is restored! Good to see that there are some convicts trying to make the most of their Exile!";
	failedText = "You inconsiderate asshole. You decided to take your time, didn't you? I'll be recording this failure with the Quartermaster.";
	forfeitedText = "Stuff working for the Guards. The Quartermaster probably wont even notice I skipped this job!";
	deniedCompletionText = "I guess Im not finished...";
	JobBoard = "generic";
	reward[] =
	{
		{"MONEY",{"PLAYER","200"}},
		{"PHYSICAL",{"Exile_Item_FuelBarrelEmpty",1}}
	};
	class Time
	{
		maxAllowed = 4;
		weight = 2;
		activeTime[] = {0,1,0};
		timeToComplete[] = {0,1,0};
	};
	class Progression
	{
		class Step0
		{
			destinationPOS[] = {14251, 18308.6, 1};
			shortName = "Refuel Generator";
			shortDescription = "Collect Fuel Barrel";
			longDescription = "I need to collect a <t color='#c72651'>fuel barrel</t> from the fuel trader!";
			type = "talk"; 
			use3DMarkers = 1;
			givenItems[] =
			{
				{"PHYSICAL",{"Exile_Item_FuelBarrelEmpty",1}}
			};
			trader = "ExileLife_Trader_barrelSupplier_JobForPerson";
		};
		class Step1
		{
			destinationType = "generator"; 
			shortName = "Refuel Generator";
			shortDescription = "Refuel Generator";
			longDescription = "I need to take <t color='#c72651'>1 full fuel barrel</t> and refuel the generator marked on my map!";
			type = "refuel";
			use3DMarkers = 1;
			requiredItems[] = {{"PHYSICAL",{"Exile_Item_FuelBarrelFull",1}}};
		};
	};
};
class goldMining
{
    path = "oreCollection";
    shortName = "Gold Mining";
    shortDescription = "Mining (Gold)";
    longDescription = "The guards need gold ore and lots of it! <br/><br/> Go get a truck from the Old Man and collect <t color='#c72651'>100 gold ore</t> and take it to the smelter.<br/><br/> A pickaxe will be lent to you! ";
    completedText = "Good Job! The funds have been placed in your account!";
    failedText = "You bloody idiot! How on earth did you mange to mess this up? We wont forget this!";
	failedWithVehicleText = "That truck was owned by the <t color='#c72651'>old man</t> you bloody idiot! You will pay for this!";
	forfeitedText = "Forget this business of working for the guards!";
	forfeitedWithVehicleText = "The  truck's mine. Screw the <t color='#c72651'>old man</t>!";
	deniedCompletionText = "I guess Im not finished...";
    cancelOnRestart = 1;
    hireVehicle = 1;
    vehicleDestroyedPunishment = 1; 
	vehicleDestroyedInstigatorPunishment = 1;
    returnVehicle = 2; 
    getVehicle = 1; 
    JobBoard = "generic";
    reward[] =
    {
        {"MONEY",{"PLAYER","1500"}}
    };
    class Time
    {
        maxAllowed = 2;
        weight = 2;
        activeTime[] = {0,3,0};
        timeToComplete[] = {0,3,0};
    };
    class Progression
    {
        class Step0
        {
            destinationPOS[] = {13754,18927.1,1};
            shortName = "Hire Vehicle";
            shortDescription = "Collect Hire Vehicle";
            longDescription = "I need to collect a <t color='#c72651'>ute</t> and <t color='#c72651'>pickaxe</t> from the vehicle trader!";
            type = "talk"; 
            use3DMarkers = 1;
            givenVehicle = "ExileLife_Truck_Datsun_Pickup";
            trader = "ExileLife_Trader_vehicleSupplier_JobForPerson";
            givenItems[] =
            {
                {"PHYSICAL",{"ExileLife_Melee_PickAxe",1}}
            };
        };
        class Step1
        {
            destinationPOS[] = {5877.23,20096.8,1.5};
            sideQuestPOS[] = {18364.7,16787.7,1};
            shortName = "Mining";
            shortDescription = "Mine gold Ore";
            longDescription = "I need to mine <t color='#c72651'>100</t> Gold Ore and deliver it to the Smelter!";
            type = "talk"; 
            use3DMarkers = 1;
            requiredVehicleItems[] =
            {
                {"PHYSICAL",{"ExileLife_Item_GoldOre",100}}
            };
            trader = "ExileLife_Trader_oreSupplier_JobForPerson";
            disableSideQuestNotification = 1;
        };
        class Step2
        {
            destinationPOS[] = {13754,18927.1,1};
            shortName = "Return Vehicle";
            shortDescription = "Return the Hire Vehicle";
            longDescription = "I need to return the <t color='#c72651'>ute</t> and <t color='#c72651'>pickaxe</t> to the vehicle trader to get paid!";
            type = "talk"; 
            use3DMarkers = 1;
            trader = "ExileLife_Trader_vehicleSupplier_CompletingJobForPerson";
            requiredVehicleItems[] =
            {
                {"PHYSICAL",{"ExileLife_Melee_PickAxe",1}}
            };
        };
    };
};
class huntingSmall
{
    path = "basicJob";
    shortName = "Hunting";
    shortDescription = "Hunting";
    longDescription = "Wild game roam the hills of this Island and the guards want fresh meat for dinner. <br/><br/>Bring back<t color='#c72651'>10</t>Goat steaks.";
    completedText = "So you managed to hunt down some meat for our dinner!!! Heres your payment!";
    failedText = "Dont complain if we send you for some hard labor to teach you some respect...";
    forfeitedText = "Forget this business of working for the guards!</t>!";
    deniedCompletionText = "I guess Im not finished...";
    cancelOnRestart = 0;
    JobBoard = "generic";
    reward[] =
    {
        {"MONEY",{"PLAYER","600"}}
    };
    class Time
    {
        maxAllowed = 2;
        weight = 2;
        activeTime[] = {0,3,0};
        timeToComplete[] = {0,6,0};
    };
    class Progression
    {
        class Step0
        {
            destinationPOS[] = {14041,18712.6,1};
            shortName = "Hunting Supplies";
            shortDescription = "Collect Hunting Supplies";
            longDescription = "I need to collect some <t color='#c72651'>hunting supplies</t>!";
            type = "talk"; 
            use3DMarkers = 1;
            trader = "ExileLife_Guard_QuarterMaster_JobForPerson";
            givenItems[] =
            {
                {"PHYSICAL",{"Exile_Item_Knife",1}}
            };
        };
        class Step1
        {
            destinationPOS[] = {14041,18712.6,1};
            sideQuestPOS[] = {14274.4,22241.1,1};
            shortName = "Hunting";
            shortDescription = "Hunting";
            longDescription = "I need to kill <t color='#c72651'>10</t> Goats and deliver their steaks to the QuarterMaster!";
            type = "talk"; 
            use3DMarkers = 1;
            requiredItems[] =
            {
                {"PHYSICAL",{"Exile_Item_GoatSteak_Raw",10}},
                {"PHYSICAL",{"Exile_Item_Knife",1}}
            };
            trader = "ExileLife_Guard_QuarterMaster_JobForPerson";
            disableSideQuestNotification = 1;
        };
    };
};
class ironMining
{
    path = "oreCollection";
    shortName = "Iron Mining";
    shortDescription = "Mining (Iron)";
    longDescription = "The guards need iron ore. You dont need to know what its used for... <br/><br/> Go get a truck from the Old Man and collect <t color='#c72651'>100 iron ore</t> and take it to the smelter.<br/><br/> A pickaxe will be lent to you! ";
    completedText = "Good Job! The funds have been placed in your account!";
    failedText = "You bloody idiot! How on earth did you mange to mess this up? We wont forget this!";
	failedWithVehicleText = "That truck was owned by the <t color='#c72651'>old man</t> you bloody idiot! You will pay for this!";
	forfeitedText = "Forget this business of working for the guards!";
	forfeitedWithVehicleText = "The  truck's mine. Screw the <t color='#c72651'>old man</t>!";
	deniedCompletionText = "I guess Im not finished...";
    cancelOnRestart = 1;
    hireVehicle = 1;
    vehicleDestroyedPunishment = 1; 
	vehicleDestroyedInstigatorPunishment = 1;
    returnVehicle = 2; 
    getVehicle = 1; 
    JobBoard = "generic";
    reward[] =
    {
        {"MONEY",{"PLAYER","1500"}}
    };
    class Time
    {
        maxAllowed = 2;
        weight = 2;
        activeTime[] = {0,3,0};
        timeToComplete[] = {0,3,0};
    };
    class Progression
    {
        class Step0
        {
            destinationPOS[] = {13754,18927.1,1};
            shortName = "Hire Vehicle";
            shortDescription = "Collect Hire Vehicle";
            longDescription = "I need to collect a <t color='#c72651'>ute</t> and <t color='#c72651'>pickaxe</t> from the vehicle trader!";
            type = "talk"; 
            use3DMarkers = 1;
            givenVehicle = "ExileLife_Truck_Datsun_Pickup";
            trader = "ExileLife_Trader_vehicleSupplier_JobForPerson";
            givenItems[] =
            {
                {"PHYSICAL",{"ExileLife_Melee_PickAxe",1}}
            };
        };
        class Step1
        {
            destinationPOS[] = {5877.23,20096.8,1.5};
            sideQuestPOS[] = {17069.4,11373.7,1.5};
            shortName = "Mining";
            shortDescription = "Mine Iron Ore";
            longDescription = "I need to mine <t color='#c72651'>100</t> Iron Ore and deliver it to the Smelter!";
            type = "talk"; 
            use3DMarkers = 1;
            requiredVehicleItems[] =
            {
                {"PHYSICAL",{"ExileLife_Item_IronOre",100}}
            };
            trader = "ExileLife_Trader_oreSupplier_JobForPerson";
            disableSideQuestNotification = 1;
        };
        class Step2
        {
            destinationPOS[] = {13754,18927.1,1};
            shortName = "Return Vehicle";
            shortDescription = "Return the Hire Vehicle";
            longDescription = "I need to return the <t color='#c72651'>ute</t> and <t color='#c72651'>pickaxe</t> to the vehicle trader to get paid!";
            type = "talk"; 
            use3DMarkers = 1;
            trader = "ExileLife_Trader_vehicleSupplier_CompletingJobForPerson";
            requiredVehicleItems[] =
            {
                {"PHYSICAL",{"ExileLife_Melee_PickAxe",1}}
            };
        };
    };
};
class lumberCollection
{
	path = "lumberCollection";
	shortName = "Woodcutting";
	shortDescription = "Woodcutting";
	longDescription = "The guards have need of timber, LOTS of timber! <br/><br/> Go get a truck from the Old Man and collect <t color='#c72651'>150 wood logs</t> and take them to the logging mill.<br/><br/> An axe will be lent to you for this job! ";
	completedText = "Good Job! The funds have been placed in your account!";
	failedText = "You bloody idiot! How on earth did you mange to mess this up? We wont forget this!";
	failedWithVehicleText = "That truck was owned by the <t color='#c72651'>old man</t> you bloody idiot! You will pay for this!";
	forfeitedText = "Forget this business of working for the guards!";
	forfeitedWithVehicleText = "The  truck's mine. Screw the <t color='#c72651'>old man</t>!";
	deniedCompletionText = "I guess Im not finished...";
	cancelOnRestart = 1;
    hireVehicle = 1;
	vehicleDestroyedPunishment = 1; 
	vehicleDestroyedInstigatorPunishment = 1;
	returnVehicle = 2; 
	getVehicle = 1; 
    JobBoard = "generic";
	reward[] =
	{
		{"MONEY",{"PLAYER","800"}}
	};
	class Time
	{
		maxAllowed = 2;
		weight = 2;
		activeTime[] = {0,3,0};
		timeToComplete[] = {0,3,0};
	};
	class Progression
	{
		class Step0
		{
			destinationPOS[] = {13754,18927.1,1};
			shortName = "Hire Vehicle";
			shortDescription = "Collect Hire Vehicle";
			longDescription = "I need to collect a <t color='#c72651'>truck</t> and <t color='#c72651'>axe</t> from the vehicle trader!";
			type = "talk"; 
			use3DMarkers = 1;
			givenVehicle = "Exile_Car_Ural_Open_Worker";
			trader = "ExileLife_Trader_vehicleSupplier_JobForPerson";
			givenItems[] =
			{
				{"PHYSICAL",{"Exile_Melee_Axe",1}}
			};
		};
		class Step1
		{
			destinationPOS[] = {14643.5,21380.1,1.5};
			shortName = "Harvest Lumber";
			shortDescription = "Harvest Lumber";
			longDescription = "I need to fell some trees and deliver them to the lumberyard!";
			type = "talk"; 
			use3DMarkers = 1;
			requiredVehicleItems[] =
			{
				{"PHYSICAL",{"Exile_Item_WoodLog",150}}
			};
			trader = "ExileLife_Trader_lumberSupplier_JobForPerson";
		};
		class Step2
		{
			destinationPOS[] = {13754,18927.1,1};
			shortName = "Return Vehicle";
			shortDescription = "Return the Hire Vehicle";
			longDescription = "I need to return the <t color='#c72651'>truck</t> and <t color='#c72651'>axe</t> to the vehicle trader to get paid!";
			type = "talk"; 
			use3DMarkers = 1;
			trader = "ExileLife_Trader_vehicleSupplier_CompletingJobForPerson";
            requiredVehicleItems[] =
            {
                {"PHYSICAL",{"Exile_Melee_Axe",1}}
            };
		};
	};
};
class metalCollection
{
	path = "metalCollection";
	shortName = "Recycling";
	shortDescription = "Recycling (Scrap Metal)";
	longDescription = "The guards are running low on scrap metal. <br/><br/> Go get a truck from the Old Man and collect <t color='#c72651'>50 junk metal</t> and take it to the junk metal trader.<br/><br/> You can use a sledgehammer to get junk metal from containers and car wrecks across the island! <br/><br/> A Sledgehammer will be lent to you! ";
	completedText = "Well done! The funds have been placed in your account!";
	failedText = "You bloody idiot! How on earth did you mange to mess this up? We wont forget this!";
	failedWithVehicleText = "That truck was owned by the <t color='#c72651'>old man</t> you bloody idiot! You will pay for this!";
	forfeitedText = "Forget this business of working for the guards!";
	forfeitedWithVehicleText = "The truck's mine. Screw the <t color='#c72651'>old man</t>!";
	deniedCompletionText = "I guess Im not finished...";
	cancelOnRestart = 1;
    hireVehicle = 1;
	vehicleDestroyedPunishment = 1; 
	vehicleDestroyedInstigatorPunishment = 1;
	returnVehicle = 2; 
	getVehicle = 1; 
    JobBoard = "generic";
	reward[] =
	{
		{"MONEY",{"PLAYER","800"}}
	};
	class Time
	{
		maxAllowed = 2;
		weight = 2;
		activeTime[] = {0,3,0};
		timeToComplete[] = {0,3,0};
	};
	class Progression
	{
		class Step0
		{
			destinationPOS[] = {13754,18927.1,1};
			shortName = "Hire Vehicle";
			shortDescription = "Collect Hire Vehicle";
			longDescription = "I need to collect a <t color='#c72651'>ute</t> and <t color='#c72651'>sledgehammer</t> from the vehicle trader!";
			type = "talk"; 
			use3DMarkers = 1;
			givenVehicle = "ExileLife_Truck_Datsun_Pickup";
			trader = "ExileLife_Trader_vehicleSupplier_JobForPerson";
            givenItems[] =
            {
                {"PHYSICAL",{"Exile_Melee_SledgeHammer",1}}
            };
		};
		class Step1
		{
			destinationPOS[] = {5872.68, 20101.5, 1.5};
			shortName = "Collect Scrap";
			shortDescription = "Collect and Deliver Junk Metal";
			longDescription = "I need to collect <t color='#c72651'>junk metal</t> from car wrecks and containers and deliver it to the scrap metal recycler! <br/><br/> BYO sledgehammer!";
			type = "talk"; 
			use3DMarkers = 1;
			requiredVehicleItems[] = {{"PHYSICAL",{"Exile_Item_JunkMetal",50}}};
			trader = "ExileLife_Trader_scrapMetalSupplier_JobForPerson";
		};
		class Step2
		{
			destinationPOS[] = {13754,18927.1,1};
			shortName = "Return Vehicle";
			shortDescription = "Return the Hire Vehicle";
			longDescription = "I need to return the <t color='#c72651'>ute</t> and <t color='#c72651'>sledgehammer</t> to the vehicle trader to get paid!";
			type = "talk"; 
			use3DMarkers = 1;
			trader = "ExileLife_Trader_vehicleSupplier_CompletingJobForPerson";
            requiredVehicleItems[] =
            {
                {"PHYSICAL",{"Exile_Melee_SledgeHammer",1}}
            };
		};
	};
};
class prisonCollect
{
	path = "prisonCollect";
	shortName = "Labor Mine Ore Collection";
	shortDescription = "The labor mine ore needs collecting!";
	longDescription = "The labor mine exium collection is ready to be transferred to the coast. Warning! The gangs on this island are heavily armed and have eyes everywhere! Assume that they WILL attack the convoy! Your guard pay depends on these shipments making it safely to the port! If I feel that your a bit outnumbered I might throw in some danger pay as bonus!";
	completedText = "The shipment was successfully transferred to T.A.P headquarters!";
	failedText = "You guards are pathetic! Who is the boss around here? Maybe you should swap places with some of these cons?";
	failedWithVehicleText = "You guards are pathetic! Who is the boss around here? Maybe you should swap places with some of these cons?";
	forfeitedText = "You guards are pathetic! Who is the boss around here? Maybe you should swap places with some of these cons?";
	forfeitedWithVehicleText = "You guards are pathetic! Who is the boss around here? Maybe you should swap places with some of these cons?";
	deniedCompletionText = "I guess Im not finished...";
	cancelOnRestart = 1;
    hireVehicle = 1;
    returnVehicle = 3; 
	getVehicle = 1; 
	vehicleDestroyedPunishment = 1; 
	vehicleDestroyedInstigatorPunishment = 1;
	JobBoard = "guard";
    RequiredGangs[] = {"Guard"};
	RequiredRank = 1; 
	RequiredMembers = 2; 
	RequiredPlayers = 4; 
	reward[] = {
		{"RESPECT",{"500"}},
		{"CUSTOM",{"LOCKER"}}
	};
	class Time
	{
		maxAllowed = 1;
        weight = 100;
        activeTime[] = {0,2,0};
        timeToComplete[] = {0,1,0};
	};
	class Progression
	{
		class Step0
		{
			destinationPOS[] = {14430.3,19007.9,1};
			shortName = "Collect Vehicle";
			shortDescription = "Collect Vehicle from Garage";
			longDescription = "Collect a transport vehicle from the vehicle garage to take to the labor mines.";
			type = "car";
			use3DMarkers = 1;
			givenVehicle = "ExileLife_Truck_Tempest";
			trader = "ExileLife_Trader_guardVehicleSupplier_JobForPerson";
			notifyGang[] = {"Mafia","Yakuza","Cartel","Syndicate"};
			notifyRank[] = {4,5,6};
			notifyDelay = 0;
			notifyMsg = "Our informant in the Guards just saw a request come in to transfer ore from the labor mines to Kavala!";
		};
		class Step1
		{
			destinationPOS[] = {16736.8,13613.8,1};
			shortName = "Collect Ore";
			shortDescription = "The Ore is ready for transport";
			longDescription = "Drive the transport to the labor mines and load up the ore.";
			type = "interact";
			use3DMarkers = 1;
			notifyGang[] = {"Mafia","Yakuza","Cartel","Syndicate"};
			notifyRank[] = {2,3,4,5,6};
			notifyDelay = 300;
			notifyMsg = "We just got word that the guards were recently seen leaving Athira with an ore transport headed for the labor mines!";
		};
		class Step2
		{
			destinationPOS[] = {3060.332,12642.738,0.88};
			shortName = "Deliver Ore";
			shortDescription = "Deliver Ore";
			longDescription = "Drive the ore to the Kavala docks and talk to the export merchant!";
			oreRemove = 500; 
			type = "boat";
			use3DMarkers = 1;
			notifyGang[] = {"Mafia","Yakuza","Cartel","Syndicate"};
			notifyRank[] = {0,1,2,3,4,5,6};
			notifyDelay = 60;
			notifyMsg = "The guards were just spotted leaving the labour mines with a transport full of ore!";
			trader = "ExileLife_Trader_Docks_CompletingJobForPerson";
		};
		class Step3
		{
			destinationPOS[] = {14430.3,19007.9,1};
			shortName = "Return Vehicle";
			shortDescription = "Return the Vehicle";
			longDescription = "Take the vehicle back to the guard garage!";
			type = "car";
			use3DMarkers = 1;
			trader = "ExileLife_Trader_guardVehicleSupplier_CompletingJobForPerson";
		};
	};
};
class prison
{
	path = "prison";
	completedText = "You better have learnt your lesson you piece of shit!";
	failedText = "You think you're clever for refusing to mine? This isnt a daycare bitch! When we say dig, you dig.";
	forfeitedText = "";
	cancelOnRestart = 0;
	disableJobForfeit = 1;
	disableMsgonRestart = 1;
	class Time
	{
		maxAllowed = 0;
		weight = 0;
		activeTime[] = {0,0,0};
		timeToComplete[] = {0,0,0}; 
	};
	class Progression
	{
		class Step0
		{
			destinationPOS[] = {16747.4,13639.8,0.00160217};
			shortName = "Prison";
			shortDescription = "Hard Labour Camp";
			longDescription = "You've been a very naughty boy!";
			type = ""; 
			use3DMarkers = 1;
		};	
	};
};
class joinMafia
{
	path = "joinMafia";
	shortName = "Mafia Gang Initiation";
	shortDescription = "Joining the Mafia isnt easy...";
	longDescription = "I've been given me some kind of initiation. Seems I have to collect some abandoned vehicle on another gangs turf...";	completedText = "Congratulations! Keep the Car as a little welcome gift and come meet ur new Family at Gang HQ!";
	failedText = "You Pinche punetas! You show your face nearby anytime soon and we'll shove it up your Â¡Capullo! ";
	forfeitedText = "Blacklisted: Don't you dare show ur face around us for a few days!";
	deniedCompletionText = "I guess Im not finished...";	
	cancelOnDisconnect = 1; 
	cancelOnRestart = 1; 
	reward[] =
	{
		{"RESPECT",{"500"}},
		{"MONEY",{"PLAYER","1000"}},
		{"PHYSICAL",{"hgun_Pistol_heavy_02_F",1}},
		{"PHYSICAL",{"6Rnd_45ACP_Cylinder",2}}
	};
	class Time
	{
		timeToComplete[] = {0,3,0};
	};
	class Progression
	{
		class Step0
		{
			destinationType = "gang"; 
			randomGangMission[] = {"cartel","yakuza","syndicate"}; 
			shortName = "Collect Vehicle";
			shortDescription = "Collect Abandoned Vehicle";
			longDescription = "A few of our guys ran into some trouble a few hrs ago and had to abandon a vehicle inside another gangs territory...Go collect it!";
			type = "car"; 
			use3DMarkers = 1;
			trader = "ExileLife_Mafia_Recruiter_JobForPerson";				
		};		
		class Step1
		{
			destinationPOS[] = {14218.3,18727.2,0.62}; 
			shortName = "Good Job";
			shortDescription = "Complete SideQuest";
			longDescription = "I need to finish the side job then get this car back to the recruiter!";
			type = "talk";
			use3DMarkers = 1;
			trader = "ExileLife_Mafia_Recruiter_JobForPerson";
		};
		class Step2
		{
			destinationPOS[] = {14218.3,18727.2,0.62}; 
			shortName = "Return Vehicle";
			shortDescription = "Return Vehicle";
			longDescription = "I need to get this car back to the recruiter!";
			type = "talk";
			use3DMarkers = 1;
			trader = "ExileLife_Mafia_Recruiter_CompletingJobForPerson";
		};		
	};
};
class joinSyndicate
{
	path = "joinSyndicate";
	shortName = "Syndicate Gang Initiation";
	shortDescription = "Joining the Syndicate isnt easy...";
	longDescription = "I've been given me some kind of initiation. Seems I have to collect some abandoned vehicle on another gangs turf...";
	completedText = "Congratulations! Keep the Car as a little welcome gift and come meet ur new Family at Gang HQ!";
	failedText = "You Pinche punetas! You show your face nearby anytime soon and we'll shove it up your Â¡Capullo! ";
	forfeitedText = "Blacklisted: Don't you dare show ur face around us for a few days!";
	deniedCompletionText = "I guess Im not finished...";	
	cancelOnDisconnect = 1; 
	cancelOnRestart = 1; 
	reward[] =
	{
		{"RESPECT",{"500"}},
		{"MONEY",{"PLAYER","1000"}},
		{"PHYSICAL",{"hgun_Pistol_heavy_02_F",1}},
		{"PHYSICAL",{"6Rnd_45ACP_Cylinder",2}}
	};
	class Time
	{
		timeToComplete[] = {0,3,0};
	};
	class Progression
	{
		class Step0
		{
			destinationType = "gang"; 
			randomGangMission[] = {"cartel","yakuza","mafia"}; 
			shortName = "Collect Vehicle";
			shortDescription = "Collect Abandoned Vehicle";
			longDescription = "A few of our guys ran into some trouble a few hrs ago and had to abandon a vehicle inside another gangs territory...Go collect it!";
			type = "car"; 
			use3DMarkers = 1;
			trader = "ExileLife_Syndicate_Recruiter_JobForPerson";				
		};		
		class Step1
		{
			destinationPOS[] = {13971.2,18783.5,0.6}; 
			shortName = "Good Job";
			shortDescription = "Complete SideQuest";
			longDescription = "I need to finish the side job then get this car back to the recruiter!";
			type = "talk";
			use3DMarkers = 1;
			trader = "ExileLife_Syndicate_Recruiter_JobForPerson";
		};
		class Step2
		{
			destinationPOS[] = {13971.2,18783.5,0.6}; 
			shortName = "Return Vehicle";
			shortDescription = "Return Vehicle";
			longDescription = "I need to get this car back to the recruiter!";
			type = "talk";
			use3DMarkers = 1;
			trader = "ExileLife_Syndicate_Recruiter_CompletingJobForPerson";
		};		
	};
};
class joinYakuza
{
	path = "joinYakuza";
	shortName = "Yakuza Gang Initiation";
	shortDescription = "Joining the Yakuza isnt easy...";
	longDescription = "I've been given me some kind of initiation. Seems I have to collect some abandoned vehicle on another gangs turf...";
	completedText = "Congratulations! Keep the Car as a little welcome gift and come meet ur new Family at Gang HQ!";
	failedText = "You Pinche punetas! You show your face nearby anytime soon and we'll shove it up your Â¡Capullo! ";
	forfeitedText = "Blacklisted: Don't you dare show ur face around us for a few days!";
	deniedCompletionText = "I guess Im not finished...";	
	cancelOnDisconnect = 1; 
	cancelOnRestart = 1; 
	reward[] =
	{
		{"RESPECT",{"500"}},
		{"MONEY",{"PLAYER","1000"}},
		{"PHYSICAL",{"hgun_Pistol_heavy_02_F",1}},
		{"PHYSICAL",{"6Rnd_45ACP_Cylinder",2}}
	};
	class Time
	{
		timeToComplete[] = {0,3,0};
	};
	class Progression
	{
		class Step0
		{
			destinationType = "gang"; 
			randomGangMission[] = {"cartel","syndicate","mafia"}; 
			shortName = "Collect Vehicle";
			shortDescription = "Collect Abandoned Vehicle";
			longDescription = "A few of our guys ran into some trouble a few hrs ago and had to abandon a vehicle inside another gangs territory...Go collect it!";
			type = "car"; 
			use3DMarkers = 1;
			trader = "ExileLife_Yakuza_Recruiter_JobForPerson";				
		};		
		class Step1
		{
			destinationPOS[] = {14146.4,18577.9,1.70907}; 
			shortName = "Good Job";
			shortDescription = "Complete SideQuest";
			longDescription = "I need to finish the side job then get this car back to the recruiter!";
			type = "talk";
			use3DMarkers = 1;
			trader = "ExileLife_Yakuza_Recruiter_JobForPerson";
		};
		class Step2
		{
			destinationPOS[] = {14146.4,18577.9,1.70907}; 
			shortName = "Return Vehicle";
			shortDescription = "Return Vehicle";
			longDescription = "I need to get this car back to the recruiter!";
			type = "talk";
			use3DMarkers = 1;
			trader = "ExileLife_Yakuza_Recruiter_CompletingJobForPerson";
		};		
	};
};
class requestGangMedic
{
	path = "requestGangMedic";
	jobType = 1;
	shortName = "Gang Member Revive";
	shortDescription = "A gang member needs urgent medical attention!";
	longDescription = "Your gang member needs a revive! Their position has been updated on your map. Get there quickly before they perish!";
	completedText = "Nice Work!";
	failedText = "You were too slow getting to your gang member! Get there faster next time!";
	forfeitedText = "You wont last long in this gang if you keep letting gang members die!";
	offeredByPlayerOnAcceptedMsg = "A Medic is Enroute!";
	offeredByPlayerOnFailedMsg = "The medic failed to reach you!";
	offeredByPlayerOnForfeitedMsg = "The medic says F#$K you!";
	offeredByPlayerOnCompletedMsg = ""; 
	failOnDisconnect = 1; 
	cancelOnRestart = 1; 
	payUberOnSuicide = 1; 
	payUberOnDeath = 0; 
	payUberOnSmother= 0; 
    class Time
	{
		timeToComplete[] = {}; 
		class Skills{
			class Heal{
				timeToDelayUberMsg[]={{0,10},{1,10},{2,5},{3,5},{4,0},{5,0},{6,0}};
			};
		};
	};
	reward[] =
	{
		{"RESPECT",{"200"}} 
	};
	punishmentForfeit[] =
	{
		{"RESPECT",{"500"}}
	};
	punishmentFail[] =
	{
		{"RESPECT",{"500"}}
	};
	class Progression
	{
		class Step0
		{
	        shortName = "Gang Member Revive";
			shortDescription = "A gang member needs urgent medical attention!";
			longDescription = "Your gang member needs a revive! Their position has been updated on your map. Get there quickly before they perish!";
			type = "heal"; 
			use3DMarkers = 1;
            uberDestination = 1;
			offeredByPlayerOnProgressMsg = "";
		};
	};
};
class requestMedic
{
	path = "requestMedic";
	jobType = 1;
	shortName = "Prisoner Revive";
	shortDescription = "A prisoner needs urgent medical attention!";
	longDescription = "A prisoner needs a revive! Their position has been updated on your map. Get there quickly before they perish!";
	completedText = "Nice Work!";
	failedText = "You were too slow getting to the prisoner! Get there faster next time!";
	forfeitedText = "You wont last long if you keep letting patients die!";
	offeredByPlayerOnAcceptedMsg = "A Medic is Enroute!";
	offeredByPlayerOnFailedMsg = "The medic failed to reach you!";
	offeredByPlayerOnForfeitedMsg = "The medic says F#$K you!";
	offeredByPlayerOnCompletedMsg = ""; 
	failOnDisconnect = 1; 
	cancelOnRestart = 1; 
	payUberOnSuicide = 1; 
	payUberOnDeath = 0; 
	payUberOnSmother= 0; 
	class Time
	{
		timeToComplete[] = {}; 
		class Skills{
			class Heal{
				timeToDelayUberMsg[]={{0,10},{1,10},{2,5},{3,5},{4,0},{5,0},{6,0}};
			};
		};
	};
	reward[] =
	{
		{"MONEY",{"PLAYER","200"}} 
	};
    punishmentForfeit[] =
	{
		{"RESPECT",{"500"}}
	};
	punishmentFail[] =
	{
		{"RESPECT",{"500"}}
	};
	class Progression
	{
		class Step0
		{
		    shortName = "Prisoner Revive";
			shortDescription = "A prisoner needs urgent medical attention!";
			longDescription = "A prisoner needs a revive! Their position has been updated on your map. Get there quickly before they perish!";
			type = "heal"; 
			use3DMarkers = 1;
			uberDestination = 1;
			offeredByPlayerOnProgressMsg = "";
		};
	};
};
};
class CfgLights
{
	class SmallFireLight
	{
		name = "$STR_A3_CfgLights_SmallFireLight0";
		diffuse[] = {1,0.45,0.15};
		color[] = {1,0.45,0.15};
		ambient[] = {0,0,0,0};
		brightness = 60;
		intensity = "8500*(power interpolate[0.1, 1.0, 0.4, 1.0])";
		blinking = 0;
		drawLight = 0;
		class Attenuation
		{
			start = 1;
			constant = 3;
			linear = 0;
			quadratic = 22;
		};
		position[] = {0,0,0};
	};
	class FlareLightWhite
	{
		color[] = {1,1,1,1};
		ambient[] = {0,0,0,0};
		brightness = 400;
		size = 5;
		intensity = 1000000;
		drawLight = 0;
		class Attenuation
		{
			start = 0;
			constant = 1;
			linear = 0;
			quadratic = 40;
		};
		position[] = {0,0.2,0};
		diffuse[] = {1,1,1};
	};
	class FlareLightYellow: FlareLightWhite
	{
		color[] = {1,0.6,0,1};
		diffuse[] = {1,0.6,0};
	};
	class FlareLightGreen: FlareLightWhite
	{
		color[] = {0.2,1,0,1};
		diffuse[] = {0.02,0.1,0};
	};
	class FlareLightRed: FlareLightWhite
	{
		color[] = {1,0,0.025,1};
		diffuse[] = {0.1,0.0,0.0025};
	};
};
class CfgLocationTypes
{
    class ExileLife_Dummy
    {
        name = "";
        drawStyle = "name";
        texture = "";
        color[] = {0,0,0,0};
        size = 0;
        textSize = 0;
        shadow = 0;
        font = "PuristaMedium";
    };
};
class CfgMagazines
{
class Land_TinContainer_F; 
class Land_FoodContainer_01_F; 
class Exile_Item_WeaponParts;
class SmokeShell;
class HandGrenade;
class HandGrenade_Stone;
class CA_Magazine;
class 10Rnd_762x51_Mag;
class 150Rnd_762x51_Box;
class 10Rnd_765x17ball;
class 20Rnd_765x17ball;
class 5Rnd_127x108_APDS_KSVK;
class 5Rnd_127x108_KSVK;
class 10Rnd_127x99_m107;
class 30Rnd_545x39_AK;
class 30Rnd_Green_Tracer_545x39_AK;
class 30Rnd_Red_Tracer_545x39_AK;
class 30Rnd_White_Tracer_545x39_AK;
class 30Rnd_Yellow_Tracer_545x39_AK;
class 45Rnd_Green_Tracer_545x39_RPK;
class 75Rnd_Green_Tracer_545x39_RPK;
class 20Rnd_762x51_DMR;
class 20Rnd_Yellow_Tracer_762x51_DMR;
class 20Rnd_Red_Tracer_762x51_DMR;
class 20Rnd_Green_Tracer_762x51_DMR;
class 10x_303_M;
class 100Rnd_762x54_PK_Tracer_Green;
class 7Rnd_45ACP_1911;
class 8Rnd_9x18_Makarov;
class 6Rnd_45ACP;
class 5x_22_LR_17_HMR_M;
class 10Rnd_762x54_SVD;
class 10Rnd_9x39_VSS;
class 20Rnd_9x39_VSS;
class 8rnd_B_Beneli_74Slug;
class 8Rnd_B_Beneli_74Pellets;
class Alsatain_Ck;
class Alsatian_Raw;
class CatShark_Ck;
class CatShark_Raw;
class Chicken_Ck;
class Chicken_Raw;
class Fin_Ck;
class Fin_Raw;
class Goat_Raw;
class Goat_Ck;
class Mackrel_Ck;
class Mackrel_Raw;
class Mullet_Raw;
class Mullet_Ck;
class Ornate_Raw;
class Ornate_Ck;
class Rabbit_Ck;
class Rabbit_Raw;
class Rooster_Raw;
class Rooster_Ck;
class Salema_Ck;
class Salema_Raw;
class Sheep_Raw;
class Sheep_Ck;
class Snake_Ck;
class Snake_Raw;
class Tuna_Raw;
class Tuna_Ck;
class Turtle_Ck;
class Turtle_Raw;
class Exile_AbstractItem_Interaction_Using
{
    scope = 1;
    sounds[] = {};
    returnedItem = "";
    animations[] = {};
    tools[] = {};
    chance = 100; 
    doNotRemoveItem = 0; 
    isMedicalItem = 0; 
    stopBleeding = 0; 
    skillrequired[] = {}; 
    successFunctionType = "call";	 
    successFunction = "";
    successFunctionArguments[] = {};
    successNotification = "";    
    buttonText = "USE";
    multiUse = 0; 
    multiUseConfigs[] = {}; 
};
class Exile_AbstractItem_Interaction_Consuming: Exile_AbstractItem_Interaction_Using
{
    scope = 1;
    isFoodItem = 0;
    isDrinkItem = 0;
    effects[] = {};
	buttonText = "CONSUME";
};
class Exile_AbstractItem_Interaction_Constructing
{
    scope = 1;
    buttonText = "CONSTRUCT";
    animations[] = {};
    tools[] = {};
};
class ExileLife_AbstractItem_Interaction_Fill: Exile_AbstractItem_Interaction_Consuming
{
    possibleItems[] = {};
};
class ExileLife_AbstractItem_Interaction_Empty: Exile_AbstractItem_Interaction_Consuming
{
    event[] = {};
};
class Exile_AbstractItem_Interaction_Consuming_Healing: Exile_AbstractItem_Interaction_Using
{
    isMedicalItem = 1;
    animations[] = {
        "AinvPknlMstpSlayWnonDnon_medic", 
        "AinvPknlMstpSlayWrflDnon_medic", 
        "AinvPknlMstpSlayWpstDnon_medic", 
        "AinvPknlMstpSlayWrflDnon_medic", 
        "AinvPknlMstpSlayWnonDnon_medic", 
        "AinvPknlMstpSlayWnonDnon_medic", 
        "AinvPknlMstpSlayWrflDnon_medic", 
        "AinvPknlMstpSlayWpstDnon_medic", 
        "AinvPknlMstpSlayWrflDnon_medic", 
        "AinvPknlMstpSlayWnonDnon_medic", 
        "AinvPpneMstpSlayWnonDnon_medic", 
        "AinvPpneMstpSlayWrflDnon_medic", 
        "AinvPpneMstpSlayWpstDnon_medic", 
        "AinvPpneMstpSlayWrflDnon_medic", 
        "AinvPpneMstpSlayWnonDnon_medic"  
    };
    buttonText = "HEAL";
};
class Exile_AbstractItem_Interaction_Eating: Exile_AbstractItem_Interaction_Consuming
{
    scope = 1;
    sounds[] = {"SndExileHeartbeatEating01", "SndExileHeartbeatEating02"};
    buttonText = "EAT";
    isFoodItem = 1;
};
class Exile_AbstractItem_Interaction_Eating_Can: Exile_AbstractItem_Interaction_Eating
{
    tools[] = {"Exile_Item_CanOpener"};
};
class Exile_AbstractItem_Interaction_Eating_Meat: Exile_AbstractItem_Interaction_Eating
{
    tools[] = {"Exile_Item_Knife"};
};
class Exile_AbstractItem_Interaction_Drinking: Exile_AbstractItem_Interaction_Consuming
{
    scope = 1;
    sounds[] = {"SndExileHeartbeatDrinking01"};
    buttonText = "DRINK";
    isDrinkItem = 1;
};
class Exile_AbstractItem_Interaction_DrinkingVictim: Exile_AbstractItem_Interaction_Drinking
{
    buttonText = "FORCE DRINK";
    doNotRemoveItem = 1; 
};
class Exile_AbstractItem_Interaction_EatingVictim: Exile_AbstractItem_Interaction_Eating
{
    buttonText = "FORCE EAT";
    doNotRemoveItem = 1; 
};
class Exile_AbstractItem_Interaction_Using_Victim: Exile_AbstractItem_Interaction_Using
{
    buttonText = "FORCE USE";
    doNotRemoveItem = 1; 
};
class Exile_AbstractItem: CA_Magazine
{
    scope = 1;
    descriptionShort = "Dummy";
    displayName = "Dummy";
    count = 1;
    mass = 1;
    picture = "\exile_assets\texture\item\Dummy.paa";
    model = "\exile_assets\model\Dummy.p3d";
    class Interactions {};
};
class ExileLife_Grenade_AbstractItem: HandGrenade_Stone
{
    scope = 1;
    descriptionShort = "Dummy";
    displayName = "Dummy";
    count = 1;
    mass = 1;
    picture = "\exile_assets\texture\item\Dummy.paa";
    model = "\exile_assets\model\Dummy.p3d";
    class Interactions {};
};
class ExileLife_Item_BloodVial: Exile_AbstractItem
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Blood Vial";
	descriptionShort = "A vial of inconspicuous blood.";
	mass = 4;
	model = "\exilelife_assets\models\Items\Medical\ExileLife_Item_BloodVial.p3d";
	picture = "\exilelife_assets\models\Items\Medical\Images\ExileLife_Item_BloodVial_ca.paa";
	bloodType = "";
	typeKnown = 0;
	class Interactions
	{
        class InjectBlood: Exile_AbstractItem_Interaction_Consuming_Healing {
            tools[] = {"ExileLife_Item_AutoInjector"};
            buttonText = "INJECT";
			successFunction = "ExileClient_action_execute";
			successFunctionArguments[] = {"injectBlood", {0,""}};
			doNotRemoveItem = 1; 
			successFunctionType = "spawn";            
        };
        class TestBlood: Exile_AbstractItem_Interaction_Consuming_Healing{
            tools[] = {"ExileLife_Item_BloodTestKit"};
            buttonText = "TEST VIAL";
			successFunction = "ExileClient_action_execute";
			successFunctionArguments[] = {"testBlood", ""};
			doNotRemoveItem = 1; 
			successFunctionType = "spawn";
        };
        class Using: Exile_AbstractItem_Interaction_Using {
            multiUse = 1;
            multiUseConfigs[] = {
                "InjectBlood",
                "TestBlood"
            };
        };
        class Using_Victim: InjectBlood{
            successFunctionArguments[] = {"injectBlood", {1,""}};
        };
		class Consuming: Exile_AbstractItem_Interaction_Drinking
		{
			effects[] = {
				{0, -40, 120}
			};
		};
        class Consuming_Victim: Exile_AbstractItem_Interaction_DrinkingVictim{};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			returnedItem = "ExileLife_Item_BloodVial_Empty";		
		};	
	};
};
class ExileLife_Magazine_Melee : Exile_AbstractItem 
{
	scope = 2;
	displayName = "Melee";	
	count = 999;
	autoReload = 1;
	flash = "";
	flashSize = 0;
	ammo = "Exile_Ammo_AbstractMelee";
	mass = 0;
	picture = "\exile_assets\texture\item\Exile_Magazine_Swing.paa"; 
	model = "\A3\weapons_F\ammo\mag_univ.p3d";
	initSpeed = 0.1;
	sound[] =
	{
		"A3\sounds_f\dummysound",
		31.622776,
		1,
		1600
	};
	reloadMagazineSound[] =
	{
		"A3\sounds_f\dummysound",
		0.0099999998,
		1,
		10
	};
	class EventHandlers
	{
		Killed = "[player,['ExileLife_Magazine_Melee',_this select 0],['ExileLife_Magazine_Melee',999]] call ExileClient_util_inventory_replaceMagazine;";
		init = "systemchat 'working working'";
		Fired = "systemchat 'working working222'";			
	};
};
class ExileLife_Magazine_Melee_Hand : ExileLife_Magazine_Melee 
{
	ammo = "ExileLife_Ammo_AbstractMeleeHand";
	class EventHandlers
	{
		Killed = "[player,['ExileLife_Magazine_Melee_Hand',_this select 0],['ExileLife_Magazine_Melee_Hand',999]] call ExileClient_util_inventory_replaceMagazine;";
		init = "systemchat 'working working'";
		Fired = "systemchat 'working working222'";		
	};
};
class Exile_Item_CamoTentKit: Exile_AbstractItem
{
	scope = 2;
	displayName = "Camo Tent Kit";
	descriptionShort = "A packed tent.";
	model = "\a3\structures_f\Civ\Camping\Sleeping_bag_folded_F.p3d";
	picture = "\exile_assets\texture\item\Exile_Item_CamoTentKit.paa";
	mass = 10;
	constructmeanywhere = 1;
	class Interactions
	{
		class Constructing: Exile_AbstractItem_Interaction_Constructing {};
	};
};
class Exile_Item_CampFireKit: Exile_AbstractItem
{
	scope = 2;
	displayName = "Camp Fire Kit";
	descriptionShort = "Camping Fire";
	mass = 10;
	model = "\exile_assets\model\Exile_Construction_Crate.p3d";
	picture = "\exile_assets\texture\item\Exile_Construction_CampFire.paa";
	constructmeanywhere = 1;
	class Interactions
	{
		class Constructing: Exile_AbstractItem_Interaction_Constructing {};
	};
};
class Exile_Item_FuelBarrelEmpty: Exile_AbstractItem
{
	scope = 2;
	displayName = "Fuel Barrel (Empty)";
	descriptionShort = "";
	model = "\a3\structures_f\Items\Vessels\metalbarrel_f.p3d";
	picture = "\exilelife_assets\models\items\containers\images\Exile_Item_FuelBarrel_f.paa";
	mass = 100;
};
class Exile_Item_FuelBarrelFull: Exile_AbstractItem
{
	scope = 2;
	displayName = "Fuel Barrel";
	descriptionShort = "";
	model = "\a3\structures_f\Items\Vessels\metalbarrel_f.p3d";
	picture = "\exilelife_assets\models\items\containers\images\Exile_Item_FuelBarrel_f.paa";
	mass = 200;
	count = 300;
	emptyclassname = "Exile_Item_FuelBarrelEmpty";
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Drinking
		{
			effects[] = {{0,-300,10 }};								
			returnedItem = "Exile_Item_FuelBarrelEmpty";										
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			returnedItem = "Exile_Item_FuelBarrelEmpty";	
			event[] = {"flammable","chemicalspill"};			
		};	
		class Consuming_Victim: Exile_AbstractItem_Interaction_DrinkingVictim{};
	};
};
class Exile_Item_FuelCanisterEmpty: Exile_AbstractItem
{
	scope = 2;
	displayName = "Fuel Canister (Empty)";
	descriptionShort = "";
	model = "\a3\structures_f\Items\Vessels\CanisterFuel_F.p3d";
	picture = "\exile_assets\texture\item\Exile_Item_FuelCanister.paa";
	mass = 2;
	class Interactions{};
};
class Exile_Item_FuelCanisterFull: Exile_AbstractItem
{
	scope = 2;
	displayName = "Fuel Canister";
	descriptionShort = "";
	model = "\a3\structures_f\Items\Vessels\CanisterFuel_F.p3d";
	picture = "\exile_assets\texture\item\Exile_Item_FuelCanister.paa";
	mass = 22;
	count = 20;
	emptyclassname = "Exile_Item_FuelCanisterEmpty";
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Drinking
		{
			effects[] = {{0,-300,10 }};								
			returnedItem = "Exile_Item_FuelCanisterEmpty";										
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			returnedItem = "Exile_Item_FuelCanisterEmpty";	
			event[] = {"flammable","chemicalspill"};			
		};	
		class Consuming_Victim: Exile_AbstractItem_Interaction_DrinkingVictim{};
	};
};
class Exile_Item_Shovel: Exile_AbstractItem
{
	scope = 2;
	displayName = "Shovel";
	descriptionShort = "";
	model = "\A3\Structures_F_EPA\Items\Tools\Shovel_F.p3d";
	picture = "\exile_assets\texture\item\Exile_Item_Shovel.paa";
	mass = 30;
};
class Exile_Item_WaterBarrelKit: Exile_AbstractItem
{
	scope = 2;
	displayName = "Water Barrel Kit";
	descriptionShort = "Can be used to re-fill your water bottles with dirty water. May taste suspicious.";
	mass = 40;
	constructmeanywhere = 1;
	model = "\exile_assets\model\Exile_Construction_Crate.p3d";
	picture = "\exile_assets\texture\item\Exile_Construction_WaterBarrel.paa";
	class Interactions
	{
		class Constructing: Exile_AbstractItem_Interaction_Constructing {};
	};
};
class Exile_Item_WaterCanisterDirtyWater: Exile_AbstractItem
{
	scope = 2;
	displayName = "Water Canister (Dirty Water)";
	descriptionShort = "A canister full of water. Surprise, surprise.";
	model = "\a3\structures_f\Items\Vessels\CanisterPlastic_F.p3d";
	picture = "\exile_assets\texture\item\Exile_Item_WaterCanister.paa";
	mass = 20;
	count = 20; 
	emptyclassname = "Exile_Item_WaterCanisterEmpty";
	class Interactions
	{
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			returnedItem = "Exile_Item_WaterCanisterEmpty";	
			event[] = {};
		};	
	};
};
class Exile_Item_WaterCanisterEmpty: Exile_AbstractItem
{
	scope = 2;
	displayName = "Water Canister (Empty)";
	descriptionShort = "An empty plastic canister.";
	model = "\a3\structures_f\Items\Vessels\CanisterPlastic_F.p3d";
	picture = "\exile_assets\texture\item\Exile_Item_WaterCanister.paa";
	mass = 10;
};
class Exile_Item_ZipTie: ExileLife_Grenade_AbstractItem
{
	scope = 2;
	displayName = "Zip Tie";
	picture = "\exile_assets\texture\item\Exile_Item_ZipTie.paa"; 
	model = "\exile_assets\model\Exile_Item_ZipTie.p3d";
	descriptionShort = "Can be used for handcuffing and secret, super-special operations.";
	mass = 5;
	ammo="ziptie";	
};
class Exile_Item_Beer: Exile_AbstractItem
{
	scope = 2;
	displayName = "Hausmann Beer";
	descriptionShort = "No expiration date, no problem! <br/>Thirst: +75%/30s<br/>Temperature: +0.5Â°C%/10s<br/>Alc. Vol.: 7â°"; 
	picture = "\exile_assets\texture\item\Exile_Item_Beer.paa";
	model = "\exile_assets\model\Exile_Item_Beer.p3d";
	mass = 10;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Drinking
		{
			effects[] =
			{
				{3, 75, 30}, 
				{4, 0.4, 0}, 
				{5, 0.5, 10}
			};
			returnedItem = "ExileLife_Item_BeerEmpty";	
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			returnedItem = "ExileLife_Item_BeerEmpty";	
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_DrinkingVictim{};
	};
};
class Exile_Item_ChocolateMilk: Exile_AbstractItem
{
	scope = 2;
	displayName = "Chocolate Milk";
	descriptionShort = "Half chocolate, half questionable milk.";
	picture = "\exile_assets\texture\item\Exile_Item_ChocolateMilk_ca.paa";
	model = "\exile_assets\model\Exile_Item_ChocolateMilk.p3d";
	mass = 7;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Drinking
		{
			effects[] =
			{
				{3, 35, 10} 
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_DrinkingVictim{};
	};
};
class Exile_Item_EnergyDrink: Exile_AbstractItem
{
	scope = 2;
	displayName = "Energy Drink";
	descriptionShort = "Gotta go fast!<br/>Thirst: +75%/20s";
	picture = "\exile_assets\texture\item\Exile_Item_EnergyDrink.paa";
	model = "\exile_assets\model\Exile_Item_EnergyDrink.p3d";
	mass = 7;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Drinking
		{
			effects[] =
			{
				{3, 75, 20} 
			};
			returnedItem = "ExileLife_Item_SodaCan_Empty";				
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			returnedItem = "ExileLife_Item_SodaCan_Empty";	
		};		
		class Consuming_Victim: Exile_AbstractItem_Interaction_DrinkingVictim{};
	};
};
class Exile_Item_MountainDupe: Exile_AbstractItem
{
	scope = 2;
	displayName = "Mountain Dupe";
	descriptionShort = "Original Bavarian Soft Drink<br/>Thirst: +50%/20s";
	picture = "\exile_assets\texture\item\Exile_Item_MountainDupe.paa";
	model = "\exile_assets\model\Exile_Item_MountainDupe.p3d";
	mass = 5;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Drinking
		{
			effects[] =
			{
				{3, 50, 20} 
			};
			returnedItem = "ExileLife_Item_SodaCan_Empty";				
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			returnedItem = "ExileLife_Item_SodaCan_Empty";	
		};	
		class Consuming_Victim: Exile_AbstractItem_Interaction_DrinkingVictim{};
	};
};
class Exile_Item_PlasticBottleCoffee: Exile_AbstractItem
{
	scope = 2;
	displayName = "Plastic Bottle (Coffee)";
	descriptionShort = "No milk, no sugar. Just pure darkness.<br/>Thirst: +100%/60s<br/>Hunger: +10%/5s<br/>Temperature: +0.5Â°C%/10s";
	picture = "\exile_assets\texture\item\Exile_Item_Waterbottle_Coffee.paa";
	model = "\exile_assets\model\Exile_Item_Waterbottle_Coffee.p3d";
	mass = 5;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Drinking
		{
			returnedItem = "Exile_Item_PlasticBottleEmpty";
			effects[] =
			{
				{3, 100, 60},
				{2, 10, 5},
				{5, 0.5, 10}
			};
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			returnedItem = "Exile_Item_PlasticBottleEmpty";	
		};	
		class Consuming_Victim: Exile_AbstractItem_Interaction_DrinkingVictim{};
	};
};
class Exile_Item_PlasticBottleDirtyWater: Exile_AbstractItem
{
	scope = 2;
	displayName = "Plastic Bottle (Dirty Water)";
	descriptionShort = "Contains a lot of bacteria. Drink at your own risk.<br/>Thirst: +10%/20s<br/>Health: -10%/5s";
	picture = "\exile_assets\texture\item\Exile_Item_Waterbottle_Dirty.paa";
	model = "\exile_assets\model\Exile_Item_Waterbottle_Dirty.p3d";
	mass = 5;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Drinking
		{
			returnedItem = "Exile_Item_PlasticBottleEmpty";
			effects[] =
			{
				{3, 10, 20}, 
				{0, -10, 5}
			};
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			returnedItem = "Exile_Item_PlasticBottleEmpty";	
		};	
		class Consuming_Victim: Exile_AbstractItem_Interaction_DrinkingVictim{};
	};
};
class Exile_Item_PlasticBottleFreshWater: Exile_AbstractItem
{
	scope = 2;
	displayName = "Plastic Bottle (Fresh Water)";
	descriptionShort = "Enjoy the refreshing taste of nothing.<br/>Thirst: +80%/15s";
	picture = "\exile_assets\texture\item\Exile_Item_Waterbottle_Clean.paa";
	model = "\exile_assets\model\Exile_Item_Waterbottle_Clean.p3d";
	mass = 5;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Drinking
		{
			returnedItem = "Exile_Item_PlasticBottleEmpty";
			effects[] =
			{
				{3, 80, 15} 
			};
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			returnedItem = "Exile_Item_PlasticBottleEmpty";	
		};	
		class Consuming_Victim: Exile_AbstractItem_Interaction_DrinkingVictim{};
	};
};
class Exile_Item_PlasticBottleSaltWater: Exile_AbstractItem
{
	scope = 2;
	displayName = "Plastic Bottle (Salt Water)";
	descriptionShort = "Drink this fishy soup to commit suicide slowly.<br/>Thirst: -20%/10s<br/>Health: -30%/15s";
	picture = "\exile_assets\texture\item\Exile_Item_Waterbottle_Salty.paa";
	model = "\exile_assets\model\Exile_Item_Waterbottle_Salty.p3d";
	mass = 5;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Drinking
		{
			returnedItem = "Exile_Item_PlasticBottleEmpty";
			effects[] =
			{
				{3, -20, 10}, 
				{0, -30, 15}
			};
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			returnedItem = "Exile_Item_PlasticBottleEmpty";	
		};	
		class Consuming_Victim: Exile_AbstractItem_Interaction_DrinkingVictim{};
	};
};
class Exile_Item_PowerDrink: Exile_AbstractItem
{
	scope = 2;
	displayName = "Power Drink";
	descriptionShort = "Recharge in seconds!<br/>Thirst: +95%/10s";
	picture = "\exile_assets\texture\item\Exile_Item_PowerDrink.paa";
	model = "\exile_assets\model\Exile_Item_PowerDrink.p3d";
	mass = 15;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Drinking
		{
			effects[] =
			{
				{3, 95, 10} 
			};
			returnedItem = "ExileLife_Item_SodaCan_Empty";				
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			returnedItem = "ExileLife_Item_SodaCan_Empty";	
		};	
		class Consuming_Victim: Exile_AbstractItem_Interaction_DrinkingVictim{};
	};
};
class Exile_Item_AlsatianSteak_Cooked: Alsatain_Ck
{
	scope = 2;
	author = "ExileLife Mod Team";
	count = 1;
	displayName = "Alsatian Steak (Cooked)";
	descriptionShort = "Alsatian, only the best";
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 70, 30}
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_AlsatianSteak_Raw: Alsatian_Raw
{
	scope = 2;
	author = "ExileLife Mod Team";
	count = 1;
	displayName = "Alsatian Steak (Raw)";
	descriptionShort = "So raw, you can still hear the faint woofs";
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 40, 30},
				{0, -10, 30}
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_BBQSandwich: Exile_AbstractItem
{
	scope = 2;
	displayName = "BBQ Sandwich (Raw)";
	descriptionShort = "Some things shouldn't be canned.<br/>Hunger +40%/60s";
	model = "\exile_assets\model\Exile_Item_BBQSandwich.p3d";
	picture = "\exile_assets\texture\item\Exile_Item_BBQSandwich.paa";
	mass = 5;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating_Can
		{
			effects[] = {
				{2, 40, 60} 
			};
			returnedItem = "Exile_Item_Can_Empty";				
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			tools[] = {"Exile_Item_CanOpener"};			
			returnedItem = "Exile_Item_Can_Empty";	
			event[] = {"bait"};			
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_BBQSandwich_Cooked: Exile_AbstractItem
{
	scope = 2;
	displayName = "BBQ Sandwich (Cooked)";
	descriptionShort = "Some things shouldn't be canned.<br/>Hunger +100%/30s";
	model = "\exile_assets\model\Exile_Item_BBQSandwich_Cooked.p3d";
	picture = "\exile_assets\texture\item\Exile_Item_BBQSandwich_Cooked.paa";
	mass = 5;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating_Can
		{
			effects[] = {
				{2, 70, 30} 
			};
			returnedItem = "Exile_Item_Can_Empty";				
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			tools[] = {"Exile_Item_CanOpener"};			
			returnedItem = "Exile_Item_Can_Empty";	
			event[] = {"bait"};			
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_BeefParts: Exile_AbstractItem
{
	scope = 2;
	displayName = "Beef Parts";
	descriptionShort = "A vegetarians nightmare. <br/>Hunger: +30%/30s";
	model = "\exile_assets\model\Exile_Item_BeefParts.p3d";
	picture = "\exile_assets\texture\item\Exile_Item_BeefParts.paa";
	mass = 15;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 30, 30}
			};
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			event[] = {"bait"};			
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_CatFood: Exile_AbstractItem
{
	scope = 2;
	displayName = "Cat Food (Raw)";
	descriptionShort = "Meow... <br/>Hunger: +40%/40s";
	model = "\exile_assets\model\Exile_Item_Catfood.p3d";
	picture = "\exile_assets\texture\item\Exile_Item_Catfood.paa";
	mass = 5;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating_Can
		{
			effects[] =
			{
				{2, 40, 40} 
			};
			returnedItem = "Exile_Item_Can_Empty";				
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			tools[] = {"Exile_Item_CanOpener"};			
			returnedItem = "Exile_Item_Can_Empty";	
			event[] = {"bait"};			
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_CatFood_Cooked: Exile_AbstractItem
{
	scope = 2;
	displayName = "Cat Food (Cooked)";
	descriptionShort = "Meow... <br/>Hunger: +100%/20s";
	model = "\exile_assets\model\Exile_Item_Catfood_Cooked.p3d";
	picture = "\exile_assets\texture\item\Exile_Item_Catfood_Cooked.paa";
	mass = 5;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating_Can
		{
			effects[] =
			{
				{2, 70, 20} 
			};
			returnedItem = "Exile_Item_Can_Empty";				
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			tools[] = {"Exile_Item_CanOpener"};			
			returnedItem = "Exile_Item_Can_Empty";	
			event[] = {"bait"};			
		};	
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_CatSharkFilet_Cooked: CatShark_Ck
{
	scope = 2;
	author = "ExileLife Mod Team";
	count = 1;
	displayName = "Cat Shark Filet (Cooked)";
	descriptionShort = "I want my food, right meow";
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 70, 25}, 
				{3, -5, 25} 
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_CatSharkFilet_Raw: CatShark_Raw
{
	scope = 2;
	author = "ExileLife Mod Team";
	count = 1;
	displayName = "Cat Shark Filet (Raw)";
	descriptionShort = "It's dangerous on land and in water. Meow...";
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 50, 25}, 
				{3, -10, 25},
				{0, -5, 30}
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_Cheathas: Exile_AbstractItem
{
	scope = 2;
	displayName = "Cheathas";
	descriptionShort = "Perfect for a cozy TV evening with friends. If you have some. ";
	model = "\exile_assets\model\Exile_Item_Cheathas.p3d";
	picture = "\exile_assets\texture\item\Exile_Item_Cheathas.paa";
	mass = 15;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 30, 30}
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_ChickenFilet_Cooked: Chicken_Ck
{
	scope = 2;
	author = "ExileLife Mod Team";
	count = 1;
	displayName = "Chicken Filet (Cooked)";
	descriptionShort = "Sadly, its not deep fried";
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 70, 30}
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_ChickenFilet_Raw: Chicken_Raw
{
	scope = 2;
	author = "ExileLife Mod Team";
	count = 1;
	displayName = "Chicken Filet (Raw)";
	descriptionShort = "So fresh, you can still see the feathers";
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 30, 30},
				{0, -50, 240}
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_ChristmasTinner: Exile_AbstractItem
{
	scope = 2;
	displayName = "Christmas Tinner (Raw)";
	descriptionShort = "Festive!";
	model = "\exile_assets\model\Exile_Item_ChristmasTinner.p3d";
	picture = "\exile_assets\texture\item\Exile_Item_ChristmasTinner.paa";
	mass = 5;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating_Can
		{
			effects[] =
			{
				{2, 40, 60} 
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_ChristmasTinner_Cooked: Exile_AbstractItem
{
	scope = 2;
	displayName = "Christmas Tinner (Cooked)";
	descriptionShort = "Festive!";
	model = "\exile_assets\model\Exile_Item_ChristmasTinner_Cooked.p3d";
	picture = "\exile_assets\texture\item\Exile_Item_ChristmasTinner_Cooked.paa";
	mass = 5;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating_Can
		{
			effects[] =
			{
				{2, 70, 30} 
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_CockONut: Exile_AbstractItem
{
	scope = 2;
	displayName = "Cock'O'Nut";
	descriptionShort = "The real candy bar. ";
	model = "\exile_assets\model\Exile_Item_CockONut.p3d";
	picture = "\exile_assets\texture\item\Exile_Item_CockONut.paa";
	mass = 5;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 20, 40}
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_DogFood: Exile_AbstractItem
{
	scope = 2;
	displayName = "Dog Food (Raw)";
	descriptionShort = "Woof, Woof, Bark! <br/>Hunger: +30%/30s";
	model = "\exile_assets\model\Exile_Item_DogFood.p3d";
	picture = "\exile_assets\texture\item\Exile_Item_DogFood.paa";
	mass = 5;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating_Can
		{
			effects[] =
			{
				{2, 40, 30} 
			};
			returnedItem = "Exile_Item_Can_Empty";				
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			tools[] = {"Exile_Item_CanOpener"};			
			returnedItem = "Exile_Item_Can_Empty";	
			event[] = {"bait"};			
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_DogFood_Cooked: Exile_AbstractItem
{
	scope = 2;
	displayName = "Dog Food (Cooked)";
	descriptionShort = "Good boy! <br/>Hunger: +100%/20s";
	model = "\exile_assets\model\Exile_Item_DogFood_Open.p3d";
	picture = "\exile_assets\texture\item\Exile_Item_DogFood_Open.paa";
	mass = 5;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating_Can
		{
			effects[] =
			{
				{2, 60, 20} 
			};
			returnedItem = "Exile_Item_Can_Empty";				
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			tools[] = {"Exile_Item_CanOpener"};			
			returnedItem = "Exile_Item_Can_Empty";	
			event[] = {"bait"};			
		};	
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_DsNuts: Exile_AbstractItem
{
	scope = 2;
	displayName = "D's Nuts";
	descriptionShort = "A tiny can with huge nuts. ";
	model = "\exile_assets\model\Exile_Item_DsNuts.p3d";
	picture = "\exile_assets\texture\item\Exile_Item_DsNuts.paa";
	mass = 5;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 30, 60}
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_EMRE: Exile_AbstractItem
{
	scope = 2;
	displayName = "EMRE";
	descriptionShort = "Extra delicious, well tinned remains. ";
	model = "\exile_assets\model\Exile_Item_EMRE.p3d";
	picture = "\exile_assets\texture\item\Exile_Item_EMRE.paa";
	mass = 20;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 70, 60}
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_FinSteak_Cooked: Fin_Ck
{
	scope = 2;
	author = "ExileLife Mod Team";
	count = 1;
	displayName = "Fin Steak (Cooked)";
	descriptionShort = "Now who is the monster?";
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 70, 25}
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_FinSteak_Raw: Fin_Raw
{
	scope = 2;
	author = "ExileLife Mod Team";
	count = 1;
	displayName = "Fin Steak (Raw)";
	descriptionShort = "Come here, good boy..........";
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 50, 25}, 
				{3, -10, 25}, 
				{0, -5, 30}
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_GloriousKnakworst: Exile_AbstractItem
{
	scope = 2;
	displayName = "Glorious Knakworst (Raw)";
	descriptionShort = "As Dutch as it gets. <br/>Hunger +60%/30s";
	model = "\exile_assets\model\Exile_Item_Knakworst.p3d";
	picture = "\exile_assets\texture\item\Exile_Item_Knakworst.paa";
	mass = 5;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating_Can
		{
			effects[] =
			{
				{2, 40, 30} 
			};
			returnedItem = "Exile_Item_Can_Empty";				
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			tools[] = {"Exile_Item_CanOpener"};			
			returnedItem = "Exile_Item_Can_Empty";	
			event[] = {"bait"};			
		};	
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_GloriousKnakworst_Cooked: Exile_AbstractItem
{
	scope = 2;
	displayName = "Glorious Knakworst (Cooked)";
	descriptionShort = "As Dutch as it gets. <br/>Hunger +100%/20s";
	model = "\exile_assets\model\Exile_Item_Knakworst_Cooked.p3d";
	picture = "\exile_assets\texture\item\Exile_Item_Knakworst_Cooked.paa";
	mass = 5;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating_Can
		{
			effects[] =
			{
				{2, 70, 20} 
			};
			returnedItem = "Exile_Item_Can_Empty";				
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			tools[] = {"Exile_Item_CanOpener"};			
			returnedItem = "Exile_Item_Can_Empty";	
			event[] = {"bait"};			
		};	
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_GoatSteak_Cooked: Goat_Ck
{
	scope = 2;
	author = "ExileLife Mod Team";
	count = 1;
	displayName = "Goat Steak (Cooked)";
	descriptionShort = "That raw goat pun was baaaaaaaaaad";
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 70, 30}
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_GoatSteak_Raw: Goat_Raw
{
	scope = 2;
	author = "ExileLife Mod Team";
	count = 1;
	displayName = "Goat Steak (Raw)";
	descriptionShort = "Haven't goat any words....";
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 30, 30},
				{0, -10, 30}
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_InstantCoffee: Exile_AbstractItem
{
	scope = 2;
	displayName = "Instant Coffee Beanz";
	descriptionShort = "100% Beanz!";
	model = "\exile_assets\model\Exile_Item_InstantCoffee.p3d";
	picture = "\exile_assets\texture\item\Exile_Item_InstantCoffee.paa";
	mass = 10;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 5, 10}
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_MacasCheese: Exile_AbstractItem
{
	scope = 2;
	displayName = "Maca's Cheese (Raw)";
	descriptionShort = "#BlameMaca! <br/>Hunger: +40%/60s";
	model = "\exile_assets\model\Exile_Item_MacasCheese.p3d";
	picture = "\exile_assets\texture\item\Exile_Item_MacasCheese.paa";
	mass = 5;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating_Can
		{
			effects[] =
			{
				{2, 40, 60} 
			};
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			event[] = {"bait"};			
		};	
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_MacasCheese_Cooked: Exile_AbstractItem
{
	scope = 2;
	displayName = "Maca's Cheese (Cooked)";
	descriptionShort = "Extra cheesy <br/>Hunger: +100%/20s";
	model = "\exile_assets\model\Exile_Item_MacasCheese_Open.p3d";
	picture = "\exile_assets\texture\item\Exile_Item_MacasCheese_Open.paa";
	mass = 5;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating_Can
		{
			effects[] =
			{
				{2, 70, 20} 
			};
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			event[] = {"bait"};			
		};			
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_MackerelFilet_Cooked: Mackrel_Ck
{
	scope = 2;
	author = "ExileLife Mod Team";
	count = 1;
	displayName = "Mackeral Filet (Cooked)";
	descriptionShort = "A holy mackeral!";
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 70, 25}, 
				{3, -5, 25} 
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_MackerelFilet_Raw: Mackrel_Raw
{
	scope = 2;
	author = "ExileLife Mod Team";
	count = 1;
	displayName = "Mackeral Filet (Raw)";
	descriptionShort = "The unholy mackerel";
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 50, 25}, 
				{3, -10, 25}, 
				{0, -3, 30}
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_Moobar: Exile_AbstractItem
{
	scope = 2;
	displayName = "Moobar";
	descriptionShort = "Some yummi milky chocolate! ";
	model = "\exile_assets\model\Exile_Item_Moobar.p3d";
	picture = "\exile_assets\texture\item\Exile_Item_Moobar.paa";
	mass = 5;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 10, 30}
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_MulletFilet_Cooked: Mullet_Ck
{
	scope = 2;
	author = "ExileLife Mod Team";
	count = 1;
	displayName = "Mullet Filet (Cooked)";
	descriptionShort = "Don't mistake this for your ""awesome"" hairstyle";
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 65, 30}
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_MulletFilet_Raw: Mullet_Raw
{
	scope = 2;
	author = "ExileLife Mod Team";
	count = 1;
	displayName = "Mullet Filet (Raw)";
	descriptionShort = "We aren't talking about the one on your head";
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 50, 25}, 
				{3, -10, 25}, 
				{0, -3, 30}
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_OrnateFilet_Cooked: Ornate_Ck
{
	scope = 2;
	author = "ExileLife Mod Team";
	count = 1;
	displayName = "Ornate Filet (Cooked)";
	descriptionShort = "Maybe ornater time...";
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 50, 25}, 
				{3, -5, 25} 
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_OrnateFilet_Raw: Ornate_Raw
{
	scope = 2;
	author = "ExileLife Mod Team";
	count = 1;
	displayName = "Ornate Filet (Raw)";
	descriptionShort = "To be, ornate to be";
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 30, 25}, 
				{3, -10, 25}, 
				{0,-30,30 } 
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_RabbitSteak_Cooked: Rabbit_Ck
{
	scope = 2;
	author = "ExileLife Mod Team";
	count = 1;
	displayName = "Rabbit Steak (Cooked)";
	descriptionShort = "I'd make a veggie joke, but no one would carrot all";
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 70, 30}
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_RabbitSteak_Raw: Rabbit_Raw
{
	scope = 2;
	author = "ExileLife Mod Team";
	count = 1;
	displayName = "Rabbit Steak (Raw)";
	descriptionShort = "Don't eat my carrots";
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 40, 30},
				{0, -15, 60}
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_Raisins: Exile_AbstractItem
{
	scope = 2;
	displayName = "Raisins";
	descriptionShort = "There is a time in life where you don't regret to eat this. ";
	model = "\exile_assets\model\Exile_Item_Raisins.p3d";
	picture = "\exile_assets\texture\item\Exile_Item_Raisins.paa";
	mass = 5;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 15, 30}
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_RoosterFilet_Cooked: Rooster_Ck
{
	scope = 2;
	author = "ExileLife Mod Team";
	count = 1;
	displayName = "Rooster Filet (Cooked)";
	descriptionShort = "It's the year of the rooster";
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 70, 30}
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_RoosterFilet_Raw: Rooster_Raw
{
	scope = 2;
	author = "ExileLife Mod Team";
	count = 1;
	displayName = "Rooster Filet (Raw)";
	descriptionShort = "Up since the break of dawn";
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 30, 30},
				{0, -50, 240}
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_SalemaFilet_Cooked: Salema_Ck
{
	scope = 2;
	author = "ExileLife Mod Team";
	count = 1;
	displayName = "Salema Filet (Cooked)";
	descriptionShort = "Seriously, don't worry.";
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 60, 25}, 
				{3, -5, 25}, 
				{ATTRIBUTE_TRIPPING, 5, 25} 
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_SalemaFilet_Raw: Salema_Raw
{
	scope = 2;
	author = "ExileLife Mod Team";
	count = 1;
	displayName = "Salema Filet (Raw)";
	descriptionShort = "Don't worry, you won't trip out";
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating_Meat
		{
			effects[] =
			{
				{2, 30, 25}, 
				{3, -10, 25}, 
				{ATTRIBUTE_TRIPPING, 15, 25} 
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_SausageGravy: Exile_AbstractItem
{
	scope = 2;
	displayName = "Sausage Gravy (Raw)";
	descriptionShort = "Looks like sea men <br/>Hunger +50%/25s";
	model = "\exile_assets\model\Exile_Item_SausageGravy.p3d";
	picture = "\exile_assets\texture\item\Exile_Item_SausageGravy.paa";
	mass = 5;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating_Can
		{
			effects[] =
			{
				{2, 40, 25} 
			};
			returnedItem = "Exile_Item_Can_Empty";				
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			tools[] = {"Exile_Item_CanOpener"};			
			returnedItem = "Exile_Item_Can_Empty";	
			event[] = {"bait"};			
		};		
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_SausageGravy_Cooked: Exile_AbstractItem
{
	scope = 2;
	displayName = "Sausage Gravy (Cooked)";
	descriptionShort = "Looks like sea men <br/>Hunger +100%/20s";
	model = "\exile_assets\model\Exile_Item_SausageGravy_Cooked.p3d";
	picture = "\exile_assets\texture\item\Exile_Item_SausageGravy_Cooked.paa";
	mass = 5;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating_Can
		{
			effects[] =
			{
				{2, 60, 20} 
			};
			returnedItem = "Exile_Item_Can_Empty";				
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			tools[] = {"Exile_Item_CanOpener"};			
			returnedItem = "Exile_Item_Can_Empty";	
			event[] = {"bait"};			
		};			
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_SeedAstics: Exile_AbstractItem
{
	scope = 2;
	displayName = "Seed-Astics";
	descriptionShort = "Bird is the word. ";
	model = "\exile_assets\model\Exile_Item_SeedAstics.p3d";
	picture = "\exile_assets\texture\item\Exile_Item_SeedAstics.paa";
	mass = 5;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 10, 40}
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_SheepSteak_Cooked: Sheep_Ck
{
	scope = 2;
	author = "ExileLife Mod Team";
	count = 1;
	displayName = "Sheep Steak (Cooked)";
	descriptionShort = "Don't herd me, no more...";
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 70, 30}
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_SheepSteak_Raw: Sheep_Raw
{
	scope = 2;
	author = "ExileLife Mod Team";
	count = 1;
	displayName = "Sheep Steak (Raw)";
	descriptionShort = "What is love? Baby don't herd me..";
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 45, 30},
				{0, -10, 30}
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_SnakeFilet_Cooked: Snake_Ck
{
	scope = 2;
	author = "ExileLife Mod Team";
	count = 1;
	displayName = "Snake Filet (Cooked)";
	descriptionShort = "Hiss off!";
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 60, 30}
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_SnakeFilet_Raw: Snake_Raw
{
	scope = 2;
	author = "ExileLife Mod Team";
	count = 1;
	displayName = "Snake Filet (Raw)";
	descriptionShort = "Hiss off! I'm serious";
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 40, 30},
				{0, -3, 30}
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_Surstromming: Exile_AbstractItem
{
	scope = 2;
	displayName = "SurstrÃ¶mming (Raw)";
	descriptionShort = "Rotten fish in pickle. Nothing more, nothing less.<br/>Hunger +55%/25s<br/>Thirst -10%/5s";
	model = "\exile_assets\model\Exile_Item_Surstromming.p3d";
	picture = "\exile_assets\texture\item\Exile_Item_Surstromming.paa";
	mass = 5;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating_Can
		{
			effects[] =
			{
				{2, 55, 25}, 
				{3, -10, 5}
			};
			returnedItem = "Exile_Item_Can_Empty";				
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			tools[] = {"Exile_Item_CanOpener"};			
			returnedItem = "Exile_Item_Can_Empty";	
		};	
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_Surstromming_Cooked: Exile_AbstractItem
{
	scope = 2;
	displayName = "SurstrÃ¶mming (Cooked)";
	descriptionShort = "Rotten fish in pickle. Nothing more, nothing less.<br/>Hunger +100%/20s";
	model = "\exile_assets\model\Exile_Item_Surstromming_Cooked.p3d";
	picture = "\exile_assets\texture\item\Exile_Item_Surstromming_Cooked.paa";
	mass = 5;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating_Can
		{
			effects[] =
			{
				{2, 70, 20} 
			};
			returnedItem = "Exile_Item_Can_Empty";				
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			tools[] = {"Exile_Item_CanOpener"};			
			returnedItem = "Exile_Item_Can_Empty";	
		};	
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_TunaFilet_Cooked: Tuna_Ck
{
	scope = 2;
	author = "ExileLife Mod Team";
	count = 1;
	displayName = "Tuna Filet (Cooked)";
	descriptionShort = "Tunas, huh?";
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 70, 25}, 
				{3, -5, 25}
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_TunaFilet_Raw: Tuna_Raw
{
	scope = 2;
	author = "ExileLife Mod Team";
	count = 1;
	displayName = "Tuna Filet (Raw)";
	descriptionShort = "What's the difference between a fish and a piano? You can't tuna fish..";
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 50, 25}, 
				{3, -10, 25}
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_TurtleFilet_Cooked: Turtle_Ck
{
	scope = 2;
	author = "ExileLife Mod Team";
	count = 1;
	displayName = "Turtle Filet (Cooked)";
	descriptionShort = "TMNT FTW";
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 70, 30}
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_TurtleFilet_Raw: Turtle_Raw
{
	scope = 2;
	author = "ExileLife Mod Team";
	count = 1;
	displayName = "Turtle Filet (Raw)";
	descriptionShort = "Be careful, they bite hard.";
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 40, 30},
				{0, -10, 30}
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class Exile_Item_Bandage: Exile_AbstractItem
{
	scope = 2;
	displayName = "Bandage";
	descriptionShort = "A small bandage to stop bleeding wounds.<br/>";
	mass = 10;
	model = "\A3\Structures_F_EPA\Items\Medical\Bandage_F.p3d";
	picture = "\exile_assets\texture\item\Exile_Item_Bandage.paa";
	class Interactions
	{
		class Consume: Exile_AbstractItem_Interaction_Consuming_Healing
		{
			stopBleeding = 1;
			effects[] = {};
		};
	};
};
class Exile_Item_InstaDoc: Exile_AbstractItem
{
	scope = 2;
	displayName = "InstaDoc";
	descriptionShort = "The universal auto-injector to regenerate health and stop bleeding wounds.<br/>Health: +100%/30s";
	mass = 15;
	model = "\exile_assets\model\Exile_Item_Instadoc.p3d";
	picture = "\exile_assets\texture\item\Exile_Item_Instadoc.paa";
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Consuming_Healing
		{
			stopBleeding = 0; 
			isMedicalItem = 1;
			effects[] =
			{
				{0, 100, 30}
			};
		};
	};
};
class Exile_Item_Vishpirin: Exile_AbstractItem
{
	scope = 2;
	displayName = "Vishpirin";
	descriptionShort = "Oestrogen Power Shot!";
	model = "\exile_assets\model\Exile_Item_Vishpirin.p3d";
	picture = "\exile_assets\texture\item\Exile_Item_Vishpirin.paa";
	mass = 15;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Consuming_Healing
		{
			isMedicalItem = 1;
			effects[] =
			{
				{0, {15, 25}, {30, 45}},
				{4, -5, 0}, 
				{3, -20, 0} 
			};
		};
	};
};
class 14Rnd_9mm: CA_Magazine
{
	author = "ExileLife Mod Team";
	scope = 2;
	displayName = "14Rnd 9mm Luger";
	ammo = "B_9x18_Ball";
	count = 14;
	picture = "\exilelife_weapons\icons\compact\icon_compact_mag_ca.paa";
	descriptionShort = "A magazine loaded with 14 Rounds of 9mm Luger";
	mass = 6;
	initSpeed = 250;
};
class 15Rnd_9mm: CA_Magazine
{
	author = "ExileLife Mod Team";
	scope = 2;
	displayName = "15Rnd 9mm Parabellum";
	ammo = "B_9x18_Ball";
	count = 15;
	picture = "\A3\weapons_f\data\ui\M_16Rnd_9x21_CA.paa";
	descriptionShort = "A magazine loaded with 15 Rounds of 9mm Parabellum";
	mass = 6;
	initSpeed = 250;
};
class 17Rnd_9mm: CA_Magazine
{
	author = "ExileLife Mod Team";
	scope = 2;
	displayName = "17Rnd 9mm Parabellum";
	ammo = "B_9x18_Ball";
	count = 17;
	picture = "\exilelife_weapons\icons\glock17\icon_glock17_mag_ca.paa";
	descriptionShort = "A magazine loaded with 17 Rounds of 9mm Parabellum";
	mass = 6;
	initSpeed = 250;
};
class ExileLife_Item_Arrow: CA_Magazine
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = "Arrow (1rnd)";
    descriptionShort = "A Single Arrow";  
    ammo = "ExileLife_Ammo_Arrow";
    count = 1;
    model = "\exilelife_assets\models\Items\Weapons\Ammunition\ExileLife_Item_TaserCartridge.p3d";  
    picture = "\exilelife_assets\models\Items\Weapons\Ammunition\Images\ExileLife_Item_TaserCartridge.paa";
    mass = 2;
    initSpeed = 160;
};
class ExileLife_Item_Battery: Exile_AbstractItem
{
	scope = 2;
	displayName = "Battery (D-Cell)";
	descriptionShort = "A 1.5v D cell battery";
	model = "\A3\Structures_F_EPA\Items\Electronics\Battery_F.p3d";
	mass = 15;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Consuming
		{
			isMedicalItem = 1;	
			effects[] =
			{
				{0, -5, 0}
			};
			buttonText = "LICK";
		};
	};
};
class ExileLife_Item_BeerEmpty: Exile_AbstractItem
{
	scope = 2;
	displayName = "Glass Bottle (Empty)";
	descriptionShort = "Maybe you could reuse this?";
	picture = "\exile_assets\texture\item\Exile_Item_Beer.paa";
	model = "\exile_assets\model\Exile_Item_Beer.p3d";
	mass = 1;
};
class ExileLife_Item_Bullet_9mm: Exile_AbstractItem
{
	scope = 2;
	displayName = "9mm";
	descriptionShort = "Bullet 9mm";
	model = "exilelife_assets\model\ExileLife_Item_Bullet_9mm.p3d";
	mass = 1;
};
class ExileLife_Item_CameraPole: Exile_AbstractItem
{
	scope = 2;
	displayName = "Camera Pole Kit";
	descriptionShort = "Camera Pole";
	mass = 10;
	model = "\exilelife_assets\models\Items\Construction\ExileLife_Construction_CameraPole_World.p3d";
	picture = "\exilelife_assets\models\Items\Construction\Images\ExileLife_Construction_CameraPole.paa";
	constructmeanywhere = 1;
	class Interactions
	{
		class Constructing: Exile_AbstractItem_Interaction_Constructing {};
	};
};
class ExileLife_Item_Filter: Exile_AbstractItem
{
	scope = 2;
	displayName = "Air Filter";
	descriptionShort = "A cheap, crude breathing mask that is useless at filtering air particles";
	mass = 5;
	model = "\a3\structures_f\Items\Tools\DustMask_F.p3d";
	picture = "\exilelife_assets\models\Items\Tools\Images\ExileLife_Item_Filter.paa";
	class Interactions{};
};
class ExileLife_Item_GasMask_Filter: Exile_AbstractItem
{
	scope = 2;
	displayName = "Gas Mask Filter";
	descriptionShort = "A replacement filter for a gas mask";
	mass = 7;
	model = "\exilelife_assets\models\Items\Clothing\Items\Exile_Clothing_Gasmask_Filter.p3d";
	picture = "\exilelife_assets\models\Items\Clothing\Items\Images\ExileLife_Item_GasMask_Filter_ca.paa"; 
	class Interactions
	{
		class Using: Exile_AbstractItem_Interaction_Using
		{
			successFunction = "ExileLifeClient_object_gasMask_addFilter";
			buttonText = "REPLACE";
		};
	};
};
class ExileLife_Item_GunRepairKit_Advanced: Exile_Item_WeaponParts
{
	scope = 2;
	displayName = "Gun Repair Kit (Advanced)";
	descriptionShort = "An advanced gun repair kit. I can use this to repair a gun";
	mass = 30;
};
class ExileLife_Item_GunRepairKit_Basic: Exile_Item_WeaponParts
{
	scope = 2;
	displayName = "Gun Repair Kit (Basic)";
	descriptionShort = "A basic gun repair kit. I can use this to repair a gun";
	mass = 30;
};
class ExileLife_Item_HashCatXL: Exile_AbstractItem
{
	scope = 2;
	displayName = "HashCat XL";
	descriptionShort = "Run this software on your laptop and crack any code! Its a bit buggy tho and seems to destroy itself each use...";
	picture = "\exilelife_assets\models\Items\Resources\Images\ExileLife_Item_HashCat_ca.paa";
	model = "\exile_assets\model\Dummy.p3d"; 
	mass = 1;
	count = 1; 
};
class ExileLife_Item_Molotov: HandGrenade_Stone
{
	author="ExileLife";
	mass=10;
	scope=2;
	value=1;
	displayName="Molotov Cocktail";
	picture = "\exile_assets\texture\item\Exile_Item_Beer.paa"; 
	model = "\exile_assets\model\Exile_Item_Beer.p3d";
	ammo="Molotov";
	descriptionShort="Simple explosive with extensive fire";
	displayNameShort="Molotov";		
};
class ExileLife_Item_Pot: Exile_AbstractItem
{
	scope = 2;
	displayName = "Empty Pot";
	descriptionShort = "Its an empty clay pot!";
	picture = "\exilelife_assets\Models\Items\Containers\Images\ExileLife_Item_Pot_f.paa"; 
	model = "\exilelife_assets\Models\Items\Containers\ExileLife_Item_EmptyPot.p3d"; 
	mass = 20;
	hiddenSelections[] = {"paint"};
	hiddenSelectionsTextures[] = {}; 
	hiddenSelectionsMaterials[] = {};
	class Interactions
	{
		class Using: Exile_AbstractItem_Interaction_Using
		{
			successFunctionType = "spawn";		
			successFunction = "ExileLifeClient_object_player_action_doPoo";
			successNotification = "";
		};
	};
};
	class ExileLife_Item_PressureCooker: Exile_AbstractItem
	{
		scope = 2;
		displayName = "Pressure Cooker";
		descriptionShort = "Better not be caught carrying this around!";
		model = "\exile_assets\model\Exile_Construction_Crate.p3d";
		picture = "\exilelife_assets\models\Items\Tools\Images\ExileLife_Item_PressureCooker.paa";
		mass = 100;
		class Interactions
		{
			class Constructing: Exile_AbstractItem_Interaction_Constructing{};
		};
	};
//Arma3_CfgVehicles_Land_HeatPump_F
	class ExileLife_Item_PulpingPro_Empty: Exile_AbstractItem
	{
		scope = 2;
		displayName = "Pulping Pro (Empty)";
		descriptionShort = "I wonder what that would do to your hand?";
		picture = "\exilelife_assets\Models\Items\Tools\Images\ExileLife_Item_pulpingpro_empty.paa";
		model = "\exilelife_assets\models\items\resources\ExileLife_Item_Parcel.p3d";
		mass = 4;
		class Interactions{};
	};
	class ExileLife_Item_PulpingPro_Pulped: Exile_AbstractItem
	{
		scope = 2;
		displayName = "Pulping Pro (Pulped Apple)";
		descriptionShort = "Looks a little like puke!";
		picture = "\exilelife_assets\Models\Items\Tools\Images\ExileLife_Item_pulpingpro_pulped.paa";
		model = "\exilelife_assets\models\items\resources\ExileLife_Item_Parcel.p3d";
		mass = 10;
		class Interactions{};
	};
	class ExileLife_Item_PulpingPro_Full: Exile_AbstractItem
	{
		scope = 2;
		displayName = "Pulping Pro (Chopped Apples)";
		descriptionShort = "I really want to turn this baby on!";
		picture = "\exilelife_assets\Models\Items\Tools\Images\ExileLife_Item_pulpingpro_full.paa";
		model = "\exilelife_assets\models\items\resources\ExileLife_Item_Parcel.p3d";
		mass = 10;
		class Interactions{};
	};
class ExileLife_Item_SleepingBag: Exile_AbstractItem
{
	scope = 2;
	displayName = "Sleeping Bag";
	descriptionShort = "Can be used to squat out a house!";
	model = "\A3\Structures_F\Civ\Camping\Sleeping_bag_folded_F.p3d";
	picture = "\exilelife_assets\models\Items\Clothing\Items\images\ExileLife_Item_SleepingBag_ca.paa";
	mass = 20;
	class Interactions
	{
		class Constructing: Exile_AbstractItem_Interaction_Constructing{};
	};
};
	class ExileLife_Item_SodaCan_Empty : Exile_AbstractItem
	{
		scope = 2;
		displayName = "Empty Soda Can";
		descriptionShort = "An empty soda can, full of empty dreams";
		picture = "\exilelife_assets\Models\Items\Food\Images\Can_Dented_F.paa";
		model = "\A3\Structures_F\Items\Food\Can_Dented_F.p3d";
		mass = 1;
		class Interactions{};				
	};
	class ExileLife_Item_stone: ExileLife_Grenade_AbstractItem
	{
		scope = 2;
		displayName = "Stone";
		descriptionShort = "A small stone!";
		mass = 5; 
		picture = "\exilelife_assets\Models\Items\Food\Images\ExileLife_Item_apple.paa"; 
		model = "\A3\Weapons_f\ammo\stone_2.p3d";
		ammo="stone";
		class Interactions
		{
			class Consuming: Exile_AbstractItem_Interaction_Eating
			{
				effects[] = {{2,5,30}}; 
			};
		};	
	};
class ExileLife_Item_TaserCartridge: CA_Magazine
{
	author = "ExileLife Mod Team";
	scope = 2;
	displayName = "Taser Cartridge (1rnd)";
	descriptionShort = "A Single Taser Round";	
	ammo = "ExileLife_Ammo_Taser";
	count = 1;
	model = "\exilelife_assets\models\Items\Weapons\Ammunition\ExileLife_Item_TaserCartridge.p3d";	
	picture = "\exilelife_assets\models\Items\Weapons\Ammunition\Images\ExileLife_Item_TaserCartridge.paa";
	mass = 2;
	initSpeed = 60;
};
class ExileLife_Item_Worm : Exile_AbstractItem
{
	scope = 2;
	count = 5;
	autoReload = 1;
	flash = "";
	flashSize = 0;
	displayName = "Worm (Bait)";
	ammo = "Exile_Ammo_Boing";
	mass = 0.5;
	picture = "\exilelife_assets\models\items\food\images\ExileLife_Item_worm.paa";
	model = "\A3\weapons_F\ammo\mag_univ.p3d";
	initSpeed = 0.1;
	sound[] =
	{
		"A3\sounds_f\dummysound",
		31.622776,
		1,
		1600
	};
	reloadMagazineSound[] =
	{
		"A3\sounds_f\dummysound",
		0.0099999998,
		1,
		10
	};
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =	{
				{2, 5, 30},
				{0, -5, 30}
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class ExileLife_Item_127_Casing: Exile_AbstractItem
{
	author = "ExileLife Mod Team";
	scope = 2;
	displayName = "Spent 12.7 mm casing";
	descriptionShort = "A single spent 12.7 mm casing.<br/>Useful for crafting new bullets";	
	model = "\A3\weapons_f\ammo\cartridge_127";
	count = 1;
	mass = 1;
};
class ExileLife_Item_12Gauge_Casing: Exile_AbstractItem
{
	author = "ExileLife Mod Team";
	scope = 2;
	displayName = "Spent 12 gauge casing";
	descriptionShort = "A single spent 12 gauge casing.<br/>Useful for crafting new bullets";	
	model = "\A3\weapons_f\ammo\cartridge_slug";
	count = 1;
	mass = 1;
};
class ExileLife_Item_22_Casing: Exile_AbstractItem
{
	author = "ExileLife Mod Team";
	scope = 2;
	displayName = "Spent .22 casing";
	descriptionShort = "A single spent .22 casing.<br/>Useful for crafting new bullets";	
	model = "\A3\Weapons_f\ammo\cartridge_small";
	count = 1;
	mass = 1;
};
class ExileLife_Item_303_Casing: Exile_AbstractItem
{
	author = "ExileLife Mod Team";
	scope = 2;
	displayName = "Spent .303 British casing";
	descriptionShort = "A single spent .303 British casing.<br/>Useful for crafting new bullets";	
	model = "\A3\weapons_f\ammo\cartridge_762";
	count = 1;
	mass = 1;
};
class ExileLife_Item_338_Casing: Exile_AbstractItem
{
	author = "ExileLife Mod Team";
	scope = 2;
	displayName = "Spent .338 cal casing";
	descriptionShort = "A single spent .338 cal casing.<br/>Useful for crafting new bullets";	
	model = "\A3\Weapons_F_Mark\Ammo\cartridge_338_LM.p3d";
	count = 1;
	mass = 1;
};
class ExileLife_Item_408_Casing: Exile_AbstractItem
{
	author = "ExileLife Mod Team";
	scope = 2;
	displayName = "Spent .408 CheyTec casing";
	descriptionShort = "A single spent .408 CheyTec casing.<br/>Useful for crafting new bullets";	
	model = "\A3\weapons_f\ammo\cartridge_127";
	count = 1;
	mass = 1;
};
class ExileLife_Item_45_Casing: Exile_AbstractItem
{
	author = "ExileLife Mod Team";
	scope = 2;
	displayName = "Spent .45 ACP casing";
	descriptionShort = "A single spent .45 ACP casing.<br/>Useful for crafting new bullets";	
	model = "\A3\Weapons_f\ammo\cartridge_small";
	count = 1;
	mass = 1;
};
class ExileLife_Item_545_Casing: Exile_AbstractItem
{
	author = "ExileLife Mod Team";
	scope = 2;
	displayName = "Spent  5.45 mm casing";
	descriptionShort = "A single spent 5.45 mm casing.<br/>Useful for crafting new bullets";	
	model = "\A3\weapons_f\ammo\cartridge_762";
	count = 1;
	mass = 1;
};
class ExileLife_Item_556_Casing: Exile_AbstractItem
{
	author = "ExileLife Mod Team";
	scope = 2;
	displayName = "Spent 5.56 mm casing";
	descriptionShort = "A single spent 5.56 mm casing.<br/>Useful for crafting new bullets";	
	model = "\A3\Weapons_f\ammo\cartridge_small";
	count = 1;
	mass = 1;
};
class ExileLife_Item_58_Casing: Exile_AbstractItem
{
	author = "ExileLife Mod Team";
	scope = 2;
	displayName = "Spent 5.8 mm casing";
	descriptionShort = "A single spent 5.8 mm casing.<br/>Useful for crafting new bullets";	
	model = "\A3\Weapons_f\ammo\cartridge_small";
	count = 1;
	mass = 1;
};
class ExileLife_Item_65_Casing: Exile_AbstractItem
{
	author = "ExileLife Mod Team";
	scope = 2;
	displayName = "Spent 6.5 mm casing";
	descriptionShort = "A single spent 6.5 mm casing.<br/>Useful for crafting new bullets";	
	model = "\A3\weapons_f\ammo\cartridge_65";
	count = 1;
	mass = 1;
};
class ExileLife_Item_762_Casing: Exile_AbstractItem
{
	author = "ExileLife Mod Team";
	scope = 2;
	displayName = "Spent  7.62 mm casing";
	descriptionShort = "A single spent 7.62 mm casing.<br/>Useful for crafting new bullets";	
	model = "\A3\weapons_f\ammo\cartridge_762";
	count = 1;
	mass = 1;
};
class ExileLife_Item_765_Casing: Exile_AbstractItem
{
	author = "ExileLife Mod Team";
	scope = 2;
	displayName = "Spent 7.65 mm casing";
	descriptionShort = "A single spent 7.65 mm casing.<br/>Useful for crafting new bullets";	
	model = "\A3\Weapons_f\ammo\cartridge_small";
	count = 1;
	mass = 1;
};
class ExileLife_Item_93_Casing: Exile_AbstractItem
{
	author = "ExileLife Mod Team";
	scope = 2;
	displayName = "Spent 9.3 mm casing";
	descriptionShort = "A single spent 9.3 mm casing.<br/>Useful for crafting new bullets";	
	model = "\A3\Weapons_F_Mark\Ammo\cartridge_93x64.p3d";
	count = 1;
	mass = 1;
};
class ExileLife_Item_9mm_Casing: Exile_AbstractItem
{
	author = "ExileLife Mod Team";
	scope = 2;
	displayName = "Spent 9 mm casing";
	descriptionShort = "A single spent 9mm casing.<br/>Useful for crafting new bullets";	
	model = "\A3\Weapons_f\ammo\cartridge_small";
	count = 1;
	mass = 1;
};
class ExileLife_Item_Acetone: Exile_AbstractItem
{
	scope = 2;
	displayName = "Acetone";
	descriptionShort = "";
	model = "\a3\structures_f\Items\Vessels\CanisterFuel_F.p3d";
	picture = "\exile_assets\texture\item\Exile_Item_FuelCanister.paa";
	mass = 22;
	count = 20;
	emptyclassname = "Exile_Item_FuelCanisterEmpty";
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Drinking
		{
			effects[] = {{0,-300,10 }};								
			returnedItem = "Exile_Item_FuelCanisterEmpty";										
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			returnedItem = "Exile_Item_FuelCanisterEmpty";	
			event[] = {"flammable","chemicalspill"};			
		};	
		class Consuming_Victim: Exile_AbstractItem_Interaction_DrinkingVictim{};
	};
};
class ExileLife_Item_Bleach: Exile_AbstractItem
{
	scope = 2;
	displayName = "Bleach";
	descriptionShort = "Cleaning time!";
	picture = "\exilelife_assets\Models\Items\Tools\Images\ExileLife_Item_Bleach.paa";
	model = "a3\structures_f_epa\Items\Medical\DisinfectantSpray_F.p3d";
	mass = 5;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Drinking
		{
			effects[] = {{0,-200,30 }};
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			event[] = {"chemicalspill"};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_DrinkingVictim{};
	};
};
class ExileLife_Item_Fertilizer: Exile_AbstractItem
{
	scope = 2;
	displayName = "Fertilizer";
	descriptionShort = "Its a pot full of poo...";
	picture = "\exilelife_assets\Models\Items\Containers\Images\ExileLife_Item_Fertilizer_F.paa";
	model = "\exilelife_assets\Models\Items\Containers\ExileLife_Item_Pot.p3d";
	mass = 20;
	count = 10;
	emptyclassname = "ExileLife_Item_Pot";
	hiddenSelections[] = {"paint","pot_filling"};
	hiddenSelectionsTextures[] = {}; 
	hiddenSelectionsMaterials[] = {};
	class Interactions
	{
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			returnedItem = "ExileLife_Item_Pot";
		};
	};
};
class ExileLife_Item_Hydrazine: Exile_AbstractItem
{
	scope = 2;
	displayName = "Hydrazine";
	descriptionShort = "This is an EXTREMELY Volatile Chemical!";
	model = "\a3\structures_f\Items\Vessels\CanisterFuel_F.p3d";
	picture = "\exile_assets\texture\item\Exile_Item_FuelCanister.paa";
	mass = 22;
	count = 20;
	emptyclassname = "Exile_Item_FuelCanisterEmpty";		
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Drinking
		{
			effects[] = {{0,-300,10 }};								
			returnedItem = "Exile_Item_FuelCanisterEmpty";										
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			returnedItem = "Exile_Item_FuelCanisterEmpty";	
			event[] = {"flammable","chemicalspill"};			
		};	
		class Consuming_Victim: Exile_AbstractItem_Interaction_DrinkingVictim{};
	};
};
class ExileLife_Item_HydrochloricAcid: Exile_AbstractItem
{
	scope = 2;
	displayName = "Hydrochloric Acid";
	descriptionShort = "";
	model = "\a3\structures_f\Items\Vessels\CanisterFuel_F.p3d";
	picture = "\exile_assets\texture\item\Exile_Item_FuelCanister.paa";
	mass = 22;
	count = 20;
	emptyclassname = "Exile_Item_FuelCanisterEmpty";	
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Drinking
		{
			effects[] = {{0,-300,10 }};								
		returnedItem = "Exile_Item_FuelCanisterEmpty";										
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			returnedItem = "Exile_Item_FuelCanisterEmpty";	
			event[] = {"chemicalspill"};			
		};	
		class Consuming_Victim: Exile_AbstractItem_Interaction_DrinkingVictim{};
	};
};
class ExileLife_Item_OvenCleaner: Exile_AbstractItem
{
	scope = 2;
	displayName = "Oven Cleaner";
	descriptionShort = "It's Cleaning time!";
	picture = "\exilelife_assets\Models\Items\Tools\Images\ExileLife_Item_Bleach.paa";
	model = "a3\structures_f_epa\Items\Medical\DisinfectantSpray_F.p3d";
	mass = 5;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Drinking
		{
			effects[] = {{0,-200,30 }};
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			event[] = {"chemicalspill"};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_DrinkingVictim{};
	};
};
class ExileLife_Item_PhosphoricAcid: Exile_AbstractItem
{
	scope = 2;
	displayName = "Phosphoric Acid";
	descriptionShort = "";
	model = "\a3\structures_f\Items\Vessels\CanisterFuel_F.p3d";
	picture = "\exile_assets\texture\item\Exile_Item_FuelCanister.paa";
	mass = 22;
	count = 20;
	emptyclassname = "Exile_Item_FuelCanisterEmpty";		
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Drinking
		{
			effects[] = {{0,-300,10 }};			
			returnedItem = "Exile_Item_FuelCanisterEmpty";										
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			returnedItem = "Exile_Item_FuelCanisterEmpty";	
			event[] = {"chemicalspill"};			
		};		
		class Consuming_Victim: Exile_AbstractItem_Interaction_DrinkingVictim{};
	};
};
class ExileLife_Item_Chair: Exile_AbstractItem
{
	scope = 2;
	displayName = "Wooden Chair";
	descriptionShort = "Can be used to sit on!";
	model = "\exile_assets\model\Exile_Construction_Crate.p3d";
	picture = "\exilelife_assets\models\Items\Construction\Images\ExileLife_Construction_Chair.paa";
	mass = 60;
	class Interactions
	{
		class Constructing: Exile_AbstractItem_Interaction_Constructing{};
	};
};
class ExileLife_Item_Chair_Stool: Exile_AbstractItem
{
	scope = 2;
	displayName = "Wooden Stool";
	descriptionShort = "Crude wooden stool (watch out for splinters!)";
	model = "\exile_assets\model\Exile_Construction_Crate.p3d";
	picture = "\exilelife_assets\models\Items\Construction\Images\ExileLife_Construction_Chair_Stool.paa";
	mass = 60;
	class Interactions
	{
		class Constructing: Exile_AbstractItem_Interaction_Constructing{};
	};
};
//Arma3_CfgVehicles_Land_Bench_F
class ExileLife_Item_CrateClosed: Exile_AbstractItem
{
	scope = 2;
	displayName = "Crate";
	descriptionShort = "Full of items for delivery";
	picture = "\exilelife_assets\models\Items\Resources\Images\ExileLife_Item_ironore.paa";
	model = "\exilelife_assets\models\Items\Resources\ExileLife_item_crate.p3d";
	mass = 10;
	class Interactions{};
};
class ExileLife_Item_CrateClosed_BigSquare: Exile_AbstractItem
{
	scope = 2;
	displayName = "Big Crate";
	descriptionShort = "Full of items for delivery";
	picture = "\exilelife_assets\models\Items\Resources\Images\ExileLife_Item_ironore.paa";
	model = "\exilelife_assets\models\Items\Resources\ExileLife_item_crate_bigsquare.p3d";
	mass = 10;
	class Interactions{};
};
class ExileLife_Item_CrateClosed_Flat: Exile_AbstractItem
{
	scope = 2;
	displayName = "Crate";
	descriptionShort = "Full of items for delivery";
	picture = "\exilelife_assets\models\Items\Resources\Images\ExileLife_Item_ironore.paa";
	model = "\exilelife_assets\models\Items\Resources\ExileLife_item_crate_flat.p3d";
	mass = 10;
	class Interactions{};
};
class ExileLife_Item_CrateClosed_Square: Exile_AbstractItem
{
	scope = 2;
	displayName = "Crate";
	descriptionShort = "Full of items for delivery";
	picture = "\exilelife_assets\models\Items\Resources\Images\ExileLife_Item_ironore.paa";
	model = "\exilelife_assets\models\Items\Resources\ExileLife_item_crate_square.p3d";
	mass = 10;
	class Interactions{};
};
class ExileLife_Item_GasCanister: Exile_AbstractItem
{
	scope = 2;
	displayName = "Gas Canister";
	descriptionShort = "Fuels your gas appliances!";
	model = "a3\structures_f_epa\Items\Tools\GasCanister_F.p3d";
	picture = "\exilelife_assets\models\Items\Tools\Images\ExileLife_Item_GasCanister.paa";
	mass = 5;
	class Interactions
	{
		class Constructing: Exile_AbstractItem_Interaction_Constructing{};
	};
};
//Arma3_CfgVehicles_Land_GasCanister_F
	class ExileLife_Item_GasCooker: Exile_AbstractItem
	{
		scope = 2;
		displayName = "Gas Cooker";
		descriptionShort = "Perfect for cooking on the go!";
		model = "a3\structures_f_epa\Items\Tools\GasCooker_F.p3d";
		picture = "\exilelife_assets\models\Items\Tools\Images\ExileLife_Item_GasCooker.paa";
		mass = 10;
		class Interactions
		{
			class Constructing: Exile_AbstractItem_Interaction_Constructing{};
		};
	};
//Arma3_CfgVehicles_Land_GasCooker_F
	class ExileLife_Item_GasLamp: Exile_AbstractItem
	{
		scope = 2;
		displayName = "Gas Camping Light";
		descriptionShort = "Perfect for those dark nights!";
		model = "\exile_assets\model\Exile_Construction_Crate.p3d";
		picture = "\exilelife_assets\models\Items\Tools\Images\ExileLife_Item_GasLamp.paa";
		mass = 10;
		class Interactions
		{
			class Constructing: Exile_AbstractItem_Interaction_Constructing{};
		};
	};
//Arma3_CfgVehicles_Land_Camping_Light_off_F
	class ExileLife_Item_Parcel: Exile_AbstractItem
	{
		scope = 2;
		displayName = "Cloth Parcel";
		descriptionShort = "A cloth wrapped item";
		picture = "\exilelife_assets\models\Items\Resources\Images\ExileLife_Item_GoldOre.paa"; 
		model = "\exilelife_assets\models\Items\Resources\ExileLife_item_parcel.p3d";
		mass = 5;
		class Interactions{};
	};
	class ExileLife_Construction_Shelving_Metal_Tall: Exile_AbstractItem
	{
		scope = 2;
		displayName = "Metal Rack (Tall)";
		descriptionShort = "Tall Metal Shelving";
		model = "\exile_assets\model\Exile_Construction_Crate.p3d";
		picture = "\exilelife_assets\models\Items\Construction\Images\ExileLife_Construction_Shelving_Metal_Tall.paa";
		mass = 150;
		class Interactions
		{
			class Constructing: Exile_AbstractItem_Interaction_Constructing{};
		};
	};
	//Arma3_CfgVehicles_Land_Metal_rack_Tall_F
	class ExileLife_Construction_Shelving_Wooden: Exile_AbstractItem
	{
		scope = 2;
		displayName = "Wooden Rack";
		descriptionShort = "Wooden Shelving";
		model = "\exile_assets\model\Exile_Construction_Crate.p3d";
		picture = "\exilelife_assets\models\Items\Construction\Images\ExileLife_Construction_Shelving_Wooden.paa";
		mass = 100;
		class Interactions
		{
			class Constructing: Exile_AbstractItem_Interaction_Constructing{};
		};
	};
//Arma3_CfgVehicles_Land_ShelvesWooden_F
	class ExileLife_Construction_Shelving_Wooden_Khaki: Exile_AbstractItem
	{
		scope = 2;
		displayName = "Wooden Rack";
		descriptionShort = "Wooden Shelving (Khaki)";
		model = "\exile_assets\model\Exile_Construction_Crate.p3d";
		picture = "\exilelife_assets\models\Items\Construction\Images\ExileLife_Construction_Shelving_Wooden_Khaki.paa";
		mass = 100;
		class Interactions
		{
			class Constructing: Exile_AbstractItem_Interaction_Constructing{};
		};
	};
//Arma3_CfgVehicles_Land_ShelvesWooden_khaki_F
	class ExileLife_Construction_Shelving_Wood_Blue: Exile_AbstractItem
	{
		scope = 2;
		displayName = "Wooden Rack (Blue)";
		descriptionShort = "Wooden Shelving";
		model = "\exile_assets\model\Exile_Construction_Crate.p3d";
		picture = "\exilelife_assets\models\Items\Construction\Images\ExileLife_Construction_Shelving_Wood_Blue.paa";
		mass = 100;
		class Interactions
		{
			class Constructing: Exile_AbstractItem_Interaction_Constructing{};
		};
	};
	//Arma3_CfgVehicles_Land_ShelvesWooden_blue_F
	class ExileLife_Construction_Shelving_Wood_Tall: Exile_AbstractItem
	{
		scope = 2;
		displayName = "Wooden/Metal Rack (Tall)";
		descriptionShort = "Tall Wooden/Metal Shelving";
		model = "\exile_assets\model\Exile_Construction_Crate.p3d";
		picture = "\exilelife_assets\models\Items\Construction\Images\ExileLife_Construction_Shelving_Wood_Tall.paa";
		mass = 150;
		class Interactions
		{
			class Constructing: Exile_AbstractItem_Interaction_Constructing{};
		};
	};
	//Arma3_CfgVehicles_Land_Metal_wooden_rack_F
	class ExileLife_Construction_Table_Desk: Exile_AbstractItem
	{
		scope = 2;
		displayName = "Wooden Desk";
		descriptionShort = "Hello Mr President!";
		model = "\exile_assets\model\Exile_Construction_Crate.p3d";
		picture = "\exilelife_assets\models\Items\Construction\Images\ExileLife_Construction_Table_Desk.paa";
		mass = 150;
		class Interactions
		{
			class Constructing: Exile_AbstractItem_Interaction_Constructing{};
		};
	};
//Arma3_CfgVehicles_Land_TableDesk_F
	class ExileLife_Construction_Table_Large: Exile_AbstractItem
	{
		scope = 2;
		displayName = "Table (Large)";
		descriptionShort = "You can put stuff on it!";
		model = "\exile_assets\model\Exile_Construction_Crate.p3d";
		picture = "\exilelife_assets\models\Items\Construction\Images\ExileLife_Construction_Table_Large.paa";
		mass = 100;
		class Interactions
		{
			class Constructing: Exile_AbstractItem_Interaction_Constructing{};
		};
	};
	class ExileLife_Construction_Table_Plastic: Exile_AbstractItem
	{
		scope = 2;
		displayName = "Plastic Table";
		descriptionShort = "Cheap but it does the job!";
		model = "\exile_assets\model\Exile_Construction_Crate.p3d";
		picture = "\exilelife_assets\models\Items\Construction\Images\ExileLife_Construction_Table_Plastic.paa";
		mass = 80;
		class Interactions
		{
			class Constructing: Exile_AbstractItem_Interaction_Constructing{};
		};
	};
//Arma3_CfgVehicles_Land_TablePlastic_01_F
	class ExileLife_Construction_Table_Small: Exile_AbstractItem
	{
		scope = 2;
		displayName = "Table (Small)";
		descriptionShort = "You can put stuff on it!";
		model = "\exile_assets\model\Exile_Construction_Crate.p3d";
		picture = "\exilelife_assets\models\Items\Construction\Images\ExileLife_Construction_Table_Small.paa";
		mass = 80;
		class Interactions
		{
			class Constructing: Exile_AbstractItem_Interaction_Constructing{};
		};
	};
class ExileLife_Item_WoodBoard_Long: Exile_AbstractItem
{
	scope = 2;
	displayName = "Wood Board (2m)";
	descriptionShort = "The reason why Planking became a trend.";
	mass = 20;
	model = "exilelife_assets\models\Items\Construction\ExileLife_Construction_Board_Long.p3d";
	picture = "\exile_assets\texture\item\Exile_Item_WoodPlank.paa";
	class Interactions
	{
		class Constructing: Exile_AbstractItem_Interaction_Constructing {};
	};
};
class ExileLife_Item_WoodBoard_Short: Exile_AbstractItem
{
	scope = 2;
	displayName = "Wood Board (1.5m)";
	descriptionShort = "The reason why Planking became a trend.";
	mass = 20;
	model = "exilelife_assets\models\Items\Construction\ExileLife_Construction_Board_Short.p3d";
	picture = "\exile_assets\texture\item\Exile_Item_WoodPlank.paa";
	class Interactions
	{
		class Constructing: Exile_AbstractItem_Interaction_Constructing {};
	};
};
class WoodBoardLong: AbstractConstruction
{
	staticObject = "ExileLife_Construction_Board_Long_Static";
	previewObject = "ExileLife_Construction_Board_Long_Preview";
	kitMagazine = "ExileLife_Item_WoodBoard_Long";
	requiresTerritory = 0;
	refundObjects[] = {"ExileLife_Item_WoodBoard_Long"};
};
class WoodBoardShort: AbstractConstruction
{
	staticObject = "ExileLife_Construction_Board_Short_Static";
	previewObject = "ExileLife_Construction_Board_Short_Preview";
	kitMagazine = "ExileLife_Item_WoodBoard_Short";
	requiresTerritory = 0;
	refundObjects[] = {"ExileLife_Item_WoodBoard_Short"};
};
class ExileLife_Item_Cider: Exile_AbstractItem
{
	scope = 2;
	displayName = "Black Rat";
	descriptionShort = "Some prisoners claim this has hallucinogenic and fertility properties! <br/>Thirst: +15%/30s<br/>Temperature: +1Â°C%/30s<br/>Alc. Vol.: 14â°";
	picture = "\exilelife_assets\Models\Items\Food\Images\ExileLife_Item_cider.paa";
	model = "\exilelife_assets\Models\Items\Food\ExileLife_Item_cider.p3d";
	mass = 5;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Drinking
		{
			returnedItem = "ExileLife_Item_BeerEmpty";
			effects[] =
			{
				{3, 75, 30}, 
				{4, 0.4, 0}, 
				{5, 0.5, 10}
			};
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			returnedItem = "ExileLife_Item_BeerEmpty";
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_DrinkingVictim{};
	};
};
class ExileLife_Item_Cider_Poison: Exile_AbstractItem
{
	scope = 2;
	displayName = "Black Rat";
	descriptionShort = "Some prisoners claim this has hallucinogenic and fertility properties! <br/>Thirst: +15%/30s<br/>Temperature: +1Â°C%/30s<br/>Alc. Vol.: 14â°";
	picture = "\exilelife_assets\Models\Items\Food\Images\ExileLife_Item_cider.paa";
	model = "\exilelife_assets\Models\Items\Food\ExileLife_Item_cider.p3d";
	mass = 5;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Drinking
		{
			returnedItem = "ExileLife_Item_BeerEmpty";
			effects[] = {{0,-100,30 },{2,-100,30},{3,-100,30},{4,1.8,0},{5,1,30}};
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			returnedItem = "ExileLife_Item_BeerEmpty";
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_DrinkingVictim{};
	};
};
class ExileLife_Item_Cider_Rotten: Exile_AbstractItem
{
	scope = 2;
	displayName = "Black Rat";
	descriptionShort = "Some prisoners claim this has hallucinogenic and fertility properties! <br/>Thirst: +15%/30s<br/>Temperature: +1Â°C%/30s<br/>Alc. Vol.: 14â°";
	picture = "\exilelife_assets\Models\Items\Food\Images\ExileLife_Item_cider.paa";
	model = "\exilelife_assets\Models\Items\Food\ExileLife_Item_cider.p3d";
	mass = 5;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Drinking
		{
			returnedItem = "ExileLife_Item_BeerEmpty";
			effects[] = {{0,-30,30 },{2,-70,30},{3,-70,30},{4,1.8,0},{5,1,30}};
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			returnedItem = "ExileLife_Item_BeerEmpty";
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_DrinkingVictim{};
	};
};
class ExileLife_Item_Franta : Exile_AbstractItem
{
	scope = 2;
	displayName = "Soda (Franta)";
	descriptionShort = "A can of Soda";
	picture = "\exilelife_assets\Models\Items\Food\Images\Can_V2_F.paa";
	model = "\A3\Structures_F\Items\Food\Can_V2_F.p3d";
	mass = 5;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Drinking
		{
			returnedItem = "ExileLife_Item_SodaCan_Empty";
			effects[] = {{2,30,30}};
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
				returnedItem = "ExileLife_Item_SodaCan_Empty";
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_DrinkingVictim{};
	};
};
class ExileLife_Item_Pruno: Exile_AbstractItem
{
	scope = 2;
	displayName = "Pruno";
	descriptionShort = "Dont ask where this came from! <br/>Thirst: -15%/30s<br/>Temperature: +2Â°C%/30s<br/>Alc. Vol.: 28â°";
	picture = "\exilelife_assets\Models\Items\Food\Images\ExileLife_Item_pruno.paa";
	model = "\exilelife_assets\Models\Items\Food\ExileLife_Item_pruno.p3d";
	mass = 5;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Drinking
		{
			returnedItem = "Exile_Item_PlasticBottleEmpty";
			effects[] =
			{
				{3, 75, 30}, 
				{4, 0.6, 0}, 
				{5, 0.5, 10}
			};
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			returnedItem = "Exile_Item_PlasticBottleEmpty";
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_DrinkingVictim{};
	};
};
class ExileLife_Item_Pruno_Poison: Exile_AbstractItem
{
	scope = 2;
	displayName = "Pruno";
	descriptionShort = "Dont ask where this came from! <br/>Thirst: -15%/30s<br/>Temperature: +2Â°C%/30s<br/>Alc. Vol.: 28â°";
	picture = "\exilelife_assets\Models\Items\Food\Images\ExileLife_Item_pruno.paa"; 
	model = "\exilelife_assets\Models\Items\Food\ExileLife_Item_pruno.p3d";
	mass = 5;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Drinking
		{
			returnedItem = "Exile_Item_PlasticBottleEmpty";		
			effects[] = {{0,-100,30 },{2,-100,30},{3,-100,30},{4,1.6,0},{5,2,30}};								
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			returnedItem = "Exile_Item_PlasticBottleEmpty";	
		};	
		class Consuming_Victim: Exile_AbstractItem_Interaction_DrinkingVictim{};
	};
};
class ExileLife_Item_Pruno_Rotten: Exile_AbstractItem
{
	scope = 2;
	displayName = "Pruno";
	descriptionShort = "Dont ask where this came from! <br/>Thirst: -15%/30s<br/>Temperature: +2Â°C%/30s<br/>Alc. Vol.: 28â°";
	picture = "\exilelife_assets\Models\Items\Food\Images\ExileLife_Item_pruno.paa"; 
	model = "\exilelife_assets\Models\Items\Food\ExileLife_Item_pruno.p3d";
	mass = 5;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Drinking
		{
			returnedItem = "Exile_Item_PlasticBottleEmpty";		
			effects[] = {{0,-30,30 },{2,-70,30},{3,-70,30},{4,1.6,0},{5,2,30}};								
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			returnedItem = "Exile_Item_PlasticBottleEmpty";	
		};	
		class Consuming_Victim: Exile_AbstractItem_Interaction_DrinkingVictim{};
	};
};
class ExileLife_Item_RedGull : Exile_AbstractItem
{
	scope = 2;
	displayName = "Energy Drink (RedGull)";
	descriptionShort = "RedGull gives you wind!";
	picture = "\exilelife_assets\Models\Items\Food\Images\Can_V3_F.paa";
	model = "\A3\Structures_F\Items\Food\Can_V3_F.p3d";
	mass = 5;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Drinking
		{
			returnedItem = "ExileLife_Item_SodaCan_Empty";					
			effects[] = {{3,75,30},{4,0.4,0},{5,0.5,10}}; 
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			returnedItem = "ExileLife_Item_SodaCan_Empty";	
		};		
		class Consuming_Victim: Exile_AbstractItem_Interaction_DrinkingVictim{};
	};
};
class ExileLife_Item_Spirit : Exile_AbstractItem
{
	scope = 2;
	displayName = "Soda (Spirit)";
	descriptionShort = "A can of Soda";
	picture = "\exilelife_assets\Models\Items\Food\Images\Can_V1_F.paa";
	model = "\A3\Structures_F\Items\Food\Can_V1_F.p3d";
	mass = 5;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Drinking
		{
			returnedItem = "ExileLife_Item_SodaCan_Empty";				
			effects[] = {{2,30,30}};
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			returnedItem = "ExileLife_Item_SodaCan_Empty";	
		};		
		class Consuming_Victim: Exile_AbstractItem_Interaction_DrinkingVictim{};
	};
};
class ExileLife_Item_Apple: ExileLife_Grenade_AbstractItem
{
	scope = 2;
	displayName = "Apple";
	descriptionShort = "Fresh and crisp!";
	displayNameShort="Apple";
	mass = 5;
	picture = "\exilelife_assets\Models\Items\Food\Images\ExileLife_Item_Apple.paa";
	model = "\exilelife_assets\models\Items\Food\ExileLife_Item_Apple.p3d";
	ammo="apple";
	value=1;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 10, 40}
			};	
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class ExileLife_Item_AppleJuice: Exile_AbstractItem
{
	scope = 2;
	displayName = "Apple Juice";
	descriptionShort = "The natural energy drink!";
	mass = 5; 
	picture = "\exilelife_assets\Models\Items\Food\Images\ExileLife_Item_applejuice.paa";	 
	model = "\exilelife_assets\Models\Items\Food\ExileLife_Item_applejuice.p3d";
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] = {{3,40,30}}; 
			returnedItem = "Exile_Item_PlasticBottleEmpty";						
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			returnedItem = "Exile_Item_PlasticBottleEmpty";	
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class ExileLife_Item_Banana: ExileLife_Grenade_AbstractItem
{
	scope = 2;
	displayName = "Banana";
	descriptionShort = "a nice round potato! <br/>Hunger: +5%/40s";
	picture = "\exilelife_assets\Models\Items\Food\Images\ExileLife_Item_Banana.paa"; 
	model = "\exilelife_assets\Models\Items\Food\ExileLife_Item_Banana.p3d";
	mass = 5;
	ammo="banana";
	value=1;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Drinking
		{
			returnedItem = "";		
			effects[] =
			{
				{2, 10, 40}
			};					
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class ExileLife_Item_CrunchinCrisps: Exile_AbstractItem
{
	scope = 2;
	displayName = "Cornflakes";
	descriptionShort = "A box of Crunchin Crisps Cornflakes";
	picture = "\exilelife_assets\Models\Items\Food\Images\Box_Cornflakes_F.paa";
	model = "\A3\Structures_F_EPA\Items\Food\CerealsBox_F.p3d";
	mass = 5;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			returnedItem = "ExileLife_Item_CrunchinCrisps_Empty";
			effects[] =
			{
				{2, 15, 40}
			};		
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class ExileLife_Item_CrunchinCrisps_Empty: Exile_AbstractItem
{
	scope = 2;
	displayName = "Empty Box";
	descriptionShort = "An empty box of Crunchin Crisps Cornflakes";
	picture = "\exilelife_assets\Models\Items\Food\Images\Box_Cornflakes_F.paa";
	model = "\A3\Structures_F_EPA\Items\Food\CerealsBox_F.p3d";
	mass = 5;
	class Interactions{};
};
class ExileLife_Item_Orange: ExileLife_Grenade_AbstractItem
{
	scope = 2;
	displayName = "Orange";
	descriptionShort = "Hmmmm so juicy!";
	displayNameShort="Orange";
	mass = 5;
	picture = "\exilelife_assets\Models\Items\Food\Images\ExileLife_Item_Orange.paa";
	model = "\exilelife_assets\models\Items\Food\ExileLife_Item_Orange.p3d";
	ammo="orange";
	value=1;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] = {{2,5,30}}; 
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class ExileLife_Item_OrangeJuice: Exile_AbstractItem
{
	scope = 2;
	displayName = "Orange Juice";
	descriptionShort = "Hmmmm refreshing!";
	mass = 5;
	picture = "\exilelife_assets\Models\Items\Food\Images\ExileLife_Item_orangejuice.paa";
	model = "\exilelife_assets\Models\Items\Food\ExileLife_Item_orangejuice.p3d";
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Drinking
		{
			effects[] = {{3,40,30}}; 
			returnedItem = "Exile_Item_PlasticBottleEmpty";
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			returnedItem = "Exile_Item_PlasticBottleEmpty";
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_DrinkingVictim{};
	};
};
class ExileLife_Item_Potato: ExileLife_Grenade_AbstractItem
{
	scope = 2;
	displayName = "Potato (Raw)";
	descriptionShort = "a nice round potato! <br/>Hunger: +5%/40s";
	picture = "\exilelife_assets\Models\Items\Food\Images\ExileLife_Item_Potato.paa"; 
	model = "\exilelife_assets\Models\Items\Food\ExileLife_Item_Potato.p3d";
	mass = 5;
	plantclassname = "ExileLife_Plant_Potato";
	ammo="potato";
	value=1;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			returnedItem = "";		
			effects[] =
			{
				{2, 5, 40},
				{0,-5,30 } 
			};					
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class ExileLife_Item_Potato_Cooked: ExileLife_Grenade_AbstractItem
{
	scope = 2;
	displayName = "Potato (Cooked)";
	descriptionShort = "a nice cooked jacket potato! <br/>Hunger: +10%/40s";
	picture = "\exilelife_assets\Models\Items\Food\Images\ExileLife_Item_Potato.paa"; 
	model = "\exilelife_assets\Models\Items\Food\ExileLife_Item_Potato.p3d";
	mass = 5;
	ammo = "potato";
	value=1;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			returnedItem = "";		
			effects[] =
			{
				{2, 20, 40}
			};			
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
	class ExileLife_Item_PowderedMilk: Exile_AbstractItem
	{
		scope = 2;
		displayName = "Powdered Milk";
		descriptionShort = "A satchet of powdered milk";
		picture = "\exilelife_assets\Models\Items\Food\Images\Sachet_PowMilk_F.paa";		
		model = "\A3\Structures_F_EPA\Items\Food\PowderedMilk_F.p3d";
		mass = 4;
		class Interactions
		{
			class Consuming: Exile_AbstractItem_Interaction_Eating
			{
				returnedItem = "ExileLife_Item_PowderedMilk_Empty";						
				effects[] = {{2,5,30}};
			};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
	class ExileLife_Item_PowderedMilk_Empty: Exile_AbstractItem
	{
		scope = 2;
		displayName = "Empty Sachet";
		descriptionShort = "An empty packet of powdered milk";
		picture = "\exilelife_assets\Models\Items\Food\Images\Sachet_PowMilk_Empty.paa";		
		model = "\A3\Structures_F_EPA\Items\Food\PowderedMilk_F.p3d";
		mass = 4;
		class Interactions{};	
	};
class ExileLife_Item_Pumpkin: Exile_AbstractItem
{
	scope = 2;
	displayName = "Pumpkin";
	descriptionShort = "Its a Pumpkin!";
	mass = 15; 
	picture = "\exilelife_vehicles\a2_objects\Images\ExileLife_Item_Pumpkin.paa";	
	model = "\exilelife_vehicles\a2_objects\ExileLife_Item_Pumpkin.p3d";
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 30, 25}, 
				{3, -10, 25}, 
				{0,-30,30 } 
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class ExileLife_Item_PumpkinSeeds: Exile_AbstractItem
{
	scope = 2;
	displayName = "Pumpkin Seeds";
	descriptionShort = "A packet of pumpkin seeds!";
	model = "\exile_assets\model\Exile_Item_SeedAstics.p3d";
	picture = "\exilelife_assets\models\Items\Plants\Images\PumpkinSeeds_F.paa";
	mass = 5;
	count = 5;
	plantclassname = "ExileLife_Plant_Pumpkin";
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 5, 20} 
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class ExileLife_Item_PumpkinSoup: ExileLife_Grenade_AbstractItem
{
    scope = 2;
    displayName = "Pumpkin Soup";
    descriptionShort = "A wholesome meal! <br/>Hunger: +60%/60s";
    picture = "\exilelife_assets\Models\Items\Food\Images\ExileLife_Item_PumpkinSoup.paa"; 
    model = "\exilelife_assets\Models\Items\Food\ExileLife_Item_PumpkinSoup.p3d";
    mass = 7;
    value=1;
    class Interactions
    {
        class Consuming: Exile_AbstractItem_Interaction_Drinking
        {
            returnedItem = "";      
            effects[] =
            {
                {2, 60, 60},
                {0, 30, 120}
            };          
        };
		class Consuming_Victim: Exile_AbstractItem_Interaction_DrinkingVictim{};
	};
};
class ExileLife_Item_Pumpkin_Cooked: ExileLife_Grenade_AbstractItem
{
    scope = 2;
    displayName = "Pumpkin (Cooked)";
    descriptionShort = "a nice roasted pumpkin! <br/>Hunger: +100%/60s";
    picture = "\exilelife_vehicles\a2_objects\Images\ExileLife_Item_pumpkin.paa"; 
    model = "\exilelife_vehicles\a2_objects\ExileLife_Item_pumpkin.p3d";
    mass = 10;
    value=1;
    class Interactions
    {
        class Consuming: Exile_AbstractItem_Interaction_Drinking
        {
            returnedItem = "";
            effects[] =
            {
                {2, 100, 60}
            };
        };
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class ExileLife_Item_Salt: Exile_AbstractItem
{
	scope = 2;
	displayName = "Salt";
	descriptionShort = "A small pile of salt crystals";
	mass = 10;
	picture = "\exilelife_assets\Models\Items\Resources\Images\ExileLife_Item_saltcrystals.paa";
	model = "\exilelife_assets\models\items\resources\ExileLife_Item_Parcel.p3d";
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] = {{3,-30,60}}; 
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class ExileLife_Item_SeedHemp: Exile_AbstractItem
{
	scope = 2;
	displayName = "Cannabis Seeds";
	descriptionShort = "Dont get caught carrying these!";
	model = "\exile_assets\model\Exile_Item_SeedAstics.p3d";
	picture = "\exilelife_assets\models\Items\Plants\Images\HempSeeds_F.paa";
	mass = 5;
	count = 5;
	plantclassname = "ExileLife_Plant_Cannabis";
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 5, 25}, 
				{3, -5, 25}, 
				{ATTRIBUTE_TRIPPING, 5, 25} 
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class ExileLife_Item_Sugar: Exile_AbstractItem
{
	scope = 2;
	displayName = "Sugar";
	descriptionShort = "Every prisoner needs a little sugar in their life!";
	picture = "\exilelife_assets\Models\Items\Food\Images\ExileLife_Item_sugar.paa";
	model = "\exilelife_assets\Models\Items\Food\ExileLife_Item_sugar.p3d";
	mass = 25;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] = {{3,-30,60}}; 
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class ExileLife_Item_Wheat: Exile_AbstractItem
{
	scope = 2;
	displayName = "Wheat Seeds";
	descriptionShort = "A packet of wheat seeds!";
	model = "\exile_assets\model\Exile_Item_SeedAstics.p3d";
	picture = "\exilelife_assets\models\Items\Plants\Images\WheatSeeds_F.paa";
	mass = 5;
	count = 5;
	plantclassname = "ExileLife_Plant_Wheat";
	plantHeightinGardenBed = 0.21;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] =
			{
				{2, 5, 20} 
			};
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
class ExileLife_Item_Yeast: Exile_AbstractItem
{
	scope = 2;
	displayName = "Yeast";
	descriptionShort = "Cleaning time!";
	picture = "\exilelife_assets\Models\Items\Tools\Images\ExileLife_Item_bleach.paa";
	model = "\A3\Structures_F_EPA\Items\Food\PowderedMilk_F.p3d";
	mass = 5;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Eating
		{
			effects[] = {{3,-10,60}}; 
		};
		class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
	};
};
	class ExileLife_Item_Antibiotics: Exile_AbstractItem
	{
		scope = 2;
		displayName = "Antibiotics";
		descriptionShort = "A bottle of some kind of strong medication";
		mass = 5;
		picture = "\exilelife_assets\Models\Items\Medical\Images\Antibiotics_F.paa";		
		model = "\A3\Structures_F_EPA\Items\Medical\Antibiotic_F.p3d";
		class Interactions
		{
			class Consuming: Exile_AbstractItem_Interaction_Consuming_Healing
			{
				stopBleeding = CONFIG_False;
				isMedicalItem = 1; 
				effects[] = {{3,60,20},{4,0.4,0},{5,0.5,10}}; 
			};
		};
	};
class ExileLife_Item_AutoInjector: Exile_AbstractItem
{
	scope = 2;
	displayName = "Auto Injector ";
	descriptionShort = "An empty auto injector<br/>Useful for injecting things";
	mass = 15;
};
class ExileLife_Item_Beaker_Acetone_Clean: Exile_AbstractItem
{
	scope = 2;
	displayName = "Beaker - Acetone";
	descriptionShort = "Be Careful!";
	picture = "\exilelife_assets\models\Items\Containers\Images\ExileLife_Item_Beaker_Acetone.paa"; 
	model = "\exilelife_assets\models\Items\Containers\ExileLife_Item_Beaker_Acetone.p3d";
	mass = 2;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Drinking
		{
			effects[] = {{0,-300,10 }};								
			returnedItem = "ExileLife_Item_Beaker_Dirty";										
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			returnedItem = "ExileLife_Item_Beaker_Dirty";	
			event[] = {"flammable","chemicalspill"};			
		};	
		class Consuming_Victim: Exile_AbstractItem_Interaction_DrinkingVictim{};
	};
};
class ExileLife_Item_Beaker_Acetone_Dirty: Exile_AbstractItem
{
	scope = 2;
	displayName = "Beaker - Acetone (Contaminated)";
	descriptionShort = "Be Careful!";
	picture = "\exilelife_assets\models\Items\Containers\Images\ExileLife_Item_Beaker_Acetone.paa"; 
	model = "\exilelife_assets\models\Items\Containers\ExileLife_Item_Beaker_Acetone.p3d";
	mass = 2;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Drinking
		{
			effects[] = {{0,-300,10 }};								
			returnedItem = "ExileLife_Item_Beaker_Dirty";										
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			returnedItem = "ExileLife_Item_Beaker_Dirty";	
			event[] = {"flammable","chemicalspill"};			
		};	
		class Consuming_Victim: Exile_AbstractItem_Interaction_DrinkingVictim{};
	};
};
class ExileLife_Item_Beaker_Clean: Exile_AbstractItem
{
	scope = 2;
	displayName = "Empty Beaker (Clean)";
	descriptionShort = "Every chemists tool";
	picture = "\exilelife_assets\models\Items\Containers\Images\ExileLife_Item_Beaker_Clean.paa"; 
	model = "\exilelife_assets\models\Items\Containers\ExileLife_Item_Beaker_Clean.p3d";
	mass = 1;
	class Interactions
	{
		class Fill: ExileLife_AbstractItem_Interaction_Fill
		{
			possibleItems[] = {"ExileLife_Item_Acetone","ExileLife_Item_HydrochloricAcid","ExileLife_Item_PhosphoricAcid"};		
		};			
	};
};
class ExileLife_Item_Beaker_Dirty: Exile_AbstractItem
{
	scope = 2;
	displayName = "Empty Beaker (Dirty)";
	descriptionShort = "Every chemists tool";
	picture = "\exilelife_assets\models\Items\Containers\Images\ExileLife_Item_Beaker_Dirty.paa"; 
	model = "\exilelife_assets\models\Items\Containers\ExileLife_Item_Beaker_Dirty.p3d";
	mass = 1;
	class Interactions
	{
		class Fill: ExileLife_AbstractItem_Interaction_Fill
		{
			possibleItems[] = {"ExileLife_Item_Acetone","ExileLife_Item_HydrochloricAcid","ExileLife_Item_PhosphoricAcid"};		
		};			
	};
};
class ExileLife_Item_Beaker_Hydrochloricacid_Clean: Exile_AbstractItem
{
	scope = 2;
	displayName = "Beaker - Hydrochloric Acid";
	descriptionShort = "Be Careful!";
	picture = "\exilelife_assets\models\Items\Containers\Images\ExileLife_Item_Beaker_Hydrochloricacid.paa"; 
	model = "\exilelife_assets\models\Items\Containers\ExileLife_Item_Beaker_Hydrochloricacid.p3d";
	mass = 2;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Drinking
		{
			effects[] = {{0,-300,10 }};								
			returnedItem = "ExileLife_Item_Beaker_Dirty";										
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			returnedItem = "ExileLife_Item_Beaker_Dirty";	
			event[] = {"flammable","chemicalspill"};			
		};	
		class Consuming_Victim: Exile_AbstractItem_Interaction_DrinkingVictim{};
	};
};
class ExileLife_Item_Beaker_Hydrochloricacid_Dirty: Exile_AbstractItem
{
	scope = 2;
	displayName = "Beaker - Hydrochloric Acid (Contaminated)";
	descriptionShort = "Be Careful!";
	picture = "\exilelife_assets\models\Items\Containers\Images\ExileLife_Item_Beaker_Hydrochloricacid.paa"; 
	model = "\exilelife_assets\models\Items\Containers\ExileLife_Item_Beaker_Hydrochloricacid.p3d";
	mass = 2;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Drinking
		{
			effects[] = {{0,-300,10 }};								
			returnedItem = "ExileLife_Item_Beaker_Dirty";										
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			returnedItem = "ExileLife_Item_Beaker_Dirty";	
			event[] = {"flammable","chemicalspill"};			
		};	
		class Consuming_Victim: Exile_AbstractItem_Interaction_DrinkingVictim{};
	};
};
class ExileLife_Item_Beaker_Phosphoricacid_Clean: Exile_AbstractItem
{
	scope = 2;
	displayName = "Beaker - Phosphoric Acid";
	descriptionShort = "Be Careful!";
	picture = "\exilelife_assets\models\Items\Containers\Images\ExileLife_Item_Beaker_Phosphoricacid.paa"; 
	model = "\exilelife_assets\models\Items\Containers\ExileLife_Item_Beaker_Phosphoricacid.p3d";
	mass = 2;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Drinking
		{
			effects[] = {{0,-300,10 }};								
			returnedItem = "ExileLife_Item_Beaker_Dirty";										
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			returnedItem = "ExileLife_Item_Beaker_Dirty";	
			event[] = {"flammable","chemicalspill"};			
		};	
		class Consuming_Victim: Exile_AbstractItem_Interaction_DrinkingVictim{};
	};
};
class ExileLife_Item_Beaker_Phosphoricacid_Dirty: Exile_AbstractItem
{
	scope = 2;
	displayName = "Beaker - Phosphoric Acid (Contaminated)";
	descriptionShort = "Be Careful!";
	picture = "\exilelife_assets\models\Items\Containers\Images\ExileLife_Item_Beaker_Phosphoricacid.paa"; 
	model = "\exilelife_assets\models\Items\Containers\ExileLife_Item_Beaker_Phosphoricacid.p3d";
	mass = 2;
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Drinking
		{
			effects[] = {{0,-300,10 }};								
			returnedItem = "ExileLife_Item_Beaker_Dirty";										
		};
		class Empty: ExileLife_AbstractItem_Interaction_Empty
		{
			returnedItem = "ExileLife_Item_Beaker_Dirty";	
			event[] = {"flammable","chemicalspill"};			
		};	
		class Consuming_Victim: Exile_AbstractItem_Interaction_DrinkingVictim{};
	};
};
class ExileLife_Item_BloodBag: Exile_AbstractItem
{
	scope = 2;
	displayName = "Universal Blood Bag";
	descriptionShort = "This is revolutionary stuff! Artificial blood that works for any blood type!";
	mass = 15;
	picture = "\exilelife_assets\Models\Items\Medical\Images\BloodBag_F.paa";
	model = "\A3\Structures_F_EPA\Items\Medical\BloodBag_F.p3d";
	class Interactions
	{
		class Consuming: Exile_AbstractItem_Interaction_Consuming_Healing
		{
			stopBleeding = 1; 
			effects[] = {{ 0,100,20 },{ 2,100,5 },{ 3,100,5 }};
		};
	};
};
class ExileLife_Item_BloodDrawKit: Exile_AbstractItem
{
	scope = 2;
	displayName = "Blood Draw Kit";
	descriptionShort = "A single use blood draw kit";
	mass = 15;
	class Interactions
	{
		class Using: Exile_AbstractItem_Interaction_Using
		{
			successFunction = "ExileClient_action_execute";
			successFunctionArguments[] = {"drawBlood", 0};
			doNotRemoveItem = 1; 
			successFunctionType = "spawn";
		};
		class Using_Victim: Exile_AbstractItem_Interaction_Using_Victim
		{
			successFunction = "ExileClient_action_execute";
			successFunctionArguments[] = {"drawBlood", 1};
			successFunctionType = "spawn";
		};
	};
};
class ExileLife_Item_BloodTestKit: Exile_AbstractItem
{
	scope = 2;
	displayName = "Blood Test Kit";
	descriptionShort = "A single use blood test kit";
	mass = 10;
	class Interactions{};
};
class ExileLife_Item_BloodVial_AB_Neg_01: ExileLife_Item_BloodVial
{
	bloodType = "AB_Neg";
	class Interactions: Interactions
	{
		class Using: Using
		{
			successFunction = "ExileClient_action_execute";
			successFunctionArguments[] = {"testBlood", "ExileLife_Item_BloodVial_AB_Neg_01"};
			doNotRemoveItem = 1; 
			successFunctionType = "spawn";
		};
        class InjectBlood: InjectBlood {
			successFunctionArguments[] = {"injectBlood", {0,"ExileLife_Item_BloodVial_AB_Neg_01"}};
        };
        class TestBlood: TestBlood{
			successFunctionArguments[] = {"testBlood", "ExileLife_Item_BloodVial_AB_Neg_01"};
        };
        class Using_Victim: Using_Victim{
            successFunctionArguments[] = {"injectBlood", {1,"ExileLife_Item_BloodVial_AB_Neg_01"}};
        };
	};
};
class ExileLife_Item_BloodVial_AB_Neg_02: ExileLife_Item_BloodVial_AB_Neg_01
{
	displayName = "Blood Vial (AB-Negative)";
	descriptionShort = "A vial of blood with a label that states ""AB Rh-Negative""";
	model = "\exilelife_assets\models\Items\Medical\ExileLife_Item_BloodVial_AB_Neg.p3d";
	picture = "\exilelife_assets\models\Items\Medical\Images\ExileLife_Item_BloodVial_AB_Neg_ca.paa";
	typeKnown = 1;
	class Interactions: Interactions{
		class Using: InjectBlood
		{
			multiUse = 0;
			successFunction = "ExileClient_action_execute";
			successFunctionArguments[] = {"injectBlood", {0,"ExileLife_Item_BloodVial_AB_Neg_02"}};
			doNotRemoveItem = 1; 
			successFunctionType = "spawn";
		};
        class Using_Victim: InjectBlood{
            successFunctionArguments[] = {"injectBlood", {1,"ExileLife_Item_BloodVial_AB_Neg_02"}};
        };
	};
};
class ExileLife_Item_BloodVial_AB_Pos_01: ExileLife_Item_BloodVial
{
	bloodType = "AB_Pos";
	class Interactions: Interactions
	{
		class Using: Using
		{
			successFunction = "ExileClient_action_execute";
			successFunctionArguments[] = {"testBlood", "ExileLife_Item_BloodVial_AB_Pos_01"};
			doNotRemoveItem = 1; 
			successFunctionType = "spawn";
		};
        class InjectBlood: InjectBlood {
			successFunctionArguments[] = {"injectBlood", {0,"ExileLife_Item_BloodVial_AB_Pos_01"}};
        };
        class TestBlood: TestBlood{
			successFunctionArguments[] = {"testBlood", "ExileLife_Item_BloodVial_AB_Pos_01"};
        };
        class Using_Victim: Using_Victim{
            successFunctionArguments[] = {"injectBlood", {1,"ExileLife_Item_BloodVial_AB_Pos_01"}};
        };
	};
};
class ExileLife_Item_BloodVial_AB_Pos_02: ExileLife_Item_BloodVial_AB_Pos_01
{
	displayName = "Blood Vial (AB-Positive)";
	descriptionShort = "A vial of blood with a label that states ""AB Rh-Positive""";
	model = "\exilelife_assets\models\Items\Medical\ExileLife_Item_BloodVial_AB_Pos.p3d";
	picture = "\exilelife_assets\models\Items\Medical\Images\ExileLife_Item_BloodVial_AB_Pos_ca.paa";
	typeKnown = 1;
	class Interactions: Interactions{
		class Using: InjectBlood
		{
			multiUse = 0;
			successFunction = "ExileClient_action_execute";
			successFunctionArguments[] = {"injectBlood", {0,"ExileLife_Item_BloodVial_AB_Pos_02"}};
			doNotRemoveItem = 1; 
			successFunctionType = "spawn";
		};
        class Using_Victim: InjectBlood{
            successFunctionArguments[] = {"injectBlood", {1,"ExileLife_Item_BloodVial_AB_Pos_02"}};
        };
	};
};
class ExileLife_Item_BloodVial_A_Neg_01: ExileLife_Item_BloodVial
{
	bloodType = "A_Neg";
	class Interactions: Interactions
	{
		class Using: Using
		{
			successFunction = "ExileClient_action_execute";
			successFunctionArguments[] = {"testBlood", "ExileLife_Item_BloodVial_A_Neg_01"};
			doNotRemoveItem = 1; 
			successFunctionType = "spawn";
		};
        class InjectBlood: InjectBlood {
			successFunctionArguments[] = {"injectBlood", {0,"ExileLife_Item_BloodVial_A_Neg_01"}};
        };
        class TestBlood: TestBlood{
			successFunctionArguments[] = {"testBlood", "ExileLife_Item_BloodVial_A_Neg_01"};
        };
        class Using_Victim: Using_Victim{
            successFunctionArguments[] = {"injectBlood", {1,"ExileLife_Item_BloodVial_A_Neg_01"}};
        };
	};
};
class ExileLife_Item_BloodVial_A_Neg_02: ExileLife_Item_BloodVial_A_Neg_01
{
	displayName = "Blood Vial (A-Negative)";
	descriptionShort = "A vial of blood with a label that states ""A Rh-Negative""";
	model = "\exilelife_assets\models\Items\Medical\ExileLife_Item_BloodVial_A_Neg.p3d";
	picture = "\exilelife_assets\models\Items\Medical\Images\ExileLife_Item_BloodVial_A_Neg_ca.paa";
	typeKnown = 1;
	class Interactions: Interactions{
		class Using: InjectBlood
		{
			multiUse = 0;
			successFunction = "ExileClient_action_execute";
			successFunctionArguments[] = {"injectBlood", {0,"ExileLife_Item_BloodVial_A_Neg_02"}};
			doNotRemoveItem = 1; 
			successFunctionType = "spawn";
		};
        class Using_Victim: InjectBlood{
            successFunctionArguments[] = {"injectBlood", {1,"ExileLife_Item_BloodVial_A_Neg_02"}};
        };
	};
};
class ExileLife_Item_BloodVial_A_Pos_01: ExileLife_Item_BloodVial
{
	bloodType = "A_Pos";
	class Interactions: Interactions
	{
		class Using: Using
		{
			successFunction = "ExileClient_action_execute";
			successFunctionArguments[] = {"testBlood", "ExileLife_Item_BloodVial_A_Pos_01"};
			doNotRemoveItem = 1; 
			successFunctionType = "spawn";
		};
        class InjectBlood: InjectBlood {
			successFunctionArguments[] = {"injectBlood", {0,"ExileLife_Item_BloodVial_A_Pos_01"}};
        };
        class TestBlood: TestBlood{
			successFunctionArguments[] = {"testBlood", "ExileLife_Item_BloodVial_A_Pos_01"};
        };
        class Using_Victim: Using_Victim{
            successFunctionArguments[] = {"injectBlood", {1,"ExileLife_Item_BloodVial_A_Pos_01"}};
        };
	};
};
class ExileLife_Item_BloodVial_A_Pos_02: ExileLife_Item_BloodVial_A_Pos_01
{
	displayName = "Blood Vial (A-Positive)";
	descriptionShort = "A vial of blood with a label that states ""A Rh-Positive""";
	model = "\exilelife_assets\models\Items\Medical\ExileLife_Item_BloodVial_A_Pos.p3d";
	picture = "\exilelife_assets\models\Items\Medical\Images\ExileLife_Item_BloodVial_A_Pos_ca.paa";
	typeKnown = 1;
	class Interactions: Interactions{
		class Using: InjectBlood
		{
			multiUse = 0;
			successFunction = "ExileClient_action_execute";
			successFunctionArguments[] = {"injectBlood", {0,"ExileLife_Item_BloodVial_A_Pos_02"}};
			doNotRemoveItem = 1; 
			successFunctionType = "spawn";
		};
        class Using_Victim: InjectBlood{
            successFunctionArguments[] = {"injectBlood", {1,"ExileLife_Item_BloodVial_A_Pos_02"}};
        };
	};
};
class ExileLife_Item_BloodVial_B_Neg_01: ExileLife_Item_BloodVial
{
	bloodType = "B_Neg";
	class Interactions: Interactions
	{
		class Using: Using
		{
			successFunction = "ExileClient_action_execute";
			successFunctionArguments[] = {"testBlood", "ExileLife_Item_BloodVial_B_Neg_01"};
			doNotRemoveItem = 1; 
			successFunctionType = "spawn";
		};
        class InjectBlood: InjectBlood {
			successFunctionArguments[] = {"injectBlood", {0,"ExileLife_Item_BloodVial_B_Neg_01"}};
        };
        class TestBlood: TestBlood{
			successFunctionArguments[] = {"testBlood", "ExileLife_Item_BloodVial_B_Neg_01"};
        };
        class Using_Victim: Using_Victim{
            successFunctionArguments[] = {"injectBlood", {1,"ExileLife_Item_BloodVial_B_Neg_01"}};
        };
	};
};
class ExileLife_Item_BloodVial_B_Neg_02: ExileLife_Item_BloodVial_B_Neg_01
{
	displayName = "Blood Vial (B-Negative)";
	descriptionShort = "A vial of blood with a label that states ""A Rh-Negative""";
	model = "\exilelife_assets\models\Items\Medical\ExileLife_Item_BloodVial_B_Neg.p3d";
	picture = "\exilelife_assets\models\Items\Medical\Images\ExileLife_Item_BloodVial_B_Neg_ca.paa";
	typeKnown = 1;
	class Interactions: Interactions{
		class Using: InjectBlood
		{
			multiUse = 0;
			successFunction = "ExileClient_action_execute";
			successFunctionArguments[] = {"injectBlood", {0,"ExileLife_Item_BloodVial_B_Neg_02"}};
			doNotRemoveItem = 1; 
			successFunctionType = "spawn";
		};
        class Using_Victim: InjectBlood{
            successFunctionArguments[] = {"injectBlood", {1,"ExileLife_Item_BloodVial_B_Neg_02"}};
        };
	};
};
class ExileLife_Item_BloodVial_B_Pos_01: ExileLife_Item_BloodVial
{
	bloodType = "B_Pos";
	class Interactions: Interactions
	{
		class Using: Using
		{
			successFunction = "ExileClient_action_execute";
			successFunctionArguments[] = {"testBlood", "ExileLife_Item_BloodVial_B_Pos_01"};
			doNotRemoveItem = 1; 
			successFunctionType = "spawn";
		};
        class InjectBlood: InjectBlood {
			successFunctionArguments[] = {"injectBlood", {0,"ExileLife_Item_BloodVial_B_Pos_01"}};
        };
        class TestBlood: TestBlood{
			successFunctionArguments[] = {"testBlood", "ExileLife_Item_BloodVial_B_Pos_01"};
        };
        class Using_Victim: Using_Victim{
            successFunctionArguments[] = {"injectBlood", {1,"ExileLife_Item_BloodVial_B_Pos_01"}};
        };
	};
};
class ExileLife_Item_BloodVial_B_Pos_02: ExileLife_Item_BloodVial_B_Pos_01
{
	displayName = "Blood Vial (B-Positive)";
	descriptionShort = "A vial of blood with a label that states ""A Rh-Positive""";
	model = "\exilelife_assets\models\Items\Medical\ExileLife_Item_BloodVial_B_Pos.p3d";
	picture = "\exilelife_assets\models\Items\Medical\Images\ExileLife_Item_BloodVial_B_Pos_ca.paa";
	typeKnown = 1;
	class Interactions: Interactions{
		class Using: InjectBlood
		{
			multiUse = 0;
			successFunction = "ExileClient_action_execute";
			successFunctionArguments[] = {"injectBlood", {0,"ExileLife_Item_BloodVial_B_Pos_02"}};
			doNotRemoveItem = 1; 
			successFunctionType = "spawn";
		};
        class Using_Victim: InjectBlood{
            successFunctionArguments[] = {"injectBlood", {1,"ExileLife_Item_BloodVial_B_Pos_02"}};
        };
	};
};
class ExileLife_Item_BloodVial_Empty: Exile_AbstractItem
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Blood Vial (Empty)";
	descriptionShort = "An empty blood vial.";
	mass = 1;
	model = "\exilelife_assets\models\Items\Medical\ExileLife_Item_BloodVial.p3d";
	picture = "\exilelife_assets\models\Items\Medical\Images\ExileLife_Item_BloodVial_ca.paa";
	class Interactions{};
};
class ExileLife_Item_BloodVial_O_Neg_01: ExileLife_Item_BloodVial
{
	bloodType = "O_Neg";
	class Interactions: Interactions
	{
		class Using: Using
		{
			successFunction = "ExileClient_action_execute";
			successFunctionArguments[] = {"testBlood", "ExileLife_Item_BloodVial_O_Neg_01"};
			doNotRemoveItem = 1; 
			successFunctionType = "spawn";
		};
        class InjectBlood: InjectBlood {
			successFunctionArguments[] = {"injectBlood", {0,"ExileLife_Item_BloodVial_O_Neg_01"}};
        };
        class TestBlood: TestBlood{
			successFunctionArguments[] = {"testBlood", "ExileLife_Item_BloodVial_O_Neg_01"};
        };
        class Using_Victim: Using_Victim{
            successFunctionArguments[] = {"injectBlood", {1,"ExileLife_Item_BloodVial_O_Neg_01"}};
        };
	};
};
class ExileLife_Item_BloodVial_O_Neg_02: ExileLife_Item_BloodVial_O_Neg_01
{
	displayName = "Blood Vial (O-Negative)";
	descriptionShort = "A vial of blood with a label that states ""O Rh-Negative""";
	model = "\exilelife_assets\models\Items\Medical\ExileLife_Item_BloodVial_O_Neg.p3d";
	picture = "\exilelife_assets\models\Items\Medical\Images\ExileLife_Item_BloodVial_O_Neg_ca.paa";
	typeKnown = 1;
	class Interactions: Interactions{
		class Using: InjectBlood
		{
			multiUse = 0;
			successFunction = "ExileClient_action_execute";
			successFunctionArguments[] = {"injectBlood", {0,"ExileLife_Item_BloodVial_O_Neg_02"}};
			doNotRemoveItem = 1; 
			successFunctionType = "spawn";
		};
        class Using_Victim: InjectBlood{
            successFunctionArguments[] = {"injectBlood", {1,"ExileLife_Item_BloodVial_O_Neg_02"}};
        };
	};
};
class ExileLife_Item_BloodVial_O_Pos_01: ExileLife_Item_BloodVial
{
	bloodType = "O_Pos";
	class Interactions: Interactions
	{
		class Using: Using
		{
			successFunction = "ExileClient_action_execute";
			successFunctionArguments[] = {"testBlood", "ExileLife_Item_BloodVial_O_Pos_01"};
			doNotRemoveItem = 1; 
			successFunctionType = "spawn";
		};
        class InjectBlood: InjectBlood {
			successFunctionArguments[] = {"injectBlood", {0,"ExileLife_Item_BloodVial_O_Pos_01"}};
        };
        class TestBlood: TestBlood{
			successFunctionArguments[] = {"testBlood", "ExileLife_Item_BloodVial_O_Pos_01"};
        };
        class Using_Victim: Using_Victim{
            successFunctionArguments[] = {"injectBlood", {1,"ExileLife_Item_BloodVial_O_Pos_01"}};
        };
	};
};
class ExileLife_Item_BloodVial_O_Pos_02: ExileLife_Item_BloodVial_O_Pos_01
{
	displayName = "Blood Vial (O-Positive)";
	descriptionShort = "A vial of blood with a label that states ""O Rh-Positive""";
	model = "\exilelife_assets\models\Items\Medical\ExileLife_Item_BloodVial_O_Pos.p3d";
	picture = "\exilelife_assets\models\Items\Medical\Images\ExileLife_Item_BloodVial_O_Pos_ca.paa";
	typeKnown = 1;
	class Interactions: Interactions{
		class Using: InjectBlood
		{
			multiUse = 0;
			successFunction = "ExileClient_action_execute";
			successFunctionArguments[] = {"injectBlood", {0,"ExileLife_Item_BloodVial_O_Pos_02"}};
			doNotRemoveItem = 1; 
			successFunctionType = "spawn";
		};
        class Using_Victim: InjectBlood{
            successFunctionArguments[] = {"injectBlood", {1,"ExileLife_Item_BloodVial_O_Pos_02"}};
        };
	};
};
class ExileLife_Item_Cannabis: Exile_AbstractItem
{
	scope = 2;
	displayName = "Cannabis";
	descriptionShort = "Cannabis Leaf!";
	mass = 5;
	picture = "\exilelife_assets\Models\Items\Plants\Images\ExileLife_Item_Cannabis_F.paa";
	model = "\exilelife_assets\Models\Items\Plants\ExileLife_Plant_LeafCannabis.p3d";
		class Interactions
		{
			class Consuming: Exile_AbstractItem_Interaction_Consuming_Healing
			{
				stopBleeding = CONFIG_False;
				isMedicalItem = 1;
				effects[] = {{3,75,30},{4,0.4,0},{5,0.5,10}}; 
			};
		};
};
class ExileLife_Item_Cannabis_Packet: Exile_AbstractItem
{
	scope = 2;
	displayName = "Cannabis";
	descriptionShort = "Cannabis Packet!";
	mass = 1;
	picture = "\exilelife_assets\Models\Items\Plants\Images\ExileLife_Item_Cannabis_Packet_F.paa";
	model = "\exilelife_assets\Models\Items\Plants\ExileLife_Plant_LeafCannabis.p3d"; 
		class Interactions
		{
			class Consuming: Exile_AbstractItem_Interaction_Consuming_Healing
			{
				stopBleeding = CONFIG_False;
				isMedicalItem = 1;
				effects[] = {{3,75,30},{4,0.4,0},{5,0.5,10}}; 
			};
		};
};
class ExileLife_Item_Meth_Blue: Exile_AbstractItem
{
	scope = 2;
	displayName = "Walter's Meth (Blue)";
	descriptionShort = "99.998% Purity";
	mass = 10;
	picture = "\exile_assets\texture\item\Dummy.paa";
	model = "\exilelife_assets\models\items\resources\ExileLife_Item_Parcel.p3d";
		class Interactions
		{
			class Consuming: Exile_AbstractItem_Interaction_Consuming_Healing
			{
				stopBleeding = CONFIG_False;
				isMedicalItem = 1;
				effects[] = {{3,75,30},{4,0.4,0},{5,0.5,10}}; 
			};
		};
};
class ExileLife_Item_Meth_Brown: Exile_AbstractItem
{
	scope = 2;
	displayName = "Monkey Meth (Piss Brown)";
	descriptionShort = "??% Purity (It looks like old monkey piss... Some people will smoke anything!)";
	mass = 10;
	picture = "\exile_assets\texture\item\Dummy.paa";
	model = "\exilelife_assets\models\items\resources\ExileLife_Item_Parcel.p3d";
		class Interactions
		{
			class Consuming: Exile_AbstractItem_Interaction_Consuming_Healing
			{
				stopBleeding = CONFIG_False;
				isMedicalItem = 1;
				effects[] = {{3,75,30},{4,0.4,0},{5,0.5,10}}; 
			};
		};
};
class ExileLife_Item_Meth_Clear: Exile_AbstractItem
{
	scope = 2;
	displayName = "Saintly Meth (Clear)";
	descriptionShort = "99.999% Purity (Better than Walt's Tainted Blue Rubbish)";
	mass = 10;
	picture = "\exile_assets\texture\item\Dummy.paa";
	model = "\exilelife_assets\models\items\resources\ExileLife_Item_Parcel.p3d";
		class Interactions
		{
			class Consuming: Exile_AbstractItem_Interaction_Consuming_Healing
			{
				stopBleeding = CONFIG_False;
				isMedicalItem = 1;
				effects[] = {{3,75,30},{4,0.4,0},{5,0.5,10}}; 
			};
		};
};
	class ExileLife_Item_Painkillers: Exile_AbstractItem
	{
		scope = 2;
		displayName = "Painkillers";
		descriptionShort = "Do you think these are addictive?";
		mass = 5;
		picture = "\exilelife_assets\Models\Items\Medical\Images\PainKillers_F.paa";		
		model = "\A3\Structures_F_EPA\Items\Medical\PainKillers_F.p3d";
		class Interactions
		{
			class Consuming: Exile_AbstractItem_Interaction_Consuming_Healing
			{
				stopBleeding = CONFIG_False;
				isMedicalItem = 1;
				effects[] = {{3,75,30},{4,0.4,0},{5,0.5,10}}; 
			};
		};
	};
	class ExileLife_Item_SnakeVenom: Exile_AbstractItem
	{
		scope = 2;
		displayName = "Snake Venom";
		descriptionShort = "Why do you need snake venom?";
		picture = "\exilelife_assets\Models\Items\Tools\Images\ExileLife_Item_bleach.paa"; 
		model = "\exile_assets\model\Dummy.p3d"; 
		mass = 5;
		class Interactions{};
	};
	class ExileLife_Item_Vitamins: Exile_AbstractItem
	{
		scope = 2;
		displayName = "Vitamins";
		descriptionShort = "Gotta keep healthy!";
		mass = 5;
		picture = "\exilelife_assets\Models\Items\Medical\Images\VitaminBottle_F.paa";		
		model = "\A3\Structures_F_EPA\Items\Medical\VitaminBottle_F.p3d";
		class Interactions
		{
			class Consuming: Exile_AbstractItem_Interaction_Consuming_Healing
			{
				stopBleeding = 0;
				isMedicalItem = 1;
				effects[] = {{ 0,10,10 }};
			};
			class Consuming_Victim: Exile_AbstractItem_Interaction_EatingVictim{};
		};
	};
	class ExileLife_Item_WaterTabs: Exile_AbstractItem
	{
		scope = 2;
		displayName = "Water Purication Tablets";
		descriptionShort = "These should remove any pesky diseases in the water!";
		mass = 5;
		picture = "\exilelife_assets\Models\Items\Medical\Images\WaterPurificationTablets_F.paa";		
		model = "\A3\Structures_F_EPA\Items\Medical\WaterPurificationTablets_F.p3d";
		class Interactions{};
	};
class ExileLife_Item_Artefacts: Exile_AbstractItem
{
	scope = 2;
	displayName = "Artefact";
	descriptionShort = "This could be worth something to somebody...";
	mass = 10;
	picture = "\exilelife_assets\Models\Items\Resources\Images\ExileLife_Item_artefacts.paa";
	model = "\exilelife_assets\models\items\resources\ExileLife_Item_Parcel.p3d";
	class Interactions{};
};
class ExileLife_Item_ExiumOre: Exile_AbstractItem
{
	scope = 2;
	displayName = "Exium Ore";
	descriptionShort = "So this is what we were sent here to mine...";
	mass = 20;
	picture = "\exilelife_assets\Models\Items\Resources\Images\ExileLife_Item_ExiumOre.paa";
	model = "\exilelife_assets\models\items\resources\ExileLife_Item_Parcel.p3d";
	class Interactions{};
};
class ExileLife_Item_Gold: Exile_AbstractItem
{
	scope = 2;
	displayName = "Gold";
	descriptionShort = "Refined Gold";
	mass = 40;
	picture = "\exilelife_assets\Models\Items\Resources\Images\ExileLife_Item_GoldOre.paa"; 
	model = "\exilelife_assets\models\items\resources\ExileLife_Item_Parcel.p3d";
	class Interactions{};
};
class ExileLife_Item_GoldOre: Exile_AbstractItem
{
	scope = 2;
	displayName = "Gold Ore";
	descriptionShort = "A small piece of gold ore";
	mass = 20;
	picture = "\exilelife_assets\Models\Items\Resources\Images\ExileLife_Item_GoldOre.paa";
	model = "\exilelife_assets\models\items\resources\ExileLife_Item_Parcel.p3d";
	class Interactions{};
};
class ExileLife_Item_Iron: Exile_AbstractItem
{
	scope = 2;
	displayName = "Iron";
	descriptionShort = "Refined Iron";
	mass = 0;
	picture = "\exilelife_assets\Models\Items\Resources\Images\ExileLife_Item_ironore.paa"; 
	model = "\exilelife_assets\models\items\resources\ExileLife_Item_Parcel.p3d";
	class Interactions{};
};
class ExileLife_Item_IronOre: Exile_AbstractItem
{
	scope = 2;
	displayName = "Iron Ore";
	descriptionShort = "A small piece of iron ore";
	mass = 15;
	picture = "\exilelife_assets\Models\Items\Resources\Images\ExileLife_Item_ironore.paa";
	model = "\exilelife_assets\models\items\resources\ExileLife_Item_Parcel.p3d";
	class Interactions{};
};
class 30Rnd_9x21_Mag: CA_Magazine
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_30Rnd_9x21_Empty";
    };
};
class 30Rnd_9x21_Mag_SMG_02: 30Rnd_9x21_Mag
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_30Rnd_9x21_02_Empty";    
    };  
};
class 30Rnd_9x21_Mag_SMG_02_Tracer_Red: 30Rnd_9x21_Mag_SMG_02
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_30Rnd_9x21_02_Empty";    
    };  
};
class 30Rnd_9x21_Mag_SMG_02_Tracer_Yellow: 30Rnd_9x21_Mag_SMG_02
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_30Rnd_9x21_02_Empty";    
    };  
};
class 30Rnd_9x21_Mag_SMG_02_Tracer_Green: 30Rnd_9x21_Mag_SMG_02
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_30Rnd_9x21_02_Empty";    
    };  
};
class 16Rnd_9x21_Mag: 30Rnd_9x21_Mag
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_16Rnd_9x21_Empty";
    };
};
class 10Rnd_9x21_Mag: 16Rnd_9x21_Mag
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_16Rnd_9x21_Empty";
    };
};
class ExileLife_Magazine_30Rnd_9x21_Empty: 30Rnd_9x21_Mag
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = "9 mm 30Rnd Mag (Empty)";
    descriptionShort = "An empty 30 round 9mm magazine<br/>If I can find some bullets, I can refill it";
    count = 1;  
    mass = 2;
};
class ExileLife_Magazine_30Rnd_9x21_02_Empty: 30Rnd_9x21_Mag_SMG_02
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = "9 mm 30Rnd Mag (Empty)";
    descriptionShort = "An empty 30 round 9mm magazine<br/>If I can find some bullets, I can refill it";
    count = 1;  
    mass = 2;
};
class ExileLife_Magazine_16Rnd_9x21_Empty: 16Rnd_9x21_Mag
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = "9 mm 16Rnd Mag (Empty)";
    descriptionShort = "An empty 16 round 9mm magazine<br/>If I can find some bullets, I can refill it";
    count = 1;  
    mass = 2;
};
class ExileLife_Magazine_10Rnd_9x21_Empty: 10Rnd_9x21_Mag
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = "9 mm 10Rnd Mag (Empty)";
    descriptionShort = "An empty 10 round 9mm magazine<br/>If I can find some bullets, I can refill it";
    count = 1;  
    mass = 2;
};
class 11Rnd_45ACP_Mag: CA_Magazine
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_11Rnd_45ACP_Empty";
    };
};
class 6Rnd_45ACP_Cylinder: 11Rnd_45ACP_Mag
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_6Rnd_45ACP_Empty";
    };  
};
class 30Rnd_45ACP_Mag_SMG_01: 30Rnd_9x21_Mag
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_30Rnd_45ACP_Empty";
    };
};
class 30Rnd_45ACP_Mag_SMG_01_Tracer_Green: 30Rnd_45ACP_Mag_SMG_01
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_30Rnd_45ACP_Empty";
    };
};
class 9Rnd_45ACP_Mag: 30Rnd_45ACP_Mag_SMG_01
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_9Rnd_45ACP_Empty";
    };
};
class ExileLife_Magazine_11Rnd_45ACP_Empty: 11Rnd_45ACP_Mag
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = ".45 ACP 11Rnd Mag (Empty)";
    descriptionShort = "An empty 11 round .45 ACP magazine<br/>If I can find some bullets, I can refill it";
    count = 1;  
    mass = 2;
};
class ExileLife_Magazine_6Rnd_45ACP_Empty: 6Rnd_45ACP_Cylinder
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = ".45 ACP 6Rnd Speed Loader (Empty)";
    descriptionShort = "An empty 6 round .45 ACP speed loader<br/>If I can find some bullets, I can refill it";
    count = 1;  
    mass = 2;
};
class ExileLife_Magazine_30Rnd_45ACP_Empty: 30Rnd_45ACP_Mag_SMG_01
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = ".45 ACP 30Rnd Vermin Mag (Empty)";
    descriptionShort = "An empty 30 round .45 ACP magazine<br/>If I can find some bullets, I can refill it";
    count = 1;  
    mass = 2;
};
class ExileLife_Magazine_9Rnd_45ACP_Empty: 9Rnd_45ACP_Mag
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = ".45 ACP 9Rnd Mag (Empty)";
    descriptionShort = "An empty 9 round .45 ACP magazine<br/>If I can find some bullets, I can refill it";
    count = 1;  
    mass = 2;
};
class 30Rnd_556x45_Stanag: CA_Magazine
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_30Rnd_556x45_Stanag_Empty";
    };
};
class ExileLife_Magazine_30Rnd_556x45_Stanag_Empty: 30Rnd_556x45_Stanag
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = "5.56mm 30rnd mag (Empty)";
    descriptionShort = "An empty 30 round 5.56 mm magazine<br/>If I can find some bullets, I can refill it";
    count = 1;
    mass = 2;
};
class 130Rnd_338_Mag: CA_Magazine
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_130Rnd_338_Mag_Empty";
    };
};
class ExileLife_Magazine_130Rnd_338_Mag_Empty: 130Rnd_338_Mag
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = ".338cal 130rnd mag (Empty)";
    descriptionShort = "An empty 130 round .338cal magazine<br/>If I can find some bullets, I can refill it";
    count = 1;
    mass = 2;
};
class 150Rnd_93x64_Mag: CA_Magazine
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_150Rnd_93x64_Mag_Empty";
    };
};
class ExileLife_Magazine_150Rnd_93x64_Mag_Empty: 150Rnd_93x64_Mag
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = "9.3mm 150rnd mag (Empty)";
    descriptionShort = "An empty 150 round 9.3mm magazine<br/>If I can find some bullets, I can refill it";
    count = 1;
    mass = 2;
};
class 200Rnd_556x45_Box_F: CA_Magazine
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_200Rnd_556x45_Box_F_Empty";
    };
};
class ExileLife_Magazine_200Rnd_556x45_Box_F_Empty: 200Rnd_556x45_Box_F
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = "5.56mm 200rnd mag (Empty)";
    descriptionShort = "An empty 200 round 5.56mm magazine<br/>If I can find some bullets, I can refill it";
    count = 1;
    mass = 2;
};
class 5Rnd_127x108_Mag: CA_Magazine
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_5Rnd_127x108_Mag_Empty";
    };
};
class ExileLife_Magazine_5Rnd_127x108_Mag_Empty: 5Rnd_127x108_Mag
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = "12.7mm 5rnd mag (Empty)";
    descriptionShort = "An empty 5 round 12.7mm magazine<br/>If I can find some bullets, I can refill it";
    count = 1;
    mass = 2;
};
class 7Rnd_408_Mag: CA_Magazine
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_7Rnd_408_Mag_Empty";
    };
};
class ExileLife_Magazine_7Rnd_408_Mag_Empty: 7Rnd_408_Mag
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = ".408cal 7rnd mag (Empty)";
    descriptionShort = "An empty 7 round .408cal magazine<br/>If I can find some bullets, I can refill it";
    count = 1;
    mass = 2;
};
class 20Rnd_556x45_UW_mag: 30Rnd_556x45_Stanag
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_20Rnd_556x45_UW_mag_Empty";
    };
};
class ExileLife_Magazine_20Rnd_556x45_UW_mag_Empty: 20Rnd_556x45_UW_mag
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = "5.56mm 20rnd mag (Empty)";
    descriptionShort = "An empty 20 round 5.56mm magazine<br/>If I can find some bullets, I can refill it";
    count = 1;
    mass = 2;
};
class 30Rnd_556x45_Stanag_green: 30Rnd_556x45_Stanag
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_30Rnd_556x45_Stanag_green_Empty";
    };
};
class ExileLife_Magazine_30Rnd_556x45_Stanag_green_Empty: 30Rnd_556x45_Stanag_green
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = "5.56mm 30rnd mag (Empty)";
    descriptionShort = "An empty 30 round 5.56mm magazine<br/>If I can find some bullets, I can refill it";
    count = 1;
    mass = 2;
};
class 30Rnd_556x45_Stanag_red: 30Rnd_556x45_Stanag
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_30Rnd_556x45_Stanag_red_Empty";
    };
};
class ExileLife_Magazine_30Rnd_556x45_Stanag_red_Empty: 30Rnd_556x45_Stanag_red
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = "5.56mm 30rnd mag (Empty)";
    descriptionShort = "An empty 30 round 5.56mm magazine<br/>If I can find some bullets, I can refill it";
    count = 1;
    mass = 2;
};
class 30Rnd_556x45_Stanag_Tracer_Green: 30Rnd_556x45_Stanag
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_30Rnd_556x45_Stanag_Empty";
    };
};
class 30Rnd_556x45_Stanag_Tracer_Red: 30Rnd_556x45_Stanag
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_30Rnd_556x45_Stanag_Empty";
    };
};
class 30Rnd_556x45_Stanag_Tracer_Yellow: 30Rnd_556x45_Stanag
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_30Rnd_556x45_Stanag_Empty";
    };
};
class 30Rnd_762x39_Mag_F: CA_Magazine
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_30Rnd_762x39_Mag_F_Empty";
    };
};
class ExileLife_Magazine_30Rnd_762x39_Mag_F_Empty: 30Rnd_762x39_Mag_F
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = "7.62mm 30rnd mag (Empty)";
    descriptionShort = "An empty 30 round 7.62mm magazine<br/>If I can find some bullets, I can refill it";
    count = 1;
    mass = 2;
};
class 30Rnd_762x39_Mag_Green_F: 30Rnd_762x39_Mag_F
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_30Rnd_762x39_Mag_Green_F_Empty";
    };
};
class ExileLife_Magazine_30Rnd_762x39_Mag_Green_F_Empty: 30Rnd_762x39_Mag_Green_F
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = "7.62mm 30rnd mag (Empty)";
    descriptionShort = "An empty 30 round 7.62mm magazine<br/>If I can find some bullets, I can refill it";
    count = 1;
    mass = 2;
};
class 30Rnd_762x39_Mag_Tracer_F: 30Rnd_762x39_Mag_F
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_30Rnd_762x39_Mag_F_Empty";
    };
};
class 30Rnd_762x39_Mag_Tracer_Green_F: 30Rnd_762x39_Mag_Tracer_F
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_30Rnd_762x39_Mag_F_Empty";
    };
};
class 30Rnd_762x39_AK47_M: CA_Magazine
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_30Rnd_762x39_AK47_M_Empty";
    };
};
class ExileLife_Magazine_30Rnd_762x39_AK47_M_Empty: 30Rnd_762x39_AK47_M
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = "7.62mm 30rnd mag (Empty)";
    descriptionShort = "An empty 30 round 7.62mm magazine<br/>If I can find some bullets, I can refill it";
    count = 1;
    mass = 2;
};
class 30Rnd_545x39_Mag_F: CA_Magazine
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_30Rnd_545x39_Mag_F_Empty";
    };
};
class ExileLife_Magazine_30Rnd_545x39_Mag_F_Empty: 30Rnd_545x39_Mag_F
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = "5.45mm 30rnd mag (Empty)";
    descriptionShort = "An empty 30 round 5.45mm magazine<br/>If I can find some bullets, I can refill it";
    count = 1;
    mass = 2;
};
class 30Rnd_545x39_Mag_Green_F: 30Rnd_545x39_Mag_F
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_30Rnd_545x39_Mag_Green_F_Empty";
    };
};
class ExileLife_Magazine_30Rnd_545x39_Mag_Green_F_Empty: 30Rnd_545x39_Mag_Green_F
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = "5.45mm 30rnd mag (Empty)";
    descriptionShort = "An empty 30 round 5.45mm magazine<br/>If I can find some bullets, I can refill it";
    count = 1;
    mass = 2;
};
class 30Rnd_545x39_Mag_Tracer_F: 30Rnd_545x39_Mag_F
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_30Rnd_545x39_Mag_F_Empty";
    };
};
class 30Rnd_545x39_Mag_Tracer_Green_F: 30Rnd_545x39_Mag_Tracer_F
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_30Rnd_545x39_Mag_F_Empty";
    };
};
class 10Rnd_50BW_Mag_F: CA_Magazine
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_10Rnd_50BW_Mag_F_Empty";
    };
};
class ExileLife_Magazine_10Rnd_50BW_Mag_F_Empty: 10Rnd_50BW_Mag_F
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = ".50cal 10rnd mag (Empty)";
    descriptionShort = "An empty 10 round .50cal magazine<br/>If I can find some bullets, I can refill it";
    count = 1;
    mass = 2;
};
class 30Rnd_580x42_Mag_F: CA_Magazine
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_30Rnd_580x42_Mag_F_Empty";
    };
};
class ExileLife_Magazine_30Rnd_580x42_Mag_F_Empty: 30Rnd_580x42_Mag_F
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = "5.8mm 30rnd mag (Empty)";
    descriptionShort = "An empty 30 round 5.8mm magazine<br/>If I can find some bullets, I can refill it";
    count = 1;
    mass = 2;
};
class 30Rnd_580x42_Mag_Tracer_F: 30Rnd_580x42_Mag_F
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_30Rnd_580x42_Mag_F_Empty";
    };
};
class 100Rnd_580x42_Mag_F: 30Rnd_580x42_Mag_F
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_100Rnd_580x42_Mag_F_Empty";
    };
};
class ExileLife_Magazine_100Rnd_580x42_Mag_F_Empty: 100Rnd_580x42_Mag_F
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = "5.8mm 100rnd mag (Empty)";
    descriptionShort = "An empty 100 round 5.8mm magazine<br/>If I can find some bullets, I can refill it";
    count = 1;
    mass = 2;
};
class 100Rnd_580x42_Mag_Tracer_F: 100Rnd_580x42_Mag_F
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_100Rnd_580x42_Mag_F_Empty";
    };
};
class 150Rnd_556x45_Drum_Mag_F: CA_Magazine
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_150Rnd_556x45_Drum_Mag_F_Empty";
    };
};
class ExileLife_Magazine_150Rnd_556x45_Drum_Mag_F_Empty: 150Rnd_556x45_Drum_Mag_F
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = "5.56mm 150rnd drum mag (Empty)";
    descriptionShort = "An empty 150 round 5.56mm drum magazine<br/>If I can find some bullets, I can refill it";
    count = 1;
    mass = 2;
};
class 150Rnd_556x45_Drum_Mag_Tracer_F: 150Rnd_556x45_Drum_Mag_F
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_150Rnd_556x45_Drum_Mag_F_Empty";
    };
};
class 150Rnd_762x54_Box: 150Rnd_762x51_Box
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_150Rnd_762x54_Box_Empty";
    };
};
class ExileLife_Magazine_150Rnd_762x54_Box_Empty: 150Rnd_762x54_Box
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = "7.62mm 150rnd mag (Empty)";
    descriptionShort = "An empty 150 round 7.62mm magazine<br/>If I can find some bullets, I can refill it";
    count = 1;
    mass = 2;
};
class 150Rnd_762x54_Box_Tracer: 150Rnd_762x54_Box
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_150Rnd_762x54_Box_Empty";
    };
};
class 200Rnd_556x45_Box_Red_F: 200Rnd_556x45_Box_F
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_200Rnd_556x45_Box_Red_F_Empty";
    };
};
class ExileLife_Magazine_200Rnd_556x45_Box_Red_F_Empty: 200Rnd_556x45_Box_Red_F
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = "5.56mm 200rnd red mag (Empty)";
    descriptionShort = "An empty 200 round 5.56mm red magazine<br/>If I can find some bullets, I can refill it";
    count = 1;
    mass = 2;
};
class 200Rnd_556x45_Box_Tracer_F: 200Rnd_556x45_Box_F
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_200Rnd_556x45_Box_F_Empty";
    };
};
class 200Rnd_556x45_Box_Tracer_Red_F: 200Rnd_556x45_Box_Tracer_F
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_200Rnd_556x45_Box_F_Empty";
    };
};
class 5Rnd_127x108_APDS_Mag: 5Rnd_127x108_Mag
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_5Rnd_127x108_APDS_Mag_Empty";
    };
};
class ExileLife_Magazine_5Rnd_127x108_APDS_Mag_Empty: 5Rnd_127x108_APDS_Mag
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = "12.7mm 5rnd APDS mag (Empty)";
    descriptionShort = "An empty 5 round 12.7mm APDS magazine<br/>If I can find some bullets, I can refill it";
    count = 1;
    mass = 2;
};
class 10Rnd_762x54_Mag: 10Rnd_762x51_Mag
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_10Rnd_762x54_Mag_Empty";
    };
};
class ExileLife_Magazine_10Rnd_762x54_Mag_Empty: 10Rnd_762x54_Mag
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = "7.62mm 10rnd mag (Empty)";
    descriptionShort = "An empty 10 round 7.62mm magazine<br/>If I can find some bullets, I can refill it";
    count = 1;
    mass = 2;
};
class 20Rnd_762x51_Mag: CA_Magazine
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_20Rnd_762x51_Mag_Empty";
    };
};
class ExileLife_Magazine_20Rnd_762x51_Mag_Empty: 20Rnd_762x51_Mag
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = "7.62mm 20rnd mag (Empty)";
    descriptionShort = "An empty 20 round 7.62mm magazine<br/>If I can find some bullets, I can refill it";
    count = 1;
    mass = 2;
};
class 20Rnd_650x39_Cased_Mag_F: CA_Magazine
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_20Rnd_650x39_Cased_Mag_F_Empty";
    };
};
class ExileLife_Magazine_20Rnd_650x39_Cased_Mag_F_Empty: 20Rnd_650x39_Cased_Mag_F
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = "6.5mm 20rnd mag (Empty)";
    descriptionShort = "An empty 20 round 6.5mm magazine<br/>If I can find some bullets, I can refill it";
    count = 1;
    mass = 2;
};
class 10Rnd_127x54_Mag: CA_Magazine
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_10Rnd_127x54_Mag_Empty";
    };
};
class ExileLife_Magazine_10Rnd_127x54_Mag_Empty: 10Rnd_127x54_Mag
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = "12.7mm 10rnd mag (Empty)";
    descriptionShort = "An empty 10 round 12.7mm magazine<br/>If I can find some bullets, I can refill it";
    count = 1;
    mass = 2;
};
class 10Rnd_338_Mag: CA_Magazine
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_10Rnd_338_Mag_Empty";
    };
};
class ExileLife_Magazine_10Rnd_338_Mag_Empty: 10Rnd_338_Mag
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = ".338cal 10rnd mag (Empty)";
    descriptionShort = "An empty 10 round .338mm magazine<br/>If I can find some bullets, I can refill it";
    count = 1;
    mass = 2;
};
class 10Rnd_93x64_DMR_05_Mag: 150Rnd_93x64_Mag
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_10Rnd_93x64_DMR_05_Mag_Empty";
    };
};
class ExileLife_Magazine_10Rnd_93x64_DMR_05_Mag_Empty: 10Rnd_93x64_DMR_05_Mag
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = "9.3mm 10rnd mag (Empty)";
    descriptionShort = "An empty 10 round 9.3mm magazine<br/>If I can find some bullets, I can refill it";
    count = 1;
    mass = 2;
};
class Exile_Magazine_30Rnd_545x39_AK_Green: 30Rnd_Green_Tracer_545x39_AK
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_30Rnd_545x39_AK_Empty";
    };
};
class Exile_Magazine_30Rnd_545x39_AK_Red: 30Rnd_Red_Tracer_545x39_AK
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_30Rnd_545x39_AK_Empty";
    };
};
class Exile_Magazine_30Rnd_545x39_AK_White: 30Rnd_White_Tracer_545x39_AK
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_30Rnd_545x39_AK_Empty";
    };
};
class Exile_Magazine_30Rnd_545x39_AK_Yellow: 30Rnd_Yellow_Tracer_545x39_AK
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_30Rnd_545x39_AK_Empty";
    };
};
class Exile_Magazine_20Rnd_762x51_DMR: 20Rnd_762x51_DMR
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_20Rnd_762x51_DMR_Empty";
    };
};
class ExileLife_Magazine_20Rnd_762x51_DMR_Empty: Exile_Magazine_20Rnd_762x51_DMR
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = "7.62mm 20rnd mag (Empty)";
    descriptionShort = "An empty 20 round 7.62mm magazine<br/>If I can find some bullets, I can refill it";
    count = 1;
    mass = 2;
};
class Exile_Magazine_20Rnd_762x51_DMR_Yellow: 20Rnd_Yellow_Tracer_762x51_DMR
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_20Rnd_762x51_DMR_Empty";
    };
};
class Exile_Magazine_20Rnd_762x51_DMR_Red: 20Rnd_Red_Tracer_762x51_DMR
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_20Rnd_762x51_DMR_Empty";
    };
};
class Exile_Magazine_20Rnd_762x51_DMR_Green: 20Rnd_Green_Tracer_762x51_DMR
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_20Rnd_762x51_DMR_Empty";
    };
};
class Exile_Magazine_5Rnd_22LR: 5x_22_LR_17_HMR_M
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_5Rnd_22LR_Empty";
    };
};
class ExileLife_Magazine_5Rnd_22LR_Empty: Exile_Magazine_5Rnd_22LR
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = ".22LR 5rnd mag (Empty)";
    descriptionShort = "An empty 5 round .22LR magazine<br/>If I can find some bullets, I can refill it";
    count = 1;
    mass = 2;
};
class Exile_Magazine_10Rnd_762x54: 10Rnd_762x54_SVD
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_10Rnd_762x54_Empty";
    };
};
class ExileLife_Magazine_10Rnd_762x54_Empty: Exile_Magazine_10Rnd_762x54
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = "7.62mm 10rnd mag (Empty)";
    descriptionShort = "An empty 10 round 7.62mm magazine<br/>If I can find some bullets, I can refill it";
    count = 1;
    mass = 2;
};
class Exile_Magazine_10Rnd_9x39: 10Rnd_9x39_VSS
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_10Rnd_9x39_Empty";
    };
};
class ExileLife_Magazine_10Rnd_9x39_Empty: Exile_Magazine_10Rnd_9x39
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = "9mm 10rnd mag (Empty)";
    descriptionShort = "An empty 10 round 9mm magazine<br/>If I can find some bullets, I can refill it";
    count = 1;
    mass = 2;
};
class Exile_Magazine_20Rnd_9x39: 20Rnd_9x39_VSS
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_20Rnd_9x39_Empty";
    };
};
class ExileLife_Magazine_20Rnd_9x39_Empty: Exile_Magazine_20Rnd_9x39
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = "9mm 20rnd mag (Empty)";
    descriptionShort = "An empty 20 round 9mm magazine<br/>If I can find some bullets, I can refill it";
    count = 1;
    mass = 2;
};
class Exile_Magazine_5Rnd_127x108_APDS_Bullet_Cam_Mag: 5Rnd_127x108_APDS_Mag
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_5Rnd_127x108_APDS_Mag_Empty";
    };
};
class Exile_Magazine_5Rnd_127x108_APDS_KSVK_Bullet_Cam_Mag: 5Rnd_127x108_APDS_KSVK
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_5Rnd_127x108_APDS_KSVK_Empty";
    };
};
class Exile_Magazine_5Rnd_127x108_KSVK_Bullet_Cam_Mag: 5Rnd_127x108_KSVK
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_5Rnd_127x108_KSVK_Empty";
    };
};
class Exile_Magazine_5Rnd_127x108_Bullet_Cam_Mag: 5Rnd_127x108_Mag
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_5Rnd_127x108_Mag_Empty";
    };
};
class Exile_Magazine_10Rnd_127x99_m107_Bullet_Cam_Mag: 10Rnd_127x99_m107
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_10Rnd_127x99_m107_Empty";
    };
};
class Exile_Magazine_7Rnd_408_Bullet_Cam_Mag: 7Rnd_408_Mag
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_7Rnd_408_Mag_Empty";
    };
};
class Exile_Magazine_10Rnd_338_Bullet_Cam_Mag: 10Rnd_338_Mag
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_10Rnd_338_Mag_Empty";
    };
};
class Exile_Magazine_10Rnd_93x64_DMR_05_Bullet_Cam_Mag: 10Rnd_93x64_DMR_05_Mag
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_10Rnd_93x64_DMR_05_Mag_Empty";
    };
};
class Exile_Magazine_5Rnd_127x108_APDS_KSVK: 5Rnd_127x108_APDS_KSVK
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_5Rnd_127x108_APDS_KSVK_Empty";
    };
};
class ExileLife_Magazine_5Rnd_127x108_APDS_KSVK_Empty: Exile_Magazine_5Rnd_127x108_APDS_KSVK
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = "12.7mm 5rnd APDS mag (Empty)";
    descriptionShort = "An empty 5 round 12.7mm APDS magazine<br/>If I can find some bullets, I can refill it";
    count = 1;
    mass = 2;
};
class Exile_Magazine_8Rnd_74Slug: 8rnd_B_Beneli_74Slug
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_8Rnd_74Slug_Empty";
    };
};
class ExileLife_Magazine_8Rnd_74Slug_Empty: Exile_Magazine_8Rnd_74Slug
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = "12 Gauge 8Rnd clip (Empty)";
    descriptionShort = "An empty 8 round shotgun clip magazine<br/>If I can find some bullets, I can refill it";
    count = 1;
    mass = 2;
};
class Exile_Magazine_10Rnd_127x99_m107: 10Rnd_127x99_m107
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_10Rnd_127x99_m107_Empty";
    };
};
class ExileLife_Magazine_10Rnd_127x99_m107_Empty: Exile_Magazine_10Rnd_127x99_m107
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = "12.7mm 10rnd mag (Empty)";
    descriptionShort = "An empty 10 round 12.7mm magazine<br/>If I can find some bullets, I can refill it";
    count = 1;
    mass = 2;
};
class Exile_Magazine_5Rnd_127x108_KSVK: 5Rnd_127x108_KSVK
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_5Rnd_127x108_KSVK_Empty";
    };
};
class ExileLife_Magazine_5Rnd_127x108_KSVK_Empty: Exile_Magazine_5Rnd_127x108_KSVK
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = "12.7mm 5rnd mag (Empty)";
    descriptionShort = "An empty 5 round 12.7mm magazine<br/>If I can find some bullets, I can refill it";
    count = 1;
    mass = 2;
};
class Exile_Magazine_10Rnd_303: 10x_303_M
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_10Rnd_303_Empty";
    };
};
class ExileLife_Magazine_10Rnd_303_Empty: Exile_Magazine_10Rnd_303
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = ".303cal 10rnd mag (Empty)";
    descriptionShort = "An empty 10 round .303cal magazine<br/>If I can find some bullets, I can refill it";
    count = 1;
    mass = 2;
};
class Exile_Magazine_30Rnd_762x39_AK: 30Rnd_762x39_AK47_M
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_30Rnd_762x39_AK_Empty";
    };
};
class ExileLife_Magazine_30Rnd_762x39_AK_Empty: Exile_Magazine_30Rnd_762x39_AK
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = "7.62mm 30rnd mag (Empty)";
    descriptionShort = "An empty 30 round 7.62mm magazine<br/>If I can find some bullets, I can refill it";
    count = 1;
    mass = 2;
};
class Exile_Magazine_30Rnd_545x39_AK: 30Rnd_545x39_AK
{
    class ExileLife
    {
        emptyMag = "ExileLife_Magazine_30Rnd_545x39_AK_Empty";
    };
};
class ExileLife_Magazine_30Rnd_545x39_AK_Empty: Exile_Magazine_30Rnd_545x39_AK
{
    author = "ExileLife Mod Team";
    scope = 2;
    displayName = "5.45mm 30rnd mag (Empty)";
    descriptionShort = "An empty 30 round 5.45mm magazine<br/>If I can find some bullets, I can refill it";
    count = 1;
    mass = 2;
};
class ExileLife_Item_Flare_Green: SmokeShell
{
	author = "ExileLife Mod Team";
	displayName = "Hand Flare (Green)";
	picture = "\A3\Weapons_F\Data\UI\gear_flare_green_ca.paa";
	model = "\A3\weapons_f\ammo\flare_green";
	initSpeed = 20;
	ammo = "HandFlareGreen";
	nameSound = "";
	descriptionShort = "A hand flare that gives a green light.<br/>Attach or throw to use";
	mass = 4;
	count = 1;
};
class ExileLife_Item_Flare_Red: SmokeShell
{
	author = "ExileLife Mod Team";
	displayName = "Hand Flare (Red)";
	picture = "\A3\Weapons_F\Data\UI\gear_flare_red_ca.paa";
	model = "\A3\weapons_f\ammo\flare_red";
	initSpeed = 20;
	ammo = "HandFlareRed";
	nameSound = "";
	descriptionShort = "A hand flare that gives a red light.<br/>Attach or throw to use";
	mass = 4;
	count = 1;
};
class ExileLife_Item_Flare_White: SmokeShell
{
	author = "ExileLife Mod Team";
	displayName = "Hand Flare (White)";
	picture = "\A3\Weapons_F\Data\UI\gear_flare_white_ca.paa";
	model = "\A3\weapons_f\ammo\flare_white";
	initSpeed = 20;
	ammo = "HandFlareWhite";
	nameSound = "";
	descriptionShort = "A hand flare that gives a white light.<br/>Attach or throw to use";
	mass = 4;
	count = 1;
};
class ExileLife_Item_Flare_Yellow: SmokeShell
{
	author = "ExileLife Mod Team";
	displayName = "Hand Flare (Yellow)";
	picture = "\A3\Weapons_F\Data\UI\gear_flare_yellow_ca.paa";
	model = "\A3\weapons_f\ammo\flare_yellow";
	initSpeed = 20;
	ammo = "HandFlareYellow";
	nameSound = "";
	descriptionShort = "A hand flare that gives a yellow light.<br/>Attach or throw to use";
	mass = 4;
	count = 1;
};
};
class CfgMarkerClasses
{
	class ExileEvents
	{
		displayName = "Exile Events";
	};
	class ExileNonConstructionZone
	{
		displayName = "Exile Non-Construction Zone";
	};
	class ExileSpawnZone
	{
		displayName = "Exile Spawn Zone";
	};
	class ExileSpawnZoneIcon
	{
		displayName = "Exile Spawn Zone Icon";
	};
	class ExileTraderZone
	{
		displayName = "The Ghetto";
	};
	class ExileTraderZoneIcon
	{
		displayName = "Exile Trader Zone Icon";
	};
	class ExileContaminatedZone
	{
		displayName = "Exile Contaminated Zone";
	};
	class ExileContaminatedZoneIcon
	{
		displayName = "Exile Contaminated Zone Icon";
	};
	class ExileConcreteMixerZone
	{
		displayName = "Exile Concrete Mixer Zone";
	};
	class ExileConcreteMixerZoneIcon
	{
		displayName = "Exile Concrete Mixer Zone Icon";
	};
	class ExilePlayer
	{
		displayName = "Exile Player";
	};
	class ExileLandVehicleSpawn
	{
		displayName = "Exile Land Vehicle Spawn";
	};
	class ExileAirVehicleSpawn
	{
		displayName = "Exile Air Vehicle Spawn";
	};
	class ExileSeaVehicleSpawn
	{
		displayName = "Exile Sea Vehicle Spawn";
	};
	class ExileRussianRouletteIcon
	{
		displayName = "Exile Russian Roulette Icon";
	};
	class ExileSpecOpsTraderIcon
	{
		displayName = "Exile Spec Ops Trader Icon";
	};
	class ExileAircraftTraderIcon
	{
		displayName = "Exile Aircraft Trader Icon";
	};
	class ExileBoatTraderIcon
	{
		displayName = "Exile Boat Trader Icon";
	};
	class ExileDiversTraderIcon
	{
		displayName = "Exile Divers Trader Icon";
	};
	class ExileHackingIcon
	{
		displayName = "Exile Hacking Icon";
	};
	class ExileVehicleIcon
	{
		displayName = "Exile Vehicle Icon";
	};
	class MAFIA_TERRITORY
	{
		displayName = "Mafia";
	};
	class CARTEL_TERRITORY
	{
		displayName = "Cartel";
	};
	class Syndicate_TERRITORY
	{
		displayName = "Syndicate";
	};
	class YAKUZA_TERRITORY
	{
		displayName = "Yakuza";
	};
	class GUARD_TERRITORY
	{
		displayName = "Guard";
	};
	class ExileLifeBadlands
	{
		displayName = "The Badlands";
	};
	class ExileLifeBlackMarketIcon
	{
		displayName = "BlackMarket Icon";
	};
};
class CfgMarkerColors
{
	class Default
	{
		name = "$STR_CFG_MARKERCOL_DEFAULT";
		color[] = {0,0,0,1};
		scope = 1;
	};
	class ColorMafia: Default
	{
		name = "ColorMafia";
		color[] = {0.6,0.6,1,1};
		scope = 2;
	};
	class ColorCartel: Default
	{
		name = "ColorCartel";
		color[] = {0.59,0.8,0.38,1}; 
		scope = 2;
	};
	class ColorSyndicate: Default
	{
		name = "ColorSyndicate";
		color[] = {1,0.69,0.4,1};
		scope = 2;
	};
	class ColorYakuza: Default
	{
		name = "ColorYakuza";
		color[] = {1,0.3,0.3,1};
		scope = 2;
	};
	class ColorGuard: Default
	{
		name = "ColorGuard";
		color[] = {1,1,1,1};
		scope = 2;
	};
	class ColorFruit: Default
	{
		name = "ColorFruit";
		color[] = {0,0.5,1,1};
		scope = 2;
	};
	class ColorMining: Default
	{
		name = "ColorMining";
		color[] = {1,1,0.6,1};
		scope = 2;
	};
	class ColorArtefacts: Default
	{
		name = "ColorArtefacts";
		color[] = {0.8,1,1,1};
		scope = 2;
	};
	class ColorDrugs: Default
	{
		name = "ColorDrugs";
		color[] = {0.878,0.878,0.878,1};
		scope = 2;
	};
	class ColorRefinery: Default
	{
		name = "ColorRefinery";
		color[] = {0,0,0,1};
		scope = 2;
	};
	class ColorJobBoard: Default
	{
		name = "ColorJobBoard";
		color[] = {0.063,0.584,0.671,1};
		scope = 2;
	};
};
class CfgMarkers
{
	class ExileMissionHardcoreIcon
	{
		scope = 0;
		name = "Exile Mission Icon (Hardcore)";
		icon = "exile_assets\texture\marker\mission_hardcore_ca.paa";
		color[] = {1, 1, 1, 1};
		size = 32;
		shadow = 0;
		markerClass = "ExileEvents";
		showEditorMarkerColor = 0;
	};
	class ExileLifeGuardSpawnZone
	{
		scope = 0;
		name = "ExileLife Guard Spawn Zone";
		icon = ""; 
		color[] = {0.7,0.93,0,1};
		size = 16;
		shadow = 1;
		markerClass = "ExileLifeGuardSpawnZone";
		showEditorMarkerColor = 0;
	};
	class ExileMissionModerateIcon
	{
		scope = 0;
		name = "Exile Mission Icon (Moderate)";
		icon = "exile_assets\texture\marker\mission_moderate_ca.paa";
		color[] = {1, 1, 1, 1};
		size = 32;
		shadow = 0;
		markerClass = "ExileEvents";
		showEditorMarkerColor = 0;
	};
	class ExileMissionDifficultIcon
	{
		scope = 0;
		name = "Exile Mission Icon (Difficult)";
		icon = "exile_assets\texture\marker\mission_difficult_ca.paa";
		color[] = {1, 1, 1, 1};
		size = 32;
		shadow = 0;
		markerClass = "ExileEvents";
		showEditorMarkerColor = 0;
	};
	class ExileMissionEasyIcon
	{
		scope = 0;
		name = "Exile Mission Icon (Easy)";
		icon = "exile_assets\texture\marker\mission_easy_ca.paa";
		color[] = {1, 1, 1, 1};
		size = 32;
		shadow = 0;
		markerClass = "ExileEvents";
		showEditorMarkerColor = 0;
	};
	class ExileMissionCapturePointIcon
	{
		scope = 0;
		name = "Exile Capture Point Icon";
		icon = "exile_assets\texture\marker\capture_point_ca.paa";
		color[] = {1, 1, 1, 1};
		size = 32;
		shadow = 0;
		markerClass = "ExileEvents";
		showEditorMarkerColor = 0;
	};
	class ExileMissionStrongholdIcon
	{
		scope = 0;
		name = "Exile Stronghold Icon";
		icon = "exile_assets\texture\marker\stronghold_ca.paa";
		color[] = {1, 1, 1, 1};
		size = 32;
		shadow = 0;
		markerClass = "ExileEvents";
		showEditorMarkerColor = 0;
	};
	class ExileNonConstructionZone
	{
		scope = 0;
		name = "Exile Non-Construction Zone";
		icon = "exile_assets\texture\marker\spawn_zone_ca.paa";
		color[] = {1, 1, 1, 1};
		size = 32;
		shadow = 0;
		markerClass = "ExileNonConstructionZone";
		showEditorMarkerColor = 0;
	};
	class ExileSpawnZone
	{
		scope = 0;
		name = "Exile Spawn Zone";
		icon = ""; 
		color[] = {0.7,0.93,0,1};
		size = 16;
		shadow = 1;
		markerClass = "ExileSpawnZone";
		showEditorMarkerColor = 0;
	};
	class ExileSpawnZoneIcon
	{
		scope = 0;
		name = "Exile Spawn Zone Icon";
		icon = "exile_assets\texture\marker\spawn_zone_ca.paa";
		color[] = {1, 1, 1, 1};
		size = 32;
		shadow = 0;
		markerClass = "ExileSpawnZoneIcon";
		showEditorMarkerColor = 0;
	};
	class ExileTraderZone
	{
		scope = 0;
		name = "The Ghetto";
		icon = "\A3\ui_f\data\map\markers\military\objective_CA.paa";
		color[] = {0.93,0,0.48,1};
		size = 16;
		shadow = 1;
		markerClass = "ExileTraderZone";
		showEditorMarkerColor = 0;
	};
	class ExileTraderZoneIcon
	{
		scope = 0;
		name = "Exile Trader Zone Icon";
		icon = "exile_assets\texture\marker\trader_zone_ca.paa";
		color[] = {1, 1, 1, 1};
		size = 32;
		shadow = 0;
		markerClass = "ExileTraderZoneIcon";
		showEditorMarkerColor = 0;
	};
	class MAFIA_TERRITORY
	{
		scope = 0;
		name = "Mafia";
		icon = "\A3\ui_f\data\map\markers\military\objective_CA.paa"; 
		color[] = {1,0.3,0.3,1};
		size = 32;
		shadow = 1;
		markerClass = "MAFIA_TERRITORY";
		showEditorMarkerColor = 0;
	};
	class CARTEL_TERRITORY
	{
		scope = 0;
		name = "Cartel";
		icon = "\A3\ui_f\data\map\markers\military\objective_CA.paa"; 
		color[] = {0.8,1,0.6,1};
		size = 32;
		shadow = 1;
		markerClass = "CARTEL_TERRITORY";
		showEditorMarkerColor = 0;
	};
	class SYNDICATE_TERRITORY
	{
		scope = 0;
		name = "Syndicate";
		icon = "\A3\ui_f\data\map\markers\military\objective_CA.paa"; 
		color[] = {1,0.69,0.4,1};
		size = 32;
		shadow = 1;
		markerClass = "SYNDICATE_TERRITORY";
		showEditorMarkerColor = 0;
	};
	class YAKUZA_TERRITORY
	{
		scope = 0;
		name = "Yakuza";
		icon = "\A3\ui_f\data\map\markers\military\objective_CA.paa"; 
		color[] = {0.6,0.6,1,1};
		size = 32;
		shadow = 1;
		markerClass = "YAKUZA_TERRITORY";
		showEditorMarkerColor = 0;
	};
	class GUARD_TERRITORY
	{
		scope = 0;
		name = "Guard";
		icon = "\A3\ui_f\data\map\markers\military\objective_CA.paa"; 
		color[] = {0.7,0.93,0,1};
		size = 32;
		shadow = 1;
		markerClass = "GUARD_TERRITORY";
		showEditorMarkerColor = 0;
	};
	class ExileLifeBlackMarketIcon
	{
		scope = 0;
		name = "Exile Life BlackMarket Trader";
		icon = "\exilelife_assets\texture\marker\blackmarket_ca.paa";
		color[] = {1, 1, 1, 1};
		size = 32;
		shadow = 0;
		markerClass = "ExileLifeBlackMarket";
		showEditorMarkerColor = 0;
	};
	class ExileLifeMineIcon
	{
		scope = 0;
		name = "Exile Life Mine";
		icon = "\exilelife_assets\texture\marker\mining_ca.paa";
		color[] = {1, 1, 1, 1};
		size = 32;
		shadow = 0;
		markerClass = "ExileLifeMine";
		showEditorMarkerColor = 0;
	};
	class ExileLifeSaltMineIcon
	{
		scope = 0;
		name = "Exile Life Salt Mine";
		icon = "\exilelife_assets\texture\marker\salt_ca.paa";
		color[] = {1, 1, 1, 1};
		size = 32;
		shadow = 0;
		markerClass = "ExileLifeSaltMine";
		showEditorMarkerColor = 0;
	};
	class ExileLifeAppleIcon
	{
		scope = 0;
		name = "Exile Life Apple Farm";
		icon = "\exilelife_assets\texture\marker\apple_ca.paa";
		color[] = {1, 1, 1, 1};
		size = 32;
		shadow = 0;
		markerClass = "ExileLifeAppleFarm";
		showEditorMarkerColor = 0;
	};
	class ExileLifeOrangeIcon
	{
		scope = 0;
		name = "Exile Life Orange Farm";
		icon = "\exilelife_assets\texture\marker\orange_ca.paa";
		color[] = {1, 1, 1, 1};
		size = 32;
		shadow = 0;
		markerClass = "ExileLifeOrangeFarm";
		showEditorMarkerColor = 0;
	};
	class ExileLifeArtefactsIcon
	{
		scope = 0;
		name = "Exile Life Artefacts";
		icon = "\exilelife_assets\texture\marker\artefacts_ca.paa";
		color[] = {1, 1, 1, 1};
		size = 32;
		shadow = 0;
		markerClass = "ExileLifeArtefacts";
		showEditorMarkerColor = 0;
	};
	class ExileLifeRefineryIcon
	{
		scope = 0;
		name = "Exile Life Refinery";
		icon = "\exilelife_assets\texture\marker\refinery_ca.paa";
		color[] = {1, 1, 1, 1};
		size = 32;
		shadow = 0;
		markerClass = "ExileLifeRefinery";
		showEditorMarkerColor = 0;
	};
	class ExileLifeSmelterIcon
	{
		scope = 0;
		name = "Exile Life Smelter";
		icon = "\exilelife_assets\texture\marker\smelter_ca.paa";
		color[] = {1, 1, 1, 1};
		size = 32;
		shadow = 0;
		markerClass = "ExileLifeSmelter";
		showEditorMarkerColor = 0;
	};
	class ExilePlayer
	{
		scope = 0;
		name = "Exile Player";
		icon = "\A3\ui_f\data\map\VehicleIcons\iconman_ca.paa";
		color[] = {1, 1, 1, 1};
		size = 32;
		shadow = 0;
		markerClass = "ExilePlayer";
		showEditorMarkerColor = 0;
	};
	class ExileSafe
	{
		scope = 0;
		name = "Exile Safe";
		icon = "exile_assets\texture\marker\unlocked_safe_ca.paa";
		color[] = {1, 1, 1, 1};
		size = 32;
		shadow = 0;
		markerClass = "ExileSafe";
		showEditorMarkerColor = 0;
	};
	class ExileHeart
	{
		scope = 0;
		name = "Exile Heart";
		icon = "exile_assets\texture\marker\supply_drop_ca.paa";
		color[] = {1, 1, 1, 1};
		size = 32;
		shadow = 0;
		markerClass = "ExileHeart";
		showEditorMarkerColor = 0;
	};
	class ExileContaminatedZone
	{
		scope = 0;
		name = "Exile Heart";
		icon = "exile_assets\texture\marker\contaminated_zone_ca.paa";
		color[] = {1, 1, 1, 1};
		size = 32;
		shadow = 0;
		markerClass = "ExileContaminatedZone";
		showEditorMarkerColor = 0;
	};
	class ExileContaminatedZoneIcon
	{
		scope = 0;
		name = "Exile Heart";
		icon = "exile_assets\texture\marker\contaminated_zone_ca.paa";
		color[] = {1, 1, 1, 1};
		size = 32;
		shadow = 0;
		markerClass = "ExileContaminatedZoneIcon";
		showEditorMarkerColor = 0;
	};
	class ExileConcreteMixerZone
	{
		scope = 0;
		name = "Exile Concrete Mixer Zone";
		icon = "exile_assets\texture\marker\spawn_zone_ca.paa";
		color[] = {1, 1, 1, 1};
		size = 32;
		shadow = 0;
		markerClass = "ExileConcreteMixerZone";
		showEditorMarkerColor = 0;
	};
	class ExileConcreteMixerZoneIcon
	{
		scope = 0;
		name = "Exile Concrete Mixer Zone Icon";
		icon = "exile_assets\texture\marker\concrete_mixer_ca.paa";
		color[] = {1, 1, 1, 1};
		size = 32;
		shadow = 0;
		markerClass = "ExileConcreteMixerZoneIcon";
		showEditorMarkerColor = 0;
	};
	class ExileDiversTraderIcon
	{
		scope = 0;
		name = "Exile Divers Trader Icon";
		icon = "exile_assets\texture\marker\divers_trader_ca.paa";
		color[] = {1, 1, 1, 1};
		size = 32;
		shadow = 0;
		markerClass = "ExileDiversTraderIcon";
		showEditorMarkerColor = 0;
	};
	class ExileBoatTraderIcon
	{
		scope = 0;
		name = "Exile Boat Trader Icon";
		icon = "exile_assets\texture\marker\boat_trader_ca.paa";
		color[] = {1, 1, 1, 1};
		size = 32;
		shadow = 0;
		markerClass = "ExileBoatTraderIcon";
		showEditorMarkerColor = 0;
	};
	class ExileAircraftTraderIcon
	{
		scope = 0;
		name = "Exile Aircraft Trader Icon";
		icon = "exile_assets\texture\marker\aircraft_trader_ca.paa";
		color[] = {1, 1, 1, 1};
		size = 32;
		shadow = 0;
		markerClass = "ExileAircraftTraderIcon";
		showEditorMarkerColor = 0;
	};
	class ExileSpecOpsTraderIcon
	{
		scope = 0;
		name = "Exile Spec Ops Trader Icon";
		icon = "exile_assets\texture\marker\spec_ops_trader_ca.paa";
		color[] = {1, 1, 1, 1};
		size = 32;
		shadow = 0;
		markerClass = "ExileSpecOpsTraderIcon";
		showEditorMarkerColor = 0;
	};
	class ExileRussianRouletteIcon
	{
		scope = 0;
		name = "Exile Russian Roulette Icon";
		icon = "exile_assets\texture\marker\russian_roulette_ca.paa";
		color[] = {1, 1, 1, 1};
		size = 32;
		shadow = 0;
		markerClass = "ExileRussianRouletteIcon";
		showEditorMarkerColor = 0;
	};
	class ExileHackingIcon
	{
		scope = 0;
		name = "Exile Hacking Icon";
		icon = "exile_assets\texture\marker\hacking_ca.paa";
		color[] = {1, 1, 1, 1};
		size = 32;
		shadow = 0;
		markerClass = "ExileHackingIcon";
		showEditorMarkerColor = 0;
	};
	class ExileVehicleIcon
	{
		scope = 0;
		name = "Exile Vehicle Icon";
		icon = "exile_assets\texture\marker\vehicle_ca.paa";
		color[] = {1, 1, 1, 1};
		size = 32;
		shadow = 0;
		markerClass = "ExileVehicleIcon";
		showEditorMarkerColor = 0;
	};
};
class CfgMissions 
{
    class Cutscenes 
    {
        class ExileIntro
        {
            directory = "exile_client\missions\ExileIntro.VR";
        };
    };
};
class CfgMods
{
	class Mod_Base;
	class ExileLife: Mod_Base
	{
		name = "ExileLife";
		author = "ExileLife Mod Team";
		action = "http://exilelifemod.com";
		dir = "@ExileLife";
		logoSmall = "exilelife_assets\texture\mod\icon.paa";
		picture = "exilelife_assets\texture\mod\logo.paa";
		hidePicture = 0;
		hideName = 0;
		dlcColor[] = {0,94,0,29,0,98,1};
		version = "0.0.1";
		armaVersion = "180";
		overview = "";
		itemPrevNotifText = "";
	};
};
class CfgMovesBasic
{
	class ManActions
	{
		GestureExileAxeSwing01 = "";
		GestureExileSledgeHammerSwing01 = "";
		GestureExileSuicide01 = "";
		GestureExileSuicide02 = "";
		GestureExileSuicideCancel01 = "";
		GestureExileRussianRoulette01 = "";
		GestureExileSledgeHammerSwingSequence = "";
		GestureExileSledgeHammerSwingX2 = "";
		GestureExileSledgeHammerSwingX3 = "";
		GestureExileSledgeHammerSwingX4 = "";
		GestureExileSledgeHammerSwingX5 = "";
		GestureExileLifeHoeSwing01 = "";
		GestureExileLifeFlipOff01 = "";		
		GestureExileLifePointKill01 = "";	
		GestureExileLifePoint01 = "";
		GestureExileLifeHandsUp01 = "";
		GestureExileLifeWave01 = "";
		GestureExileLifeApplause01 = "";
		GestureExileLifePunch01 = "";
	};
	class Actions
	{
		class NoActions: ManActions
		{
			GestureExileAxeSwing01[] = {"GestureExileAxeSwing01", "Gesture"};
			GestureExileSledgeHammerSwing01[] = {"GestureExileSledgeHammerSwing01", "Gesture"};
			GestureExileSuicide01[] = {"GestureExileSuicide01", "Gesture"};
			GestureExileSuicide02[] = {"GestureExileSuicide02", "Gesture"};
			GestureExileSuicideCancel01[] = {"GestureExileSuicideCancel01", "Gesture"};
			GestureExileRussianRoulette01[] = {"GestureExileRussianRoulette01", "Gesture"};
			GestureExileSledgeHammerSwingSequence[] = {"GestureExileSledgeHammerSwingSequence", "Gesture"};
			GestureExileSledgeHammerSwingX2[] = {"GestureExileSledgeHammerSwingX2", "Gesture"};
			GestureExileSledgeHammerSwingX3[] = {"GestureExileSledgeHammerSwingX3", "Gesture"};
			GestureExileSledgeHammerSwingX4[] = {"GestureExileSledgeHammerSwingX4", "Gesture"};
			GestureExileSledgeHammerSwingX5[] = {"GestureExileSledgeHammerSwingX5", "Gesture"};
			GestureExileLifeHoeSwing01[] = {"GestureExileLifeHoeSwing01", "Gesture"};
			GestureExileLifeFlipOff01[] = {"GestureExileLifeFlipOff01", "Gesture"};			
			GestureExileLifePointKill01[] = {"GestureExileLifePointKill01", "Gesture"};
			GestureExileLifePoint01[] = {"GestureExileLifePoint01", "Gesture"};
			GestureExileLifeWave01[] = {"GestureExileLifeWave01", "Gesture"};
			GestureExileLifeApplause01[] = {"GestureExileLifeApplause01", "Gesture"};
		};
	};
};
class CfgMovesMaleSdr: CfgMovesBasic
{
	class States
	{
		class CutSceneAnimationBaseSit;
		class AmovPercMstpSnonWnonDnon;
		class HubSittingChairA_idle1;
		class AmovPercMstpSrasWlnrDnon;
		class CutSceneAnimationBase;
		class AmovPercMstpSnonWnonDnon_AmovPercMstpSsurWnonDnon;
		class AmovPercMstpSlowWrflDnon;
		class Unconscious;
		class AmovPercMstpSrasWpstDnon;
		class UnconsciousReviveDefault;
		class Acts_AidlPsitMstpSsurWnonDnon_loop: CutSceneAnimationBaseSit
		{
			collisionShape = "A3\anims_f\Data\Geom\Sdr\Psit.p3d";
			head = "headDefault"; 
			ragdoll = 1; 
			terminal = 1;
			affectedByFatigue = "false";
			canPullTrigger = 0;
			canReload = 0;
			disableWeapons = 1;
			disableWeaponsLong = 1;
			enableBinocular = 0;
			enableMissile = 0;
			enableOptics = 0;
			showHandGun = 0;
			showItemInHand = 0;
			showItemInRightHand = 0;
			showWeaponAim = 0; 
			actions = "Acts_SittingTiedHands_actions";
			file = "\A3\Anims_F_Mark\data\anim\sdr\cts\Acts_AidlPsitMstpSsurWnonDnon_1";
			VariantsPlayer[] = {"Acts_AidlPsitMstpSsurWnonDnon01",0.2,"Acts_AidlPsitMstpSsurWnonDnon02",0.2,"Acts_AidlPsitMstpSsurWnonDnon03",0.2,"Acts_AidlPsitMstpSsurWnonDnon04",0.2,"Acts_AidlPsitMstpSsurWnonDnon05",0.2};
			VariantsAI[] = {"Acts_AidlPsitMstpSsurWnonDnon01",0.2,"Acts_AidlPsitMstpSsurWnonDnon02",0.2,"Acts_AidlPsitMstpSsurWnonDnon03",0.2,"Acts_AidlPsitMstpSsurWnonDnon04",0.2,"Acts_AidlPsitMstpSsurWnonDnon05",0.2};
			VariantAfter[] = {20,20,20};
			InterpolateTo[] = {"Acts_AidlPsitMstpSsurWnonDnon01",0.001,"Acts_AidlPsitMstpSsurWnonDnon02",0.001,"Acts_AidlPsitMstpSsurWnonDnon03",0.001,"Acts_AidlPsitMstpSsurWnonDnon04",0.001,"Acts_AidlPsitMstpSsurWnonDnon05",0.001,"Acts_AidlPsitMstpSsurWnonDnon_out",0.1,"Unconscious",0.01};
		};
		class Acts_Unconscious_loop: UnconsciousReviveDefault
		{
			collisionShape = "A3\anims_f\Data\Geom\Sdr\Psit.p3d";
			head = "headDefault"; 
			ragdoll = 1; 
			terminal = 1;
			looped = 1;
			useIdles = 1;
			affectedByFatigue = "false";
			canPullTrigger = 0;
			canReload = 0;
			disableWeapons = 1;
			disableWeaponsLong = 1;
			enableBinocular = 0;
			enableMissile = 0;
			enableOptics = 0;
			showHandGun = 0;
			showItemInHand = 0;
			showItemInRightHand = 0;
			showWeaponAim = 0; 
		};
		class Exile_Acts_RepairVehicle01: CutSceneAnimationBaseSit
		{
		    collisionShape = "A3\anims_f\Data\Geom\Sdr\Psit.p3d";
		    head = "headDefault";
		    ragdoll = 1;
		    terminal = 1;
		    affectedByFatigue = "false";
		    canPullTrigger = 0;
		    canReload = 0;
		    disableWeapons = 1;
		    disableWeaponsLong = 1;
		    enableBinocular = 0;
		    enableMissile = 0;
		    enableOptics = 0;
		    showHandGun = 0;
		    showItemInHand = 0;
		    showItemInRightHand = 0;
		    showWeaponAim = 0; 
		    actions = "Acts_SittingTiedHands_actions";
		    file = "A3\anims_f\data\Anim\sdr\cts\InBaseMoves_repairVehicleKnl";
		    VariantsPlayer[] = {"Exile_Acts_RepairVehicle01_Animation01",0.2};
		    VariantsAI[] = {"Exile_Acts_RepairVehicle01_Animation01",0.2};
		    VariantAfter[] = {20,20,20};
		    InterpolateTo[] = {"Exile_Acts_RepairVehicle01_Animation01",0.001,"Unconscious",0.01};
		};
		class Exile_Acts_RepairVehicle01_Animation01: Exile_Acts_RepairVehicle01
		{
		    equivalentTo = "Exile_Acts_RepairVehicle01";
		    speed = -25;
		    VariantsPlayer[] = {};
		    VariantsAI[] = {};
		    interpolationSpeed = 0.5;
		    InterpolateTo[] = {"Exile_Acts_RepairVehicle01",0.001,"Unconscious",0.01};
		};
		class Exile_Acts_Suicide01: AmovPercMstpSrasWpstDnon
		{
		    looped = 0;
		    file = "\exile_assets\animation\Exile_Suicide01";
		    terminal = 0;
		    speed = 0.143541;
		    showHandGun = 1;
		    head = "headNo";
		    forceAim = 1;
		    ConnectTo[] = {"DeadState",1};
		    InterpolateTo[] = {};
		};
		class Exile_Acts_Suicide02: AmovPercMstpSrasWpstDnon
		{
		    looped = 0;
		    file = "\exile_assets\animation\Exile_Suicide02";
		    terminal = 0;
		    speed = 0.124481;
		    showHandGun = 1;
		    head = "headNo";
		    forceAim = 1;
		    ConnectTo[] = {"DeadState",1};
		    InterpolateTo[] = {};
		};
		class Exile_Acts_Suicide03: Exile_Acts_Suicide01
		{
		    terminal = 1;
		    ragdoll = 1;
		};
		class Exile_Acts_Suicide04: Exile_Acts_Suicide02
		{
		    terminal = 1;
		    ragdoll = 1;
		};
		class Exile_RouletteSitting01: CutSceneAnimationBaseSit
		{
		    collisionShape = "A3\anims_f\Data\Geom\Sdr\geom_empty.p3d";
		    head = "headDefault";
		    ragdoll = 1; 
		    terminal = 0; 
		    affectedByFatigue = "false";
		    canPullTrigger = 0;
		    canReload = 0;
		    disableWeapons = 1;
		    disableWeaponsLong = 1;
		    enableBinocular = 0;
		    enableMissile = 0;
		    enableOptics = 0;
		    showHandGun = 1; 
		    showItemInHand = 0;
		    showItemInRightHand = 0;
		    showWeaponAim = 0; 
		    actions = "Acts_SittingTiedHands_actions";
		    file = "\A3\Anims_F_EPA\data\Anim\sdr\cts\HubCleaned\SittingChair\HubSittingChairA_idle1";
		    VariantsPlayer[] = {"Exile_RouletteSitting01_Animation01",0.2};
		    VariantsAI[] = {"Exile_RouletteSitting01_Animation01",0.2};
		    VariantAfter[] = {20,20,20};
		    InterpolateTo[] = {"Exile_RouletteSitting01_Animation01",0.001, "DeadState",0.01};
		};
		class Exile_RouletteSitting01_Animation01: Exile_RouletteSitting01
		{
		    equivalentTo = "Exile_RouletteSitting01";
		    speed = -25;
		    VariantsPlayer[] = {};
		    VariantsAI[] = {};
		    interpolationSpeed = 0.2;
		    InterpolateTo[] = {"Exile_RouletteSitting01",0.001, "DeadState",0.01};
		};
		class Exile_Shovel_Dig01 : AmovPercMstpSrasWlnrDnon
		{
		    file = "\exile_assets\animation\Exile_Shovel_Dig01";
		    looped = 0;
		    speed = 0.1;
		    duty = 0.7;
		    mask = "BodyFull";
		    leftHandIKBeg = 1;
		    leftHandIKCurve[] = {1};
		    leftHandIKEnd = 1;
		    rightHandIKBeg = 1;
		    rightHandIKCurve[] = {1};
		    rightHandIKEnd = 1;
		    weaponIK = 4; 
		    showWeaponAim = 0;
		    disableWeapons = 1;
		    disableWeaponsLong = 1;
		    enableBinocular = 0;
		    enableMissile = 0;
		    enableOptics = 0;
		    canReload = 0;
		    leaning = "empty";
		    aimingBody = "empty";
		    aiming = "empty";
		    forceAim = 1;
		    limitGunMovement = 9.1;
		    headBobMode = 0;
		    headBobStrength = 0;
		    canPullTrigger = 0;
		    enableDirectControl = 0;
		    weaponLowered = 0;
		    variantsPlayer[] = {};
		    variantsAI[] = {};
		    ConnectFrom[] = {"AmovPercMstpSrasWlnrDnon", 2, "AmovPercMstpSlowWlnrDnon", 2};
		    ConnectTo[] = {"AmovPercMstpSrasWlnrDnon",2, "AmovPercMstpSlowWlnrDnon", 2};
		    InterpolateTo[] = {"DeadState",0.01};
		    showHandGun = 0;
		    showItemInRightHand = 0;
		    soundEnabled = 1;
		};
		class Exile_Funny_Dab01 : AmovPercMstpSnonWnonDnon
		{
		    file = "\exile_assets\animation\Exile_Funny_Dab01";
		    looped = 0;
		    speed = 0.4;
		    duty = 0.7;
		    mask = "BodyFull";
		    leftHandIKBeg = 1;
		    leftHandIKCurve[] = {1};
		    leftHandIKEnd = 1;
		    rightHandIKBeg = 1;
		    rightHandIKCurve[] = {1};
		    rightHandIKEnd = 1;
		    weaponIK = 4; 
		    showWeaponAim = 0;
		    disableWeapons = 1;
		    disableWeaponsLong = 1;
		    enableBinocular = 0;
		    enableMissile = 0;
		    enableOptics = 0;
		    canReload = 0;
		    leaning = "empty";
		    aimingBody = "empty";
		    aiming = "empty";
		    forceAim = 1;
		    limitGunMovement = 9.1;
		    headBobMode = 0;
		    headBobStrength = 0;
		    canPullTrigger = 0;
		    enableDirectControl = 0;
		    weaponLowered = 0;
		    variantsPlayer[] = {};
		    variantsAI[] = {};
		    ConnectFrom[]=
		    {
		        "AmovPercMstpSnonWnonDnon", 2
		    };
		    ConnectTo[]=
		    {
		        "AmovPercMstpSnonWnonDnon", 2
		    };
		    InterpolateTo[] = {"DeadState",0.01};
		    showHandGun = 0;
		    showItemInRightHand = 0;
		    soundEnabled = 1;
		};
	};
};
class CfgMusic
{
	class ExileLifeTrack01
	{
		duration = 96;
		musicClass = "Lead";
		name = "ExileLife Track 01 - Intro Theme";
		sound[] = {"exilelife_assets\music\track01.ogg",1,1};
	};
};
class CfgNetworkMessages
{
class announceAnimalRequest
{
	addon = "exile";
	module = "object_animal";
	parameters[] =
	{
		"STRING" 
	};
};
class gutAnimalRequest
{
	addon = "exile";
	module = "object_animal";
	parameters[] =
	{
		"STRING" 
	};
};
class playEarthQuakeEffectRequest
{
	addon = "exile";
	module = "system_earthQuake";
	parameters[] =
	{
		"SCALAR" 
	};
};
class requestJoinRussianRouletteDialogRequest
{
	addon = "exile";
	module = "system_russianRoulette";
	parameters[] = {};
};
class requestJoinRussianRouletteDialogResponse
{
	addon = "exile";
	module = "system_russianRoulette";
	parameters[] =
	{
		"SCALAR", 
		"SCALAR" 
	};
};
class concreteMixerStartRequest
{
	addon = "exile";
	module = "object_concreteMixer";
	parameters[] =
	{
		"STRING", 
		"STRING" 
	};
};
class concreteMixerAddSmokeRequest
{
	addon = "exile";
	module = "object_concreteMixer";
	parameters[] =
	{
		"STRING" 
	};
};
class concreteMixerRemoveSmokeRequest
{
	addon = "exile";
	module = "object_concreteMixer";
	parameters[] =
	{
		"STRING" 
	};
};
class winRussianRouletteRequest
{
	addon = "exile";
	module = "system_russianRoulette";
	parameters[] =
	{
		"ARRAY", 
		"SCALAR", 
		"SCALAR" 
	};
};
class joinRussianRouletteRequest
{
	addon = "exile";
	module = "system_russianRoulette";
	parameters[] = {};
};
class joinRussianRouletteResponse
{
	addon = "exile";
	module = "system_russianRoulette";
	parameters[] =
	{
		"STRING" 
	};
};
class leaveRussianRouletteRequest
{
	addon = "exile";
	module = "system_russianRoulette";
	parameters[] = {};
};
class leaveRussianRouletteResponse
{
	addon = "exile";
	module = "system_russianRoulette";
	parameters[] =
	{
		"ARRAY", 
		"SCALAR" 
	};
};
class updateRussianRouletteGameStatusRequest
{
	addon = "exile";
	module = "system_russianRoulette";
	parameters[] =
	{
		"SCALAR", 
		"SCALAR", 
		"ARRAY", 
		"STRING", 
		"SCALAR", 
		"SCALAR" 
	};
};
class fireRussianRouletteRevolverRequest
{
	addon = "exile";
	module = "system_russianRoulette";
	parameters[] =
	{
		"BOOL" 
	};
};
class fireRussianRouletteRevolverResponse
{
	addon = "exile";
	module = "system_russianRoulette";
	parameters[] = {};
};
class startSessionRequest
{
	addon = "exile";
	module = "system_session";
	parameters[] =
	{
		"STRING" 
	};
};
class startSessionResponse
{
	addon = "exile";
	module = "system_session";
	parameters[] =
	{
		"STRING" 
	};
};
class updateSessionRequest
{
	addon = "exile";
	module = "system_session";
	parameters[] =
	{
		"STRING" 
	};
};
class switchMoveRequest
{
	addon = "exile";
	module = "object_player";
	parameters[] =
	{
		"STRING", 
		"STRING"  
	};
};
class updateStatsRequest
{
	addon = "exile";
	module = "object_player";
	parameters[] =
	{
		"STRING", 
		"SCALAR", 
		"SCALAR", 
		"STRING",
		"SCALAR",
		"STRING",
		"ARRAY",
		"ARRAY",
		"ARRAY",
		"ARRAY",
		"ARRAY",
		"SCALAR",
		"SCALAR"
	};
};
class showFragRequest
{
	addon = "exile";
	module = "gui";
	parameters[] =
	{
		"ARRAY"
	};
};
class hasPlayerRequest
{
	addon = "exile";
	module = "object_player";
	parameters[] = {};
};
class hasPlayerResponse
{
	addon = "exile";
	module = "object_player";
	parameters[] =
	{
		"BOOL"
	};
};
class createPlayerRequest
{
	addon = "exile";
	module = "object_player";
	parameters[] =
	{
		"STRING",
		"BOOL",
		"STRING",
		"STRING"
	};
};
class createPlayerResponse
{
	addon = "exile";
	module = "object_player";
	parameters[] =
	{
		"OBJECT", 		
		"STRING", 		
		"STRING", 		
		"SCALAR", 		
		"SCALAR", 		
		"SCALAR", 		
		"SCALAR", 		
		"SCALAR", 		
		"SCALAR", 		
		"ARRAY", 		
		"SCALAR", 		
		"STRING", 		
		"SCALAR", 		
		"STRING", 		
		"ARRAY", 		
		"ARRAY", 		
		"ARRAY", 		
		"ARRAY", 		
		"ARRAY", 		
		"SCALAR", 		
		"SCALAR", 		
		"ARRAY", 		
		"ARRAY",		
		"ARRAY",		
		"ARRAY",		
		"ARRAY",		
		"ARRAY",		
		"ARRAY",		
		"ARRAY",		
		"SCALAR",		
		"STRING"		
	};
};
class loadPlayerRequest
{
	addon = "exile";
	module = "object_player";
	parameters[] = {};
};
class loadPlayerResponse
{
	addon = "exile";
	module = "object_player";
	parameters[] =
	{
		"STRING", 	
		"STRING",	
		"SCALAR",	
		"SCALAR", 	
		"SCALAR",	
		"SCALAR",	
		"SCALAR", 	
		"ARRAY",  	
		"SCALAR", 	
		"SCALAR", 	
		"STRING",	
		"SCALAR",	
		"STRING",	
		"ARRAY",	
		"ARRAY",	
		"ARRAY",	
		"ARRAY",	
		"ARRAY",	
		"SCALAR",	
		"SCALAR",	
		"ARRAY",	
		"ARRAY",	
		"ARRAY",	
		"ARRAY",	
		"ARRAY",	
		"ARRAY",	
		"ARRAY",	
		"ARRAY",	
		"SCALAR",	
		"STRING"	
	};
};
class updatePlayerIncapacitatedRequest
{
	addon = "exile";
	module = "object_player";
	parameters[] =
	{
		"BOOL"  
	};
};
class savePlayerRequest
{
	addon = "exile";
	module = "object_player";
	parameters[] =
	{
		"SCALAR", 	
		"SCALAR",  	
		"SCALAR", 	
		"SCALAR", 	
		"SCALAR", 	
		"SCALAR"	
	};
};
class hideBodyRequest
{
	addon = "exile";
	module = "object_player";
	parameters[] =
	{
		"OBJECT" 
	};
};
class chopTreeRequest
{
	addon = "exile";
	module = "object_tree";
	parameters[] =
	{
		"STRING" 
	};
};
class smashShippingContainerRequest
{
	addon = "exile";
	module = "object_shippingContainer";
	parameters[] =
	{
		"OBJECT" 
	};
};
class chopBushRequest
{
	addon = "exile";
	module = "object_bush";
	parameters[] =
	{
		"STRING" 
	};
};
class systemChatRequest
{
	addon = "exile";
	module = "gui";
	parameters[] =
	{
		"STRING" 
	};
};
class advancedHintRequest
{
	addon = "exile";
	module = "gui";
	parameters[] =
	{
		"STRING" 
	};
};
class standardHintRequest
{
	addon = "exile";
	module = "gui";
	parameters[] =
	{
		"STRING" 
	};
};
class toastRequest
{
	addon = "exile";
	module = "gui";
	parameters[] =
	{
		"STRING",	
		"ARRAY"		
	};
};
class dynamicTextRequest
{
	addon = "exile";
	module = "gui";
	parameters[] =
	{
		"STRING",
		"SCALAR",
		"STRING",
		"SCALAR",
		"STRING",
		"SCALAR",
		"SCALAR"
	};
};
class resetPlayerRequest
{
	addon = "exile";
	module = "object_player";
	parameters[] = {};
};
class buildConstructionRequest
{
	addon = "exile";
	module = "object_construction";
	parameters[] =
	{
		"STRING",	
		"ARRAY"		
	};
};
class repairConstructionRequest
{
	addon = "exile";
	module = "object_construction";
	parameters[] =
	{
		"OBJECT"	
	};
};
class repairConstructionResponse
{
	addon = "exile";
	module = "object_construction";
	parameters[] =
	{
		"STRING"
	};
};
class payTerritoryProtectionMoneyRequest
{
	addon = "exile";
	module = "system_territory";
	parameters[] =
	{
		"STRING"	
	};
};
class buildTerritoryRequest
{
	addon = "exile";
	module = "object_construction";
	parameters[] =
	{
		"STRING",	
		"ARRAY",	
		"STRING",	
		"STRING"	
	};
};
class constructionResponse
{
	addon = "exile";
	module = "object_construction";
	parameters[] =
	{
		"STRING"	
	};
};
class swapConstructionRequest
{
	addon = "exile";
	module = "object_construction";
	parameters[] =
	{
		"STRING",	
		"STRING",	
		"ARRAY"		
	};
};
class deconstructConstructionRequest
{
	addon = "exile";
	module = "object_construction";
	parameters[] =
	{
		"STRING"	
	};
};
class moveConstructionRequest
{
	addon = "exile";
	module = "object_construction";
	parameters[] =
	{
		"STRING"
	};
};
class constructionMoveResponse
{
	addon = "exile";
	module = "object_construction";
	parameters[] =
	{
		"BOOL",
		"STRING"
	};
};
class upgradeConstructionRequest
{
	addon = "exile";
	module = "object_construction";
	parameters[] =
	{
		"OBJECT" 
	};
};
class upgradeConstructionResponse
{
	addon = "exile";
	module = "object_construction";
	parameters[] =
	{
		"OBJECT"
	};
};
class flipVehRequest
{
	addon = "exile";
	module = "object_vehicle";
	parameters[] =
	{
		"STRING"	
	};
};
class pushVehicleRequest
{
	addon = "exile";
	module = "object_vehicle";
	parameters[] =
	{
		"STRING", 
		"SCALAR", 
		"SCALAR", 
		"STRING"  
	};
};
class rotateVehicleRequest
{
	addon = "exile";
	module = "object_vehicle";
	parameters[] =
	{
		"STRING", 
		"SCALAR" 
	};
};
class lockVehicleRequest
{
	addon = "exile";
	module = "object_vehicle";
	parameters[] =
	{
		"STRING", 	
		"BOOL"  	
	};
};
class lockResponse
{
	addon = "exile";
	module = "object_vehicle";
	parameters[] =
	{
		"STRING", 
		"BOOL",	  
		"STRING", 
		"STRING",  
		"SCALAR" 
	};
};
class spawnLootRequest
{
	addon = "exile";
	module = "system_lootManager";
	parameters[] =
	{
		"ARRAY" 
	};
};
class toggleFloodLightRequest
{
	addon = "exile";
	module = "object_floodLight";
	parameters[] =
	{
		"STRING",	
		"SCALAR" 
	};
};
class connectionTest
{
	addon = "exile";
	module = "object_player";
	parameters[] =
	{
		"BOOL"
	};
};
class purchaseVehicleRequest
{
	addon = "exile";
	module = "system_trading";
	parameters[] =
	{
		"STRING", 	
		"STRING" 	
	};
};
class purchaseVehicleResponse
{
	addon = "exile";
	module = "system_trading";
	parameters[] =
	{
		"SCALAR",	
		"STRING",	
		"SCALAR"	
	};
};
class vehicleSaveRequest
{
	addon = "exile";
	module = "system_vehicleSaveQueue";
	parameters[] =
	{
		"STRING" 
	};
};
class purchaseVehicleSkinRequest
{
	addon = "exile";
	module = "system_trading";
	parameters[] =
	{
		"STRING", 
		"ARRAY" 
	};
};
class purchaseVehicleSkinResponse
{
	addon = "exile";
	module = "system_trading";
	parameters[] =
	{
		"SCALAR",	
		"SCALAR"	
	};
};
class endBambiStateRequest
{
	addon = "exile";
	module = "object_player";
	parameters[] = {};
};
class purchaseItemRequest
{
	addon = "exile";
	module = "system_trading";
	parameters[] =
	{
		"STRING", 
		"SCALAR", 
		"SCALAR", 
		"STRING" 
	};
};
class purchaseItemResponse
{
	addon = "exile";
	module = "system_trading";
	parameters[] =
	{
		"SCALAR",	
		"SCALAR",	
		"STRING", 
		"SCALAR", 
		"SCALAR", 
		"STRING" 
	};
};
class sellItemRequest
{
	addon = "exile";
	module = "system_trading";
	parameters[] =
	{
		"STRING", 
		"SCALAR", 
		"SCALAR", 
		"STRING" 
	};
};
class sellItemResponse
{
	addon = "exile";
	module = "system_trading";
	parameters[] =
	{
		"SCALAR", 
		"SCALAR", 
		"STRING", 
		"SCALAR", 
		"SCALAR", 
		"STRING", 
		"STRING"  
	};
};
class hotwireLockRequest
{
	addon = "exile";
	module = "object_lock";
	parameters[] =
	{
		"STRING" 
	};
};
class lockToggle
{
	addon = "exile";
	module = "object_lock";
	parameters[] =
	{
		"STRING", 
		"STRING", 
		"BOOL"		
	};
};
class setPin
{
	addon = "exile";
	module = "object_lock";
	parameters[] =
	{
		"STRING", 
		"STRING", 
		"STRING"	
	};
};
class setPinResponse
{
	addon = "exile";
	module = "object_lock";
	parameters[] =
	{
		"ARRAY",
		"STRING",
		"STRING"
	};
};
class packRequest
{
	addon = "exile";
	module = "object_container";
	parameters[] =
	{
		"STRING", 
		"STRING"  
	};
};
class setFuelRequest
{
	addon = "exile";
	module = "object_vehicle";
	parameters[] =
	{
		"STRING", 
		"SCALAR"	
	};
};
class registerClanRequest
{
	addon = "exile";
	module = "system_clan";
	parameters[] =
	{
		"STRING" 
	};
};
class registerClanResponse
{
	addon = "exile";
	module = "system_clan";
	parameters[] =
	{
		"SCALAR", 	
		"SCALAR",  	
		"ARRAY"		
	};
};
class leaveClanRequest
{
	addon = "exile";
	module = "system_clan";
	parameters[] =
	{
	};
};
class leaveClanResponse
{
	addon = "exile";
	module = "system_clan";
	parameters[] =
	{
		"BOOL",
		"STRING"
	};
};
class updateClanInfoFull
{
	addon = "exile";
	module = "system_clan";
	parameters[] =
	{
		"STRING",
		"STRING",
		"ARRAY",
		"ARRAY",
		"ARRAY",
		"GROUP"
	};
};
class updateClanGotKicked
{
	addon = "exile";
	module = "system_clan";
	parameters[] =
	{
		"STRING",
		"ARRAY"
	};
};
class updateMarkers
{
	addon = "exile";
	module = "system_clan";
	parameters[] =
	{
		"ARRAY"
	};
};
class updatePolys
{
	addon = "exile";
	module = "system_clan";
	parameters[] =
	{
		"ARRAY"
	};
};
class inviteToClanRequest
{
	addon = "exile";
	module = "system_clan";
	parameters[] =
	{
		"STRING"
	};
};
class inviteToClanRequestClient
{
	addon = "exile";
	module = "system_clan";
	parameters[] =
	{
		"STRING",
		"STRING"
	};
};
class inviteToClanRequestClientResponse
{
	addon = "exile";
	module = "system_clan";
	parameters[] =
	{
		"BOOL"
	};
};
class clanInviteServerResponse
{
	addon = "exile";
	module = "system_clan";
	parameters[] =
	{
		"BOOL"
	};
};
class kickClanPlayerRequest
{
	addon = "exile";
	module = "system_clan";
	parameters[] =
	{
		"STRING"
	};
};
class addMarkerRequest
{
	addon = "exile";
	module = "system_clan";
	parameters[] =
	{
		"STRING",
		"ARRAY",
		"ARRAY",
		"SCALAR",
		"STRING",
		"SCALAR"
	};
};
class addPolyRequest
{
	addon = "exile";
	module = "system_clan";
	parameters[] =
	{
		"ARRAY",
		"ARRAY"
	};
};
class removeMarkerRequest
{
	addon = "exile";
	module = "system_clan";
	parameters[] =
	{
		"SCALAR",
		"SCALAR"
	};
};
class inviteToPartyRequest
{
	addon = "exile";
	module = "system_party";
	parameters[] =
	{
		"STRING" 
	};
};
class joinPartyRequest
{
	addon = "exile";
	module = "system_party";
	parameters[] =
	{
		"STRING" 
	};
};
class kickFromPartyRequest
{
	addon = "exile";
	module = "system_party";
	parameters[] =
	{
		"STRING" 
	};
};
class announceTerritoryRequest
{
	addon = "exile";
	module = "system_territory";
	parameters[] =
	{
		"STRING" 
	};
};
class addToTerritoryRequest
{
	addon = "exile";
	module = "system_territory";
	parameters[] =
	{
		"STRING", 
		"STRING" 
	};
};
class removeFromTerritoryRequest
{
	addon = "exile";
	module = "system_territory";
	parameters[] =
	{
		"STRING", 
		"STRING" 
	};
};
class moderationTerritoryRequest
{
	addon = "exile";
	module = "system_territory";
	parameters[] =
	{
		"STRING",	
		"STRING",	
		"BOOL"		
	};
};
class purchaseTerritory
{
	addon = "exile";
	module = "system_territory";
	parameters[] = {"STRING"};
};
class purchaseTerritoryResponse
{
	addon = "exile";
	module = "system_territory";
	parameters[] =
	{
		"SCALAR" 
	};
};
class requestTerritoryUpgradeDialog
{
	addon = "exile";
	module = "system_territory";
	parameters[] =
	{
		"OBJECT"  
	};
};
class payFlagRansomRequest
{
	addon = "exile";
	module = "system_territory";
	parameters[] =
	{
		"STRING" 
	};
};
class restoreFlagRequest
{
	addon = "exile";
	module = "system_territory";
	parameters[] =
	{
		"STRING" 
	};
};
class addLockRequest
{
	addon = "exile";
	module = "object_construction";
	parameters[] =
	{
		"OBJECT", 
		"STRING"  
	};
};
class addLockResponse
{
	addon = "exile";
	module = "object_construction";
	parameters[] =
	{
		"STRING" 
	};
};
class territoryUpgradeDialogResponse
{
	addon = "exile";
	module = "gui_upgradeTerritoryDialog";
	parameters[] =
	{
		"SCALAR"  
	};
};
class territoryUpgradeRequest
{
	addon = "exile";
	module = "system_territory";
	parameters[] =
	{
		"OBJECT"  
	};
};
class deleteGroupPlz
{
	addon = "exile";
	module = "system";
	parameters[] =
	{
		"GROUP" 
	};
};
class wasteDumpRequest
{
	addon = "exile";
	module = "system_trading";
	parameters[] =
	{
		"STRING", 
		"SCALAR" 
	};
};
class wasteDumpResponse
{
	addon = "exile";
	module = "system_trading";
	parameters[] =
	{
		"SCALAR", 
		"SCALAR", 
		"STRING"  
	};
};
class beginTakeAllRequest
{
	addon = "exile";
	module = "object_player";
	parameters[] =
	{
		"STRING" 
	};
};
class beginTakeAllResponse
{
	addon = "exile";
	module = "object_player";
	parameters[] =
	{
		"STRING" 
	};
};
class endTakeAllRequest
{
	addon = "exile";
	module = "object_player";
	parameters[] =
	{
		"STRING" 
	};
};
class scanCodeLockRequest
{
	addon = "exile";
	module = "object_lock";
	parameters[] =
	{
		"STRING" 
	};
};
class scanCodeLockResponse
{
	addon = "exile";
	module = "object_lock";
	parameters[] =
	{
		"STRING" 
	};
};
class enableSimulationRequest
{
	addon = "exile";
	module = "system_simulationMonitor";
	parameters[] =
	{
		"STRING" 
	};
};
class attachSupplyBoxRequest
{
	addon = "exile";
	module = "object_supplyBox";
	parameters[] =
	{
		"STRING" 
	};
};
class detachSupplyBoxRequest
{
	addon = "exile";
	module = "object_supplyBox";
	parameters[] =
	{
		"STRING" 
	};
};
class installSupplyBoxRequest
{
	addon = "exile";
	module = "object_supplyBox";
	parameters[] =
	{
		"STRING" 
	};
};
class handcuffRequest 
{
	addon = "exile";
	module = "object_handcuffs";
	parameters[] =
	{
		"STRING" 
	};
};
class handcuffResponse 
{
	addon = "exile";
	module = "object_handcuffs";
	parameters[] =
	{
		"STRING" 
	};
};
class freeRequest 
{
	addon = "exile";
	module = "object_handcuffs";
	parameters[] =
	{
		"STRING" 
	};
};
class freeResponse 
{
	addon = "exile";
	module = "object_handcuffs";
	parameters[] =
	{
		"STRING" 
	};
};
class breakFreeRequest 
{
	addon = "exile";
	module = "object_handcuffs";
	parameters[] = {};
};
class breakFreeResponse 
{
	addon = "exile";
	module = "object_handcuffs";
	parameters[] =
	{
		"STRING" 
	};
};
class updateMyPartyMarkerRequest 
{
	addon = "exile";
	module = "system_party";
	parameters[] =
	{
		"BOOL",
		"ARRAY" 
	};
};
class updatePartyMarkerRequest 
{
	addon = "exile";
	module = "system_party";
	parameters[] =
	{
		"STRING", 	
		"BOOL", 	
		"ARRAY" 	
	};
};
class resetCodeRequest
{
	addon = "exile";
	module = "object_vehicle";
	parameters[] =
	{
		"STRING", 
		"STRING", 
		"STRING"	
	};
};
class resetCodeResponse
{
	addon = "exile";
	module = "object_vehicle";
	parameters[] =
	{
		"ARRAY",
		"STRING",
		"STRING"
	};
};
class rekeyVehicleRequest
{
	addon = "exile";
	module = "object_vehicle";
	parameters[] =
	{
		"STRING", 	
		"STRING"	
	};
};
class rekeyVehicleDialogRequest
{
	addon = "exile";
	module = "object_vehicle";
	parameters[] =
	{
		"STRING", 	
		"SCALAR"	
	};
};
class rekeyVehicleDialogResponse
{
	addon = "exile";
	module = "gui_vehicleRekeyDialog";
	parameters[] =
	{
		"STRING",	
		"STRING",	
		"SCALAR"	
	};
};
class resetCodeDialogRequest
{
	addon = "exile";
	module = "object_vehicle";
	parameters[] =
	{
		"STRING" 	
	};
};
class resetCodeDialogResponse
{
	addon = "exile";
	module = "gui_vehicleRekeyDialog";
	parameters[] =
	{
		"STRING",	
		"STRING"	
	};
};
class putMoneyRequest
{
	addon = "exile";
	module = "system_money";
	parameters[] =
	{
		"STRING", 
		"SCALAR" 
	};
};
class takeMoneyRequest
{
	addon = "exile";
	module = "system_money";
	parameters[] =
	{
		"STRING", 
		"SCALAR" 
	};
};
class moneyTransactionResponse
{
	addon = "exile";
	module = "system_money";
	parameters[] =
	{
		"STRING", 
		"SCALAR" 
	};
};
class flagStolenRequest
{
	addon = "exile";
	module = "system_territory";
	parameters[] =
	{
		"OBJECT"
	};
};
class lockerDepositRequest
{
	addon = "exile";
	module = "system_locker";
	parameters[] =
	{
		"STRING"
	};
};
class lockerWithdrawRequest
{
	addon = "exile";
	module = "system_locker";
	parameters[] =
	{
		"STRING"
	};
};
class lockerResponse
{
	addon = "exile";
	module = "system_locker";
	parameters[] = {};
};
class slothMachineRequest
{
	addon = "exile";
	module = "system_slothMachine";
	parameters[] =  {};
};
class slothMachineResponse
{
	addon = "exile";
	module = "system_slothMachine";
	parameters[] =
			{
		"STRING", 	
		"SCALAR",	
		"SCALAR",	
		"ARRAY"		
	};
};
class breachingStart
{
	addon = "exile";
	module = "system_breaching";
	parameters[] =
	{
		"OBJECT"
	};
};
class breachingResponse
{
	addon = "exile";
	module = "system_breaching";
	parameters[] =
	{
		"OBJECT",
		"OBJECT"
	};
};
class breachingPlaceRequest
{
	addon = "exile";
	module = "system_breaching";
	parameters[] =
	{
		"ARRAY",
		"ARRAY",
		"OBJECT"
	};
};
class breachingCancel
{
	addon = "exile";
	module = "system_breaching";
	parameters[] =
	{
		"OBJECT"
	};
};
class breachingPlaceResponse
{
	addon = "exile";
	module = "system_breaching";
	parameters[] =
	{
		"OBJECT"
	};
};
class chargePlanted
{
	addon = "exile";
	module = "system_breaching";
	parameters[] = {};
};
class detonateAllCharges
{
	addon = "exile";
	module = "system_breaching";
	parameters[] = {};
};
class hackLockRequest
{
	addon = "exile";
	module = "object_lock";
	parameters[] =
	{
		"STRING" 
	};
};
class updateHackAttemptRequest
{
	addon = "exile";
	module = "object_lock";
	parameters[] =
	{
		"STRING" 
	};
};
class startHackRequest
{
	addon = "exile";
	module = "object_lock";
	parameters[] =
	{
		"STRING" 
	};
};
class grindNotificationRequest
{
	addon = "exile";
	module = "object_lock";
	parameters[] =
	{
		"STRING" 
	};
};
class grindLockRequest
{
	addon = "exile";
	module = "object_lock";
	parameters[] =
	{
		"STRING" 
	};
};
class storeVehicleRequest
{
	addon = "exile";
	module = "object_vehicle";
	parameters[] =
	{
		"STRING",	
		"STRING"	
	};
};
class storeVehicleResponse
{
	addon = "exile";
	module = "object_vehicle";
	parameters[] =
	{
		"BOOL",		
		"STRING"	
	};
};
class retrieveVehicleRequest
{
	addon = "exile";
	module = "object_vehicle";
	parameters[] =
	{
		"STRING"	
	};
};
class retrieveVehicleResponse
{
	addon = "exile";
	module = "object_vehicle";
	parameters[] =
	{
		"BOOL",	
		"ARRAY" 
	};
};
class switchLightsRequest
{
	addon = "exilelife";
	module = "system_environment";
	parameters[] = {"SCALAR","ARRAY","SCALAR"};
};
class processVGRequest
{
	addon = "exilelife";
	module = "system_virtualGarage";
	parameters[] = {"STRING","STRING"};		
};
class retrieveVGResponse
{
	addon = "exilelife";
	module = "system_virtualGarage";
	parameters[] = {"SCALAR","STRING", "ARRAY"};		
};
class addVehicleVGResponse
{
	addon = "exilelife";
	module = "system_virtualGarage";
	parameters[] = {"STRING", "ARRAY"};		
};
class gangAllowanceRequest
{
	addon = "exilelife";
	module = "system_allowance";
	parameters[] = {};
};
class prisonAllowanceRequest
{
	addon = "exilelife";
	module = "system_allowance";
	parameters[] = {};
};
class allowanceResponse
{
	addon = "exilelife";
	module = "system_allowance";
	parameters[] = {"ARRAY","BOOL"};
};
class prisonAllowanceRetrieveRequest
{
	addon = "exilelife";
	module = "system_allowance";
	parameters[] = {};
};
class prisonAllowanceRetrieveResponse
{
	addon = "exilelife";
	module = "system_allowance";
	parameters[] = {"SCALAR","BOOL"};
};
class prisonAllowanceWithdrawalRequest
{
	addon = "exilelife";
	module = "system_allowance";
	parameters[] = {};
};
class allowanceWithdrawalResponse
{
	addon = "exilelife";
	module = "system_allowance";
	parameters[] = {};
};
class gangAllowanceRetrieveRequest
{
	addon = "exilelife";
	module = "system_allowance";
	parameters[] = {};
};
class gangAllowanceRetrieveResponse
{
	addon = "exilelife";
	module = "system_allowance";
	parameters[] = {"SCALAR","BOOL"};
};
class gangAllowanceWithdrawalRequest
{
	addon = "exilelife";
	module = "system_allowance";
	parameters[] = {};
};
class harvestPlantResponse
{
	addon = "exilelife";
	module = "object_farming";
	parameters[] = {"STRING"};
};
class harvestPlantRequest
{
	addon = "exilelife";
	module = "system_farming";
	parameters[] = {"STRING","STRING","STRING","SCALAR"};
};
class plantGardenRequest
{
	addon = "exilelife";
	module = "system_farming";
	parameters[] = {"STRING"};
};
class spawnedAnimal
{
	addon = "exilelife";
	module = "object_animal";
	parameters[] = {"ARRAY"};
};
class onHandleCharacterChange
{
	addon = "exilelife";
	module = "system_session";
	parameters[] = {};
};
class updatePlayerClass
{
	addon = "exilelife";
	module = "object_player";
	parameters[] = {"STRING"};
};
class claimHouseRequest
{
	addon = "exilelife";
	module = "object_housing";
	parameters[] = {"STRING","ARRAY","STRING"};
};
class addHouseLockRequest
{
	addon = "exilelife";
	module = "object_housing";
	parameters[] = {"STRING","SCALAR","STRING"};
};
class houseLockToggle
{
	addon = "exilelife";
	module = "object_housing";
	parameters[] = {"STRING","SCALAR","STRING","SCALAR"};
};
class lockToggleResponse
{
	addon = "exilelife";
	module = "object_housing";
	parameters[] = {"STRING","BOOL","STRING","SCALAR","STRING","SCALAR"};
};
class scanHouseLockRequest
{
	addon = "exilelife";
	module = "object_housing";
	parameters[] = {"STRING","SCALAR"};
};
class lockpickHouseRequest
{
	addon = "exilelife";
	module = "object_housing";
	parameters[] = {"STRING","SCALAR"};
};
class playSoundRequest
{
	addon = "exilelife";
	module = "system_environment";
	parameters[] = {"STRING","STRING","SCALAR","BOOL","SCALAR"};
};
class effectRequest
{
	addon = "exilelife";
	module = "system_environment";
	parameters[] = {"ARRAY","SCALAR","SCALAR","SCALAR"};
};
class lightsRequest
{
	addon = "exilelife";
	module = "system_environment";
	parameters[] = {"SCALAR","ARRAY","SCALAR","SCALAR","SCALAR"};
};
class lightsResponse
{
	addon = "exilelife";
	module = "system_environment";
	parameters[] = {"SCALAR","ARRAY","SCALAR"};
};
class baguetteRequest
{
	addon = "exilelife";
	module = "gui";
	parameters[] = {"ARRAY"};
};
class hasTwoPlayerAccountsRequest
{
	addon = "exilelife";
	module = "object_player";
	parameters[] = {};
};
class loadBothAccountsRequest
{
	addon = "exilelife";
	module = "object_player";
	parameters[] = {};
};
class loadBothAccountsResponse
{
	addon = "exilelife";
	module = "object_player";
	parameters[] = {"ARRAY","ARRAY","ARRAY","ARRAY"};
};
class hasTwoPlayerAccountsResponse
{
	addon = "exilelife";
	module = "object_player";
	parameters[] = {"BOOL","BOOL"};
};
class loadDualAccountPlayerRequest
{
	addon = "exilelife";
	module = "object_player";
	parameters[] = {"STRING","BOOL"};
};
class updatePlayerSelectionCharacter
{
	addon = "exilelife";
	module = "object_player";
	parameters[] = {"STRING"};
};
class interactionSel
{
	addon = "exilelife";
	module = "system_environment";
	parameters[] = {"STRING","STRING","STRING"};
};
class interactionSelResponse
{
	addon = "exilelife";
	module = "object";
	parameters[] = {"STRING","STRING","STRING","BOOL"};
};
class interactionDisable
{
	addon = "exilelife";
	module = "system_environment";
	parameters[] = {"STRING","STRING"};
};
class startConveyorBeltRequest
{
	addon = "exilelife";
	module = "resources_processing";
	parameters[] = {"STRING","STRING"};
};
class chopRockRequest
{
	addon = "exilelife";
	module = "resources_mine";
	parameters[] = {"STRING","STRING"};
};
class digRequest
{
	addon = "exilelife";
	module = "resources_mine";
	parameters[] = {"STRING","STRING"};
};
class pickFruitRequest
{
	addon = "exilelife";
	module = "resources_harvest";
	parameters[] = {"STRING","STRING"};
};
class forceUpRequest
{
	addon = "exilelife";
	module = "object_handcuffs";
	parameters[] = {"STRING"};
};
class forceUpResponse
{
	addon = "exilelife";
	module = "object_handcuffs";
	parameters[] = {"STRING"};
};
class forceDownRequest
{
	addon = "exilelife";
	module = "object_handcuffs";
	parameters[] = {"STRING"};
};
class escortRequest
{
	addon = "exilelife";
	module = "object_handcuffs";
	parameters[] = {"STRING","BOOL"};
};
class forceGetInRequest
{
	addon = "exilelife";
	module = "object_handcuffs";
	parameters[] = {"STRING","STRING","ARRAY"};
};
class forceGetInResponse
{
	addon = "exilelife";
	module = "object_handcuffs";
	parameters[] = {"STRING","STRING","ARRAY"};
};
class forceGetOutRequest
{
	addon = "exilelife";
	module = "object_handcuffs";
	parameters[] = {"STRING"};
};
class forceGetOutResponse
{
	addon = "exilelife";
	module = "object_handcuffs";
	parameters[] = {"STRING","STRING"};
};
class updateVariable
{
	addon = "exilelife";
	module = "object_player";
	parameters[] = {"STRING","STRING"};
};
class gangterritoryUpgradeRequest
{
	addon = "exilelife";
	module = "system_gangterritory";
	parameters[] = {"STRING"};
};
class buyAppRequest
{
	addon = "exilelife";
	module = "object_player";
	parameters[] = {"STRING","STRING"};
};
class appBoughtRequest
{
	addon = "exilelife";
	module = "system_trading";
	parameters[] = {"STRING","STRING","BOOL"};
};
class updateSkillRequest
{
	addon = "exilelife";
	module = "object_player_skills";
	parameters[] = {"STRING", "SCALAR", "STRING"};
};
class updateSkillResponse
{	addon = "exilelife";
	module = "object_player_skills";
	parameters[] = {"STRING", "ARRAY"};
};
class startJobRequest
{
	addon = "exilelife";
	module = "system_jobs_process";
	parameters[] = {"STRING"};	
};
class completeJobRequest
{
	addon = "exilelife";
	module = "system_jobs_process";
	parameters[] = {};
};
class progressJobRequest
{
	addon = "exilelife";
	module = "system_jobs_process";
	parameters[] = {};
};
class forfeitJobRequest
{
	addon = "exilelife";
	module = "system_jobs_process";
	parameters[] = {};
};
class overrideJobRequest
{
	addon = "exilelife";
	module = "system_jobs_process";
	parameters[] = {"STRING"}; 
};
class checkJobs
{
	addon = "exilelife";
	module = "system_jobs_process";
	parameters[] = {};
};
class addJobTask
{
	addon = "exilelife";
	module = "system_jobs";
	parameters[] = {"STRING","SCALAR","STRING","ARRAY"};		
};
class addSideQuest
{
	addon = "exilelife";
	module = "system_jobs";
	parameters[] = {"STRING","SCALAR","ARRAY","STRING","SCALAR","STRING"};		
};
class completeSideQuest
{
	addon = "exilelife";
	module = "system_jobs";
	parameters[] = {"STRING"};		
};
class completeJobTask
{
	addon = "exilelife";
	module = "system_jobs";
	parameters[] = {"STRING","STRING"};		
};
class completeCustomJobTask
{
	addon = "exilelife";
	module = "system_jobs";
	parameters[] = {"STRING","STRING","ARRAY"};		
};
class failJobTask
{
	addon = "exilelife";
	module = "system_jobs";
	parameters[] = {"STRING"};		
};
class forfeitJobTask
{
	addon = "exilelife";
	module = "system_jobs";
	parameters[] = {"STRING"};		
};
class deniedJobCompletion
{
	addon = "exilelife";
	module = "system_jobs";
	parameters[] = {"STRING"};		
};
class stealCargo
{
	addon = "exilelife";
	module = "system_jobs_util_vehicle";
	parameters[] = {"STRING","STRING"}; 
};
class updateJobBoard
{
	addon = "exilelife";
	module = "system_jobs";
	parameters[] = {"ARRAY"};		
};
class addJobRequest
{
	addon = "exilelife";
	module = "system_jobs_board";
	parameters[] = {"STRING","SCALAR"};		
};
class overrideJobTask
{
	addon = "exilelife";
	module = "system_jobs";
	parameters[] = {"SCALAR"};
};
class failJobRequest
{
	addon = "exilelife";
	module = "system_jobs"; 
	parameters[] = {};
};
class addManualJobTask
{
	addon = "exilelife";
	module = "system_jobs"; 
	parameters[] = {"STRING","SCALAR","STRING","ARRAY","STRING","STRING","STRING","BOOL"};
};
class onUberJobRequest
{
	addon = "exilelife";
	module = "system_jobs_uber";
	parameters[] = {"STRING"};
};
class updateUberJobs
{
	addon = "exilelife";
	module = "system_jobs_uber";
	parameters[] = {"ARRAY"};
};
class reviveJobOffer
{
	addon = "exilelife";
	module = "system_jobs_uber";
	parameters[] = {"SCALAR","SCALAR"}; 
};
class uberPlayerAvailable
{
	addon = "exilelife";
	module = "system_jobs_uber";
	parameters[] = {"SCALAR"};
};
class uberPlayerUnavailable
{
	addon = "exilelife";
	module = "system_jobs_uber";
	parameters[] = {"SCALAR"};
};
class processAbilityRequest
{
	addon = "exilelife";
	module = "admintools_system";
	parameters[] = {"SCALAR","ARRAY"};
};
class logEvent
{
	addon = "exilelife";
	module = "admintools_util";
	parameters[] = {"STRING"};
};
class broadcastAdminLogin
{
	addon = "exilelife";
	module = "admintools_system";
	parameters[] = {"STRING","STRING"};
};
class broadcastAdminLogOff
{
	addon = "exilelife";
	module = "admintools_system";
	parameters[] = {"STRING","STRING"};
};
class marketBuyItemRequest
{
	addon = "exilelife";
	module = "system_blackmarket";
	parameters[]={
		"STRING", 
		"SCALAR", 
		"SCALAR", 
		"STRING" 
	};
};
class marketBuyItemResponse
{
	addon = "exilelife";
	module = "system_blackmarket";
	parameters[]={
		"SCALAR",	
		"SCALAR",	
		"STRING", 
		"SCALAR", 
		"SCALAR", 
		"STRING" 
	};
};
class marketSellItemRequest
{
	addon = "exilelife";
	module = "system_blackmarket";
	parameters[]={
		"STRING", 
		"SCALAR", 
		"SCALAR", 
		"STRING" 
	};
};
class marketSellItemResponse
{
	addon = "exilelife";
	module = "system_blackmarket";
	parameters[]={
		"SCALAR", 
		"SCALAR", 
		"STRING", 
		"SCALAR", 
		"SCALAR", 
		"STRING"  
	};
};
class marketUpdateInventory
{
	addon = "exilelife";
	module = "system_blackmarket";
	parameters[]={
		"ARRAY" 
	};
};
class playerInfoRequest
{
	addon = "exilelife";
	module = "object_player";
	parameters[] = {"STRING"};
};
class playerInfoResponse
{
	addon = "exilelife";
	module = "object_player";
	parameters[] = {"ARRAY", "STRING"};
};
class updatePlayerInfoRequest
{
	addon = "exilelife";
	module = "object_player";
	parameters[]={
		"STRING",		
		"STRING",		
		"STRING",		
		"STRING",		
		"STRING"		
	};
};
class newMessageRequest
{
	addon = "exilelife";
	module = "system_messaging";
	parameters[]={
		"STRING",		
		"ARRAY",		
		"STRING"		
	};
};
class sendMessageRequest
{
	addon = "exilelife";
	module = "system_messaging";
	parameters[]={
		"STRING",		
		"STRING"		
	};
};
class updateMessageRequest
{
	addon = "exilelife";
	module = "system_messaging";
	parameters[]={
		"STRING",		
		"STRING",		
		"ARRAY"		
	};
};
class sendMsgResponse
{
	addon = "exilelife";
	module = "gui_xm8_slide_messages";
	parameters[]={
		"STRING",		
		"ARRAY"		
	};
};
class receiveMsgResponse
{
	addon = "exilelife";
	module = "gui_xm8_slide_messages";
	parameters[]={
		"STRING",		
		"ARRAY"		
	};
};
class updateMessagesResponse
{
	addon = "exilelife";
	module = "gui_xm8_slide_messages";
	parameters[]={
		"ARRAY"		
	};
};
class vehicleHireRequest
{
	addon = "exilelife";
	module = "system_jobs_util_vehicle";
	parameters[]={
		"STRING", 	
		"STRING" 	
	};
};
class setPinCodeRequest
{
	addon = "exilelife";
	module = "system_vehicle_vehicleHire";
	parameters[]={
		"STRING" 
	};
};
class setPinCodeResponse
{
	addon = "exilelife";
	module = "system_jobs_util_vehicle";
	parameters[]={
		"STRING", 	
		"STRING" 	
	};
};
class vehicleHireResponse
{
	addon = "exilelife";
	module = "system_vehicle_vehicleHire";
	parameters[]={
		"SCALAR",	
		"STRING",	
		"SCALAR"	
	};
};
class vehicleDisabledResponse
{
	addon = "exilelife";
	module = "system_vehicle";
	parameters[] =	{"STRING"};  
};
class vehicleEnabledResponse
{
	addon = "exilelife";
	module = "system_vehicle";
	parameters[] =	{"STRING"};  
};
class recruiterContainerOpened
{
	addon = "exilelife";
	module = "system_jobs_scenes_gang_recruiter";
	parameters[] =	{"STRING"};  
};
class joinGangRequest
{
	addon = "exilelife";
	module = "system_gang";
	parameters[] = {"STRING","BOOL"};
};
class meleeRequest
{
	addon = "exilelife";
	module = "object_player_event";
	parameters[] = {"STRING","STRING","STRING"};
};
class meleeResponse
{
	addon = "exilelife";
	module = "object_player_event";
	parameters[]={
		"SCALAR",	
		"STRING",	
		"STRING"	
	};
};
class beatup
{
	addon = "exilelife";
	module = "object_player";
	parameters[] = {"SCALAR"};
};
class setPlayerMoneyRequest
{
	addon = "exilelife";
	module = "object_player";
	parameters[] = {};
};
class updatePlayerMoneyRequest
{
	addon = "exilelife";
	module = "object_player";
	parameters[] = {};
};
class retrievePlayerMoneyRequest
{
	addon = "exilelife";
	module = "object_player";
	parameters[] = {};
};
class getPrisonerRecordsRequest
{
	addon = "exilelife";
	module = "system_prisonRecords";
	parameters[] = {"STRING"}; 
};
class getPrisonerRecordsResponse
{
	addon = "exilelife";
	module = "system_prisonRecords";
	parameters[] = {"ARRAY","ARRAY","ARRAY"}; 
};
class setPrisonerRecordsRequest
{
	addon = "exilelife";
	module = "system_prisonRecords";
	parameters[] = {"STRING","ARRAY","SCALAR","SCALAR"}; 
};
class updatePrisonerRecordsRequest
{
	addon = "exilelife";
	module = "system_prisonRecords";
	parameters[] = {"STRING","ARRAY","ARRAY","SCALAR","SCALAR"}; 
};
class getPrisonerFinesRequest
{
	addon = "exilelife";
	module = "system_prisonRecords";
	parameters[] = {};
};
class getPrisonerFinesResponse
{
	addon = "exilelife";
	module = "system_prisonRecords";
	parameters[] = {"ARRAY"};
};
class jailPlayerRequest
{
	addon = "exilelife";
	module = "object_player_guard";
	parameters[] = {"STRING","SCALAR","ARRAY"}; 
};
class depositOreRequest
{
	addon = "exilelife";
	module = "system_prison";
	parameters[] = {};
};
class depositOreResponse
{
	addon = "exilelife";
	module = "system_prison";
	parameters[] = {"SCALAR"};
};
class retrieveOreRequest
{
	addon = "exilelife";
	module = "system_prison";
	parameters[] = {};
};
class hackCodeLockRequest
{
	addon = "exilelife";
	module = "object_lock";
	parameters[] ={
		"STRING" 
	};
};
class hackCodeLockResponse
{
	addon = "exilelife";
	module = "object_lock";
	parameters[] ={
		"STRING" 
	};
};
class claimItemRequest
	{
		addon = "exilelife";
		module="system_rewards";
		parameters[]={
			"STRING",
			"SCALAR",
			"STRING"
		};
	};
	class claimItemResponse
	{
		addon = "exilelife";
		module="system_rewards";
		parameters[]={
			"SCALAR",
			"STRING",
			"SCALAR",
			"STRING",
			"ARRAY"
		};
	};
	class claimVehicleRequest
	{
		addon = "exilelife";
		module="system_rewards";
		parameters[]={
			"STRING",
			"STRING"
		};
	};
	class claimVehicleResponse
	{
		addon = "exilelife";
		module="system_rewards";
		parameters[]={
			"SCALAR",
			"STRING",
			"ARRAY"
		};
	};
	class claimTabsRequest
	{
		addon = "exilelife";
		module="system_rewards";
		parameters[]={
			"STRING",
			"SCALAR"
		};
	};
	class claimTabsResponse
	{
		addon = "exilelife";
		module="system_rewards";
		parameters[]=
		{
			"SCALAR",
			"STRING",
			"SCALAR",
			"ARRAY"
		};
	};
	class hasRewardsRequest
	{
		addon = "exilelife";
		module="system_rewards";
		parameters[]={};
	};
	class hasRewardsResponse
	{
		addon = "exilelife";
		module="system_rewards";
		parameters[]=		{
			"SCALAR",
			"ARRAY"
		};
	};
	class addRewardsRequest
	{
		addon = "exilelife";
		module="system_rewards";
		parameters[]=		{
			"STRING",
			"ARRAY"
		};
	};
	class addKitRequest
	{
		addon = "exilelife";
		module="system_rewards";
		parameters[]=		{
			"STRING",
			"STRING"
		};
	};
	class onIncapacitatedRequest
	{
		addon = "exilelife";
		module = "object_player_death";
		parameters[] = {"STRING","STRING","STRING"};
	};
	class onIncapacitatedResponse
	{
		addon = "exilelife";
		module = "object_player_death";
		parameters[] = {"STRING"};
	};
	class onReviveRequest
	{
		addon = "exilelife";
		module = "object_player_death";
		parameters[] = {"STRING"};
	};
	class onReviveResponse
	{
		addon = "exilelife";
		module = "object_player_death";
		parameters[] = {"STRING"};
	};
	class onSmotherResponse
	{
		addon = "exilelife";
		module = "object_player_death";
		parameters[] = {};
	};
	class onMedicRequest
	{
		addon = "exilelife";
		module = "object_player_death";
		parameters[] = {"SCALAR"};
	};
class forceConsumeRequest
{
	module = "object_player_event";
	addon = "exilelife";
	parameters[]={
		"STRING"		
	};
};
class feedOtherPlayerRequest
{
	module = "object_player_event";
	addon = "exilelife";
	parameters[]={
		"STRING",		
		"STRING"		
	};
};
class waterOtherPlayerRequest
{
	module = "object_player_event";
	addon = "exilelife";
	parameters[]={
		"STRING",		
		"STRING"		
	};
};
class drawBloodRequest
{
	module = "object_player_injury_blood";
	addon = "exilelife";
	parameters[]={
		"STRING"		
	};
};
class drawBloodResponse
{
	module = "object_player_injury_blood";
	addon = "exilelife";
	parameters[] = {"SCALAR"}; 
};
class injectBloodRequest
{
	module = "object_player_injury_blood";
	addon = "exilelife";
	parameters[]={
		"STRING",		
		"STRING"		
	};
};
class injectBloodResponse
{
	module = "object_player_injury_blood";
	addon = "exilelife";
	parameters[]={
		"ARRAY" 
	};
};
class bloodTestRequest
{
	module = "object_player_injury_blood";
	addon = "exilelife";
	parameters[]={
		"STRING"	
	};
};
};
class CfgRemoteExec
{
	class Functions
	{
		mode = 1;
		jip = 0;
		class ExileLifeServer_system_network_dispatchIncomingMessage 
		{
			allowedTargets = 2;
		};
	};
	class Commands
	{
		mode = 0;
		jip = 0;
	};
};
class CfgRespawnTemplates
{
	class Exile
	{
		isCall = 1;
		onPlayerKilled = "ExileClient_object_player_event_onPlayerKilled";
		onPlayerRespawn = "ExileClient_object_player_event_onPlayerRespawn";
		respawnDelay = 30;
		respawnOnStart = 0;
		respawnButton = 1;
	};
	class ExileLife
	{
		isCall = 1;
		onPlayerKilled = "ExileClient_object_player_event_onPlayerKilled";
		onPlayerRespawn = "ExileClient_object_player_event_onPlayerRespawn";
		respawnDelay = 30;
		reviveRespawnDelay = 1200; 
		respawnOnStart = 0;
		respawnButton = 1;
	};
};
class CfgSFX 
{
	class Exile_Sfx_Flies
	{
		name = "Exile Flies";
		sounds[] = {"flies01"};
		flies01[] = 
		{
			"\exile_assets\sound\flies.ogg", 	
			3, 									
			1, 									
			60, 								
			1, 									
			0, 									
			0, 									
			0									
		};
		empty[] = {"", 0, 0, 0, 0, 1, 3, 5};
	};
	class Exile_Sfx_PortableGenerator
	{
		name = "Exile Exile_Sfx_PortableGenerator";
		sounds[] = {"noise01"};
		noise01[] = 
		{
			"\a3\sounds_f\ambient\objects\aircontition_5.wss", 	
			1, 									
			1, 									
			50, 								
			1, 									
			0, 									
			0, 									
			0									
		};
		empty[] = {"", 0, 0, 0, 0, 1, 3, 5};
	};
	class Exile_Sfx_Grinding
	{
		name = "Exile Exile_Sfx_Grinding";
		sounds[] = {"grind01"};
		grind01[] = 
		{
			"\exile_assets\sound\Exile_Grinding01.wss", 	
			1.5, 									
			1, 									
			50, 								
			1, 									
			0, 									
			0, 									
			0									
		};
		empty[] = {"", 0, 0, 0, 0, 1, 3, 5};
	};
	class SndExileLifeFactoryStartup
	{
		name = "FactoryStart";
		sounds[] = {"FactoryStart"};		
		FactoryStart[] = {"exilelife_assets\sound\factory_startup.ogg",1,1,50,1,0,0,0};
		empty[] = {"",0,0,0,0,1,3,5};
	};	
	class SndExileLifeFuelPump
	{
		name = "FuelPump";
		sounds[] = {"FuelPump"};		
		FuelPump[] = {"exilelife_assets\sound\fuelpump.ogg",1,1,50,1,0,0,0};
		empty[] = {"",0,0,0,0,1,3,5};
	};	
		class SndExileLifeGeneratorOff
	{
		name = "GeneratorOff";
		sounds[] = {"GeneratorOff"};		
		GeneratorOff[] = {"exilelife_assets\sound\generator_off.ogg",1,1,50,1,0,0,0};
		empty[] = {"",0,0,0,0,1,3,5};
	};	
	class SndExileLifeGeneratorRunning
	{
		name = "GeneratorRunning";
		sounds[] = {"GeneratorRunning"};		
		GeneratorRunning[] = {"exilelife_assets\sound\generator_running.ogg",1,1,50,1,0,0,0};
		empty[] = {"",0,0,0,0,1,3,5};
	};	
	class SndExileLifeGeneratorStall
	{
		name = "GeneratorStall";
		sounds[] = {"GeneratorStall"};		
		GeneratorStall[] = {"exilelife_assets\sound\generator_stall.ogg",1,1,50,1,0,0,0};
		empty[] = {"",0,0,0,0,1,3,5};
	};	
	class SndExileLifeGeneratorStart
	{
		name = "GeneratorStart";
		sounds[] = {"GeneratorStart"};		
		GeneratorStart[] = {"exilelife_assets\sound\generator_start.ogg",1,1,50,1,0,0,0};
		empty[] = {"",0,0,0,0,1,3,5};
	};	
	class SndExileLifeKeypadFail
	{
		name = "KeypadFail";
		sounds[] = {"KeypadFail"};			
		KeypadFail[] = {"exilelife_assets\sound\keypad_fail.ogg",1,1,50,1,0,0,0};
		empty[] = {"",0,0,0,0,1,3,5};
	};	
	class SndExileLifeKeypadSuccess
	{
		name = "KeypadSuccess";
		sounds[] = {"KeypadSuccess"};			
		KeypadSuccess[] = {"exilelife_assets\sound\keypad_success.ogg",1,1,50,1,0,0,0};
		empty[] = {"",0,0,0,0,1,3,5};
	};	
	class SndExileLifePipeSqueak
	{
		name = "PipeSqueak";
		sounds[] = {"PipeSqueak"};			
		PipeSqueak[] = {"exilelife_assets\sound\pipe_squeak.ogg",1,1,50,1,0,0,0};
		empty[] = {"",0,0,0,0,1,3,5};
	};	
	class SndExileLifeFurnace
	{
		name = "Furnace";
		sounds[] = {"Furnace"};			
		Furnace[] = {"exilelife_assets\sound\furnace.ogg",1,1,50,1,0,0,0};
		empty[] = {"",0,0,0,0,1,3,5};
	};	
	class SndExileLifeShovelDig
	{
		name = "ShovelDig";
		sounds[] = {"ShovelDig"};		
		ShovelDig[] = {"exilelife_assets\sound\shoveldig.ogg",1,1,50,1,0,0,0};
		empty[] = {"",0,0,0,0,1,3,5};
	};	
	class SndExileLifePickAxeHit
	{
		name = "PickAxeHit";
		sounds[] = {"PickAxeHit"};		
		PickAxeHit[] = {"exilelife_assets\sound\pickaxe_hit.ogg",1,1,50,1,0,0,0};
		empty[] = {"",0,0,0,0,1,3,5};
	};	
	class SndExileLifeHoeHit
	{
		name = "HoeHit";
		sounds[] = {"HoeHit"};		
		HoeHit[] = {"exilelife_assets\sound\hoe_hit.ogg",1,1,50,1,0,0,0};
		empty[] = {"",0,0,0,0,1,3,5};
	};			
};
class CfgSoundEffects
{
	class WeaponsEffects
	{
		class Default;
		class DefaultFireExplosion
		{
			class Begin: Default
			{
			};
			class Middle: Default
			{
				distance=5;
				frequency=0.94999999;
				gain[]={1,1,0.56234133,0.3548134};
				threshold=0.099999994;
				ratio=0.5;
				attack=90;
			};
			class End: Default
			{
				distance=10;
				frequency=0.89999998;
				gain[]={2.5118864,1.4125376,0.31622776,0.12589253};
				threshold=0.099999994;
				ratio=0.60000002;
				attack=10;
			};
		};
		class DefaultHandTools
		{
			class Begin: Default{};
			class Middle: Default
			{
				distance = 5;
				frequency = 0.9;
				gain[] = {1.0,1.0,0.39810717,0.25118864};
				threshold = 0.099999994;
				ratio = 0.5;
				attack = 40;
			};
			class End: Default
			{
				distance = 10;
				frequency = 0.85;
				gain[] = {1.0,0.56234133,0.12589253,0.12589253};
				threshold = 0.099999994;
				ratio = 0.1;
				attack = 0;
			};
		};
	};
};
class CfgSounds
{
	class ExileLife_Sound_HeavyBreathing01
	{
		name = "Heavy Breathing";
		sound[] = {"\exilelife_assets\sounds\HeavyBreathing01.wss", 0.25, 1.0};
		titles[] = {};
	};
	class ExileLife_Sound_HeavyBreathing02
	{
		name = "Heavy Breathing";
		sound[] = {"\exilelife_assets\sounds\HeavyBreathing02.wss", 0.25, 1.0};
		titles[] = {};
	};
	class ExileLife_Sound_HeavyBreathing03
	{
		name = "Heavy Breathing";
		sound[] = {"\exilelife_assets\sounds\HeavyBreathing03.wss", 0.25, 1.0};
		titles[] = {};
	};
	class SndExileTwinkleTwisterCharge01
	{
		name = "";
		sound[] = {"exile_assets\sound\twinkle_twister_charge_01", 1, 1}; 
		titles[] = {};
	};
	class SndExileTwinkleTwisterCharge02
	{
		name = "";
		sound[] = {"exile_assets\sound\twinkle_twister_charge_02", 1, 1}; 
		titles[] = {};
	};
	class SndExileTwinkleTwisterCharge03
	{
		name = "";
		sound[] = {"exile_assets\sound\twinkle_twister_charge_03", 1, 1}; 
		titles[] = {};
	};
	class SndExileTwinkleTwisterChargeDone01
	{
		name = "";
		sound[] = {"exile_assets\sound\twinkle_twister_charge_done_01", 1, 1}; 
		titles[] = {};
	};
	class SndExileTwinkleTwisterChargeDone02
	{
		name = "";
		sound[] = {"exile_assets\sound\twinkle_twister_charge_done_02", 1, 1}; 
		titles[] = {};
	};
	class SndExileTwinkleTwisterChargeDone03
	{
		name = "";
		sound[] = {"exile_assets\sound\twinkle_twister_charge_done_03", 1, 1}; 
		titles[] = {};
	};	
	class SndExileTwinkleTwisterSuccess
	{
		name = "";
		sound[] = {"exile_assets\sound\twinkle_twister_success", 1, 1}; 
		titles[] = {};
	};	
	class SndExileTwinkleTwisterFail
	{
		name = "";
		sound[] = {"exile_assets\sound\twinkle_twister_fail", 1, 1}; 
		titles[] = {};
	};	
	class SndXM8PowerOn
	{
		name = "";
		sound[] = {"exile_assets\sound\xm8_power_on", 1, 1}; 
		titles[] = {};
	};
	class SndXM8PowerOff
	{
		name = "";
		sound[] = {"exile_assets\sound\xm8_power_off", 1, 1}; 
		titles[] = {};
	};
	class SndExileHeartbeatFast
	{
		name = "";
		sound[] = {"exile_assets\sound\heartbeat_fast.ogg", 1, 1}; 
		titles[] = {};
	};
	class SndExileHeartbeatSlow
	{
		name = "";
		sound[] = {"exile_assets\sound\heartbeat_slow.ogg", 1, 1}; 
		titles[] = {};
	};
	class SndExileHeartbeatSlowSingle
	{
		name = "";
		sound[] = {"exile_assets\sound\heartbeat_slow_single.ogg", 1, 1}; 
		titles[] = {};
	};
	class SndExileHeartbeatStopping
	{
		name = "";
		sound[] = {"exile_assets\sound\heartbeat_stopping.ogg", 1, 1}; 
		titles[] = {};
	};
	class SndExileHeartbeatEating01
	{
		name = "";
		sound[] = {"exile_assets\sound\eating01.ogg", 1, 1}; 
		titles[] = {};
	};
	class SndExileHeartbeatEating02
	{
		name = "";
		sound[] = {"exile_assets\sound\eating02.ogg", 1, 1}; 
		titles[] = {};
	};
	class SndExileHeartbeatDrinking01
	{
		name = "";
		sound[] = {"exile_assets\sound\drinking01.ogg", 1, 1}; 
		titles[] = {};
	};
	class BaDumTss
	{
		name = "";
		sound[] = {"exile_assets\sound\ba_dum_tss", 10, 1};
		titles[] = {};
	};
	class ExileIntro01
	{
		name = "";
		sound[] = {"\a3\dubbing_f_bootcamp\BOOT_m02\15_Introduction\boot_m02_15_introduction_ADA_0.ogg", 1, 1};
		titles[] = {};
	};
	class ExileIntro02
	{
		name = "";
		sound[] = {"\a3\dubbing_f_bootcamp\BOOT_m02\15_Introduction\boot_m02_15_introduction_ADA_1.ogg", 1, 1};
		titles[] = {};
	};
	class ExileIntro03
	{
		name = "";
		sound[] = {"a3\dubbing_f_bootcamp\BOOT_m02\d05_AAF_Anger\boot_m02_d05_aaf_anger_ADA_0.ogg", 1, 1};
		titles[] = {};
	};
	class ExileIntro04
	{
		name = "";
		sound[] = {"a3\dubbing_f_bootcamp\BOOT_m02\d05_AAF_Anger\boot_m02_d05_aaf_anger_ADA_1.ogg", 1, 1};
		titles[] = {};
	};
	class ExileIntro05
	{
		name = "";
		sound[] = {"a3\dubbing_f_bootcamp\BOOT_m02\d05_AAF_Anger\boot_m02_15_introduction_ADA_2.ogg", 1, 1};
		titles[] = {};
	};
	class ExileIntro06
	{
		name = "";
		sound[] = {"\a3\dubbing_f_bootcamp\BOOT_m03\20_Lesson\boot_m03_20_lesson_ADA_0.ogg", 1, 1};
		titles[] = {};
	};
	class ExileIntro07
	{
		name = "";
		sound[] = {"a3\dubbing_f_bootcamp\BOOT_m03\75_Orders\boot_m03_75_orders_ADA_0.ogg", 1, 1};
		titles[] = {};
	};
	class ExileIntro08
	{
		name = "";
		sound[] = {"\a3\dubbing_f_bootcamp\BOOT_m03\80_Get_In\boot_m03_80_get_in_ADA_0.ogg", 1, 1};
		titles[] = {};
	};
	class ExileIntro09
	{
		name = "";
		sound[] = {"\a3\dubbing_f_bootcamp\BOOT_m04\65_Regroup\boot_m04_65_regroup_ADA_0.ogg", 1, 1};
		titles[] = {};
	};
	class ExileIntro10
	{
		name = "";
		sound[] = {"\a3\sounds_f\characters\movements\bodyfallsbodyfall_concrete_3.wss", 1, 1};
		titles[] = {};
	};
	class Exile_Sound_GeigerCounter_Low01
	{
		name = "Geiger Counter";
		sound[] = {"\exile_assets\sound\Exile_GeigerCounter_Low01.wss", 0.5, 1.0};
		titles[] = {};
	};
	class Exile_Sound_GeigerCounter_Low02
	{
		name = "Geiger Counter";
		sound[] = {"\exile_assets\sound\Exile_GeigerCounter_Low02.wss", 0.5, 1.0};
		titles[] = {};
	};
	class Exile_Sound_GeigerCounter_Low03
	{
		name = "Geiger Counter";
		sound[] = {"\exile_assets\sound\Exile_GeigerCounter_Low03.wss", 0.5, 1.0};
		titles[] = {};
	};
	class Exile_Sound_GeigerCounter_Medium01
	{
		name = "Geiger Counter";
		sound[] = {"\exile_assets\sound\Exile_GeigerCounter_Medium01.wss", 0.5, 1.0};
		titles[] = {};
	};
	class Exile_Sound_GeigerCounter_Medium02
	{
		name = "Geiger Counter";
		sound[] = {"\exile_assets\sound\Exile_GeigerCounter_Medium02.wss", 0.5, 1.0};
		titles[] = {};
	};
	class Exile_Sound_GeigerCounter_Medium03
	{
		name = "Geiger Counter";
		sound[] = {"\exile_assets\sound\Exile_GeigerCounter_Medium03.wss", 0.5, 1.0};
		titles[] = {};
	};
	class Exile_Sound_GeigerCounter_High01
	{
		name = "Geiger Counter";
		sound[] = {"\exile_assets\sound\Exile_GeigerCounter_High01.wss", 0.5, 1.0};
		titles[] = {};
	};
	class Exile_Sound_GeigerCounter_High02
	{
		name = "Geiger Counter";
		sound[] = {"\exile_assets\sound\Exile_GeigerCounter_High02.wss", 0.5, 1.0};
		titles[] = {};
	};
	class Exile_Sound_GeigerCounter_High03
	{
		name = "Geiger Counter";
		sound[] = {"\exile_assets\sound\Exile_GeigerCounter_High03.wss", 0.5, 1.0};
		titles[] = {};
	};
	class Exile_Sound_GasMaskBreathing01
	{
		name = "Gas Mask Breathing";
		sound[] = {"\a3\sounds_f\characters\human-sfx\diver-breath-1.wss", 0.25, 1.0};
		titles[] = {};
	};
	class Exile_Sound_GasMaskBreathing02
	{
		name = "Gas Mask Breathing";
		sound[] = {"\a3\sounds_f\characters\human-sfx\diver-breath-3.wss", 0.25, 1.0};
		titles[] = {};
	};
};
class CfgTasks
{
	class Exile_Animal_Rooster
	{
		name = "Rooster Main Task";
		fsm = "\exile_client\fsm\Exile_Animal_Rooster.fsm";
		condition = "\A3\animals_f\Data\scripts\createSingleTask.sqf";
		description = "";
		destination = "";
		resources[] = {};
	};
	class Exile_Animal_Hen
	{
		name = "Hen Main Task";
		fsm = "\exile_client\fsm\Exile_Animal_Hen.fsm";
		condition = "\A3\animals_f\Data\scripts\createSingleTask.sqf";
		description = "";
		destination = "";
		resources[] = {};
	};
	class Exile_Animal_Goat
	{
		name = "Goat Main Task";
		fsm = "\exile_client\fsm\Exile_Animal_Goat.fsm";
		condition = "\A3\animals_f\Data\scripts\createSingleTask.sqf";
		description = "";
		destination = "";
		resources[] = {};
	};
	class Exile_Animal_Sheep
	{
		name = "Sheep Main Task";
		fsm = "\exile_client\fsm\Exile_Animal_Sheep.fsm";
		condition = "\A3\animals_f\Data\scripts\createSingleTask.sqf";
		description = "";
		destination = "";
		resources[] = {};
	};
};
class CfgTaskTypes
{
	class lockpick
	{
		displayName = "lockpick";
		icon = "\exilelife_assets\texture\ui\TaskTypes\lock_ca.paa";
	};
	class spy
	{
		displayName = "spy";
		icon = "\exilelife_assets\texture\ui\TaskTypes\spy_ca.paa";
	};
};
class CfgTwinkleTwister
{
	chances[] = 
	{
		{30, ""}, 					
		{40, "FreeRound"}, 			
		{70, "GloriousKnakworst"}, 	
		{80, "InstaDoc"}, 			
		{95, "CookingPot"}, 		
		{100, "Rangefinder"} 		
	};
	class Prizes 
	{
		class FreeRound
		{
			name = "100 Pop Tabs";
			symbol = "Banana";
			color = "#e4e645";
			type = 0;			
			prize = 100;
		};
		class GloriousKnakworst
		{
			name = "Glorious Knakworst";
			symbol = "Strawberry";
			color = "#c90d0d";
			type = 1;			
			prize = "Exile_Item_GloriousKnakworst";
		};
		class InstaDoc
		{
			name = "InstaDoc";
			symbol = "Cucumber";
			color = "#9eed3f";
			type = 1;			
			prize = "Exile_Item_InstaDoc";
		};
		class CookingPot
		{
			name = "Cooking Pot";
			symbol = "Pineapple";
			color = "#e4e645";
			type = 1;			
			prize = "Exile_Item_CookingPot";
		};
		class Rangefinder
		{
			name = "Rangefinder";
			symbol = "Grape";
			color = "#304bef";
			type = 1;			
			prize = "Rangefinder";
		};
	};
};
class CfgUnitInsignia 
{
	class ExileBrunswik
	{
		author = "Exile Mod Team";
		displayName = "Brunswik";
		texture = "\exile_assets\texture\insignia\brunswik_ca.paa";
		textureVehicle = "";
		scopeArsenal = 2;
	};
	class Exile
	{
		author = "Exile Mod Team";
		displayName = "Exile";
		texture = "\exile_assets\texture\insignia\exile_co.paa";
		textureVehicle = "";
		scopeArsenal = 2;
	};
	class ExileLife
	{
		author = "ExileLife Mod Team";
		displayName = "ExileLife";
		texture = "\exilelife_assets\texture\insignia\exilelife_co.paa";
		textureVehicle = "";
		scopeArsenal = 2;
	};		
};
class CfgVehicleClasses
{
	class ExileLifeConstructions
	{
		displayName = "ExileLife Constructions";
	};
	class ExileLifeContainers
	{
		displayName = "ExileLife Containers";
	};
	class ExileLifeCars
	{
		displayName = "ExileLife Cars";
	};
	class ExileLifeBikes
	{
		displayName = "ExileLife Bikes";
	};
	class ExileLifePlanes
	{
		displayName = "ExileLife Planes";
	};
	class ExileLifeBoats
	{
		displayName = "ExileLife Boats";
	};
	class ExileLifeChoppers
	{
		displayName = "ExileLife Choppers";
	};
};
class ExileLife_Abstract_Action
{
	displayName = "";
	distance = 2;
	condition = "true";
	statement = "";
	insertChildren = "";
	exceptions[] = {};
	showDisabled = 0;
	priority = 0;
	icon = "";
	position = "";
	selection = "";
};
class ExileLife_Wheel_FR_Abstract: ExileLife_Abstract_Action
{
	displayName = "Interact (Front Right Wheel)";
	icon = "\a3\ui_f\data\IGUI\Cfg\VehicleToggles\WheelBreakIconOn_ca.paa";
};
class ExileLife_Wheel_FMR_Abstract: ExileLife_Abstract_Action
{
	displayName = "Interact (Front Mid Right Wheel)";
	icon = "\a3\ui_f\data\IGUI\Cfg\VehicleToggles\WheelBreakIconOn_ca.paa";
};
class ExileLife_Wheel_BR_Abstract: ExileLife_Abstract_Action
{
	displayName = "Interact (Back Right Wheel)";
	icon = "\a3\ui_f\data\IGUI\Cfg\VehicleToggles\WheelBreakIconOn_ca.paa";
};
class ExileLife_Wheel_BMR_Abstract: ExileLife_Abstract_Action
{
	displayName = "Interact (Back Mid Right Wheel)";
	icon = "\a3\ui_f\data\IGUI\Cfg\VehicleToggles\WheelBreakIconOn_ca.paa";
};
class ExileLife_Wheel_FL_Abstract: ExileLife_Abstract_Action
{
	displayName = "Interact (Front Left Wheel)";
	icon = "\a3\ui_f\data\IGUI\Cfg\VehicleToggles\WheelBreakIconOn_ca.paa";
};
class ExileLife_Wheel_FML_Abstract: ExileLife_Abstract_Action
{
	displayName = "Interact (Front Mid Left Wheel)";
	icon = "\a3\ui_f\data\IGUI\Cfg\VehicleToggles\WheelBreakIconOn_ca.paa";
};
class ExileLife_Wheel_BL_Abstract: ExileLife_Abstract_Action
{
	displayName = "Interact (Back Left Wheel)";
	icon = "\a3\ui_f\data\IGUI\Cfg\VehicleToggles\WheelBreakIconOn_ca.paa";
};
class ExileLife_Wheel_BML_Abstract: ExileLife_Abstract_Action
{
	displayName = "Interact (Back Mid Left Wheel)";
	icon = "\a3\ui_f\data\IGUI\Cfg\VehicleToggles\WheelBreakIconOn_ca.paa";
};
class ExileLife_Door_Driver_Abstract: ExileLife_Abstract_Action
{
	displayName = "Interact (Driver Door)";
	icon = "\a3\ui_f\data\IGUI\Cfg\Actions\getindriver_ca.paa";
};
class ExileLife_Door_Passenger_Abstract: ExileLife_Abstract_Action
{
	displayName = "Interact (Passenger Door)";
	icon = "\a3\ui_f\data\IGUI\Cfg\Actions\getincargo_ca.paa";
};
class ExileLife_Fuel_Abstract: ExileLife_Abstract_Action
{
	displayName = "Interact (Fuel Tank)";
	icon = "\a3\ui_f\data\IGUI\Cfg\Actions\refuel_ca.paa";
};
class ExileLife_LandVehicle_Actions
{
	class ExileLife_Wheel_FR {};
	class ExileLife_Wheel_FMR {};
	class ExileLife_Wheel_BR {};
	class ExileLife_Wheel_BMR {};
	class ExileLife_Wheel_FL {};
	class ExileLife_Wheel_FML {};
	class ExileLife_Wheel_BL {};
	class ExileLife_Wheel_BML {};
	class ExileLife_Fuel {};
};
class ExileLife_AirVehicle_Actions
{
	class ExileLife_Door_Driver {};
	class ExileLife_Door_Passenger {};
	class ExileLife_Fuel {};
};
class CBA_Extended_EventHandlers;
class UniformSlotInfo; 
class SmallFire;
class DefaultEventHandlers;
class AnimationSources;
class DefaultAction;
class CfgVehicles
{
	class House_F;
	class House_Small_F;
	class VirtualMan_F;
	class Man;
	class NATO_Box_Base;
	class thing;
	class thingX;
	class NonStrategic;
	class FlagCarrier;
	class Land_WorkStand_F;
	class SignAd_Sponsor_F;
	class SignAd_SponsorS_F;
	class Static;
	class Headgear_Base_F;
	class ReammoBox;
	class Sound;
	class Land_cargo_house_slum_F;
	class Weapon_Base_F;
	class CAManBase: Man
	{
		class ViewPilot;
		class HitPoints
		{
			class HitHead;
			class HitBody;
			class HitHands;
			class HitLegs;
		};
		extCameraPosition[] = {0.4,-0.1,-2.1};
	};
	class Item_Base_F;
	class Bag_Base: ReammoBox
	{
		author="$STR_A3_Bohemia_Interactive";
		mapSize=2;
		_generalMacro="Bag_Base";
		scope=1;
		class TransportMagazines
		{
		};
		class TransportWeapons
		{
		};
		isbackpack=1;
		reversed=1;
		editorCategory="EdCat_Equipment";
		editorSubcategory="EdSubcat_Backpacks";
		vehicleClass="Backpacks";
		allowedSlots[]={901};
		model="\A3\weapons_f\Ammoboxes\bags\Backpack_Small";
		displayName="$STR_A3_Bag_Base0";
		picture="\A3\Weapons_F\Ammoboxes\Bags\data\ui\backpack_CA.paa";
		icon="iconBackpack";
		transportMaxWeapons=1;
		transportMaxMagazines=20;
		class DestructionEffects
		{
		};
		hiddenSelections[]=
		{
			"Camo"
		};
		hiddenSelectionsTextures[]=
		{
			"\A3\weapons_f\ammoboxes\bags\data\backpack_small_co.paa"
		};
		maximumLoad=0;
		side=3;
	};
	class LootWeaponHolder: ReammoBox
	{
		author = "ExileLife Mod Team";
		displayName = "Loot Weapon Holder";
		scope = 1;
		scopeCurator = 0;
		model = "\A3\Weapons_f\dummyweapon.p3d";
		accuracy = 0.2;
		forceSupply = 1;
		showWeaponCargo = 1;
		transportMaxMagazines = 1e+009;
		transportMaxWeapons = 1e+009;
		destrType = "DestructNo";
		transportMaxBackpacks = 0; 
		isGround = 1;
		icon = "iconObject_1x1";
		class TransportMagazines
		{
		};
	};
	class Exile_Unit_Abstract;
	class Exile_Trader_Abstract;
	class Exile_Construction_Abstract_Physics;
	class Exile_Construction_Abstract_Static: NonStrategic
	{
		scope = 1;
		author = "ExileLife Mod Team";
		mapSize = 1;
		armor = 10000;
		cost = 1000;
		icon = "iconObject_1x1";
		destrType = "DestructNo";
		vehicleclass = "ExileConstructions";
		hiddenSelections[] = {};
		hiddenSelectionsTextures[] = {};
		exileRequiresSimulation = 0;
		ExileLifeDisableMove = 0;
	};
	class ReammoBox_F;
	class Exile_Container_Abstract: ReammoBox_F  
	{
		author = "ExileLife Mod Team";
		scope = 1;
		vehicleClass = "Ammo";
		exileContainer = 1;
		icon = "iconCrateWpns";
		simulation = "thingX";
		exileRequiresSimulation = 0;
		maximumLoad = 500;
		armor = 1000;
		destrType = "DestructNo"; 
		exileIsLockable = 0;
		ExileLifeDisableMove = 0; 
		class TransportItems
		{
		};
		class TransportWeapons
		{
		};
		class TransportMagazines
		{
		};
	};
	class Exile_Animal_Abstract;
	class Fish_Base_F;
		class ExileLife_Fish_Abstract: Fish_Base_F
	{
		scope = 1;
		author = "ExileLife Mod Team";
		agentTasks[] = {"AnimalMainTask"};
		hiddenSelectionsTextures[] = {};
		hiddenSelectionMaterials[] = {};
		class EventHandlers
		{
			init = "";
		};
		class Exile
		{
			variations[] = {};
			fleeMove = "";
			idleMove = "";
			gutItem = "";
			dangerSounds[] = {};
			deathSounds[] = {};
			idleSounds[] = {};
		};
	};
class PlantsBase: NonStrategic
{
	scope = 2;
	exileRequiresSimulation = 1;
	armor = 10000;
	destrType = "DestructNo";
	growingtime = 600; 
	multiHarvest = 0; 
	minHarvest = 1;
	maxHarvest = 3;	
	class UserActions
	{
		class Harvest
		{
			displayNameDefault = "Harvest Plant";
			displayName = "Harvest Plant";
			onlyForPlayer = 1;
			priority = 1;
			radius = 1.5;
			showWindow = 0;
			hideOnUse = 1;
			position = "interact";
			condition = "call ExileLifeClient_util_farming_harvestChk;";
			statement =  "call ExileLifeClient_object_farming_harvestPlantRequest;";
		};
		class Water: Harvest
		{
			displayNameDefault = "Water Plant";
			displayName = "Water Plant";
			condition = "call ExileLifeClient_util_farming_waterChk;";
			statement =  "call ExileLifeClient_object_farming_waterPlant;";
		};
		class PullOut: Harvest
		{
			displayNameDefault = "Pullout Plant";
			displayName = "Pullout Plant";
			condition = "call ExileLifeClient_util_farming_pulloutChk;";
			statement = "call ExileLifeClient_object_farming_removePlant;";
		};
	};
	class AnimationSources
	{
		class stage_1
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};
		class stage_2
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};
		class stage_3
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};
		class stage_4 
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};
		class stage_10 
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};
	};
};
class B_Soldier_diver_base_F;
class I_G_engineer_F;
class I_G_medic_F;
class I_G_officer_F;
class I_G_Soldier_A_F;
class I_G_Soldier_exp_F;
class I_G_Soldier_F;
class I_G_Soldier_GL_F;
class I_G_Soldier_LAT_F;
class I_G_Soldier_lite_F;
class I_G_Soldier_M_F;
class I_G_Soldier_SL_F;
class I_G_Soldier_TL_F;
class C_man_1;
class Civilian;
class I_Soldier_diver_base_F;
class O_Soldier_diver_base_F;
class I_G_Soldier_AR_F;
class SoldierWB: CAManBase
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class SoldierEB: CAManBase
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class SoldierGB: CAManBase
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class B_diver_F: B_Soldier_diver_base_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class B_G_engineer_F: I_G_engineer_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class B_G_medic_F: I_G_medic_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class B_G_officer_F: I_G_officer_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class B_G_Soldier_A_F: I_G_Soldier_A_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class B_G_Soldier_exp_F: I_G_Soldier_exp_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class B_G_Soldier_F: I_G_Soldier_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class B_G_Soldier_GL_F: I_G_Soldier_GL_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class B_G_Soldier_LAT_F: I_G_Soldier_LAT_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class B_G_Soldier_lite_F: I_G_Soldier_lite_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class B_G_Soldier_M_F: I_G_Soldier_M_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class B_G_Soldier_SL_F: I_G_Soldier_SL_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class B_G_Soldier_TL_F: I_G_Soldier_TL_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class B_Soldier_base_F: SoldierWB
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class B_Soldier_02_f: B_Soldier_base_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class B_Soldier_03_f: B_Soldier_base_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class B_Soldier_04_f: B_Soldier_base_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class B_Soldier_05_f: B_Soldier_base_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class B_Helipilot_F: B_Soldier_04_f
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class B_helicrew_F: B_Helipilot_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class B_Pilot_F: B_Soldier_05_f
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class B_RangeMaster_F: B_Soldier_base_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class b_soldier_survival_F: B_Soldier_base_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class B_Story_SF_Captain_F: B_Soldier_base_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class C_journalist_F: C_man_1
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class C_Driver_1_F: C_man_1
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class C_man_1_1_F: C_man_1
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class Civilian_F: Civilian
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class C_man_hunter_1_F: C_man_1
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class C_man_p_fugitive_F: C_man_1
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class C_man_p_beggar_F: C_man_p_fugitive_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class C_man_pilot_F: C_man_1
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class C_man_w_worker_F: C_man_1
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class C_Marshal_F: B_RangeMaster_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class C_scientist_F: C_man_w_worker_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class I_diver_F: I_Soldier_diver_base_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class I_G_Soldier_base_F: SoldierGB
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class I_G_Story_SF_Captain_F: B_G_Soldier_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class I_Soldier_base_F: SoldierGB
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class I_officer_F: I_Soldier_base_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class I_Soldier_03_F: I_Soldier_base_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class I_Soldier_04_F: I_Soldier_base_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class O_diver_F: O_Soldier_diver_base_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class O_G_engineer_F: I_G_engineer_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class O_G_medic_F: I_G_medic_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class O_G_officer_F: I_G_officer_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class O_G_Soldier_A_F: I_G_Soldier_A_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class O_G_Soldier_AR_F: I_G_Soldier_AR_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class O_G_Soldier_exp_F: I_G_Soldier_exp_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class O_G_Soldier_F: I_G_Soldier_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class O_G_Soldier_GL_F: I_G_Soldier_GL_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class O_G_Soldier_LAT_F: I_G_Soldier_LAT_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class O_G_Soldier_lite_F: I_G_Soldier_lite_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class O_G_Soldier_M_F: I_G_Soldier_M_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class O_G_Soldier_SL_F: I_G_Soldier_SL_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class O_G_Soldier_TL_F: I_G_Soldier_TL_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class O_Soldier_base_F: SoldierEB
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class O_officer_F: O_Soldier_base_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
class O_Soldier_02_F: O_Soldier_base_F
{
	side = 2; 
	modelSides[] = {2}; 
	faction = "IND_F";
};
	class Land_i_Shop_02_V1_F: House_F 
	{
		class UserActions
		{
			class LockPick_1
			{
			  displayNameDefault="LockPick Lock";
			  displayName="LockPick Lock";
			  position="Door_1_trigger";
			  priority=11;
			  showWindow=0;
			  radius=1.5;
			  onlyForPlayer=1;
			  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
			  statement="['LockpickHouse', [this,1]] spawn ExileClient_action_execute;";
			};
			class ScanLock_1
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,1] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_1
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_1
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 1, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_1_rot') <= 0.5)";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_1
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_1','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 1] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_1: OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_1_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_1',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorClose)";
			};
			class LockPick_2
			{
			  displayNameDefault="LockPick Lock";
			  displayName="LockPick Lock";
			  position="Door_2_trigger";
			  priority=11;
			  showWindow=0;
			  radius=1.5;
			  onlyForPlayer=1;
			  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
			  statement="['LockpickHouse', [this,2]] spawn ExileClient_action_execute;";
			};
			class ScanLock_2
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,2] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_2
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_2
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 2, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_2_rot') <= 0.5)";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_2
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_2','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 2] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_2: OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_2_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_2',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorClose)";
			};
			class LockPick_3
			{
			  displayNameDefault="LockPick Lock";
			  displayName="LockPick Lock";
			  position="Door_3_trigger";
			  priority=11;
			  showWindow=0;
			  radius=1.5;
			  onlyForPlayer=1;
			  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
			  statement="['LockpickHouse', [this,3]] spawn ExileClient_action_execute;";
			};
			class ScanLock_3
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,3] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_3
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 3] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_3
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 3, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 3] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_3
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_3_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 3, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_3_rot') <= 0.5)";
				statement="([this, 'Door_3_rot', 'Door_Handle_3_rot_1', 'Door_Handle_3_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_3
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_3_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_3','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 3] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_3: OpenDoor_3
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_3_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_3',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_3_rot', 'Door_Handle_3_rot_1', 'Door_Handle_3_rot_2'] call BIS_fnc_DoorClose)";
			};
			class LockPick_4
			{
			  displayNameDefault="LockPick Lock";
			  displayName="LockPick Lock";
			  position="Door_4_trigger";
			  priority=11;
			  showWindow=0;
			  radius=1.5;
			  onlyForPlayer=1;
			  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 4, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
			  statement="['LockpickHouse', [this,4]] spawn ExileClient_action_execute;";
			};
			class ScanLock_4
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_4_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 4, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,4] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_4
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_4_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 4, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 4] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_4
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_4_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 4, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 4] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_4
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_4_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 4, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_4_rot') <= 0.5)";
				statement="([this, 'Door_4_rot', 'Door_Handle_4_rot_1', 'Door_Handle_4_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_4
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_4_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_4','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 4] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_4: OpenDoor_4
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_4_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_4',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_4_rot', 'Door_Handle_4_rot_1', 'Door_Handle_4_rot_2'] call BIS_fnc_DoorClose)";
			};
		};
	};
	class Land_i_Shop_01_V1_F: House_F 
	{
		class UserActions
		{
			class LockPick_1
			{
			  displayNameDefault="LockPick Lock";
			  displayName="LockPick Lock";
			  position="Door_1_trigger";
			  priority=11;
			  showWindow=0;
			  radius=1.5;
			  onlyForPlayer=1;
			  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
			  statement="['LockpickHouse', [this,1]] spawn ExileClient_action_execute;";
			};
			class ScanLock_1
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,1] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_1
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_1
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 1, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_1_rot') <= 0.5)";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_1
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_1','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 1] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_1: OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_1_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_1',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorClose)";
			};
			class LockPick_2
			{
			  displayNameDefault="LockPick Lock";
			  displayName="LockPick Lock";
			  position="Door_2_trigger";
			  priority=11;
			  showWindow=0;
			  radius=1.5;
			  onlyForPlayer=1;
			  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
			  statement="['LockpickHouse', [this,2]] spawn ExileClient_action_execute;";
			};
			class ScanLock_2
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,2] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_2
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_2
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 2, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_2_rot') <= 0.5)";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_2
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_2','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 2] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_2: OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_2_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_2',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorClose)";
			};
			class LockPick_3
			{
			  displayNameDefault="LockPick Lock";
			  displayName="LockPick Lock";
			  position="Door_3_trigger";
			  priority=11;
			  showWindow=0;
			  radius=1.5;
			  onlyForPlayer=1;
			  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
			  statement="['LockpickHouse', [this,3]] spawn ExileClient_action_execute;";
			};
			class ScanLock_3
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,3] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_3
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 3] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_3
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 3, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 3] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_3
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_3_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 3, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_3_rot') <= 0.5)";
				statement="([this, 'Door_3_rot', 'Door_Handle_3_rot_1', 'Door_Handle_3_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_3
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_3_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_3','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 3] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_3: OpenDoor_3
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_3_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_3',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_3_rot', 'Door_Handle_3_rot_1', 'Door_Handle_3_rot_2'] call BIS_fnc_DoorClose)";
			};
			class LockPick_4
			{
			  displayNameDefault="LockPick Lock";
			  displayName="LockPick Lock";
			  position="Door_4_trigger";
			  priority=11;
			  showWindow=0;
			  radius=1.5;
			  onlyForPlayer=1;
			  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 4, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
			  statement="['LockpickHouse', [this,4]] spawn ExileClient_action_execute;";
			};
			class ScanLock_4
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_4_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 4, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,4] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_4
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_4_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 4, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 4] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_4
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_4_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 4, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 4] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_4
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_4_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 4, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_4_rot') <= 0.5)";
				statement="([this, 'Door_4_rot', 'Door_Handle_4_rot_1', 'Door_Handle_4_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_4
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_4_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_4','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 4] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_4: OpenDoor_4
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_4_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_4',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_4_rot', 'Door_Handle_4_rot_1', 'Door_Handle_4_rot_2'] call BIS_fnc_DoorClose)";
			};
			class LockPick_5
			{
			  displayNameDefault="LockPick Lock";
			  displayName="LockPick Lock";
			  position="Door_5_trigger";
			  priority=11;
			  showWindow=0;
			  radius=1.5;
			  onlyForPlayer=1;
			  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 5, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
			  statement="['LockpickHouse', [this,5]] spawn ExileClient_action_execute;";
			};
			class ScanLock_5
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_5_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 5, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,5] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_5
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_5_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 5, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 5] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_5
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_5_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 5, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 5] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_5
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_5_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 5, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_5_rot') <= 0.5)";
				statement="([this, 'Door_5_rot', 'Door_Handle_5_rot_1', 'Door_Handle_5_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_5
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_5_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_5','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 5] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_5: OpenDoor_5
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_5_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_5',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_5_rot', 'Door_Handle_5_rot_1', 'Door_Handle_5_rot_2'] call BIS_fnc_DoorClose)";
			};
		};
	};
	class Land_i_House_Small_01_V1_F: House_F 
	{
		class UserActions
		{
			class LockPick_1
			{
			  displayNameDefault="LockPick Lock";
			  displayName="LockPick Lock";
			  position="Door_1_trigger";
			  priority=11;
			  showWindow=0;
			  radius=1.5;
			  onlyForPlayer=1;
			  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
			  statement="['LockpickHouse', [this,1]] spawn ExileClient_action_execute;";
			};
			class ScanLock_1
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,1] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_1
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_1
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 1, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_1_rot') <= 0.5)";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_1
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_1','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 1] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_1: OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_1_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_1',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorClose)";
			};
			class LockPick_2
			{
			  displayNameDefault="LockPick Lock";
			  displayName="LockPick Lock";
			  position="Door_2_trigger";
			  priority=11;
			  showWindow=0;
			  radius=1.5;
			  onlyForPlayer=1;
			  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
			  statement="['LockpickHouse', [this,2]] spawn ExileClient_action_execute;";
			};
			class ScanLock_2
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,2] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_2
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_2
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 2, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_2_rot') <= 0.5)";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_2
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_2','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 2] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_2: OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_2_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_2',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorClose)";
			};
			class LockPick_3
			{
			  displayNameDefault="LockPick Lock";
			  displayName="LockPick Lock";
			  position="Door_3_trigger";
			  priority=11;
			  showWindow=0;
			  radius=1.5;
			  onlyForPlayer=1;
			  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
			  statement="['LockpickHouse', [this,3]] spawn ExileClient_action_execute;";
			};
			class ScanLock_3
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,3] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_3
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 3] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_3
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 3, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 3] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_3
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_3_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 3, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_3_rot') <= 0.5)";
				statement="([this, 'Door_3_rot', 'Door_Handle_3_rot_1', 'Door_Handle_3_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_3
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_3_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_3','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 3] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_3: OpenDoor_3
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_3_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_3',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_3_rot', 'Door_Handle_3_rot_1', 'Door_Handle_3_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_4
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_4_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 4, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,4]] spawn ExileClient_action_execute;";
};
class ScanLock_4
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_4_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 4, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,4] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_4
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_4_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 4, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 4] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_4
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_4_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 4, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 4] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_4
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_4_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 4, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_4_rot') <= 0.5)";
				statement="([this, 'Door_4_rot', 'Door_Handle_4_rot_1', 'Door_Handle_4_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_4
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_4_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_4','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 4] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_4: OpenDoor_4
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_4_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_4',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_4_rot', 'Door_Handle_4_rot_1', 'Door_Handle_4_rot_2'] call BIS_fnc_DoorClose)";
			};
		};
	};
	class Land_i_House_Small_03_V1_F: House_F 
	{
		class UserActions
		{
			class LockPick_1
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_1_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,1]] spawn ExileClient_action_execute;";
};
class ScanLock_1
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,1] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_1
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_1
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 1, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_1_rot') <= 0.5)";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_1
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_1','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 1] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_1: OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_1_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_1',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_2
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_2_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,2]] spawn ExileClient_action_execute;";
};
class ScanLock_2
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,2] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_2
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_2
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 2, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_2_rot') <= 0.5)";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_2
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_2','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 2] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_2: OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_2_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_2',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_3
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_3_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,3]] spawn ExileClient_action_execute;";
};
class ScanLock_3
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,3] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_3
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 3] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_3
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 3, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 3] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_3
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_3_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 3, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_3_rot') <= 0.5)";
				statement="([this, 'Door_3_rot', 'Door_Handle_3_rot_1', 'Door_Handle_3_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_3
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_3_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_3','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 3] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_3: OpenDoor_3
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_3_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_3',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_3_rot', 'Door_Handle_3_rot_1', 'Door_Handle_3_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_4
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_4_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 4, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,4]] spawn ExileClient_action_execute;";
};
class ScanLock_4
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_4_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 4, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,4] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_4
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_4_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 4, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 4] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_4
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_4_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 4, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 4] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_4
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_4_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 4, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_4_rot') <= 0.5)";
				statement="([this, 'Door_4_rot', 'Door_Handle_4_rot_1', 'Door_Handle_4_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_4
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_4_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_4','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 4] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_4: OpenDoor_4
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_4_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_4',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_4_rot', 'Door_Handle_4_rot_1', 'Door_Handle_4_rot_2'] call BIS_fnc_DoorClose)";
			};
		};
	};
	class Land_i_House_Small_02_V1_F: House_Small_F 
	{
		class UserActions
		{
			class LockPick_1
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_1_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,1]] spawn ExileClient_action_execute;";
};
class ScanLock_1
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,1] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_1
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_1
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 1, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_1_rot') <= 0.5)";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_1
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_1','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 1] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_1: OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_1_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_1',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_2
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_2_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,2]] spawn ExileClient_action_execute;";
};
class ScanLock_2
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,2] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_2
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_2
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 2, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_2_rot') <= 0.5)";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_2
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_2','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 2] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_2: OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_2_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_2',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorClose)";
			};
		};
	};
	class Land_i_House_Big_01_V1_F: House_F 
	{
		class UserActions
		{
			class LockPick_1
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_1_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,1]] spawn ExileClient_action_execute;";
};
class ScanLock_1
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,1] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_1
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_1
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 1, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_1_rot') <= 0.5)";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_1
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_1','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 1] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_1: OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_1_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_1',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_2
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_2_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,2]] spawn ExileClient_action_execute;";
};
class ScanLock_2
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,2] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_2
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_2
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 2, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_2_rot') <= 0.5)";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_2
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_2','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 2] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_2: OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_2_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_2',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_3
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_3_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,3]] spawn ExileClient_action_execute;";
};
class ScanLock_3
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,3] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_3
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 3] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_3
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 3, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 3] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_3
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_3_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 3, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_3_rot') <= 0.5)";
				statement="([this, 'Door_3_rot', 'Door_Handle_3_rot_1', 'Door_Handle_3_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_3
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_3_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_3','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 3] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_3: OpenDoor_3
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_3_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_3',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_3_rot', 'Door_Handle_3_rot_1', 'Door_Handle_3_rot_2'] call BIS_fnc_DoorClose)";
			};
		};
	};
	class Land_i_House_Big_02_V1_F: House_F 
	{
		class UserActions
		{
			class LockPick_1
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_1_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,1]] spawn ExileClient_action_execute;";
};
class ScanLock_1
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,1] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_1
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_1
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 1, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_1_rot') <= 0.5)";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_1
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_1','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 1] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_1: OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_1_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_1',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_2
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_2_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,2]] spawn ExileClient_action_execute;";
};
class ScanLock_2
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,2] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_2
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_2
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 2, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_2_rot') <= 0.5)";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_2
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_2','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 2] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_2: OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_2_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_2',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_3
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_3_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,3]] spawn ExileClient_action_execute;";
};
class ScanLock_3
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,3] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_3
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 3] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_3
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 3, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 3] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_3
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_3_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 3, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_3_rot') <= 0.5)";
				statement="([this, 'Door_3_rot', 'Door_Handle_3_rot_1', 'Door_Handle_3_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_3
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_3_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_3','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 3] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_3: OpenDoor_3
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_3_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_3',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_3_rot', 'Door_Handle_3_rot_1', 'Door_Handle_3_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_4
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_4_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 4, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,4]] spawn ExileClient_action_execute;";
};
class ScanLock_4
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_4_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 4, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,4] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_4
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_4_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 4, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 4] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_4
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_4_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 4, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 4] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_4
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_4_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 4, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_4_rot') <= 0.5)";
				statement="([this, 'Door_4_rot', 'Door_Handle_4_rot_1', 'Door_Handle_4_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_4
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_4_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_4','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 4] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_4: OpenDoor_4
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_4_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_4',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_4_rot', 'Door_Handle_4_rot_1', 'Door_Handle_4_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_5
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_5_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 5, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,5]] spawn ExileClient_action_execute;";
};
class ScanLock_5
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_5_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 5, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,5] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_5
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_5_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 5, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 5] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_5
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_5_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 5, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 5] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_5
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_5_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 5, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_5_rot') <= 0.5)";
				statement="([this, 'Door_5_rot', 'Door_Handle_5_rot_1', 'Door_Handle_5_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_5
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_5_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_5','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 5] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_5: OpenDoor_5
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_5_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_5',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_5_rot', 'Door_Handle_5_rot_1', 'Door_Handle_5_rot_2'] call BIS_fnc_DoorClose)";
			};
			class LockPick_6
			{
			  displayNameDefault="LockPick Lock";
			  displayName="LockPick Lock";
			  position="Door_6_trigger";
			  priority=11;
			  showWindow=0;
			  radius=1.5;
			  onlyForPlayer=1;
			  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 6, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
			  statement="['LockpickHouse', [this,6]] spawn ExileClient_action_execute;";
			};
			class ScanLock_6
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_6_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 6, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,6] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_6
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_6_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 6, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 6] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_6
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_6_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 6, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 6] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_6
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_6_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 6, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_6_rot') <= 0.5)";
				statement="([this, 'Door_6_rot', 'Door_Handle_6_rot_1', 'Door_Handle_6_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_6
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_6_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_6','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 6] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_6: OpenDoor_6
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_6_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_6',0]) != 1) && ((this animationPhase 'Hitzone_2_hide') < 0.99999				)";
				statement="([this, 'Door_6_rot', 'Door_Handle_6_rot_1', 'Door_Handle_6_rot_2'] call BIS_fnc_DoorClose)";
			};
		};
	};
	class Land_i_Stone_HouseSmall_V1_F: House_F 
	{
		class UserActions
		{
			class LockPick_1
			{
			  displayNameDefault="LockPick Lock";
			  displayName="LockPick Lock";
			  position="Door_1_trigger";
			  priority=11;
			  showWindow=0;
			  radius=1.5;
			  onlyForPlayer=1;
			  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
			  statement="['LockpickHouse', [this,1]] spawn ExileClient_action_execute;";
			};
			class ScanLock_1
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,1] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_1
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_1
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 1, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_1_rot') <= 0.5)";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_1
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_1','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 1] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_1: OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_1_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_1',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorClose)";
			};
			class LockPick_2
			{
			  displayNameDefault="LockPick Lock";
			  displayName="LockPick Lock";
			  position="Door_2_trigger";
			  priority=11;
			  showWindow=0;
			  radius=1.5;
			  onlyForPlayer=1;
			  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
			  statement="['LockpickHouse', [this,2]] spawn ExileClient_action_execute;";
			};
			class ScanLock_2
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,2] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_2
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_2
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 2, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_2_rot') <= 0.5)";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_2
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_2','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 2] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_2: OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_2_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_2',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorClose)";
			};
			class LockPick_3
			{
			  displayNameDefault="LockPick Lock";
			  displayName="LockPick Lock";
			  position="Door_3_trigger";
			  priority=11;
			  showWindow=0;
			  radius=1.5;
			  onlyForPlayer=1;
			  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
			  statement="['LockpickHouse', [this,3]] spawn ExileClient_action_execute;";
			};
			class ScanLock_3
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,3] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_3
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 3] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_3
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 3, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 3] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_3
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_3_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 3, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_3_rot') <= 0.5)";
				statement="([this, 'Door_3_rot', 'Door_Handle_3_rot_1', 'Door_Handle_3_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_3
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_3_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_3','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 3] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_3: OpenDoor_3
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_3_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_3',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_3_rot', 'Door_Handle_3_rot_1', 'Door_Handle_3_rot_2'] call BIS_fnc_DoorClose)";
			};
		};
	};
	class Land_i_Stone_Shed_V1_F: House_Small_F 
	{
		class UserActions
		{
			class LockPick_1
			{
			  displayNameDefault="LockPick Lock";
			  displayName="LockPick Lock";
			  position="Door_1_trigger";
			  priority=11;
			  showWindow=0;
			  radius=1.5;
			  onlyForPlayer=1;
			  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
			  statement="['LockpickHouse', [this,1]] spawn ExileClient_action_execute;";
			};
			class ScanLock_1
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,1] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_1
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_1
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 1, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_1_rot') <= 0.5)";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_1
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_1','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 1] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_1: OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_1_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_1',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorClose)";
			};
		};
	};
	class Land_Slum_House02_F: House_Small_F 
	{
		class UserActions
		{
			class LockPick_1
			{
			  displayNameDefault="LockPick Lock";
			  displayName="LockPick Lock";
			  position="Door_1_trigger";
			  priority=11;
			  showWindow=0;
			  radius=1.5;
			  onlyForPlayer=1;
			  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
			  statement="['LockpickHouse', [this,1]] spawn ExileClient_action_execute;";
			};
			class ScanLock_1
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,1] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_1
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_1
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 1, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_1_rot') <= 0.5)";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_1
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_1','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 1] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_1: OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_1_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_1',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorClose)";
			};
			class LockPick_2
			{
			  displayNameDefault="LockPick Lock";
			  displayName="LockPick Lock";
			  position="Door_2_trigger";
			  priority=11;
			  showWindow=0;
			  radius=1.5;
			  onlyForPlayer=1;
			  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
			  statement="['LockpickHouse', [this,2]] spawn ExileClient_action_execute;";
			};
			class ScanLock_2
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,2] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_2
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_2
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 2, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_2_rot') <= 0.5)";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_2
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_2','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 2] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_2: OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_2_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_2',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorClose)";
			};
		};
	};
	class Land_Slum_House01_F: House_Small_F 
	{
		class UserActions
		{
			class LockPick_1
			{
			  displayNameDefault="LockPick Lock";
			  displayName="LockPick Lock";
			  position="Door_1_trigger";
			  priority=11;
			  showWindow=0;
			  radius=1.5;
			  onlyForPlayer=1;
			  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
			  statement="['LockpickHouse', [this,1]] spawn ExileClient_action_execute;";
			};
			class ScanLock_1
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,1] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_1
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_1
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 1, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_1_rot') <= 0.5)";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_1
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_1','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 1] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_1: OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_1_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_1',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorClose)";
			};
		};
	};
	class Land_Slum_House03_F: Land_Slum_House01_F
	{
		class UserActions
		{
			class LockPick_1
			{
			  displayNameDefault="LockPick Lock";
			  displayName="LockPick Lock";
			  position="Door_1_trigger";
			  priority=11;
			  showWindow=0;
			  radius=1.5;
			  onlyForPlayer=1;
			  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
			  statement="['LockpickHouse', [this,1]] spawn ExileClient_action_execute;";
			};
			class ScanLock_1
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,1] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_1
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_1
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 1, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_1_rot') <= 0.5)";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_1
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_1','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 1] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_1: OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_1_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_1',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorClose)";
			};
		};
	};
	class Land_i_Stone_Shed_V3_F: Land_i_Stone_Shed_V1_F
	{
		class UserActions
		{
			class LockPick_1
			{
			  displayNameDefault="LockPick Lock";
			  displayName="LockPick Lock";
			  position="Door_1_trigger";
			  priority=11;
			  showWindow=0;
			  radius=1.5;
			  onlyForPlayer=1;
			  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
			  statement="['LockpickHouse', [this,1]] spawn ExileClient_action_execute;";
			};
			class ScanLock_1
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,1] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_1
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_1
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 1, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_1_rot') <= 0.5)";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_1
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_1','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 1] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_1: OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_1_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_1',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorClose)";
			};
		};
	};
	class Land_i_Stone_Shed_V2_F: Land_i_Stone_Shed_V1_F
	{
		class UserActions
		{
			class LockPick_1
			{
			  displayNameDefault="LockPick Lock";
			  displayName="LockPick Lock";
			  position="Door_1_trigger";
			  priority=11;
			  showWindow=0;
			  radius=1.5;
			  onlyForPlayer=1;
			  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
			  statement="['LockpickHouse', [this,1]] spawn ExileClient_action_execute;";
			};
			class ScanLock_1
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,1] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_1
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_1
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 1, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_1_rot') <= 0.5)";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_1
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_1','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 1] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_1: OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_1_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_1',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorClose)";
			};
		};
	};
	class Land_i_Stone_HouseSmall_V3_F: Land_i_Stone_HouseSmall_V1_F
	{
		class UserActions
		{
			class LockPick_1
			{
			  displayNameDefault="LockPick Lock";
			  displayName="LockPick Lock";
			  position="Door_1_trigger";
			  priority=11;
			  showWindow=0;
			  radius=1.5;
			  onlyForPlayer=1;
			  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
			  statement="['LockpickHouse', [this,1]] spawn ExileClient_action_execute;";
			};
			class ScanLock_1
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,1] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_1
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_1
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 1, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_1_rot') <= 0.5)";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_1
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_1','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 1] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_1: OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_1_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_1',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_2
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_2_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,2]] spawn ExileClient_action_execute;";
};
class ScanLock_2
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,2] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_2
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_2
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 2, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_2_rot') <= 0.5)";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_2
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_2','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 2] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_2: OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_2_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_2',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_3
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_3_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,3]] spawn ExileClient_action_execute;";
};
class ScanLock_3
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,3] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_3
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 3] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_3
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 3, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 3] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_3
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_3_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 3, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_3_rot') <= 0.5)";
				statement="([this, 'Door_3_rot', 'Door_Handle_3_rot_1', 'Door_Handle_3_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_3
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_3_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_3','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 3] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_3: OpenDoor_3
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_3_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_3',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_3_rot', 'Door_Handle_3_rot_1', 'Door_Handle_3_rot_2'] call BIS_fnc_DoorClose)";
			};
		};
	};
	class Land_i_Stone_HouseSmall_V2_F: Land_i_Stone_HouseSmall_V1_F
	{
		class UserActions
		{
			class LockPick_1
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_1_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,1]] spawn ExileClient_action_execute;";
};
class ScanLock_1
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,1] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_1
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_1
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 1, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_1_rot') <= 0.5)";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_1
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_1','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 1] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_1: OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_1_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_1',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_2
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_2_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,2]] spawn ExileClient_action_execute;";
};
class ScanLock_2
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,2] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_2
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_2
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 2, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_2_rot') <= 0.5)";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_2
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_2','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 2] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_2: OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_2_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_2',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_3
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_3_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,3]] spawn ExileClient_action_execute;";
};
class ScanLock_3
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,3] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_3
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 3] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_3
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 3, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 3] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_3
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_3_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 3, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_3_rot') <= 0.5)";
				statement="([this, 'Door_3_rot', 'Door_Handle_3_rot_1', 'Door_Handle_3_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_3
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_3_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_3','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 3] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_3: OpenDoor_3
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_3_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_3',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_3_rot', 'Door_Handle_3_rot_1', 'Door_Handle_3_rot_2'] call BIS_fnc_DoorClose)";
			};
		};
	};
	class Land_i_Shop_02_V3_F: Land_i_Shop_02_V1_F
	{
		class UserActions
		{
			class LockPick_1
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_1_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,1]] spawn ExileClient_action_execute;";
};
class ScanLock_1
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,1] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_1
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_1
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 1, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_1_rot') <= 0.5)";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_1
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_1','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 1] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_1: OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_1_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_1',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_2
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_2_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,2]] spawn ExileClient_action_execute;";
};
class ScanLock_2
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,2] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_2
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_2
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 2, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_2_rot') <= 0.5)";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_2
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_2','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 2] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_2: OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_2_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_2',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_3
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_3_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,3]] spawn ExileClient_action_execute;";
};
class ScanLock_3
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,3] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_3
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 3] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_3
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 3, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 3] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_3
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_3_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 3, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_3_rot') <= 0.5)";
				statement="([this, 'Door_3_rot', 'Door_Handle_3_rot_1', 'Door_Handle_3_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_3
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_3_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_3','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 3] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_3: OpenDoor_3
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_3_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_3',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_3_rot', 'Door_Handle_3_rot_1', 'Door_Handle_3_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_4
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_4_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 4, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,4]] spawn ExileClient_action_execute;";
};
class ScanLock_4
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_4_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 4, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,4] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_4
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_4_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 4, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 4] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_4
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_4_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 4, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 4] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_4
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_4_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 4, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_4_rot') <= 0.5)";
				statement="([this, 'Door_4_rot', 'Door_Handle_4_rot_1', 'Door_Handle_4_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_4
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_4_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_4','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 4] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_4: OpenDoor_4
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_4_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_4',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_4_rot', 'Door_Handle_4_rot_1', 'Door_Handle_4_rot_2'] call BIS_fnc_DoorClose)";
			};
		};
	};
	class Land_i_Shop_02_V2_F: Land_i_Shop_02_V1_F
	{
		class UserActions
		{
			class LockPick_1
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_1_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,1]] spawn ExileClient_action_execute;";
};
class ScanLock_1
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,1] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_1
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_1
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 1, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_1_rot') <= 0.5)";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_1
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_1','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 1] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_1: OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_1_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_1',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_2
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_2_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,2]] spawn ExileClient_action_execute;";
};
class ScanLock_2
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,2] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_2
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_2
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 2, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_2_rot') <= 0.5)";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_2
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_2','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 2] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_2: OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_2_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_2',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_3
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_3_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,3]] spawn ExileClient_action_execute;";
};
class ScanLock_3
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,3] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_3
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 3] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_3
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 3, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 3] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_3
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_3_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 3, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_3_rot') <= 0.5)";
				statement="([this, 'Door_3_rot', 'Door_Handle_3_rot_1', 'Door_Handle_3_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_3
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_3_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_3','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 3] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_3: OpenDoor_3
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_3_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_3',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_3_rot', 'Door_Handle_3_rot_1', 'Door_Handle_3_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_4
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_4_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 4, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,4]] spawn ExileClient_action_execute;";
};
class ScanLock_4
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_4_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 4, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,4] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_4
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_4_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 4, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 4] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_4
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_4_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 4, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 4] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_4
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_4_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 4, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_4_rot') <= 0.5)";
				statement="([this, 'Door_4_rot', 'Door_Handle_4_rot_1', 'Door_Handle_4_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_4
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_4_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_4','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 4] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_4: OpenDoor_4
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_4_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_4',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_4_rot', 'Door_Handle_4_rot_1', 'Door_Handle_4_rot_2'] call BIS_fnc_DoorClose)";
			};
		};
	};
	class Land_i_Shop_01_V3_F: Land_i_Shop_01_V1_F
	{
		class UserActions
		{
			class LockPick_1
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_1_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,1]] spawn ExileClient_action_execute;";
};
class ScanLock_1
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,1] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_1
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_1
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 1, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_1_rot') <= 0.5)";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_1
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_1','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 1] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_1: OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_1_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_1',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_2
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_2_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,2]] spawn ExileClient_action_execute;";
};
class ScanLock_2
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,2] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_2
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_2
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 2, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_2_rot') <= 0.5)";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_2
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_2','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 2] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_2: OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_2_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_2',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_3
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_3_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,3]] spawn ExileClient_action_execute;";
};
class ScanLock_3
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,3] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_3
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 3] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_3
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 3, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 3] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_3
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_3_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 3, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_3_rot') <= 0.5)";
				statement="([this, 'Door_3_rot', 'Door_Handle_3_rot_1', 'Door_Handle_3_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_3
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_3_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_3','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 3] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_3: OpenDoor_3
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_3_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_3',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_3_rot', 'Door_Handle_3_rot_1', 'Door_Handle_3_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_4
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_4_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 4, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,4]] spawn ExileClient_action_execute;";
};
class ScanLock_4
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_4_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 4, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,4] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_4
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_4_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 4, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 4] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_4
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_4_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 4, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 4] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_4
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_4_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 4, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_4_rot') <= 0.5)";
				statement="([this, 'Door_4_rot', 'Door_Handle_4_rot_1', 'Door_Handle_4_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_4
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_4_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_4','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 4] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_4: OpenDoor_4
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_4_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_4',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_4_rot', 'Door_Handle_4_rot_1', 'Door_Handle_4_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_5
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_5_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 5, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,5]] spawn ExileClient_action_execute;";
};
class ScanLock_5
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_5_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 5, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,5] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_5
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_5_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 5, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 5] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_5
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_5_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 5, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 5] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_5
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_5_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 5, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_5_rot') <= 0.5)";
				statement="([this, 'Door_5_rot', 'Door_Handle_5_rot_1', 'Door_Handle_5_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_5
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_5_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_5','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 5] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_5: OpenDoor_5
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_5_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_5',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_5_rot', 'Door_Handle_5_rot_1', 'Door_Handle_5_rot_2'] call BIS_fnc_DoorClose)";
			};
		};
	};
	class Land_i_Shop_01_V2_F: Land_i_Shop_01_V1_F
	{
		class UserActions
		{
			class LockPick_1
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_1_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,1]] spawn ExileClient_action_execute;";
};
class ScanLock_1
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,1] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_1
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_1
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 1, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_1_rot') <= 0.5)";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_1
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_1','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 1] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_1: OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_1_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_1',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_2
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_2_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,2]] spawn ExileClient_action_execute;";
};
class ScanLock_2
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,2] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_2
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_2
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 2, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_2_rot') <= 0.5)";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_2
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_2','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 2] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_2: OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_2_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_2',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_3
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_3_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,3]] spawn ExileClient_action_execute;";
};
class ScanLock_3
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,3] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_3
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 3] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_3
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 3, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 3] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_3
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_3_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 3, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_3_rot') <= 0.5)";
				statement="([this, 'Door_3_rot', 'Door_Handle_3_rot_1', 'Door_Handle_3_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_3
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_3_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_3','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 3] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_3: OpenDoor_3
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_3_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_3',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_3_rot', 'Door_Handle_3_rot_1', 'Door_Handle_3_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_4
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_4_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 4, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,4]] spawn ExileClient_action_execute;";
};
class ScanLock_4
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_4_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 4, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,4] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_4
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_4_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 4, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 4] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_4
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_4_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 4, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 4] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_4
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_4_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 4, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_4_rot') <= 0.5)";
				statement="([this, 'Door_4_rot', 'Door_Handle_4_rot_1', 'Door_Handle_4_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_4
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_4_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_4','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 4] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_4: OpenDoor_4
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_4_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_4',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_4_rot', 'Door_Handle_4_rot_1', 'Door_Handle_4_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_5
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_5_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 5, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,5]] spawn ExileClient_action_execute;";
};
class ScanLock_5
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_5_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 5, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,5] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_5
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_5_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 5, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 5] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_5
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_5_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 5, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 5] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_5
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_5_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 5, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_5_rot') <= 0.5)";
				statement="([this, 'Door_5_rot', 'Door_Handle_5_rot_1', 'Door_Handle_5_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_5
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_5_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_5','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 5] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_5: OpenDoor_5
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_5_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_5',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_5_rot', 'Door_Handle_5_rot_1', 'Door_Handle_5_rot_2'] call BIS_fnc_DoorClose)";
			};
		};
	};
	class Land_i_House_Small_02_V3_F: Land_i_House_Small_02_V1_F
	{
		class UserActions
		{
			class LockPick_1
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_1_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,1]] spawn ExileClient_action_execute;";
};
class ScanLock_1
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,1] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_1
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_1
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 1, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_1_rot') <= 0.5)";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_1
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_1','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 1] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_1: OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_1_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_1',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_2
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_2_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,2]] spawn ExileClient_action_execute;";
};
class ScanLock_2
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,2] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_2
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_2
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 2, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_2_rot') <= 0.5)";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_2
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_2','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 2] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_2: OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_2_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_2',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorClose)";
			};
		};
	};
	class Land_i_House_Small_02_V2_F: Land_i_House_Small_02_V1_F
	{
		class UserActions
		{
			class LockPick_1
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_1_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,1]] spawn ExileClient_action_execute;";
};
class ScanLock_1
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,1] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_1
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_1
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 1, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_1_rot') <= 0.5)";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_1
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_1','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 1] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_1: OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_1_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_1',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_2
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_2_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,2]] spawn ExileClient_action_execute;";
};
class ScanLock_2
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,2] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_2
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_2
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 2, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_2_rot') <= 0.5)";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_2
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_2','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 2] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_2: OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_2_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_2',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorClose)";
			};
		};
	};
	class Land_i_House_Small_01_V3_F: Land_i_House_Small_01_V1_F
	{
		class UserActions
		{
			class LockPick_1
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_1_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,1]] spawn ExileClient_action_execute;";
};
class ScanLock_1
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,1] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_1
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_1
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 1, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_1_rot') <= 0.5)";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_1
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_1','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 1] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_1: OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_1_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_1',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_2
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_2_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,2]] spawn ExileClient_action_execute;";
};
class ScanLock_2
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,2] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_2
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_2
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 2, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_2_rot') <= 0.5)";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_2
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_2','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 2] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_2: OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_2_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_2',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_3
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_3_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,3]] spawn ExileClient_action_execute;";
};
class ScanLock_3
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,3] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_3
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 3] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_3
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 3, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 3] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_3
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_3_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 3, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_3_rot') <= 0.5)";
				statement="([this, 'Door_3_rot', 'Door_Handle_3_rot_1', 'Door_Handle_3_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_3
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_3_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_3','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 3] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_3: OpenDoor_3
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_3_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_3',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_3_rot', 'Door_Handle_3_rot_1', 'Door_Handle_3_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_4
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_4_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 4, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,4]] spawn ExileClient_action_execute;";
};
class ScanLock_4
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_4_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 4, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,4] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_4
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_4_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 4, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 4] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_4
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_4_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 4, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 4] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_4
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_4_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 4, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_4_rot') <= 0.5)";
				statement="([this, 'Door_4_rot', 'Door_Handle_4_rot_1', 'Door_Handle_4_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_4
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_4_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_4','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 4] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_4: OpenDoor_4
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_4_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_4',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_4_rot', 'Door_Handle_4_rot_1', 'Door_Handle_4_rot_2'] call BIS_fnc_DoorClose)";
			};
		};
	};
	class Land_i_House_Small_01_V2_F: Land_i_House_Small_01_V1_F
	{
		class UserActions
		{
			class LockPick_1
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_1_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,1]] spawn ExileClient_action_execute;";
};
class ScanLock_1
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,1] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_1
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_1
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 1, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_1_rot') <= 0.5)";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_1
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_1','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 1] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_1: OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_1_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_1',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_2
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_2_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,2]] spawn ExileClient_action_execute;";
};
class ScanLock_2
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,2] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_2
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_2
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 2, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_2_rot') <= 0.5)";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_2
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_2','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 2] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_2: OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_2_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_2',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_3
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_3_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,3]] spawn ExileClient_action_execute;";
};
class ScanLock_3
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,3] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_3
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 3] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_3
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 3, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 3] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_3
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_3_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 3, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_3_rot') <= 0.5)";
				statement="([this, 'Door_3_rot', 'Door_Handle_3_rot_1', 'Door_Handle_3_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_3
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_3_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_3','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 3] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_3: OpenDoor_3
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_3_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_3',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_3_rot', 'Door_Handle_3_rot_1', 'Door_Handle_3_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_4
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_4_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 4, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,4]] spawn ExileClient_action_execute;";
};
class ScanLock_4
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_4_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 4, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,4] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_4
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_4_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 4, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 4] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_4
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_4_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 4, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 4] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_4
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_4_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 4, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_4_rot') <= 0.5)";
				statement="([this, 'Door_4_rot', 'Door_Handle_4_rot_1', 'Door_Handle_4_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_4
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_4_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_4','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 4] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_4: OpenDoor_4
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_4_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_4',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_4_rot', 'Door_Handle_4_rot_1', 'Door_Handle_4_rot_2'] call BIS_fnc_DoorClose)";
			};
		};
	};
	class Land_i_House_Big_02_V3_F: Land_i_House_Big_02_V1_F
	{
		class UserActions
		{
			class LockPick_1
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_1_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,1]] spawn ExileClient_action_execute;";
};
class ScanLock_1
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,1] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_1
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_1
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 1, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_1_rot') <= 0.5)";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_1
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_1','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 1] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_1: OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_1_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_1',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_2
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_2_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,2]] spawn ExileClient_action_execute;";
};
class ScanLock_2
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,2] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_2
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_2
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 2, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_2_rot') <= 0.5)";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_2
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_2','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 2] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_2: OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_2_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_2',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_3
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_3_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,3]] spawn ExileClient_action_execute;";
};
class ScanLock_3
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,3] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_3
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 3] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_3
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 3, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 3] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_3
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_3_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 3, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_3_rot') <= 0.5)";
				statement="([this, 'Door_3_rot', 'Door_Handle_3_rot_1', 'Door_Handle_3_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_3
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_3_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_3','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 3] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_3: OpenDoor_3
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_3_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_3',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_3_rot', 'Door_Handle_3_rot_1', 'Door_Handle_3_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_4
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_4_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 4, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,4]] spawn ExileClient_action_execute;";
};
class ScanLock_4
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_4_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 4, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,4] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_4
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_4_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 4, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 4] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_4
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_4_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 4, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 4] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_4
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_4_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 4, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_4_rot') <= 0.5)";
				statement="([this, 'Door_4_rot', 'Door_Handle_4_rot_1', 'Door_Handle_4_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_4
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_4_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_4','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 4] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_4: OpenDoor_4
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_4_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_4',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_4_rot', 'Door_Handle_4_rot_1', 'Door_Handle_4_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_5
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_5_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 5, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,5]] spawn ExileClient_action_execute;";
};
class ScanLock_5
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_5_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 5, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,5] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_5
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_5_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 5, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 5] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_5
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_5_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 5, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 5] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_5
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_5_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 5, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_5_rot') <= 0.5)";
				statement="([this, 'Door_5_rot', 'Door_Handle_5_rot_1', 'Door_Handle_5_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_5
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_5_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_5','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 5] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_5: OpenDoor_5
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_5_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_5',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_5_rot', 'Door_Handle_5_rot_1', 'Door_Handle_5_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_6
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_6_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 6, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,6]] spawn ExileClient_action_execute;";
};
class ScanLock_6
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_6_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 6, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,6] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_6
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_6_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 6, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 6] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_6
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_6_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 6, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 6] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_6
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_6_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 6, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_6_rot') <= 0.5)";
				statement="([this, 'Door_6_rot', 'Door_Handle_6_rot_1', 'Door_Handle_6_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_6
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_6_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_6','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 6] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_6: OpenDoor_6
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_6_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_6',0]) != 1) && ((this animationPhase 'Hitzone_2_hide') < 0.99999				)";
				statement="([this, 'Door_6_rot', 'Door_Handle_6_rot_1', 'Door_Handle_6_rot_2'] call BIS_fnc_DoorClose)";
			};
		};
	};
	class Land_i_House_Big_02_V2_F: Land_i_House_Big_02_V1_F
	{
		class UserActions
		{
			class LockPick_1
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_1_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,1]] spawn ExileClient_action_execute;";
};
class ScanLock_1
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,1] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_1
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_1
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 1, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_1_rot') <= 0.5)";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_1
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_1','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 1] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_1: OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_1_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_1',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_2
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_2_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,2]] spawn ExileClient_action_execute;";
};
class ScanLock_2
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,2] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_2
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_2
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 2, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_2_rot') <= 0.5)";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_2
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_2','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 2] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_2: OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_2_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_2',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_3
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_3_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,3]] spawn ExileClient_action_execute;";
};
class ScanLock_3
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,3] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_3
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 3] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_3
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 3, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 3] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_3
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_3_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 3, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_3_rot') <= 0.5)";
				statement="([this, 'Door_3_rot', 'Door_Handle_3_rot_1', 'Door_Handle_3_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_3
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_3_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_3','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 3] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_3: OpenDoor_3
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_3_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_3',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_3_rot', 'Door_Handle_3_rot_1', 'Door_Handle_3_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_4
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_4_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 4, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,4]] spawn ExileClient_action_execute;";
};
class ScanLock_4
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_4_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 4, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,4] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_4
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_4_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 4, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 4] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_4
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_4_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 4, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 4] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_4
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_4_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 4, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_4_rot') <= 0.5)";
				statement="([this, 'Door_4_rot', 'Door_Handle_4_rot_1', 'Door_Handle_4_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_4
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_4_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_4','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 4] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_4: OpenDoor_4
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_4_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_4',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_4_rot', 'Door_Handle_4_rot_1', 'Door_Handle_4_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_5
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_5_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 5, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,5]] spawn ExileClient_action_execute;";
};
class ScanLock_5
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_5_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 5, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,5] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_5
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_5_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 5, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 5] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_5
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_5_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 5, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 5] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_5
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_5_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 5, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_5_rot') <= 0.5)";
				statement="([this, 'Door_5_rot', 'Door_Handle_5_rot_1', 'Door_Handle_5_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_5
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_5_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_5','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 5] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_5: OpenDoor_5
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_5_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_5',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_5_rot', 'Door_Handle_5_rot_1', 'Door_Handle_5_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_6
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_6_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 6, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,6]] spawn ExileClient_action_execute;";
};
class ScanLock_6
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_6_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 6, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,6] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_6
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_6_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 6, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 6] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_6
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_6_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 6, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 6] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_6
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_6_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 6, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_6_rot') <= 0.5)";
				statement="([this, 'Door_6_rot', 'Door_Handle_6_rot_1', 'Door_Handle_6_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_6
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_6_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_6','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 6] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_6: OpenDoor_6
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_6_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_6',0]) != 1) && ((this animationPhase 'Hitzone_2_hide') < 0.99999				)";
				statement="([this, 'Door_6_rot', 'Door_Handle_6_rot_1', 'Door_Handle_6_rot_2'] call BIS_fnc_DoorClose)";
			};
		};
	};
	class Land_i_House_Big_01_V3_F: Land_i_House_Big_01_V1_F
	{
		class UserActions
		{
			class LockPick_1
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_1_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,1]] spawn ExileClient_action_execute;";
};
class ScanLock_1
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,1] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_1
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_1
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 1, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_1_rot') <= 0.5)";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_1
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_1','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 1] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_1: OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_1_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_1',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_2
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_2_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,2]] spawn ExileClient_action_execute;";
};
class ScanLock_2
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,2] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_2
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_2
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 2, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_2_rot') <= 0.5)";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_2
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_2','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 2] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_2: OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_2_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_2',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_3
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_3_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,3]] spawn ExileClient_action_execute;";
};
class ScanLock_3
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,3] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_3
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 3] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_3
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 3, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 3] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_3
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_3_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 3, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_3_rot') <= 0.5)";
				statement="([this, 'Door_3_rot', 'Door_Handle_3_rot_1', 'Door_Handle_3_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_3
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_3_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_3','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 3] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_3: OpenDoor_3
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_3_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_3',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_3_rot', 'Door_Handle_3_rot_1', 'Door_Handle_3_rot_2'] call BIS_fnc_DoorClose)";
			};
		};
	};
	class Land_i_House_Big_01_V2_F: Land_i_House_Big_01_V1_F
	{
		class UserActions
		{
			class LockPick_1
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_1_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,1]] spawn ExileClient_action_execute;";
};
class ScanLock_1
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,1] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_1
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_1
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_1_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 1, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 1] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 1, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_1_rot') <= 0.5)";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_1
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_1_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_1','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 1] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_1: OpenDoor_1
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_1_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_1',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_1_rot', 'Door_Handle_1_rot_1', 'Door_Handle_1_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_2
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_2_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,2]] spawn ExileClient_action_execute;";
};
class ScanLock_2
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,2] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_2
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_2
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_2_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 2, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 2] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 2, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_2_rot') <= 0.5)";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_2
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_2_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_2','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 2] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_2: OpenDoor_2
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_2_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_2',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_2_rot', 'Door_Handle_2_rot_1', 'Door_Handle_2_rot_2'] call BIS_fnc_DoorClose)";
			};
class LockPick_3
{
  displayNameDefault="LockPick Lock";
  displayName="LockPick Lock";
  position="Door_3_trigger";
  priority=11;
  showWindow=0;
  radius=1.5;
  onlyForPlayer=1;
  condition="('Exile_Item_Knife' in (magazines player)) && ([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
  statement="['LockpickHouse', [this,3]] spawn ExileClient_action_execute;";
};
class ScanLock_3
			{
				displayNameDefault="Scan Lock";
				displayName="Scan Lock";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="('Exile_Item_ThermalScannerPro' in (magazines player)) && ([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this,3] call ExileClient_object_lock_scan";
			};
			class UnlockDoor_3
			{
				displayNameDefault="Unlock Door";
				displayName="Unlock Door";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 3, 1] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 3] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class LockDoor_3
			{
				displayNameDefault="Lock Door";
				displayName="Lock Door";
				position="Door_3_trigger";
				priority=11;
				showWindow=0;
				radius=1.5;
				onlyForPlayer=1;
				condition="([this, 3, 0] call ExileLifeClient_util_housing_doorStatusRequest)";
				statement="[this, 3] spawn ExileLifeClient_object_housing_lockToggle";
			};
			class OpenDoor_3
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_O_DOOR";
				position="Door_3_trigger";
				priority=11;
				radius=1.5;
				aiMaxRange="1.5				 * 3";
				onlyForPlayer=0;
				condition="([this, 3, -1] call ExileLifeClient_util_housing_doorStatusRequest) && ((this animationPhase 'Door_3_rot') <= 0.5)";
				statement="([this, 'Door_3_rot', 'Door_Handle_3_rot_1', 'Door_Handle_3_rot_2'] call BIS_fnc_DoorOpen)";
			};
			class AddDoorLock_3
			{
				displayNameDefault="Install Codelock";
				displayName="Install Codelock";
				position="Door_3_trigger";
				priority=11;
				radius=1.5;
				onlyForPlayer=1;
				condition="((this getVariable ['ExileLifeHasLock_3','']) isEqualTo '') && ('Exile_Item_Codelock' in (magazines player)) && (player call ExileClient_util_world_isInOwnTerritory)";
				statement="([this, 3] spawn ExileLifeClient_object_housing_lockAdd)";
			};
			class CloseDoor_3: OpenDoor_3
			{
				displayNameDefault="<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
				displayName="$STR_DN_OUT_C_DOOR";
				priority=11;
				condition="((this animationPhase 'Door_3_rot') >= 0.5) && ((this getVariable ['bis_disabled_Door_3',0]) != 1) && (cameraOn isKindOf 'CAManBase')";
				statement="([this, 'Door_3_rot', 'Door_Handle_3_rot_1', 'Door_Handle_3_rot_2'] call BIS_fnc_DoorClose)";
			};
		};
	};
	class ExileLife_Sound_FactoryStartup: Sound
	{
		scope = 2;
		author = "ExileLife Mod Team";
		displayName = "ExileLife Factory Starting up";
		sound = "SndExileLifeFactoryStartup";
		time = 89;
	};
	class ExileLife_Sound_FuelPump: Sound
	{
		scope = 2;
		author = "ExileLife Mod Team";
		displayName = "ExileLife Fuel Pump Use";
		sound = "SndExileLifeFuelPump";
		time = 18;		
	};
	class ExileLife_Sound_GeneratorOff: Sound
	{
		scope = 2;
		author = "ExileLife Mod Team";
		displayName = "ExileLife Generator Turn Off";
		sound = "SndExileLifeGeneratorOff";
		time = 3;		
	};
	class ExileLife_Sound_GeneratorRunning: Sound
	{
		scope = 2;
		author = "ExileLife Mod Team";
		displayName = "ExileLife Generator Running";
		sound = "SndExileLifeGeneratorRunning";
		time = 31;		
	};
	class ExileLife_Sound_GeneratorStall: Sound
	{
		scope = 2;
		author = "ExileLife Mod Team";
		displayName = "ExileLife Generator No Fuel";
		sound = "SndExileLifeGeneratorStall";
		time = 6;		
	};	
	class ExileLife_Sound_GeneratorStart: Sound
	{
		scope = 2;
		author = "ExileLife Mod Team";
		displayName = "ExileLife Generator Starting up";
		sound = "SndExileLifeGeneratorStart";
		time = 25;		
	};
	class ExileLife_Sound_KeypadFail: Sound
	{
		scope = 2;
		author = "ExileLife Mod Team";
		displayName = "ExileLife Keypad Fail";
		sound = "SndExileLifeKeypadFail";
		time = 2;		
	};
	class ExileLife_Sound_KeypadSuccess: Sound
	{
		scope = 2;
		author = "ExileLife Mod Team";
		displayName = "ExileLife Keypad Succeed";
		sound = "SndExileLifeKeypadSuccess";
		time = 2;		
	};
	class ExileLife_Sound_PipeSqueak: Sound
	{
		scope = 2;
		author = "ExileLife Mod Team";
		displayName = "ExileLife Pipe Squeak";
		sound = "SndExileLifePipeSqueak";
		time = 2; 
	};
	class ExileLife_Sound_Furnace: Sound
	{
		scope = 2;
		author = "ExileLife Mod Team";
		displayName = "ExileLife Furnace";
		sound = "SndExileLifeFurnace";
		time = 2; 
	};
	class ExileLife_Sound_ShovelDig: Sound
	{
		scope = 2;
		author = "ExileLife Mod Team";
		displayName = "ExileLife Shovel Digging Sound";
		sound = "SndExileLifeShovelDig";
		time = 8.8; 
	};
class ExileLife_Sphere: NonStrategic 
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "ExileLife Sphere";
	model = "\exilelife_assets\models\Items\Resources\ExileLife_Sphere.p3d";
	destrType = "DestructNo";
};
class ExileLife_Construction_CameraPole_Preview: Exile_Construction_Abstract_Physics
{
	scope = 2;
	model = "\exilelife_assets\models\Items\Construction\ExileLife_Construction_CameraPole_Preview.p3d";
	displayName = "Camera Pole";
	hiddenSelections[] = {"Component01"};
	hiddenSelectionsTextures[] = {"#(argb,2,2,1)color(0.7,0.93,0,0.6,ca)"};
};
class ExileLife_Construction_CameraPole_Static: Exile_Construction_Abstract_Static
{
	scope = 2;
	model = "\exilelife_assets\models\Items\Construction\ExileLife_Construction_CameraPole.p3d";
	displayName = "Camera Pole";
	exileRequiresSimulation = 1;
	armor = 1000;
	destrType = "DestructNo";
	exileContainer = 0;
	ExileLifeDisableMove = 0; 
};
	class ExileLife_Construction_Chair_Preview: Exile_Construction_Abstract_Physics
	{
		scope = 2;
		model = "\A3\Structures_F\Furniture\ChairWood_F.p3d";
		displayName = "Wooden Chair";
		hiddenSelections[] = {"Component01"};
		hiddenSelectionsTextures[] = {"#(argb,2,2,1)color(0.7,0.93,0,0.6,ca)"};
	};
	class ExileLife_Construction_Chair_Static: Exile_Construction_Abstract_Static
	{
		scope = 2;
		model = "\A3\Structures_F\Furniture\ChairWood_F.p3d";
		displayName = "Wooden Chair";
		exileRequiresSimulation = 1;
		armor = 10000;
		destrType = "DestructNo";
		class UserActions
		{
			class SitDown
			{
				displayName = "Sit Down";
				position = "left";
				radius = 3;
				onlyForPlayer = 1;
				condition = "!((this getVariable ['ChairTaken',-1]) > -1)"; 
				statement = "this call ExileLifeClient_object_player_action_sitting_sitDown;";
			};
		};
	};
	class ExileLife_Construction_Shelving_Metal_Tall_Static: Exile_Container_Abstract
	{
		scope = 2;
		model = "\A3\Structures_F\Furniture\Metal_rack_Tall_F.p3d";
		displayName = "Tall Metal Shelving";
		exileRequiresSimulation = 1;
		maximumLoad = 1000;		
		armor = 10000;
		destrType = "DestructNo";
	};
	class ExileLife_Construction_Shelving_Metal_Tall_Preview: Exile_Construction_Abstract_Physics
	{
		scope = 2;
		model = "\A3\Structures_F\Furniture\Metal_rack_Tall_F.p3d";
		displayName = "Tall Metal Shelving";
		hiddenSelections[] = {"Component01"};
		hiddenSelectionsTextures[] = {"#(argb,2,2,1)color(0.7,0.93,0,0.6,ca)"};
	};	
	class ExileLife_Construction_Shelving_Wooden_Static: Exile_Container_Abstract
	{
		scope = 2;
		model = "\A3\Structures_F_EPB\Furniture\ShelvesWooden_F.p3d";
		displayName = "Wooden Shelving";
		exileRequiresSimulation = 1;
		armor = 10000;
		destrType = "DestructNo";
		maximumLoad = 500;				
	};
	class ExileLife_Construction_Shelving_Wooden_Preview: Exile_Construction_Abstract_Physics
	{
		scope = 2;
		model = "\A3\Structures_F_EPB\Furniture\ShelvesWooden_F.p3d";
		displayName = "Wooden Shelving";
		hiddenSelections[] = {"Component01"};
		hiddenSelectionsTextures[] = {"#(argb,2,2,1)color(0.7,0.93,0,0.6,ca)"};
	};	
	class ExileLife_Construction_Shelving_Wooden_Khaki_Preview: Exile_Construction_Abstract_Physics
	{
		scope = 2;
		model = "\A3\Structures_F_EPB\Furniture\ShelvesWooden_khaki_F.p3d";
		displayName = "Khaki Wooden Shelf";
		hiddenSelections[] = {"Component01"};
		hiddenSelectionsTextures[] = {"#(argb,2,2,1)color(0.7,0.93,0,0.6,ca)"};
	};
	class ExileLife_Construction_Shelving_Wooden_Khaki_Static: Exile_Container_Abstract
	{
		scope = 2;
		model = "\A3\Structures_F_EPB\Furniture\ShelvesWooden_khaki_F.p3d";
		displayName = "Khaki Wooden Shelf";
		exileRequiresSimulation = 1;
		armor = 10000;
		destrType = "DestructNo";
		maximumLoad = 500;				
	};
	class ExileLife_Construction_Shelving_Wood_Blue_Preview: Exile_Construction_Abstract_Physics
	{
		scope = 2;
		model = "\A3\Structures_F\Furniture\ShelvesWooden_blue_F.p3d";
		displayName = "Blue Wooden Shelf";
		hiddenSelections[] = {"Component01"};
		hiddenSelectionsTextures[] = {"#(argb,2,2,1)color(0.7,0.93,0,0.6,ca)"};
	};
	class ExileLife_Construction_Shelving_Wood_Blue_Static: Exile_Container_Abstract
	{
		scope = 2;
		model = "\A3\Structures_F\Furniture\ShelvesWooden_blue_F.p3d";
		displayName = "Blue Wooden Shelf";
		exileRequiresSimulation = 1;
		armor = 10000;
		destrType = "DestructNo";
		maximumLoad = 500;				
	};
	class ExileLife_Construction_Shelving_Wood_Tall_Static: Exile_Container_Abstract
	{
		scope = 2;
		model = "\A3\Structures_F\Furniture\Metal_wooden_rack_F.p3d";
		displayName = "Tall Wooden Shelving";
		exileRequiresSimulation = 1;
		armor = 10000;
		destrType = "DestructNo";
		maximumLoad = 1000;				
	};
	class ExileLife_Construction_Shelving_Wood_Tall_Preview: Exile_Construction_Abstract_Physics
	{
		scope = 2;
		model = "\A3\Structures_F\Furniture\Metal_wooden_rack_F.p3d";
		displayName = "Tall Wooden Shelving";
		hiddenSelections[] = {"Component01"};
		hiddenSelectionsTextures[] = {"#(argb,2,2,1)color(0.7,0.93,0,0.6,ca)"};
	};	
class ExileLife_Construction_SleepingBag_Preview: Exile_Construction_Abstract_Physics
{
	scope = 2;
	model = "exilelife_assets\models\Items\Construction\ExileLife_Construction_Sleeping_Bag.p3d";
	displayName = "Sleeping Mat";
};
class ExileLife_Construction_SleepingBag_Static: Exile_Construction_Abstract_Static
{
	scope = 2;
	model = "exilelife_assets\models\Items\Construction\ExileLife_Construction_Sleeping_Bag.p3d";
	displayName = "Sleeping Mat";
	exileRequiresSimulation = 1;
	armor = 10000;
	destrType = "DestructNo";
	exileContainer = 0;
	ExileLifeDisableMove = 1; 
};
	class ExileLife_Construction_Stool_Static: Exile_Construction_Abstract_Static
	{
		scope = 2;
		model = "\A3\Structures_F\Furniture\Bench_F.p3d";
		displayName = "Wooden Bench";
		exileRequiresSimulation = 1;
		armor = 10000;
		destrType = "DestructNo";
		class UserActions
		{
		};		
	};
	class ExileLife_Construction_Stool_Preview: Exile_Construction_Abstract_Physics
	{
		scope = 2;
		model = "\A3\Structures_F\Furniture\Bench_F.p3d";
		displayName = "Wooden Bench";
		hiddenSelections[] = {"Component01"};
		hiddenSelectionsTextures[] = {"#(argb,2,2,1)color(0.7,0.93,0,0.6,ca)"};
	};	
	class ExileLife_Construction_Table_Desk_Preview: Exile_Construction_Abstract_Physics
	{
		scope = 2;
		model = "\A3\Structures_F\Furniture\TableDesk_F.p3d";
		displayName = "Elegant Wooden Desk";
		hiddenSelections[] = {"Component01"};
		hiddenSelectionsTextures[] = {"#(argb,2,2,1)color(0.7,0.93,0,0.6,ca)"};
	};
	class ExileLife_Construction_Table_Desk_Static: Exile_Construction_Abstract_Static
	{
		scope = 2;
		model = "\A3\Structures_F\Furniture\TableDesk_F.p3d";
		displayName = "Elegant Wooden Desk";
		exileRequiresSimulation = 1;
		armor = 10000;
		destrType = "DestructNo";
	};
	class ExileLife_Construction_Table_Large_Static: Exile_Construction_Abstract_Static
	{
		scope = 2;
		model = "\A3\Structures_F_EPA\Civ\Camping\WoodenTable_large_F.p3d";
		displayName = "Large Wooden Table";
		exileRequiresSimulation = 1;
		armor = 10000;
		destrType = "DestructNo";
	};
	class ExileLife_Construction_Table_Large_Preview: Exile_Construction_Abstract_Physics
	{
		scope = 2;
		model = "\A3\Structures_F_EPA\Civ\Camping\WoodenTable_large_F.p3d";
		displayName = "Large Wooden Table";
		hiddenSelections[] = {"Component01"};
		hiddenSelectionsTextures[] = {"#(argb,2,2,1)color(0.7,0.93,0,0.6,ca)"};
	};	
	class ExileLife_Construction_Table_Plastic_Static: Exile_Construction_Abstract_Static
	{
		scope = 2;
		model = "\A3\Structures_F_EPC\Civ\Accessories\TablePlastic_01_F.p3d";
		displayName = "Plastic Table";
		exileRequiresSimulation = 1;
		armor = 10000;
		destrType = "DestructNo";
	};
	class ExileLife_Construction_Table_Plastic_Preview: Exile_Construction_Abstract_Physics
	{
		scope = 2;
		model = "\A3\Structures_F_EPC\Civ\Accessories\TablePlastic_01_F.p3d";
		displayName = "Plastic Table";
		hiddenSelections[] = {"Component01"};
		hiddenSelectionsTextures[] = {"#(argb,2,2,1)color(0.7,0.93,0,0.6,ca)"};
	};	
	class ExileLife_Construction_Table_Small_Static: Exile_Construction_Abstract_Static
	{
		scope = 2;
		model = "\A3\Structures_F_EPA\Civ\Camping\WoodenTable_small_F.p3d";
		displayName = "Small Wooden Table";
		exileRequiresSimulation = 1;
		armor = 10000;
		destrType = "DestructNo";
	};
	class ExileLife_Construction_Table_Small_Preview: Exile_Construction_Abstract_Physics
	{
		scope = 2;
		model = "\A3\Structures_F_EPA\Civ\Camping\WoodenTable_small_F.p3d";
		displayName = "Small Wooden Table";
		hiddenSelections[] = {"Component01"};
		hiddenSelectionsTextures[] = {"#(argb,2,2,1)color(0.7,0.93,0,0.6,ca)"};
	};	
	class ExileLife_ArmBand_Mafia: Exile_Unit_Abstract
	{
		scope = 2;
		displayName = "Mafia Armband";
		uniformClass = "ExileLife_Clothing_Mafia_ArmBand"; 
		model = "\exilelife_assets\Models\Items\Clothing\TopWear\ExileLife_Clothing_ArmBand";
		hiddenSelections[] = {"Camo"};
		hiddenSelectionsTextures[] = {"exilelife_assets\models\items\clothing\topwear\images\exilelife_clothing_mafia_armband_co.paa"};
	};
	class ExileLife_ArmBand_Yakuza: ExileLife_ArmBand_Mafia
	{
		scope = 2;
		displayName = "Yakuza Armband";
		uniformClass = "ExileLife_Clothing_Yakuza_ArmBand"; 
		hiddenSelections[] = {"Camo"};
		hiddenSelectionsTextures[] = {"exilelife_assets\models\items\clothing\topwear\images\exilelife_clothing_yakuza_armband_co.paa"};
	};
	class ExileLife_ArmBand_Syndicate: ExileLife_ArmBand_Mafia
	{
		scope = 2;
		displayName = "Syndicate Armband";
		uniformClass = "ExileLife_Clothing_Syndicate_ArmBand"; 
		hiddenSelections[] = {"Camo"};
		hiddenSelectionsTextures[] = {"exilelife_assets\models\items\clothing\topwear\images\exilelife_clothing_syndicate_armband_co.paa"};
	};
	class ExileLife_ArmBand_Cartel: ExileLife_ArmBand_Mafia
	{
		scope = 2;
		displayName = "Cartel Armband";
		uniformClass = "ExileLife_Clothing_Cartel_ArmBand"; 
		hiddenSelections[] = {"Camo"};
		hiddenSelectionsTextures[] = {"exilelife_assets\models\items\clothing\topwear\images\exilelife_clothing_cartel_armband_co.paa"};
	};
class ExileLife_Clothing_Duffle_Bag: Bag_Base
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "ExileLife Duffle Bag";
	descriptionShort = "No Armor";
	picture = "\exilelife_assets\Models\Items\Clothing\Backpacks\Images\ExileLife_Clothing_DuffleBag.paa";
	model = "\exilelife_assets\models\Items\Clothing\Backpacks\ExileLife_Clothing_DuffleBag.p3d";
	hiddenSelections[] = {};
	hiddenSelectionsTextures[] = {};
	hiddenUnderwaterSelections[] = {};
	hiddenUnderwaterSelectionsTextures[] = {};
	maximumLoad=320;
	mass=50;
};
class ExileLife_Stash_Bushes: Exile_Container_Abstract
{
	scope = 2;
	model = "\exilelife_assets\models\Items\Containers\ExileLife_Stash_Bushes.p3d";
	displayName = "";
	maximumLoad = 100;
	simulation = "house";
	exileRequiresSimulation = 1;
	armor = 100;
	destrType = "DestructBuilding";
	memoryPointSupply = "supply";
	supplyRadius = 0.1;
	exileContainer = 0;
	ExileLifeDisableMove = 1;
	exileIsLockable = 1;	
	class UserActions{};
};
class ExileLife_Stash_Grass: Exile_Container_Abstract
{
	scope = 2;
	model = "\exilelife_assets\models\Items\Containers\ExileLife_Stash_Grass.p3d";
	displayName = "";
	maximumLoad = 100;
	simulation = "house";
	exileRequiresSimulation = 1;
	armor = 100;
	destrType = "DestructBuilding";
	memoryPointSupply = "supply";
	supplyRadius = 0.1;
	exileContainer = 0; 
	ExileLifeDisableMove = 1;
	exileIsLockable = 1;
	class UserActions{};
};
	class ExileLife_ConveyorBelt_Static: Exile_Container_Abstract
	{
		scope = 2;
		model = "\a3\structures_f\ind\factory\factory_conv1_main_f.p3d";
		displayName = "ConveyorBelt";
		maximumLoad = 500;
		simulation = "house";
		exileRequiresSimulation = 1;
		armor = 10000;
		destrType = "DestructNo";
		exileContainer = 0;
		ExileLifeDisableMove = 1;
		class UserActions{};
	};
	class ExileLife_GarbageBin_Static: Exile_Container_Abstract
	{
		scope = 2;
		model = "a3\structures_f_epb\Civ\Garbage\GarbageContainer_open_F.p3d";
		displayName = "Holding Pot";
		maximumLoad = 99999999999; 
		simulation = "house";
		exileRequiresSimulation = 1;
		ExileLifeDisableMove = 1;
		class UserActions{};
	};
class Exile_Construction_WaterBarrel_Static: Exile_Container_Abstract
{
	scope = 2;
	model = "\A3\Structures_F\Items\Vessels\WaterBarrel_F.p3d";
	displayName = "Water Barrel";
	armor = 300;
	maximumLoad = 200;
	simulation = "house";
	exileRequiresSimulation = 1;
	class UserActions
	{
		class startBrew
		{
			displayName = "Start Brewing";
			position = "left";
			radius = 3;
			onlyForPlayer = 1;
			condition = "!(this call ExileLifeClient_util_containerCargo_checkBrewIngredients isEqualto '') && !((ExileClientInteractionObject getVariable ['ExileLifeBrewing',-1]) > -1)"; 
			statement = "this call ExileLifeClient_resources_processing_brewingStartRequest;";
		};
		class sterilise
		{
			displayName = "Use Bleach";
			position = "left";
			radius = 3;
			onlyForPlayer = 1;
			condition = "('ExileLife_Item_Bleach' call ExileClient_util_inventory_contains) && !((ExileClientInteractionObject getVariable ['ExileLifeBrewing',-1]) > -1)"; 
			statement = "this call ExileLifeClient_resources_processing_sterilizeRequest;";
		};		
		class poison
		{
			displayName = "Poison Brew";
			position = "left";
			radius = 3;
			onlyForPlayer = 1;
			condition = "('ExileLife_Item_Bleach' call ExileClient_util_inventory_contains) && ((ExileClientInteractionObject getVariable ['ExileLifeBrewing',-1]) > -1)"; 
			statement = "systemchat 'this will poison brew status'";
		};				
		class progress
		{
			displayName = "Check Brew";
			position = "left";
			radius = 3;
			onlyForPlayer = 1;
			condition = "(ExileClientInteractionObject getVariable ['ExileLifeBrewing',-1]) > -1"; 
			statement = "systemchat 'this will check brew status'";
		};			
	};
};
//need to prevent this from being moved if its got a brew inside of it!
class Exile_Cosmetic_BBQSandwich;
class ExileLife_Cosmetic_FishingRod: Exile_Cosmetic_BBQSandwich
{
	displayName = "Fishing Rod (Cosmetic)";
	model = "\exilelife_assets\models\Items\Tools\ExileLife_Melee_FishingRod_World.p3d";
};
class ExileLife_Cosmetic_PickAxe: Exile_Cosmetic_BBQSandwich
{
	displayName = "PickAxe (Cosmetic)";
	model = "\exilelife_assets\models\Items\Tools\ExileLife_Melee_PickAxe_World.p3d";
};
class ExileLife_Cosmetic_GardenHoe: Exile_Cosmetic_BBQSandwich
{
	displayName = "Garden Hoe (Cosmetic)";
	model = "\exilelife_assets\models\Items\Tools\ExileLife_Melee_GardenHoe_World.p3d";
};
class ExileLife_Cosmetic_Bow: Exile_Cosmetic_BBQSandwich
{
	displayName = "Bow (Cosmetic)";
	model = "\exilelife_assets\models\Items\Weapons\Primitive\ExileLife_Melee_Bow_World.p3d";
};
class ExileLife_Cosmetic_Crate_Closed: Exile_Cosmetic_BBQSandwich
{
	displayName = "Crate Closed(Cosmetic)";
	model = "\exilelife_assets\models\Items\Resources\ExileLife_item_crate.p3d";
};
class ExileLife_Cosmetic_Crate_BigSquare: Exile_Cosmetic_BBQSandwich
{
	displayName = "Crate Closed Big Square(Cosmetic)";
	model = "\exilelife_assets\models\Items\Resources\ExileLife_item_crate_bigsquare.p3d";
};
class ExileLife_Cosmetic_Crate_Flat: Exile_Cosmetic_BBQSandwich
{
	displayName = "Crate Closed Flat(Cosmetic)";
	model = "\exilelife_assets\models\Items\Resources\ExileLife_item_crate_flat.p3d";
};
class ExileLife_Cosmetic_Crate_Square: Exile_Cosmetic_BBQSandwich
{
	displayName = "Crate Closed Square(Cosmetic)";
	model = "\exilelife_assets\models\Items\Resources\ExileLife_item_crate_square.p3d";
};
class ExileLife_Cosmetic_Small_Parcel: Exile_Cosmetic_BBQSandwich
{
	displayName = "Small Parcel(Cosmetic)";
	model = "\exilelife_assets\models\Items\Resources\ExileLife_item_parcel.p3d";
};
class ExileLife_Cosmetic_Empty_Pot: Exile_Cosmetic_BBQSandwich
{
	displayName = "Empty Pot";
	descriptionShort = "Its an empty clay pot!";
	picture = "\exilelife_assets\Models\Items\Containers\Images\ExileLife_Item_Pot_f.paa";
	model = "\exilelife_assets\Models\Items\Containers\ExileLife_Item_EmptyPot.p3d";
};
class ExileLife_Cosmetic_Poo_Pot: Exile_Cosmetic_BBQSandwich
{
	displayName = "Fertilizer";
	descriptionShort = "Its a pot full of poo...";
	picture = "\exilelife_assets\Models\Items\Containers\Images\ExileLife_Item_Fertilizer_F.paa";
	model = "\exilelife_assets\Models\Items\Containers\ExileLife_Item_Pot.p3d";
};
class ExileLife_Cosmetic_VendettaMask: Exile_Cosmetic_BBQSandwich
{
	displayName = "Vendetta Mask (Cosmetic)";
	model = "\exilelife_assets\Models\Items\Clothing\Masks\ExileLife_Clothing_VendettaMask_World.p3d";
};
class ExileLife_Cosmetic_CreeperMask: Exile_Cosmetic_BBQSandwich
{
	displayName = "Creeper Mask (Cosmetic)";
	model = "\exilelife_assets\Models\Items\Clothing\Masks\ExileLife_Clothing_CreeperMask_World.p3d";
};
class ExileLife_Cosmetic_Car_HEMMT: Exile_Cosmetic_BBQSandwich
{
	displayName = "HEMMT Transport (Cosmetic)";
	model = "\A3\soft_f_beta\Truck_01\Truck_01_transport_F.p3d";
};
class ExileLife_Cosmetic_Car_Ural_Open_Military: Exile_Cosmetic_BBQSandwich
{
	displayName = "Ural Open Military (Cosmetic)";
	model = "\Exile_psycho_Ural\Ural.p3d";
	hiddenSelections[] = {"camo1","camo2","camo3"};
	hiddenSelectionsTextures[] = {"Exile_psycho_Ural\data\ural_kabina_khk_co.paa","Exile_psycho_Ural\data\ural_plachta_co.paa"};
};
class ExileLife_Cosmetic_Car_Volha_Black: Exile_Cosmetic_BBQSandwich
{
	displayName = "GAZ Volha Black (Cosmetic)";
	model = "\Exile_psycho_Gaz_volha\volha.p3d";
	hiddenselections[] = {"Camo1"};
	hiddenselectionstextures[] = {"Exile_psycho_Gaz_volha\data\Volha_Black_ECIV_CO.paa"};
};
class ExileLife_Cosmetic_Car_Volha_Blue: Exile_Cosmetic_BBQSandwich
{
	displayName = "GAZ Volha Blue (Cosmetic)";
	model = "\Exile_psycho_Gaz_volha\volha.p3d";
	hiddenselections[] = {"Camo1"};
	hiddenselectionstextures[] = {"Exile_psycho_Gaz_volha\data\Volha_ECIV_CO.paa"};
};
class ExileLife_Cosmetic_Car_Lada_Taxi: Exile_Cosmetic_BBQSandwich
{
	displayName = "Lada Taxi (Cosmetic)";
	model = "\exile_psycho_lada\Lada_LM.p3d";
	hiddenselections[] = {"Camo1","Camo2"};
	hiddenselectionstextures[] = {"exile_psycho_lada\data\Lada_red_CO.paa"};
};
class ExileLife_Cosmetic_Car_BTR40_Camo: Exile_Cosmetic_BBQSandwich
{
	displayName = "BTR40 Camo (Cosmetic)";
	model = "exile_psycho_btr40\btr40";
	hiddenSelectionsTextures[] = {"exile_psycho_btr40\data\btr40extcamo_co.paa"};
};
class ExileLife_Cosmetic_Car_Golf_Red: Exile_Cosmetic_BBQSandwich
{
	displayName = "Golf Red (Cosmetic)";
	model = "\exile_psycho_VWGolf\vwgolf";
	hiddenSelectionsTextures[] = {"exile_psycho_VWGolf\data\vwgolf_body_co.paa"};
};
class ExileLife_Cosmetic_Car_HMMWV_UNA: Exile_Cosmetic_BBQSandwich
{
	displayName = "HMMWV Unarmed (Cosmetic)";
	model = "\Exile_psycho_hmmw\HMMWV.p3d";
	hiddenSelectionsTextures[] = {"Exile_psycho_hmmw\data\hmmwv_body_co.paa"};
};
class ExileLife_Cosmetic_Car_Ikarus_Blue: Exile_Cosmetic_BBQSandwich
{
	displayName = "Ikarus Blue (Cosmetic)";
	model = "Exile_psycho_Ikarus\ikarus.p3d";
	hiddenselections[] = {"Camo1"};
	hiddenselectionstextures[] = {"Exile_psycho_Ikarus\Data\bus_exterior_co.paa"};
};
class ExileLife_Cosmetic_Car_LandRover_Red: Exile_Cosmetic_BBQSandwich
{
	displayName = "LandRover Red (Cosmetic)";
	model = "Exile_psycho_LRC\LR_covered_soft_BAF";
	hiddenSelectionsTextures[] =
	{
		"Exile_psycho_LRC\data\r_lr_base_co.paa",
		"Exile_psycho_LRC\data\r_lr_special_co.paa"
	};
};
class ExileLife_Cosmetic_Car_Octavia_White: Exile_Cosmetic_BBQSandwich
{
	displayName = "Octavia White (Cosmetic)";
	model = "\exile_psycho_Octavia\Octavia_ACR";
	hiddenSelectionsTextures[] =
	{
		"exile_psycho_Octavia\Data\car_body_co.paa"
	};
};
class ExileLife_Cosmetic_Car_Offroad_Blue: Exile_Cosmetic_BBQSandwich
{
	displayName = "Offroad Blue (Cosmetic)";
	model = "\A3\soft_f\Offroad_01\Offroad_01_unarmed_F";
	hiddenSelectionsTextures[] = {"\a3\Soft_F\Offroad_01\data\Offroad_01_ext_BASE03_CO.paa","\a3\Soft_F\Offroad_01\data\Offroad_01_ext_BASE03_CO.paa"};
};
class ExileLife_Cosmetic_Bike_QuadBike_Black: Exile_Cosmetic_BBQSandwich
{
	displayName = "QuadBike Black (Cosmetic)";
	model = "\A3\Soft_F\Quadbike_01\Quadbike_01_F.p3d";
	hiddenSelectionsTextures[] = {"\A3\Soft_F_Beta\Quadbike_01\Data\Quadbike_01_CIV_BLACK_CO.paa","\A3\Soft_F_Beta\Quadbike_01\Data\Quadbike_01_wheel_CIVBLACK_CO.paa"};
};
class ExileLife_Cosmetic_Bike_QuadBike_Blue: Exile_Cosmetic_BBQSandwich
{
	displayName = "QuadBike Blue (Cosmetic)";
	model = "\A3\Soft_F\Quadbike_01\Quadbike_01_F.p3d";
	hiddenSelectionsTextures[] = {"\A3\Soft_F_Beta\Quadbike_01\Data\Quadbike_01_CIV_BLUE_CO.paa","\A3\Soft_F_Beta\Quadbike_01\Data\Quadbike_01_wheel_CIVBLUE_CO.paa"};
};
class ExileLife_Cosmetic_Car_SUVXL_Black: Exile_Cosmetic_BBQSandwich
{
	displayName = "SUVXL Black (Cosmetic)";
	model = "\Exile_psycho_SUV_a3\SUV.p3d";
};
class ExileLife_Item_CementBlock: Exile_Cosmetic_BBQSandwich
{
	displayName = "Exile Life City Generator";
	model = "\exilelife_assets\models\Items\Objects\ExileLife_Item_CementBlock.p3d";
};
class ExileLife_Cosmetic_Codelock: Exile_Cosmetic_BBQSandwich
{
	displayName = "Code Lock";
	descriptionShort = "Used to lock doors or gates on bases.";
	model = "\exile_assets\model\Exile_Item_Codelock.p3d";
};
class ExileLife_Animal_Snake_Abstract: Exile_Animal_Abstract
{
	scope = 1;
	displayName = "Snake";
	model = "\A3\Animals_F\Snakes\snake_F.p3d";
	hasGeometry = 1;
	moves = "CfgMovesSnakes_F";
	hiddenSelections[] = {"camo"};
	class Exile 
	{
		variations[] = 
		{
			"ExileLife_Animal_Snake_Dice",
			"ExileLife_Animal_Snake_Leopard"
		};
		fleeMove = "Snakes_Move";
		idleMove = "Snakes_Idle_Stop";
		gutItem = "ExileLife_Item_SnakeVenom";
		dangerSounds[] = 
		{
			{"exilelife_assets\sound\snake_rattle.ogg", 20, 4}
		};
		deathSounds[] = 
		{
			{"", 20, 4}
		};
	};
};
class ExileLife_Animal_Snake_Dice: ExileLife_Animal_Snake_Abstract
{
	scope = 2;
	displayName = "Snake";
	hiddenSelectionsTextures[] = {"a3\animals_f\Snakes\Data\Snake_Dice_CO.paa"};
	hiddenSelectionMaterials[] = {"a3\animals_f\Snakes\data\Snake_Dice.rvmat"};
};
class ExileLife_Animal_Snake_Leopard: ExileLife_Animal_Snake_Abstract
{
	scope = 2;
	displayName = "Snake";
	hiddenSelectionsTextures[] = {"a3\animals_f\Snakes\Data\Snake_Leopard_CO.paa"};
	hiddenSelectionMaterials[] = {"a3\animals_f\Snakes\data\Snake_Dice.rvmat"};
};
class ExileLife_Fish_CatShark_Abstract: ExileLife_Fish_Abstract
{
	scope = 1;
	displayName = "CatShark";
	model = "\A3\Animals_F\Fishes\Catshark_F.p3d";
	hasGeometry = 1;
	moves = "CfgMovesSharks_F";
	hiddenSelections[] = {"camo"};
	class Exile 
	{
		variations[] = 
		{
			"ExileLife_Fish_CatShark"
		};
		fleeMove = "Sharks_Swim";
		idleMove = "Sharks_Stop";
		gutItem = "Exile_Item_CatSharkFilet_Raw";
		dangerSounds[] = 
		{
			{"", 20, 4}
		};
		deathSounds[] = 
		{
			{"", 20, 4}
		};
	};
};
class ExileLife_Fish_CatShark: ExileLife_Fish_CatShark_Abstract
{
	scope = 2;
	displayName = "CatShark";
	hiddenSelectionsTextures[] = {"a3\animals_f\Fishes\Data\Catshark_co.paa"};
	hiddenSelectionMaterials[] = {"a3\animals_f\Fishes\data\Catshark.rvmat"};
};
class ExileLife_Fish_Mackerel_Abstract: ExileLife_Fish_Abstract
{
	scope = 1;
	displayName = "Mackerel";
	model = "\A3\Animals_F\Fishes\Mackerel_F.p3d";
	hasGeometry = 1;
	moves = "CfgMovesFishes_F";
	hiddenSelections[] = {"camo"};
	class Exile 
	{
		variations[] = 
		{
			"ExileLife_Fish_Mackerel"
		};
		fleeMove = "Fishes_Swim";
		idleMove = "Fishes_Stop";
		gutItem = "Exile_Item_MackerelFilet_Raw";
		dangerSounds[] = 
		{
			{"", 20, 4}
		};
		deathSounds[] = 
		{
			{"", 20, 4}
		};
	};
};
class ExileLife_Fish_Mackerel: ExileLife_Fish_Mackerel_Abstract
{
	scope = 2;
	displayName = "Mackerel";
	hiddenSelectionsTextures[] = {"a3\animals_f\fishes\data\Mackerel_co.paa"};
	hiddenSelectionMaterials[] = {"a3\animals_f\Fishes\data\Mackerel.rvmat"};
};
class ExileLife_Fish_Mullet_Abstract: ExileLife_Fish_Abstract
{
	scope = 1;
	displayName = "Mullet";
	model = "\A3\Animals_F\Fishes\Mullet_F.p3d";
	hasGeometry = 1;
	moves = "CfgMovesFishes_F";
	hiddenSelections[] = {"camo"};
	class Exile 
	{
		variations[] = 
		{
			"ExileLife_Fish_Mullet"
		};
		fleeMove = "Fishes_Swim";
		idleMove = "Fishes_Stop";
		gutItem = "Exile_Item_MulletFilet_Raw";
		dangerSounds[] = 
		{
			{"", 20, 4}
		};
		deathSounds[] = 
		{
			{"", 20, 4}
		};
	};
};
class ExileLife_Fish_Mullet: ExileLife_Fish_Mullet_Abstract
{
	scope = 2;
	displayName = "Mullet";
	hiddenSelectionsTextures[] = {"a3\animals_f\fishes\data\Mullet_co.paa"};
	hiddenSelectionMaterials[] = {"a3\animals_f\Fishes\data\Mullet.rvmat"};
};
class ExileLife_Fish_Ornate_Abstract: ExileLife_Fish_Abstract
{
	scope = 1;
	displayName = "Ornate";
	model = "\A3\Animals_F\Fishes\Ornate_F.p3d";
	hasGeometry = 1;
	moves = "CfgMovesFishes_F";
	hiddenSelections[] = {"camo"};
	class Exile 
	{
		variations[] = 
		{
			"ExileLife_Fish_OrnateMale",
			"ExileLife_Fish_OrnateFemale"
		};
		fleeMove = "Fishes_Swim";
		idleMove = "Fishes_Stop";
		gutItem = "Exile_Item_OrnateFilet_Raw";
		dangerSounds[] = 
		{
			{"", 20, 4}
		};
		deathSounds[] = 
		{
			{"", 20, 4}
		};
	};
};
class ExileLife_Fish_OrnateMale: ExileLife_Fish_Ornate_Abstract
{
	scope = 2;
	displayName = "Ornate (Male)";
	hiddenSelectionsTextures[] = {"a3\animals_f\fishes\data\Ornate_Male_co.paa"};
	hiddenSelectionMaterials[] = {"a3\animals_f\Fishes\data\Ornate.rvmat"};
};
class ExileLife_Fish_OrnateFemale: ExileLife_Fish_Ornate_Abstract
{
	scope = 2;
	displayName = "Ornate (Female)";
	hiddenSelectionsTextures[] = {"a3\animals_f\fishes\data\Ornate_Female_co.paa"};
	hiddenSelectionMaterials[] = {"a3\animals_f\Fishes\data\Ornate.rvmat"};
};
class ExileLife_Fish_Salema_Abstract: ExileLife_Fish_Abstract
{
	scope = 1;
	displayName = "Salema";
	model = "\A3\Animals_F\Fishes\Salema_porgy_F.p3d";
	hasGeometry = 1;
	moves = "CfgMovesFishes_F";
	hiddenSelections[] = {"camo"};
	class Exile 
	{
		variations[] = 
		{
			"ExileLife_Fish_Salema"
		};
		fleeMove = "Fishes_Swim";
		idleMove = "Fishes_Stop";
		gutItem = "Exile_Item_SalemaPorgyFilet_Raw";
		dangerSounds[] = 
		{
			{"", 20, 4}
		};
		deathSounds[] = 
		{
			{"", 20, 4}
		};
	};
};
class ExileLife_Fish_Salema_Porgy: ExileLife_Fish_Salema_Abstract
{
	scope = 2;
	displayName = "Salema";
	hiddenSelectionsTextures[] = {"a3\animals_f\fishes\data\fishes_co.paa"};
	hiddenSelectionMaterials[] = {"a3\animals_f\Fishes\data\salema_porgy.rvmat"};
};
class ExileLife_Fish_Tuna_Abstract: ExileLife_Fish_Abstract
{
	scope = 1;
	displayName = "Tuna";
	model = "\A3\Animals_F\Fishes\Tuna_F.p3d";
	hasGeometry = 1;
	moves = "CfgMovesSharks_F";
	hiddenSelections[] = {"camo"};
	class Exile 
	{
		variations[] = 
		{
			"ExileLife_Fish_Tuna"
		};
		fleeMove = "Sharks_Swim";
		idleMove = "Sharks_Stop";
		gutItem = "Exile_Item_TunaFilet_Raw";
		dangerSounds[] = 
		{
			{"", 20, 4}
		};
		deathSounds[] = 
		{
			{"", 20, 4}
		};
	};
};
class ExileLife_Fish_Tuna: ExileLife_Fish_Tuna_Abstract
{
	scope = 2;
	displayName = "Tuna";
	hiddenSelectionsTextures[] = {"a3\animals_f\fishes\data\Tuna_co.paa"};
	hiddenSelectionMaterials[] = {"a3\animals_f\Fishes\data\Tuna.rvmat"};
};
class ExileLife_Farming_DirtPile: Exile_Construction_Abstract_Static
{
	scope = 2;
	displayName = "Pile of Dirt";
	model = "\exilelife_assets\models\Items\Farming\ExileLife_Farming_DirtPile.p3d";
	exileRequiresSimulation = 1;
	armor = 10000;
	destrType = "DestructNo";
	hiddenSelections[] = {"camo"};
	hiddenSelectionsTextures[] = {"\exilelife_assets\models\Items\Farming\Images\gardensoil_co.paa"}; 
	hiddenSelectionsMaterials[] = {};
	class UserActions
	{
 		class searchfortreasure
		{
			displayName = "Search for Treasure";
			showWindow = 0;
			position = "left";
			radius = 1.5;
			onlyForPlayer = 1;
			condition = "((ExileClientInteractionObject getVariable ['ExileLifeSurfaceType',''] isEqualto '#GdtSoil') && (ExileLifeResourceType isEqualto 'Artefacts')) && !((animationState player) isEqualTo 'exile_shovel_dig01')";
			statement = "ExileClientInteractionObject call ExileLifeClient_resources_mine_dig;";
		};
		class harvestsalt
		{
			displayName = "Collect Salt";
			showWindow = 0;
			position = "left";
			radius = 1.5;
			onlyForPlayer = 1;
			condition = "((ExileClientInteractionObject getVariable ['ExileLifeSurfaceType',''] isEqualto '#GdtDead') && (ExileLifeResourceType isEqualto 'Salt')) && !((animationState player) isEqualTo 'exile_shovel_dig01')";
			statement = "ExileClientInteractionObject call ExileLifeClient_resources_mine_dig;";
		};
		class lookforworms
		{
			displayName = "Look for Worms";
			showWindow = 0;
			position = "left";
			radius = 1.5;
			onlyForPlayer = 1;
			condition = "((ExileClientInteractionObject getVariable ['ExileLifeSurfaceType',''] isEqualto '#GdtGrassGreen') && ((ExileClientInteractionObject getVariable ['ExileLifeSearched',-1]) isEqualto 0)) && !((animationState player) isEqualTo 'exile_shovel_dig01')";
			statement = "ExileClientInteractionObject call ExileLifeClient_object_farming_digWorms";
		};
		class diggarden
		{
			displayName = "Dig a Garden";
			showWindow = 0;
			position = "left";
			radius = 1.5;
			onlyForPlayer = 1;
			condition = "((ExileClientInteractionObject getVariable ['ExileLifeSurfaceType',''] isEqualto '#GdtGrassGreen') && ((secondaryweapon player) isEqualto 'ExileLife_Melee_GardenHoe')) && !((animationState player) isEqualTo 'exile_shovel_dig01')";
			statement = " ['DigGarden', ExileClientInteractionObject] spawn ExileClient_action_execute";
		};
	};
};
class ExileLife_Farming_DirtPlot: Exile_Construction_Abstract_Static
{
	scope = 2;
	displayName = "Prepared Garden Plot";
	model = "\exilelife_assets\models\Items\Farming\ExileLife_Farming_DirtPlot.p3d";
	exileRequiresSimulation = 1;
	armor = 10000;
	destrType = "DestructNo";
	hiddenSelections[] = {"gardenplot_0","gardenplot_1","gardenplot_2","gardenplot_3","gardenplot_4","gardenplot_5"};
	hiddenSelectionsTextures[] = {}; 
	hiddenSelectionsMaterials[] = {};
	class UserActions
	{
		class FertilizePlot1
		{
			displayNameDefault = "Fertilize Garden Plot";
			displayName = "Fertilize Garden Plot";
			priority = 1;
			radius = 1.1;
			showWindow = 0;
			hideOnUse = 1;
			position = "plot_0"; 
			onlyForPlayer = 1;
			condition = "(([player, 'ExileLife_Item_Fertilizer'] call ExileLifeClient_util_playerCargo_contains) && (([this,0,3] call ExileLifeClient_util_farming_getState) < 0.5))";
			statement = "[this,0] call ExileLifeClient_object_farming_fertilizeGarden; ";
		};
		class FertilizePlot2
		{
			displayNameDefault = "Fertilize Garden Plot";
			displayName = "Fertilize Garden Plot";
			priority = 1;
			radius = 1.1;
			showWindow = 0;
			hideOnUse = 1;
			position = "plot_1";
			onlyForPlayer = 1;
			condition = "(([player, 'ExileLife_Item_Fertilizer'] call ExileLifeClient_util_playerCargo_contains) && (([this,1,3] call ExileLifeClient_util_farming_getState) < 0.5))";
			statement = "[this,1] call ExileLifeClient_object_farming_fertilizeGarden; ";
		};		
		class FertilizePlot3
		{
			displayNameDefault = "Fertilize Garden Plot";
			displayName = "Fertilize Garden Plot";
			priority = 1;
			radius = 1.1;
			showWindow = 0;
			hideOnUse = 1;
			position = "plot_2";
			onlyForPlayer = 1;
			condition = "(([player, 'ExileLife_Item_Fertilizer'] call ExileLifeClient_util_playerCargo_contains) && (([this,2,3] call ExileLifeClient_util_farming_getState) < 0.5))";
			statement = "[this,2] call ExileLifeClient_object_farming_fertilizeGarden; ";
		};
		class FertilizePlot4
		{
			displayNameDefault = "Fertilize Garden Plot";
			displayName = "Fertilize Garden Plot";
			priority = 1;
			radius = 1.1;
			showWindow = 0;
			hideOnUse = 1;
			position = "plot_3";
			onlyForPlayer = 1;
			condition = "(([player, 'ExileLife_Item_Fertilizer'] call ExileLifeClient_util_playerCargo_contains) && (([this,3,3] call ExileLifeClient_util_farming_getState) < 0.5))";
			statement = "[this,3] call ExileLifeClient_object_farming_fertilizeGarden; ";
		};		
		class FertilizePlot5
		{
			displayNameDefault = "Fertilize Garden Plot";
			displayName = "Fertilize Garden Plot";
			priority = 1;
			radius = 1.1;
			showWindow = 0;
			hideOnUse = 1;
			position = "plot_4";
			onlyForPlayer = 1;
			condition = "(([player, 'ExileLife_Item_Fertilizer'] call ExileLifeClient_util_playerCargo_contains) && (([this,4,3] call ExileLifeClient_util_farming_getState) < 0.5))";
			statement = "[this,4] call ExileLifeClient_object_farming_fertilizeGarden; ";
		};
		class FertilizePlot6
		{
			displayNameDefault = "Fertilize Garden Plot";
			displayName = "Fertilize Garden Plot";
			priority = 1;
			radius = 1.1;
			showWindow = 0;
			hideOnUse = 1;
			position = "plot_5";
			onlyForPlayer = 1;
			condition = "(([player, 'ExileLife_Item_Fertilizer'] call ExileLifeClient_util_playerCargo_contains) && (([this,5,3] call ExileLifeClient_util_farming_getState) < 0.5))";
			statement = "[this,5] call ExileLifeClient_object_farming_fertilizeGarden; ";
		};		
		class PlantSeed01
		{
			displayNameDefault = "Plant a seed";
			displayName = "Plant a seed";
			onlyForPlayer = 1;
			priority = 1;
			radius = 1.1;
			showWindow = 0;
			hideOnUse = 1;
			position = "plot_0";
			condition = "((([this,0,1] call ExileLifeClient_util_farming_getState) isEqualto 1) && (([this,0,7] call ExileLifeClient_util_farming_getState) isEqualTo ''))";
			statement = "[this,0] spawn ExileLifeClient_object_farming_plantSeed";
		};		
		class PlantSeed02
		{
			displayNameDefault = "Plant a seed";
			displayName = "Plant a seed";
			onlyForPlayer = 1;
			priority = 1;
			radius = 1.1;
			showWindow = 0;
			hideOnUse = 1;
			position = "plot_1";
			condition = "((([this,1,1] call ExileLifeClient_util_farming_getState) isEqualto 1) && (([this,1,7] call ExileLifeClient_util_farming_getState) isEqualTo ''))";
			statement = "[this,1] spawn ExileLifeClient_object_farming_plantSeed";
		};		
		class PlantSeed03
		{
			displayNameDefault = "Plant a seed";
			displayName = "Plant a seed";
			onlyForPlayer = 1;
			priority = 1;
			radius = 1.1;
			showWindow = 0;
			hideOnUse = 1;
			position = "plot_2";
			condition = "((([this,2,1] call ExileLifeClient_util_farming_getState) isEqualto 1) && (([this,2,7] call ExileLifeClient_util_farming_getState) isEqualTo ''))";
			statement = "[this,2] spawn ExileLifeClient_object_farming_plantSeed";
		};						
		class PlantSeed04
		{
			displayNameDefault = "Plant a seed";
			displayName = "Plant a seed";
			onlyForPlayer = 1;
			priority = 1;
			radius = 1.1;
			showWindow = 0;
			hideOnUse = 1;
			position = "plot_3";
			condition = "((([this,3,1] call ExileLifeClient_util_farming_getState) isEqualto 1) && (([this,3,7] call ExileLifeClient_util_farming_getState) isEqualTo ''))";
			statement = "[this,3] spawn ExileLifeClient_object_farming_plantSeed";
		};		
		class PlantSeed05
		{
			displayNameDefault = "Plant a seed";
			displayName = "Plant a seed";
			onlyForPlayer = 1;
			priority = 1;
			radius = 1.1;
			showWindow = 0;
			hideOnUse = 1;
			position = "plot_4";
			condition = "((([this,4,1] call ExileLifeClient_util_farming_getState) isEqualto 1) && (([this,4,7] call ExileLifeClient_util_farming_getState) isEqualTo ''))";
			statement = "[this,4] spawn ExileLifeClient_object_farming_plantSeed";
		};		
		class PlantSeed06
		{
			displayNameDefault = "Plant a seed";
			displayName = "Plant a seed";
			onlyForPlayer = 1;
			priority = 1;
			radius = 1.1;
			showWindow = 0;
			hideOnUse = 1;
			position = "plot_5";
			condition = "((([this,5,1] call ExileLifeClient_util_farming_getState) isEqualto 1) && (([this,5,7] call ExileLifeClient_util_farming_getState) isEqualTo ''))";
			statement = "[this,5] spawn ExileLifeClient_object_farming_plantSeed";
		};						
	};
};
class ExileLife_Trader_Base: B_Soldier_base_F
{
	scope = 2;
	author = "Exile Life Mod Team";
	displayName = "Exile Life Trader Base";
	side = 2;
	modelSides[] = {2};
	faction = "IND_F";
	vehicleClass = "Men";
	weapons[] = {};
	respawnWeapons[] = {};
	magazines[]= {};
	respawnMagazines[] = {};
	items[] = {};
	respawnItems[] = {};
	linkedItems[] = {};
	respawnLinkedItems[] = {};
	backpack = "";
	canCarryBackPack = 1;
	nakedUniform = "U_BasicBody";
	model = "\A3\characters_F\common\coveralls";
	uniformClass = "";
	class EventHandlers
	{
		init = "";
	};
	class UserActions
	{
		class Interact
		{
			displayName = "<img image='\a3\ui_f\data\IGUI\Cfg\Actions\reammo_ca.paa' size='1' shadow='false' />Interact";
			position = "ohniste";
			radius = 3;
			priority = 6;
			onlyForPlayer = 1;
			condition = "true";
			statement = "";
		};
	};
	actionBegin1 = "Interact";
	actionEnd1 = "Interact";
};
class ExileLife_Trader_Receivings: ExileLife_Trader_Base
{
	displayName = "ExileLife Receivings Trader";
	uniformClass = "U_B_GEN_Soldier_F";
	linkedItems[] = {"V_TacVest_gen_F","H_Watchcap_blk","G_Aviator"};
	weapons[] = {"SMG_05_F"};
	class UserActions
	{
		class Interact1
		{
			displayName = "<img image='\a3\ui_f\data\IGUI\Cfg\Actions\reammo_ca.paa' size='1' shadow='false' />Talk To Receivings Trader";
			position = "ohniste";
			radius = 3;
			priority = 6;
			onlyForPlayer = 1;
			condition = "true";
			statement = "'ExileLife_Trader_Receivings' call ExileLifeClient_gui_dialog_select;";
		};
	};
};
class ExileLife_Trader_Supplier: ExileLife_Trader_Base
{
	displayName = "ExileLife Supplier";
	uniformClass = "Exile_Uniform_Woodland";
	linkedItems[] = {"V_Chestrig_khk","H_Hat_tan","G_Bandanna_beast","B_AssaultPack_khk"};
	weapons[] = {};
	class UserActions
	{
		class Interact
		{
			displayName = "<img image='\a3\ui_f\data\IGUI\Cfg\Actions\reammo_ca.paa' size='1' shadow='false' />Talk To The Supplier";
			position = "ohniste";
			radius = 3;
			priority = 6;
			onlyForPlayer = 1;
			condition = "true";
			statement = "'ExileLife_Trader_Supplier' call ExileLifeClient_gui_dialog_select;";
		};
	};
};
class ExileLife_Trader_BarrelSupplier: ExileLife_Trader_Base
{
	displayName = "ExileLife Barrel Supplier";
	uniformClass = "Exile_Uniform_Woodland";
	linkedItems[] = {"V_Chestrig_khk","H_Hat_tan","G_Bandanna_beast","B_AssaultPack_khk"};
	weapons[] = {};
	class UserActions
	{
		class Interact
		{
			displayName = "<img image='\a3\ui_f\data\IGUI\Cfg\Actions\reammo_ca.paa' size='1' shadow='false' />Talk To The Supplier";
			position = "ohniste";
			radius = 3;
			priority = 6;
			onlyForPlayer = 1;
			condition = "true";
			statement = "'ExileLife_Trader_barrelSupplier' call ExileLifeClient_gui_dialog_select;";
		};
	};
};
class ExileLife_Trader_vehicleSupplier: ExileLife_Trader_Base
{
	displayName = "ExileLife Vehicle Supplier";
	uniformClass = "ExileLife_Uniform_BoldNBrash";
	linkedItems[] = {};
	weapons[] = {};
	class UserActions
	{
		class Interact
		{
			displayName = "<img image='\a3\ui_f\data\IGUI\Cfg\Actions\reammo_ca.paa' size='1' shadow='false' />Talk To The Supplier";
			position = "ohniste";
			radius = 3;
			priority = 6;
			onlyForPlayer = 1;
			condition = "true";
			statement = "'ExileLife_Trader_vehicleSupplier' call ExileLifeClient_gui_dialog_select;";
		};
	};
};
class ExileLife_Trader_scrapMetalSupplier: ExileLife_Trader_Base
{
	displayName = "ExileLife Scrap Metal Trader";
	uniformClass = "ExileLife_Uniform_Edgy";
	linkedItems[] = {};
	weapons[] = {};
	class UserActions
	{
		class Interact
		{
			displayName = "<img image='\a3\ui_f\data\IGUI\Cfg\Actions\reammo_ca.paa' size='1' shadow='false' />Talk To The Supplier";
			position = "ohniste";
			radius = 3;
			priority = 6;
			onlyForPlayer = 1;
			condition = "true";
			statement = "'ExileLife_Trader_scrapMetalSupplier' call ExileLifeClient_gui_dialog_select;";
		};
	};
};
class ExileLife_Trader_lumberSupplier: ExileLife_Trader_Base
{
	displayName = "ExileLife Lumber Trader";
	uniformClass = "Exile_Uniform_Woodland";
	linkedItems[] = {};
	weapons[] = {};
	class UserActions
	{
		class Interact
		{
			displayName = "<img image='\a3\ui_f\data\IGUI\Cfg\Actions\reammo_ca.paa' size='1' shadow='false' />Talk To The Supplier";
			position = "ohniste";
			radius = 3;
			priority = 6;
			onlyForPlayer = 1;
			condition = "true";
			statement = "'ExileLife_Trader_lumberSupplier' call ExileLifeClient_gui_dialog_select;";
		};
	};
};
class ExileLife_Trader_oreSupplier: ExileLife_Trader_Base
{
	displayName = "ExileLife Ore Trader";
	uniformClass = "Exile_Uniform_Woodland";
	linkedItems[] = {};
	weapons[] = {};
	class UserActions
	{
		class Interact
		{
			displayName = "<img image='\a3\ui_f\data\IGUI\Cfg\Actions\reammo_ca.paa' size='1' shadow='false' />Talk To The Supplier";
			position = "ohniste";
			radius = 3;
			priority = 6;
			onlyForPlayer = 1;
			condition = "true";
			statement = "'ExileLife_Trader_oreSupplier' call ExileLifeClient_gui_dialog_select;";
		};
	};
};
class ExileLife_Trader_guardVehicleSupplier: ExileLife_Trader_Base
{
	displayName = "Guard Vehicle Trader";
	uniformClass = "ExileLife_Uniform_Guard_BasicBlack";
	linkedItems[] = {};
	weapons[] = {};
	class UserActions
	{
		class Interact
		{
			displayName = "<img image='\a3\ui_f\data\IGUI\Cfg\Actions\reammo_ca.paa' size='1' shadow='false' />Talk To The Supplier";
			position = "ohniste";
			radius = 3;
			priority = 6;
			onlyForPlayer = 1;
			condition = "(ExileLifeClientGang isEqualto 'Guard')";
			statement = "'ExileLife_Trader_guardVehicleSupplier' call ExileLifeClient_gui_dialog_select;";
		};
	};
};
class ExileLife_Trader_guardDockSupplier: ExileLife_Trader_Base
{
	displayName = "ExileLife Export Merchant";
	uniformClass = "Exile_Uniform_Woodland";
	linkedItems[] = {};
	weapons[] = {};
	class UserActions
	{
		class Interact
		{
			displayName = "<img image='\a3\ui_f\data\IGUI\Cfg\Actions\reammo_ca.paa' size='1' shadow='false' />Talk To The Supplier";
			position = "ohniste";
			radius = 3;
			priority = 6;
			onlyForPlayer = 1;
			condition = "true";
			statement = "'ExileLife_Trader_Docks' call ExileLifeClient_gui_dialog_select;";
		};
	};
};
class ExileLife_Trader_Garage: ExileLife_Trader_Base
{
	displayName = "ExileLife Garage Valet";
	uniformClass = "ExileLife_Uniform_Edgy";
	linkedItems[] = {};
	weapons[] = {};
	class UserActions
	{
		class Interact
		{
			displayName = "<img image='\a3\ui_f\data\IGUI\Cfg\Actions\reammo_ca.paa' size='1' shadow='false' />Talk To The Valet";
			position = "ohniste";
			radius = 3;
			priority = 6;
			onlyForPlayer = 1;
			condition = "true";
			statement = "'ExileLife_Trader_Garage' call ExileLifeClient_gui_dialog_select;";
		};
	};
};
class ExileLife_GangRecruiter_Abstract: B_Soldier_base_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "ExileLife GangRecruiter Base";
	side = 2;
	modelSides[] = {2};
	faction = "IND_F";
	vehicleClass = "Men";
	weapons[] = {};
	respawnWeapons[] = {};
	magazines[] = {};
	respawnMagazines[] = {};
	items[] = {};
	respawnItems[] = {};
	linkedItems[] = {};
	respawnLinkedItems[] = {};
	backpack = "";
	canCarryBackPack = 1;
	nakedUniform = "U_BasicBody";
	model = "\A3\characters_F\common\coveralls";
	uniformClass = "";
	class EventHandlers
	{
		init = "";
	};
};
class ExileLife_GangRecruiter_Mafia: ExileLife_GangRecruiter_Abstract
{
	displayName = "ExileLife Mafia Recruiter";
	uniformClass = "U_IG_Guerilla1_1";
	linkedItems[] = {};
	weapons[] = {};
	class UserActions
	{
		class recruit
		{
			displayName = "<img image='\a3\ui_f\data\IGUI\Cfg\Actions\reammo_ca.paa' size='1' shadow='false' />Speak to Recruiter";
			position = "ohniste";
			radius = 3;
			priority = 6;
			onlyForPlayer = 1;
			condition = "true";
			statement = "'ExileLife_Mafia_Recruiter' call ExileLifeClient_gui_dialog_select;";
		};
	};
};
class ExileLife_GangRecruiter_Syndicate: ExileLife_GangRecruiter_Abstract
{
	displayName = "ExileLife Syndicate Recruiter";
	uniformClass = "U_IG_leader";
	linkedItems[] = {};
	weapons[] = {};
	class UserActions
	{
		class recruit
		{
			displayName = "<img image='\a3\ui_f\data\IGUI\Cfg\Actions\reammo_ca.paa' size='1' shadow='false' />Speak to Recruiter";
			position = "ohniste";
			radius = 3;
			priority = 6;
			onlyForPlayer = 1;
			condition = "true";
			statement = "'ExileLife_Syndicate_Recruiter' call ExileLifeClient_gui_dialog_select;";
		};
	};
};
class ExileLife_GangRecruiter_Cartel: ExileLife_GangRecruiter_Abstract
{
	displayName = "ExileLife Cartel Recruiter";
	uniformClass = "U_B_CTRG_2";
	linkedItems[] = {};
	weapons[] = {};
	class UserActions
	{
		class recruit
		{
			displayName = "<img image='\a3\ui_f\data\IGUI\Cfg\Actions\reammo_ca.paa' size='1' shadow='false' />Speak to Recruiter";
			position = "ohniste";
			radius = 3;
			priority = 6;
			onlyForPlayer = 1;
			condition = "true";
			statement = "'ExileLife_Cartel_Recruiter' call ExileLifeClient_gui_dialog_select;";
		};
	};
};
class ExileLife_GangRecruiter_Yakuza: ExileLife_GangRecruiter_Abstract
{
	displayName = "ExileLife Yakuza Recruiter";
	uniformClass = "U_B_survival_uniform";
	linkedItems[] = {};
	weapons[] = {};
	class UserActions
	{
		class recruit
		{
			displayName = "<img image='\a3\ui_f\data\IGUI\Cfg\Actions\reammo_ca.paa' size='1' shadow='false' />Speak to Recruiter";
			position = "ohniste";
			radius = 3;
			priority = 6;
			onlyForPlayer = 1;
			condition = "true";
			statement = "'ExileLife_Yakuza_Recruiter' call ExileLifeClient_gui_dialog_select;";
		};
	};
};
class ExileLife_Medic_Abstract: B_Soldier_base_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "ExileLife Medic Base";
	side = 2;
	modelSides[] = {2};
	faction = "IND_F";
	vehicleClass = "Men";
	weapons[] = {};
	respawnWeapons[] = {};
	magazines[] = {};
	respawnMagazines[] = {};
	items[] = {};
	respawnItems[] = {};
	linkedItems[] = {};
	respawnLinkedItems[] = {};
	backpack = "";
	canCarryBackPack = 1;
	nakedUniform = "U_BasicBody";
	model = "\A3\characters_F\common\coveralls";
	uniformClass = "";
	class EventHandlers
	{
		init = "";
	};
};
class ExileLife_Medic_Mafia: ExileLife_Medic_Abstract
{
	displayName = "ExileLife Mafia Medic";
	uniformClass = "U_IG_Guerilla1_1";
	linkedItems[] = {};
	weapons[] = {};
	class UserActions
	{
		class roster
		{
			displayName = "<img image='\a3\ui_f\data\IGUI\Cfg\Actions\reammo_ca.paa' size='1' shadow='false' />Speak to Medic";
			position = "ohniste";
			radius = 3;
			priority = 6;
			onlyForPlayer = 1;
			condition = "true";
			statement = "'ExileLife_Mafia_Medic' call ExileLifeClient_gui_dialog_select;";
		};
	};
};
class ExileLife_Medic_Syndicate: ExileLife_Medic_Abstract
{
	displayName = "ExileLife Syndicate Medic";
	uniformClass = "U_IG_leader";
	linkedItems[] = {};
	weapons[] = {};
	class UserActions
	{
		class roster
		{
			displayName = "<img image='\a3\ui_f\data\IGUI\Cfg\Actions\reammo_ca.paa' size='1' shadow='false' />Speak to Medic";
			position = "ohniste";
			radius = 3;
			priority = 6;
			onlyForPlayer = 1;
			condition = "true";
			statement = "'ExileLife_Syndicate_Medic' call ExileLifeClient_gui_dialog_select;";
		};
	};
};
class ExileLife_Medic_Cartel: ExileLife_Medic_Abstract
{
	displayName = "ExileLife Cartel Medic";
	uniformClass = "U_B_CTRG_2";
	linkedItems[] = {};
	weapons[] = {};
	class UserActions
	{
		class roster
		{
			displayName = "<img image='\a3\ui_f\data\IGUI\Cfg\Actions\reammo_ca.paa' size='1' shadow='false' />Speak to Medic";
			position = "ohniste";
			radius = 3;
			priority = 6;
			onlyForPlayer = 1;
			condition = "true";
			statement = "'ExileLife_Cartel_Medic' call ExileLifeClient_gui_dialog_select;";
		};
	};
};
class ExileLife_Medic_Yakuza: ExileLife_Medic_Abstract
{
	displayName = "ExileLife Yakuza Medic";
	uniformClass = "U_B_survival_uniform";
	linkedItems[] = {};
	weapons[] = {};
	class UserActions
	{
		class roster
		{
			displayName = "<img image='\a3\ui_f\data\IGUI\Cfg\Actions\reammo_ca.paa' size='1' shadow='false' />Speak to Medic";
			position = "ohniste";
			radius = 3;
			priority = 6;
			onlyForPlayer = 1;
			condition = "true";
			statement = "'ExileLife_Yakuza_Medic' call ExileLifeClient_gui_dialog_select;";
		};
	};
};
class ExileLife_Medic_Guard: ExileLife_Medic_Abstract
{
	displayName = "ExileLife Guard Medic";
	uniformClass = "ExileLife_Uniform_Guard_BasicBlack";
	linkedItems[] = {};
	weapons[] = {};
	class UserActions
	{
		class roster
		{
			displayName = "<img image='\a3\ui_f\data\IGUI\Cfg\Actions\reammo_ca.paa' size='1' shadow='false' />Speak to Medic";
			position = "ohniste";
			radius = 3;
			priority = 6;
			onlyForPlayer = 1;
			condition = "true";
			statement = "'ExileLife_Guard_Medic' call ExileLifeClient_gui_dialog_select;";
		};
	};
};
class ExileLife_Trader_Office: Exile_Trader_Abstract
{
	displayName = "Guard Quartermaster";
	uniformClass = "U_I_G_resistanceLeader_F";
	linkedItems[] = {"V_Rangemaster_belt", "H_Hat_brown"};
	class UserActions
	{
		class Interact1
		{
			displayName = "<img image='\a3\ui_f\data\IGUI\Cfg\Actions\reammo_ca.paa' size='1' shadow='false' />Talk To Quartermaster";
			position = "ohniste";
			radius = 3;
			priority = 6;
			onlyForPlayer = 1;
			condition = "!(ExileLifeClientGang isEqualto 'Guard')";
			statement = "'ExileLife_Guard_QuarterMaster' call ExileLifeClient_gui_dialog_select;";
		};
	};
};
class ExileLife_Trader_Office_Mafia: Exile_Trader_Abstract
{
	displayName = "Mafia Quartermaster";
	uniformClass = "U_I_G_resistanceLeader_F";
	linkedItems[] = {"V_Rangemaster_belt", "H_Hat_brown"};
	class UserActions
	{
		class Interact1
		{
			displayName = "<img image='\a3\ui_f\data\IGUI\Cfg\Actions\reammo_ca.paa' size='1' shadow='false' />Talk To Quartermaster";
			position = "ohniste";
			radius = 3;
			priority = 6;
			onlyForPlayer = 1;
			condition = "(ExileLifeClientGang isEqualto 'Mafia')";
			statement = "'ExileLife_Mafia_QuarterMaster' call ExileLifeClient_gui_dialog_select;";
		};
	};
};
class ExileLife_Trader_Office_Yakuza: Exile_Trader_Abstract
{
	displayName = "Yakuza Quartermaster";
	uniformClass = "U_I_G_resistanceLeader_F";
	linkedItems[] = {"V_Rangemaster_belt", "H_Hat_brown"};
	class UserActions
	{
		class Interact1
		{
			displayName = "<img image='\a3\ui_f\data\IGUI\Cfg\Actions\reammo_ca.paa' size='1' shadow='false' />Talk To Quartermaster";
			position = "ohniste";
			radius = 3;
			priority = 6;
			onlyForPlayer = 1;
			condition = "(ExileLifeClientGang isEqualto 'Yakuza')";
			statement = "'ExileLife_Yakuza_QuarterMaster' call ExileLifeClient_gui_dialog_select;";
		};
	};
};
class ExileLife_Trader_Office_Cartel: Exile_Trader_Abstract
{
	displayName = "Cartel Quartermaster";
	uniformClass = "U_I_G_resistanceLeader_F";
	linkedItems[] = {"V_Rangemaster_belt", "H_Hat_brown"};
	class UserActions
	{
		class Interact1
		{
			displayName = "<img image='\a3\ui_f\data\IGUI\Cfg\Actions\reammo_ca.paa' size='1' shadow='false' />Talk To Quartermaster";
			position = "ohniste";
			radius = 3;
			priority = 6;
			onlyForPlayer = 1;
			condition = "(ExileLifeClientGang isEqualto 'Cartel')";
			statement = "'ExileLife_Cartel_QuarterMaster' call ExileLifeClient_gui_dialog_select;";
		};
	};
};
class ExileLife_Trader_Office_Syndicate: Exile_Trader_Abstract
{
	displayName = "Syndicate Quartermaster";
	uniformClass = "U_I_G_resistanceLeader_F";
	linkedItems[] = {"V_Rangemaster_belt", "H_Hat_brown"};
	class UserActions
	{
		class Interact1
		{
			displayName = "<img image='\a3\ui_f\data\IGUI\Cfg\Actions\reammo_ca.paa' size='1' shadow='false' />Talk To Quartermaster";
			position = "ohniste";
			radius = 3;
			priority = 6;
			onlyForPlayer = 1;
			condition = "(ExileLifeClientGang isEqualto 'Syndicate')";
			statement = "'ExileLife_Syndicate_QuarterMaster' call ExileLifeClient_gui_dialog_select;";
		};
	};
};
class ExileLife_SafeZone_Trader_Armory: Exile_Trader_Abstract
{
	displayName = "Guard Armory Trader";
	uniformClass = "U_Rangemaster";
	linkedItems[] = {"V_Rangemaster_belt","H_Cap_headphones","G_Shades_Black"};
	weapons[] = {"srifle_DMR_06_olive_F"};
};
class ExileLife_SafeZone_Trader_SpecialOperations: Exile_Trader_Abstract
{
	displayName = "Guard Special Operations Trader";
	backpack = "B_Parachute";
	linkedItems[] = {"V_PlateCarrierGL_blk","H_HelmetB_light_black","G_Balaclava_lowprofile","NVGoggles_OPFOR","muzzle_snds_H","acc_pointer_IR","optic_KHS_blk","bipod_03_F_blk"};
	uniformClass = "U_B_CTRG_1";
	weapons[] = {"arifle_MX_Black_F"};
};
class ExileLife_SafeZone_Trader_Equipment: Exile_Trader_Abstract
{
	displayName = "Guard Equipment Trader";
	uniformClass = "U_BG_Guerrilla_6_1";
	linkedItems[] = {"V_I_G_resistanceLeader_F","H_Watchcap_khk","optic_KHS_blk"};
	weapons[] = {"arifle_MX_GL_Black_F"};
};
class ExileLife_SafeZone_Trader_Food: Exile_Trader_Abstract
{
	displayName = "Guard Food Trader";
	uniformClass = "U_C_Poloshirt_blue";
	linkedItems[] = {"H_Cap_tan"};
};
class ExileLife_SafeZone_Trader_Hardware: Exile_Trader_Abstract
{
	displayName = "Guard Hardware Trader";
	backpack = "B_UAV_01_backpack_F";
	uniformClass = "U_C_WorkerCoveralls";
	linkedItems[] = {"V_BandollierB_rgr","H_Booniehat_khk_hs"};
	weapons[] = {};
};
class ExileLife_SafeZone_Trader_Vehicle: Exile_Trader_Abstract
{
	displayName = "Guard Vehicle Trader";
	uniformClass = "Exile_Uniform_ExileCustoms";
	linkedItems[] = {"H_RacingHelmet_4_F"};
	class UserActions
	{
		class trade
		{
			displayName = "<img image='\a3\ui_f\data\IGUI\Cfg\Actions\reammo_ca.paa' size='1' shadow='false' />Purchase Vehicle";
			position = "ohniste";
			radius = 3;
			priority = 6;
			onlyForPlayer = 1;
			condition = "true";
			statement = "this call ExileClient_gui_vehicleTraderDialog_show";
		};
	};
};
class ExileLife_Trader_WasteDump: Exile_Trader_Abstract
{
	displayName = "Exile Waste Dump Trader";
	uniformClass = "U_I_G_Story_Protagonist_F";
	linkedItems[] = {"V_Rangemaster_belt", "H_MilCap_gry"};
	class UserActions
	{
		class trade
		{
			displayName = "<img image='\a3\ui_f\data\IGUI\Cfg\Actions\reammo_ca.paa' size='1' shadow='false' />Recycle Goods";
			position = "ohniste";
			radius = 3;
			priority = 6;
			onlyForPlayer = 1;
			condition = "true";
			statement = "this call ExileClient_gui_wasteDumpDialog_show";
		};
	};
};
	class ExileLife_Unit_BoldNBrash: Exile_Unit_Abstract
	{
		scope = 2;
		displayName = "ExileLife Bold N Brash";
		uniformClass = "ExileLife_Uniform_BoldNBrash"; 
		model = "\A3\characters_F\civil\c_poor";
		hiddenSelections[] = {"Camo","insignia"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\ExileLife_Uniform_BoldNBrash.paa"};
	};
	class ExileLife_Unit_Edgy: Exile_Unit_Abstract
	{
		scope = 2;
		displayName = "ExileLife Edgy";
		uniformClass = "ExileLife_Uniform_Edgy"; 
		model = "\A3\characters_F\civil\c_poor";
		hiddenSelections[] = {"Camo","insignia"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\ExileLife_Uniform_Edgy.paa"};
	};
	class ExileLife_Unit_GangsterSpongebob: Exile_Unit_Abstract
	{
		scope = 2;
		displayName = "ExileLife GangsterSpongebob";
		uniformClass = "ExileLife_Uniform_GangsterSpongebob"; 
		model = "\A3\characters_F\civil\c_poor";
		hiddenSelections[] = {"Camo","insignia"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\ExileLife_Uniform_GangsterSpongebob.paa"};
	};
	class ExileLife_Unit_OldSchoolCherno: Exile_Unit_Abstract
	{
		scope = 2;
		displayName = "ExileLife OldSchoolCherno";
		uniformClass = "ExileLife_Uniform_OldSchoolCherno"; 
		model = "\A3\characters_F\civil\c_poor";
		hiddenSelections[] = {"Camo","insignia"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\ExileLife_Uniform_OldSchoolCherno.paa"};
	};
	class ExileLife_Unit_P2W: Exile_Unit_Abstract
	{
		scope = 2;
		displayName = "ExileLife P2W";
		uniformClass = "ExileLife_Uniform_P2W"; 
		model = "\A3\characters_F\civil\c_poor";
		hiddenSelections[] = {"Camo","insignia"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\ExileLife_Uniform_P2W.paa"};
	};
	class ExileLife_Unit_PeanutbutterCat: Exile_Unit_Abstract
	{
		scope = 2;
		displayName = "ExileLife PeanutbutterCat";
		uniformClass = "ExileLife_Uniform_PeanutbutterCat"; 
		model = "\A3\characters_F\civil\c_poor";
		hiddenSelections[] = {"Camo","insignia"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\ExileLife_Uniform_PeanutbutterCat.paa"};
	};
	class ExileLife_Unit_Tiedie: Exile_Unit_Abstract
	{
		scope = 2;
		displayName = "ExileLife Tiedie";
		uniformClass = "ExileLife_Uniform_Tiedie"; 
		model = "\A3\characters_F\civil\c_poor";
		hiddenSelections[] = {"Camo","insignia"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\ExileLife_Uniform_Tiedie.paa"};
	};
	class ExileLife_Unit_Waddup: Exile_Unit_Abstract
	{
		scope = 2;
		displayName = "ExileLife Waddup";
		uniformClass = "ExileLife_Uniform_Waddup"; 
		model = "\A3\characters_F\civil\c_poor";
		hiddenSelections[] = {"Camo","insignia"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\ExileLife_Uniform_Waddup.paa"};
	};
	class ExileLife_Unit_PoloBlack_Brown: Exile_Unit_Abstract
	{
		scope = 2;
		displayName = "ExileLife PoloBlack_Brown";
		uniformClass = "ExileLife_Uniform_PoloBlack_Brown"; 
		model="\A3\Characters_F\Civil\c_poloshirtpants.p3d";
		hiddenSelections[] = {"Camo","insignia"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\ExileLife_Uniform_PoloBlack_Brown.paa"};
	};
	class ExileLife_Unit_PoloBlue_White: ExileLife_Unit_PoloBlack_Brown
	{
		displayName = "ExileLife PoloBlue_White";
		uniformClass = "ExileLife_Uniform_PoloBlue_White"; 
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\ExileLife_Uniform_PoloBlue_White.paa"};
	};
	class ExileLife_Unit_PoloGrey_Maroon: ExileLife_Unit_PoloBlack_Brown
	{
		displayName = "ExileLife PoloGrey_Maroon";
		uniformClass = "ExileLife_Uniform_PoloGrey_Maroon"; 
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\ExileLife_Uniform_PoloGrey_Maroon.paa"};
	};
	class ExileLife_Unit_PoloWhite_Blue: ExileLife_Unit_PoloBlack_Brown
	{
		displayName = "ExileLife PoloWhite_Blue";
		uniformClass = "ExileLife_Uniform_PoloWhite_Blue"; 
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\ExileLife_Uniform_PoloWhite_Blue.paa"};
	};
	class ExileLife_Unit_PoloCustom_FoolBox: ExileLife_Unit_PoloBlack_Brown
	{
		displayName = "ExileLife PoloCustom_FoolBox";
		uniformClass = "ExileLife_Uniform_PoloCustom_FoolBox"; 
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\ExileLife_Uniform_PoloCustom_FoolBox.paa"};
	};
	class ExileLife_Unit_CartelTshirtClean: Exile_Unit_Abstract
	{
		scope = 2;
		displayName = "ExileLife Cartel T Clean";
		uniformClass = "ExileLife_Uniform_CartelTshirtClean"; 
		model = "\A3\characters_F\civil\c_poor";
		hiddenSelections[] = {"Camo","insignia"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\cartel\ExileLife_Uniform_CartelTshirtClean.paa"};
	};
	class ExileLife_Unit_CartelTshirtDirty: Exile_Unit_Abstract
	{
		scope = 2;
		displayName = "ExileLife Cartel T Dirty";
		uniformClass = "ExileLife_Uniform_CartelTshirtDirty"; 
		model = "\A3\characters_F\civil\c_poor";
		hiddenSelections[] = {"Camo","insignia"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\cartel\ExileLife_Uniform_CartelTshirtDirty.paa"};
	};
	class ExileLife_Unit_CartelVestClean: Exile_Unit_Abstract
	{
		scope = 2;
		displayName = "ExileLife Cartel Vest Clean";
		uniformClass = "ExileLife_Uniform_CartelVestClean"; 
		model = "\A3\Characters_F\Civil\c_poloshirt";
		hiddenSelections[] = {"Camo","insignia"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\cartel\ExileLife_Uniform_CartelVestClean.paa"};
	};
	class ExileLife_Unit_CartelVestDirty: Exile_Unit_Abstract
	{
		scope = 2;
		displayName = "ExileLife Cartel Vest Dirty";
		uniformClass = "ExileLife_Uniform_CartelVestDirty"; 
		model = "\A3\Characters_F\Civil\c_poloshirt";
		hiddenSelections[] = {"Camo","insignia"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\cartel\ExileLife_Uniform_CartelVestDirty.paa"};
	};
	class Exile_Unit_GhostGuard: VirtualMan_F
	{
		scope = 2;
		author = "ExileLife Mod Team";
		displayName = "ExileLife Guard Player Slot";
		side = 2;
		modelSides[] = {2};
		faction = "BLU_F";
		vehicleClass = "Men";
	};
	class ExileLife_Unit_Guard: Exile_Unit_Abstract
	{
		scope = 2;
		faction = "BLU_F";
		displayName = "ExileLife Guard";
		model = "\A3\characters_f_bootcamp\guerrilla\ig_guerrilla_6_1";
		uniformClass = "ExileLife_Uniform_Guard";
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\guard\ExileLife_Uniform_G_DirtyDesertCamo.paa"};
	};
	class ExileLife_Unit_Guard_BasicBlue: Exile_Unit_Abstract
	{
		scope = 2;
		faction = "BLU_F";
		displayName = "ExileLife Guard Blue";
		model = "a3\characters_f_beta\indep\ia_soldier_01";
		uniformClass = "ExileLife_Uniform_Guard_BasicBlue";
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\guard\ExileLife_Uniform_G_DirtyBasicBlue.paa"};
	};
	class ExileLife_Unit_Guard_BasicBlack: Exile_Unit_Abstract
	{
		scope = 2;
		faction = "BLU_F";
		displayName = "ExileLife Guard Black";
		model = "\A3\characters_f_bootcamp\guerrilla\ig_guerrilla_6_1";
		uniformClass = "ExileLife_Uniform_Guard_BasicBlack";
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\guard\ExileLife_Uniform_G_DirtyBasicBlack.paa"};
	};
	class ExileLife_Unit_MafiaTshirtClean: Exile_Unit_Abstract
	{
		scope = 2;
		displayName = "ExileLife Mafia T Clean";
		uniformClass = "ExileLife_Uniform_MafiaTshirtClean"; 
		model = "\A3\characters_F\civil\c_poor";
		hiddenSelections[] = {"Camo","insignia"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\mafia\ExileLife_Uniform_MafiaTshirtClean.paa"};
	};
	class ExileLife_Unit_MafiaTshirtDirty: Exile_Unit_Abstract
	{
		scope = 2;
		displayName = "ExileLife Mafia T Dirty";
		uniformClass = "ExileLife_Uniform_MafiaTshirtDirty"; 
		model = "\A3\characters_F\civil\c_poor";
		hiddenSelections[] = {"Camo","insignia"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\mafia\ExileLife_Uniform_MafiaTshirtDirty.paa"};
	};
	class ExileLife_Unit_MafiaVestClean: Exile_Unit_Abstract
	{
		scope = 2;
		displayName = "ExileLife Mafia Vest Clean";
		uniformClass = "ExileLife_Uniform_MafiaVestClean"; 
		model = "\A3\Characters_F\Civil\c_poloshirt";
		hiddenSelections[] = {"Camo","insignia"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\mafia\ExileLife_Uniform_MafiaVestClean.paa"};
	};
	class ExileLife_Unit_MafiaVestDirty: Exile_Unit_Abstract
	{
		scope = 2;
		displayName = "ExileLife Mafia Vest Dirty";
		uniformClass = "ExileLife_Uniform_MafiaVestDirty"; 
		model = "\A3\Characters_F\Civil\c_poloshirt";
		hiddenSelections[] = {"Camo","insignia"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\mafia\ExileLife_Uniform_MafiaVestDirty.paa"};
	};
	class ExileLife_Unit_SyndicateTshirtClean: Exile_Unit_Abstract
	{
		scope = 2;
		displayName = "ExileLife Syndicate T Clean";
		uniformClass = "ExileLife_Uniform_SyndicateTshirtClean"; 
		model = "\A3\characters_F\civil\c_poor";
		hiddenSelections[] = {"Camo","insignia"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\syndicate\ExileLife_Uniform_SyndicateTshirtClean.paa"};
	};
	class ExileLife_Unit_SyndicateTshirtDirty: Exile_Unit_Abstract
	{
		scope = 2;
		displayName = "ExileLife Syndicate T Dirty";
		uniformClass = "ExileLife_Uniform_SyndicateTshirtDirty"; 
		model = "\A3\characters_F\civil\c_poor";
		hiddenSelections[] = {"Camo","insignia"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\syndicate\ExileLife_Uniform_SyndicateTshirtDirty.paa"};
	};
	class ExileLife_Unit_SyndicateVestClean: Exile_Unit_Abstract
	{
		scope = 2;
		displayName = "ExileLife Syndicate Vest Clean";
		uniformClass = "ExileLife_Uniform_SyndicateVestClean"; 
		model = "\A3\Characters_F\Civil\c_poloshirt";
		hiddenSelections[] = {"Camo","insignia"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\syndicate\ExileLife_Uniform_SyndicateVestClean.paa"};
	};
	class ExileLife_Unit_SyndicateVestDirty: Exile_Unit_Abstract
	{
		scope = 2;
		displayName = "ExileLife Syndicate Vest Dirty";
		uniformClass = "ExileLife_Uniform_SyndicateVestDirty"; 
		model = "\A3\Characters_F\Civil\c_poloshirt";
		hiddenSelections[] = {"Camo","insignia"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\syndicate\ExileLife_Uniform_SyndicateVestDirty.paa"};
	};
	class ExileLife_Unit_YakuzaTshirtClean: Exile_Unit_Abstract
	{
		scope = 2;
		displayName = "ExileLife Yakuza T Clean";
		uniformClass = "ExileLife_Uniform_YakuzaTshirtClean"; 
		model = "\A3\characters_F\civil\c_poor";
		hiddenSelections[] = {"Camo","insignia"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\yakuza\ExileLife_Uniform_YakuzaTshirtClean.paa"};
	};
	class ExileLife_Unit_YakuzaTshirtDirty: Exile_Unit_Abstract
	{
		scope = 2;
		displayName = "ExileLife Yakuza T Dirty";
		uniformClass = "ExileLife_Uniform_YakuzaTshirtDirty"; 
		model = "\A3\characters_F\civil\c_poor";
		hiddenSelections[] = {"Camo","insignia"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\yakuza\ExileLife_Uniform_YakuzaTshirtDirty.paa"};
	};
	class ExileLife_Unit_YakuzaVestClean: Exile_Unit_Abstract
	{
		scope = 2;
		displayName = "ExileLife Yakuza Vest Clean";
		uniformClass = "ExileLife_Uniform_YakuzaVestClean"; 
		model = "\A3\Characters_F\Civil\c_poloshirt";
		hiddenSelections[] = {"Camo","insignia"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\yakuza\ExileLife_Uniform_YakuzaVestClean.paa"};
	};
	class ExileLife_Unit_YakuzaVestDirty: Exile_Unit_Abstract
	{
		scope = 2;
		displayName = "ExileLife Yakuza Vest Dirty";
		uniformClass = "ExileLife_Uniform_YakuzaVestDirty"; 
		model = "\A3\Characters_F\Civil\c_poloshirt";
		hiddenSelections[] = {"Camo","insignia"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\yakuza\ExileLife_Uniform_YakuzaVestDirty.paa"};
	};
class ExileLife_Dummy: Static
{
    scope = 1;
    displayName = "";
};
class Land_PowerGenerator_F;
class ExileLife_Generator: Land_PowerGenerator_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Exile Life City Generator";
};
class Exile_Construction_ConcreteGate_Static;
class Land_bargate_F;
class Land_net_fence_gate_f;
class Land_InfoStand_V2_F;
class ExileLife_Guard_BarGate_1: Land_bargate_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Bar Gate";
	class UserActions
	{
		class OpenGate_1
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "$STR_DN_OUT_O_DOOR";
			position = "Bar_1_trigger";
			radius = 3;
			aiMaxRange = 9;
			onlyForPlayer = 0;
			condition = "(this animationPhase 'Door_1_rot' < 0.5) && (ExileLifeClientClass isEqualTo 'Guard')";
			statement = "this animate ['Door_1_rot', 1]";
		};
		class CloseGate_1: OpenGate_1
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "$STR_DN_OUT_C_DOOR";
			condition = "(this animationPhase 'Door_1_rot' >= 0.5) && (ExileLifeClientClass isEqualTo 'Guard')";
			statement = "this animate ['Door_1_rot', 0]";
		};
	};
};
class ExileLife_Guard_FenceGate_1: Land_net_fence_gate_f
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Fence Gate";
	class UserActions
	{
		class OpenDoor_1
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "$STR_DN_OUT_O_DOOR";
			priority = 11;
			position = "Door_1_trigger";
			radius = 1.5;
			aiMaxRange = "1.5				 * 3";
			onlyForPlayer = 0;
			condition = "(this animationPhase 'DoorRotationLeft' < 0.5) && (ExileLifeClientClass isEqualTo 'Guard')";
			statement = "([this, 'Door_1_rot'] call BIS_fnc_DoorNoHandleOpen)";
		};
		class CloseDoor_1: OpenDoor_1
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "$STR_DN_OUT_C_DOOR";
			priority = 11;
			condition = "(this animationPhase 'DoorRotationLeft' >= 0.5) && (ExileLifeClientClass isEqualTo 'Guard')";
			statement = "([this, 'Door_1_rot'] call BIS_fnc_DoorNoHandleClose)";
		};
		class OpenDoor_2
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "$STR_DN_OUT_O_DOOR";
			priority = 11;
			position = "Door_2_trigger";
			radius = 1.5;
			aiMaxRange = "1.5				 * 3";
			onlyForPlayer = 0;
			condition = "(this animationPhase 'DoorRotationLeft' < 0.5) && (ExileLifeClientClass isEqualTo 'Guard')";
			statement = "([this, 'Door_2_rot'] call BIS_fnc_DoorNoHandleOpen)";
		};
		class CloseDoor_2: OpenDoor_2
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "$STR_DN_OUT_C_DOOR";
			priority = 11;
			condition = "(this animationPhase 'DoorRotationLeft' >= 0.5) && (ExileLifeClientClass isEqualTo 'Guard')";
			statement = "([this, 'Door_2_rot'] call BIS_fnc_DoorNoHandleClose)";
		};
	};
};
class ExileLife_Guard_ConcreteGate_1: Exile_Construction_ConcreteGate_Static
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Concrete Gate";
	class UserActions
	{
		class OpenDoor
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "Open Door";
			position = "DoorHandle";
			priority = 0.4;
			radius = 3.5;
			onlyForPlayer = true;
			condition = "(ExileLifeClientClass isEqualTo 'Guard')";
			statement = "this animate ['DoorRotationLeft', 1]; this animate ['DoorRotationRight', 1];";
		};
		class CloseDoor: OpenDoor
		{
			displayName = "Close Door";
			priority = 0.2;
			condition = "(this animationPhase 'DoorRotationLeft' >= 0.5) && (ExileLifeClientClass isEqualTo 'Guard')";
			statement = "this animate ['DoorRotationLeft', 0]; this animate ['DoorRotationRight', 0]";
		};
	};
};
class ExileLife_Guard_BarGate_2: Land_bargate_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Bar Gate";
	class UserActions
	{
		class OpenGate_1
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "$STR_DN_OUT_O_DOOR";
			position = "Bar_1_trigger";
			radius = 3;
			aiMaxRange = 9;
			onlyForPlayer = 0;
			condition = "(this animationPhase 'Door_1_rot' < 0.5) && (ExileLifeClientClass isEqualTo 'Guard') && (ExileLifeClientRank > 1)";
			statement = "this animate ['Door_1_rot', 1]";
		};
		class CloseGate_1: OpenGate_1
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "$STR_DN_OUT_C_DOOR";
			condition = "(this animationPhase 'Door_1_rot' >= 0.5) && (ExileLifeClientClass isEqualTo 'Guard')";
			statement = "this animate ['Door_1_rot', 0]";
		};
	};
};
class ExileLife_Guard_FenceGate_2: Land_net_fence_gate_f
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Fence Gate";
	class UserActions
	{
		class OpenDoor_1
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "$STR_DN_OUT_O_DOOR";
			priority = 11;
			position = "Door_1_trigger";
			radius = 1.5;
			aiMaxRange = "1.5				 * 3";
			onlyForPlayer = 0;
			condition = "(this animationPhase 'DoorRotationLeft' < 0.5) && (ExileLifeClientClass isEqualTo 'Guard') && (ExileLifeClientRank > 1)";
			statement = "([this, 'Door_1_rot'] call BIS_fnc_DoorNoHandleOpen)";
		};
		class CloseDoor_1: OpenDoor_1
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "$STR_DN_OUT_C_DOOR";
			priority = 11;
			condition = "(this animationPhase 'DoorRotationLeft' >= 0.5) && (ExileLifeClientClass isEqualTo 'Guard')";
			statement = "([this, 'Door_1_rot'] call BIS_fnc_DoorNoHandleClose)";
		};
		class OpenDoor_2
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "$STR_DN_OUT_O_DOOR";
			priority = 11;
			position = "Door_2_trigger";
			radius = 1.5;
			aiMaxRange = "1.5				 * 3";
			onlyForPlayer = 0;
			condition = "(this animationPhase 'DoorRotationLeft' < 0.5) && (ExileLifeClientClass isEqualTo 'Guard') && (ExileLifeClientRank > 1)";
			statement = "([this, 'Door_2_rot'] call BIS_fnc_DoorNoHandleOpen)";
		};
		class CloseDoor_2: OpenDoor_2
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "$STR_DN_OUT_C_DOOR";
			priority = 11;
			condition = "(this animationPhase 'DoorRotationLeft' >= 0.5) && (ExileLifeClientClass isEqualTo 'Guard')";
			statement = "([this, 'Door_2_rot'] call BIS_fnc_DoorNoHandleClose)";
		};
	};
};
class ExileLife_Guard_ConcreteGate_2: Exile_Construction_ConcreteGate_Static
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Concrete Gate";
	class UserActions
	{
		class OpenDoor
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "Open Door";
			position = "DoorHandle";
			priority = 0.4;
			radius = 3.5;
			onlyForPlayer = true;
			condition = "(ExileLifeClientClass isEqualTo 'Guard') && (ExileLifeClientRank > 1)";
			statement = "this animate ['DoorRotationLeft', 1]; this animate ['DoorRotationRight', 1];";
		};
		class CloseDoor: OpenDoor
		{
			displayName = "Close Door";
			priority = 0.2;
			condition = "(this animationPhase 'DoorRotationLeft' >= 0.5) && (ExileLifeClientClass isEqualTo 'Guard')";
			statement = "this animate ['DoorRotationLeft', 0]; this animate ['DoorRotationRight', 0]";
		};
	};
};
class ExileLife_Guard_BarGate_3: Land_bargate_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Bar Gate";
	class UserActions
	{
		class OpenGate_1
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "$STR_DN_OUT_O_DOOR";
			position = "Bar_1_trigger";
			radius = 3;
			aiMaxRange = 9;
			onlyForPlayer = 0;
			condition = "(this animationPhase 'Door_1_rot' < 0.5) && (ExileLifeClientClass isEqualTo 'Guard') && (ExileLifeClientRank > 2)";
			statement = "this animate ['Door_1_rot', 1]";
		};
		class CloseGate_1: OpenGate_1
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "$STR_DN_OUT_C_DOOR";
			condition = "(this animationPhase 'Door_1_rot' >= 0.5) && (ExileLifeClientClass isEqualTo 'Guard')";
			statement = "this animate ['Door_1_rot', 0]";
		};
	};
};
class ExileLife_Guard_FenceGate_3: Land_net_fence_gate_f
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Fence Gate";
	class UserActions
	{
		class OpenDoor_1
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "$STR_DN_OUT_O_DOOR";
			priority = 11;
			position = "Door_1_trigger";
			radius = 1.5;
			aiMaxRange = "1.5				 * 3";
			onlyForPlayer = 0;
			condition = "(this animationPhase 'DoorRotationLeft' < 0.5) && (ExileLifeClientClass isEqualTo 'Guard') && (ExileLifeClientRank > 2)";
			statement = "([this, 'Door_1_rot'] call BIS_fnc_DoorNoHandleOpen)";
		};
		class CloseDoor_1: OpenDoor_1
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "$STR_DN_OUT_C_DOOR";
			priority = 11;
			condition = "(this animationPhase 'DoorRotationLeft' >= 0.5) && (ExileLifeClientClass isEqualTo 'Guard')";
			statement = "([this, 'Door_1_rot'] call BIS_fnc_DoorNoHandleClose)";
		};
		class OpenDoor_2
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "$STR_DN_OUT_O_DOOR";
			priority = 11;
			position = "Door_2_trigger";
			radius = 1.5;
			aiMaxRange = "1.5				 * 3";
			onlyForPlayer = 0;
			condition = "(this animationPhase 'DoorRotationLeft' < 0.5) && (ExileLifeClientClass isEqualTo 'Guard') && (ExileLifeClientRank > 2)";
			statement = "([this, 'Door_2_rot'] call BIS_fnc_DoorNoHandleOpen)";
		};
		class CloseDoor_2: OpenDoor_2
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "$STR_DN_OUT_C_DOOR";
			priority = 11;
			condition = "(this animationPhase 'DoorRotationLeft' >= 0.5) && (ExileLifeClientClass isEqualTo 'Guard')";
			statement = "([this, 'Door_2_rot'] call BIS_fnc_DoorNoHandleClose)";
		};
	};
};
class ExileLife_Guard_ConcreteGate_3: Exile_Construction_ConcreteGate_Static
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Concrete Gate";
	class UserActions
	{
		class OpenDoor
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "Open Door";
			position = "DoorHandle";
			priority = 0.4;
			radius = 3.5;
			onlyForPlayer = true;
			condition = "(ExileLifeClientClass isEqualTo 'Guard') && (ExileLifeClientRank > 2)";
			statement = "this animate ['DoorRotationLeft', 1]; this animate ['DoorRotationRight', 1];";
		};
		class CloseDoor: OpenDoor
		{
			displayName = "Close Door";
			priority = 0.2;
			condition = "(this animationPhase 'DoorRotationLeft' >= 0.5) && (ExileLifeClientClass isEqualTo 'Guard')";
			statement = "this animate ['DoorRotationLeft', 0]; this animate ['DoorRotationRight', 0]";
		};
	};
};
class ExileLife_Guard_BarGate_4: Land_bargate_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Bar Gate";
	class UserActions
	{
		class OpenGate_1
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "$STR_DN_OUT_O_DOOR";
			position = "Bar_1_trigger";
			radius = 3;
			aiMaxRange = 9;
			onlyForPlayer = 0;
			condition = "(this animationPhase 'Door_1_rot' < 0.5) && (ExileLifeClientClass isEqualTo 'Guard') && (ExileLifeClientRank > 3)";
			statement = "this animate ['Door_1_rot', 1]";
		};
		class CloseGate_1: OpenGate_1
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "$STR_DN_OUT_C_DOOR";
			condition = "(this animationPhase 'Door_1_rot' >= 0.5) && (ExileLifeClientClass isEqualTo 'Guard')";
			statement = "this animate ['Door_1_rot', 0]";
		};
	};
};
class ExileLife_Guard_FenceGate_4: Land_net_fence_gate_f
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Fence Gate";
	class UserActions
	{
		class OpenDoor_1
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "$STR_DN_OUT_O_DOOR";
			priority = 11;
			position = "Door_1_trigger";
			radius = 1.5;
			aiMaxRange = "1.5				 * 3";
			onlyForPlayer = 0;
			condition = "(this animationPhase 'DoorRotationLeft' < 0.5) && (ExileLifeClientClass isEqualTo 'Guard') && (ExileLifeClientRank > 3)";
			statement = "([this, 'Door_1_rot'] call BIS_fnc_DoorNoHandleOpen)";
		};
		class CloseDoor_1: OpenDoor_1
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "$STR_DN_OUT_C_DOOR";
			priority = 11;
			condition = "(this animationPhase 'DoorRotationLeft' >= 0.5) && (ExileLifeClientClass isEqualTo 'Guard')";
			statement = "([this, 'Door_1_rot'] call BIS_fnc_DoorNoHandleClose)";
		};
		class OpenDoor_2
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "$STR_DN_OUT_O_DOOR";
			priority = 11;
			position = "Door_2_trigger";
			radius = 1.5;
			aiMaxRange = "1.5				 * 3";
			onlyForPlayer = 0;
			condition = "(this animationPhase 'DoorRotationLeft' < 0.5) && (ExileLifeClientClass isEqualTo 'Guard') && (ExileLifeClientRank > 3)";
			statement = "([this, 'Door_2_rot'] call BIS_fnc_DoorNoHandleOpen)";
		};
		class CloseDoor_2: OpenDoor_2
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "$STR_DN_OUT_C_DOOR";
			priority = 11;
			condition = "(this animationPhase 'DoorRotationLeft' >= 0.5) && (ExileLifeClientClass isEqualTo 'Guard')";
			statement = "([this, 'Door_2_rot'] call BIS_fnc_DoorNoHandleClose)";
		};
	};
};
class ExileLife_Guard_ConcreteGate_4: Exile_Construction_ConcreteGate_Static
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Concrete Gate";
	class UserActions
	{
		class OpenDoor
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "Open Door";
			position = "DoorHandle";
			priority = 0.4;
			radius = 3.5;
			onlyForPlayer = true;
			condition = "(ExileLifeClientClass isEqualTo 'Guard') && (ExileLifeClientRank > 3)";
			statement = "this animate ['DoorRotationLeft', 1]; this animate ['DoorRotationRight', 1];";
		};
		class CloseDoor: OpenDoor
		{
			displayName = "Close Door";
			priority = 0.2;
			condition = "(this animationPhase 'DoorRotationLeft' >= 0.5) && (ExileLifeClientClass isEqualTo 'Guard')";
			statement = "this animate ['DoorRotationLeft', 0]; this animate ['DoorRotationRight', 0]";
		};
	};
};
class ExileLife_Guard_BarGate_5: Land_bargate_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Bar Gate";
	class UserActions
	{
		class OpenGate_1
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "$STR_DN_OUT_O_DOOR";
			position = "Bar_1_trigger";
			radius = 3;
			aiMaxRange = 9;
			onlyForPlayer = 0;
			condition = "(this animationPhase 'Door_1_rot' < 0.5) && (ExileLifeClientClass isEqualTo 'Guard') && (ExileLifeClientRank > 4)";
			statement = "this animate ['Door_1_rot', 1]";
		};
		class CloseGate_1: OpenGate_1
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "$STR_DN_OUT_C_DOOR";
			condition = "(this animationPhase 'Door_1_rot' >= 0.5) && (ExileLifeClientClass isEqualTo 'Guard')";
			statement = "this animate ['Door_1_rot', 0]";
		};
	};
};
class ExileLife_Guard_FenceGate_5: Land_net_fence_gate_f
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Fence Gate";
	class UserActions
	{
		class OpenDoor_1
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "$STR_DN_OUT_O_DOOR";
			priority = 11;
			position = "Door_1_trigger";
			radius = 1.5;
			aiMaxRange = "1.5				 * 3";
			onlyForPlayer = 0;
			condition = "(this animationPhase 'DoorRotationLeft' < 0.5) && (ExileLifeClientClass isEqualTo 'Guard') && (ExileLifeClientRank > 4)";
			statement = "([this, 'Door_1_rot'] call BIS_fnc_DoorNoHandleOpen)";
		};
		class CloseDoor_1: OpenDoor_1
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "$STR_DN_OUT_C_DOOR";
			priority = 11;
			condition = "(this animationPhase 'DoorRotationLeft' >= 0.5) && (ExileLifeClientClass isEqualTo 'Guard')";
			statement = "([this, 'Door_1_rot'] call BIS_fnc_DoorNoHandleClose)";
		};
		class OpenDoor_2
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "$STR_DN_OUT_O_DOOR";
			priority = 11;
			position = "Door_2_trigger";
			radius = 1.5;
			aiMaxRange = "1.5				 * 3";
			onlyForPlayer = 0;
			condition = "(this animationPhase 'DoorRotationLeft' < 0.5) && (ExileLifeClientClass isEqualTo 'Guard') && (ExileLifeClientRank > 4)";
			statement = "([this, 'Door_2_rot'] call BIS_fnc_DoorNoHandleOpen)";
		};
		class CloseDoor_2: OpenDoor_2
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "$STR_DN_OUT_C_DOOR";
			priority = 11;
			condition = "(this animationPhase 'DoorRotationLeft' >= 0.5) && (ExileLifeClientClass isEqualTo 'Guard')";
			statement = "([this, 'Door_2_rot'] call BIS_fnc_DoorNoHandleClose)";
		};
	};
};
class ExileLife_Guard_ConcreteGate_5: Exile_Construction_ConcreteGate_Static
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Concrete Gate";
	class UserActions
	{
		class OpenDoor
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "Open Door";
			position = "DoorHandle";
			priority = 0.4;
			radius = 3.5;
			onlyForPlayer = true;
			condition = "(ExileLifeClientClass isEqualTo 'Guard') && (ExileLifeClientRank > 4)";
			statement = "this animate ['DoorRotationLeft', 1]; this animate ['DoorRotationRight', 1];";
		};
		class CloseDoor: OpenDoor
		{
			displayName = "Close Door";
			priority = 0.2;
			condition = "(this animationPhase 'DoorRotationLeft' >= 0.5) && (ExileLifeClientClass isEqualTo 'Guard')";
			statement = "this animate ['DoorRotationLeft', 0]; this animate ['DoorRotationRight', 0]";
		};
	};
};
class ExileLife_Guard_BarGate_6: Land_bargate_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Bar Gate";
	class UserActions
	{
		class OpenGate_1
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "$STR_DN_OUT_O_DOOR";
			position = "Bar_1_trigger";
			radius = 3;
			aiMaxRange = 9;
			onlyForPlayer = 0;
			condition = "(this animationPhase 'Door_1_rot' < 0.5) && (ExileLifeClientClass isEqualTo 'Guard') && (ExileLifeClientRank > 5)";
			statement = "this animate ['Door_1_rot', 1]";
		};
		class CloseGate_1: OpenGate_1
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "$STR_DN_OUT_C_DOOR";
			condition = "(this animationPhase 'Door_1_rot' >= 0.5) && (ExileLifeClientClass isEqualTo 'Guard')";
			statement = "this animate ['Door_1_rot', 0]";
		};
	};
};
class ExileLife_Guard_FenceGate_6: Land_net_fence_gate_f
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Fence Gate";
	class UserActions
	{
		class OpenDoor_1
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "$STR_DN_OUT_O_DOOR";
			priority = 11;
			position = "Door_1_trigger";
			radius = 1.5;
			aiMaxRange = "1.5				 * 3";
			onlyForPlayer = 0;
			condition = "(this animationPhase 'DoorRotationLeft' < 0.5) && (ExileLifeClientClass isEqualTo 'Guard') && (ExileLifeClientRank > 5)";
			statement = "([this, 'Door_1_rot'] call BIS_fnc_DoorNoHandleOpen)";
		};
		class CloseDoor_1: OpenDoor_1
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "$STR_DN_OUT_C_DOOR";
			priority = 11;
			condition = "(this animationPhase 'DoorRotationLeft' >= 0.5) && (ExileLifeClientClass isEqualTo 'Guard')";
			statement = "([this, 'Door_1_rot'] call BIS_fnc_DoorNoHandleClose)";
		};
		class OpenDoor_2
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "$STR_DN_OUT_O_DOOR";
			priority = 11;
			position = "Door_2_trigger";
			radius = 1.5;
			aiMaxRange = "1.5				 * 3";
			onlyForPlayer = 0;
			condition = "(this animationPhase 'DoorRotationLeft' < 0.5) && (ExileLifeClientClass isEqualTo 'Guard') && (ExileLifeClientRank > 5)";
			statement = "([this, 'Door_2_rot'] call BIS_fnc_DoorNoHandleOpen)";
		};
		class CloseDoor_2: OpenDoor_2
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "$STR_DN_OUT_C_DOOR";
			priority = 11;
			condition = "(this animationPhase 'DoorRotationLeft' >= 0.5) && (ExileLifeClientClass isEqualTo 'Guard')";
			statement = "([this, 'Door_2_rot'] call BIS_fnc_DoorNoHandleClose)";
		};
	};
};
class ExileLife_Guard_ConcreteGate_6: Exile_Construction_ConcreteGate_Static
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Concrete Gate";
	class UserActions
	{
		class OpenDoor
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "Open Door";
			position = "DoorHandle";
			priority = 0.4;
			radius = 3.5;
			onlyForPlayer = true;
			condition = "(ExileLifeClientClass isEqualTo 'Guard') && (ExileLifeClientRank > 5)";
			statement = "this animate ['DoorRotationLeft', 1]; this animate ['DoorRotationRight', 1];";
		};
		class CloseDoor: OpenDoor
		{
			displayName = "Close Door";
			priority = 0.2;
			condition = "(this animationPhase 'DoorRotationLeft' >= 0.5) && (ExileLifeClientClass isEqualTo 'Guard')";
			statement = "this animate ['DoorRotationLeft', 0]; this animate ['DoorRotationRight', 0]";
		};
	};
};
class ExileLife_Guard_Bollards: Land_cargo_house_slum_F
{
	author = "ExileLifeMod";
	mapSize = 9.67;
	model = "exilelife_assets\models\Items\Objects\ExileLife_Guard_Bollards.p3d";
	_generalMacro = "ExileLife_Guard_Bollards";
	scope = 2;
	scopeCurator = 2;
	displayName = "ExileLife Popup Bollards";
	editorCategory = "EdCat_Structures_Altis";
	editorSubcategory = "EdSubcat_Residential_Village";
	cost = 5000;
	icon = "iconObject_2x1"; 
	explosionEffect = "FuelExplosion";
	armor = 1000;
	destrType = "DestructDefault"; 
	class TransportItems
	{
	};
	class TransportWeapons
	{
	};
	class TransportMagazines
	{
	};
	class AnimationSources
	{
		class Popup_source
		{
			source = user; 
			initPhase = 0;
			animPeriod = 3;
		};
	};
	class DestructionEffects
	{	
	};
	class Damage
	{
		tex[] = {};
		mat[] = {};		
	};
};
class ExileLife_Guard_Bollards_Short: ExileLife_Guard_Bollards
{
	model = "exilelife_assets\models\Items\Objects\ExileLife_Guard_Bollards_Short.p3d";
	_generalMacro = "ExileLife_Guard_Bollards_Short";
	displayName = "ExileLife Popup Bollards Short";
};
class ExileLife_Guard_Bollards_Switch: Land_cargo_house_slum_F
{
	author = "ExileLifeMod";
	mapSize = 9.67;
	model = "exilelife_assets\models\Items\Objects\ExileLife_Guard_Bollards_Switch.p3d";
	_generalMacro = "ExileLife_Guard_Bollards_Switch";
	scope = 2;
	scopeCurator = 2;
	displayName = "ExileLife Popup Bollards Switch";
	editorCategory = "EdCat_Structures_Altis";
	editorSubcategory = "EdSubcat_Residential_Village";
	cost = 5000;
	icon = "iconObject_2x1";
	explosionEffect = "FuelExplosion";
	armor = 1000;
	destrType = "DestructDefault";
	class TransportItems
	{
	};
	class TransportWeapons
	{
	};
	class TransportMagazines
	{
	};
	class AnimationSources
	{
		class On_source
		{
			source = user;
			initPhase = 1;
			animPeriod = 1;
		};
		class Off_source
		{
			source = user;
			initPhase = 0;
			animPeriod = 1;
		};
	};
	class UserActions
	{
		class Raise
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\arrow_up_gs.paa' size='1.5' />";
			displayName = "Raise Pillars";
			position = Switch_pos;
			priority = 0.4;
			radius = 2.5;
			onlyForPlayer = true;
			condition = ((this animationSourcePhase 'On_source') < 0.5) && (ExileLifeClientClass isEqualTo 'Guard'); 
			statement = "this animateSource ['On_source', 1]; this animateSource ['Off_source', 0]; [this,0] call ExileLifeClient_action_barriers_activatePoles;";
		};
		class Lower: Raise
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\arrow_down_gs.paa' size='1.5' />";
			displayName = "Lower Pillars";
			priority = 0.2;
			condition = ((this animationSourcePhase 'On_source') >= 0.5) && (ExileLifeClientClass isEqualTo 'Guard');
			statement = "this animateSource ['On_source', 0]; this animateSource ['Off_source', 1]; [this,-0.8] call ExileLifeClient_action_barriers_activatePoles;";
		};
	};
	class DestructionEffects
	{
	};
	class Damage
	{
		tex[] = {};
		mat[] = {};
	};
};
class ExileLife_Guard_HQ: Land_cargo_house_slum_F
{
	author = "ExileLifeMod";
	mapSize = 9.67;
	model = "exilelife_assets\models\Items\Objects\ExileLife_Guard_HQ.p3d";
	_generalMacro = "ExileLife_Guard_HQ";
	scope = 2;
	scopeCurator = 2;
	displayName = "ExileLife Guard HQ";
	editorCategory = "EdCat_Structures_Altis";
	editorSubcategory = "EdSubcat_Residential_Village";
	cost = 5000;
	icon = "iconObject_2x1"; 
	explosionEffect = "FuelExplosion";
	armor = 1000;
	destrType = "DestructDefault"; 
	class TransportItems
	{
	};
	class TransportWeapons
	{
	};
	class TransportMagazines
	{
	};
	class AnimationSources
	{
		class Front_Door_L_source
		{
			source = user; 
			initPhase = 0;
			animPeriod = 1;
			sound = "OldWoodDoorsSound"; 
		};
		class Front_Door_R_source:Front_Door_L_source
		{
		};
		class Top_Door_source:Front_Door_L_source
		{
		};
		class Cell_Door_source:Front_Door_L_source
		{
		};
		class Armory_Door_source:Front_Door_L_source
		{
		};
		class Back_Door_source
		{
			source = user; 
			initPhase = 0;
			animPeriod = 3;
			sound = "MetalBigDoorsSound"; 
		};
	};
	class UserActions
	{
		class OpenFront_Door_L
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "Open Door (Left)"; 
			position = Front_Door_L_trigger; 
			priority = 0.4; 
			radius = 3; 
			onlyForPlayer = true;
			condition = ((this animationPhase 'Front_Door_L') < 0.5); 
			statement = "([this, 'Front_Door_L'] call BIS_fnc_DoorNoHandleOpen)";
		};
		class CloseFront_Door_L: OpenFront_Door_L
		{
			displayName = "Close Door (Left)";
			priority = 0.2;
			condition = ((this animationPhase 'Front_Door_L') >= 0.5);
			statement = "([this, 'Front_Door_L'] call BIS_fnc_DoorNoHandleClose)";
		};
		class OpenFront_Door_R: OpenFront_Door_L
		{
			displayName = "Open Door (Right)"; 
			position = Front_Door_R_trigger; 
			condition = (((this animationPhase 'Front_Door_R') < 0.5)); 
			statement = "([this, 'Front_Door_R'] call BIS_fnc_DoorNoHandleOpen)";
		};
		class CloseFront_Door_R: OpenFront_Door_R
		{
			displayName = "Close Door (Right)";
			condition = (((this animationPhase 'Front_Door_R') >= 0.5));
			statement = "([this, 'Front_Door_R'] call BIS_fnc_DoorNoHandleClose)";
		};
		class OpenTop_Door: OpenFront_Door_L
		{
			displayName = "Open Door"; 
			position = Top_Door_trigger; 
			condition = (((this animationPhase 'Top_Door') < 0.5)); 
			statement = "([this, 'Top_Door'] call BIS_fnc_DoorNoHandleOpen)";
		};
		class CloseTop_Door: OpenTop_Door
		{
			displayName = "Close Door";
			condition = (((this animationPhase 'Top_Door') >= 0.5));
			statement = "([this, 'Top_Door'] call BIS_fnc_DoorNoHandleClose)";
		};
		class OpenCell_Door: OpenFront_Door_L
		{
			displayName = "Open Door"; 
			position = Cell_Door_trigger; 
			condition = (((this animationPhase 'Cell_Door') < 0.5)); 
			statement = "([this, 'Cell_Door'] call BIS_fnc_DoorNoHandleOpen)";
		};
		class CloseCell_Door: OpenCell_Door
		{
			displayName = "Close Door";
			condition = (((this animationPhase 'Cell_Door') >= 0.5));
			statement = "([this, 'Cell_Door'] call BIS_fnc_DoorNoHandleClose)";
		};
		class OpenArmory_Door: OpenFront_Door_L
		{
			displayName = "Open Door"; 
			position = Armory_Door_trigger; 
			condition = (((this animationPhase 'Armory_Door') < 0.5)); 
			statement = "([this, 'Armory_Door'] call BIS_fnc_DoorNoHandleOpen)";
		};
		class CloseArmory_Door: OpenArmory_Door
		{
			displayName = "Close Door";
			condition = (((this animationPhase 'Armory_Door') >= 0.5));
			statement = "([this, 'Armory_Door'] call BIS_fnc_DoorNoHandleClose)";
		};
		class OpenBack_Door: OpenFront_Door_L
		{
			displayName = "Open Back Door"; 
			position = Back_Door_trigger; 
			condition = (((this animationPhase 'Back_Door') < 0.5)); 
			statement = "this animate ['Back_Door', 3];";
		};
		class CloseBack_Door: OpenBack_Door
		{
			displayName = "Close Back Door";
			condition = (((this animationPhase 'Back_Door') >= 0.5));
			statement = "this animate ['Back_Door', 0];";
		};
	};
	class DestructionEffects
	{	
	};
	class Damage
	{
		tex[] = {};
		mat[] = {};		
	};
};
class ExileLife_Guard_PrisonCell: Land_cargo_house_slum_F
{
	author = "ExileLifeMod";
	mapSize = 9.67;
	model = "exilelife_assets\models\Items\Objects\ExileLife_Guard_PrisonCell.p3d";
	_generalMacro = "ExileLife_Guard_PrisonCell";
	scope = 2;
	scopeCurator = 2;
	displayName = "ExileLife Prison Cell";
	editorCategory = "EdCat_Structures_Altis";
	editorSubcategory = "EdSubcat_Residential_Village";
	cost = 5000;
	icon = "iconObject_2x1"; 
	explosionEffect = "FuelExplosion";
	armor = 1000;
	destrType = "DestructDefault"; 
	class TransportItems
	{
	};
	class TransportWeapons
	{
	};
	class TransportMagazines
	{
	};
	class AnimationSources
	{
		class Door_1_source
		{
			source = user; 
			initPhase = 0;
			animPeriod = 1;
			sound = "OldWoodDoorsSound"; 
		};
	};
	class UserActions
	{
		class OpenDoor_1
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "Open Cell"; 
			position = Door_1_trigger; 
			priority = 0.4; 
			radius = 1.5; 
			onlyForPlayer = true;
			condition = (((this animationPhase 'Door_1_rot') < 0.5) && (ExileLifeClientClass isEqualTo 'Guard')); 
			statement = "([this, 'Door_1_rot'] call BIS_fnc_DoorNoHandleOpen)";
		};
		class CloseDoor_1: OpenDoor_1
		{
			displayName = "Close Cell";
			priority = 0.2;
			condition = (((this animationPhase 'Door_1_rot') >= 0.5) && (ExileLifeClientClass isEqualTo 'Guard'));
			statement = "([this, 'Door_1_rot'] call BIS_fnc_DoorNoHandleClose)";
		};
	};
	class DestructionEffects
	{	
	};
	class Damage
	{
		tex[] = {};
		mat[] = {};		
	};
};
class Land_Laptop_unfolded_F;
class ExileLife_Item_Blackmarket_Laptop: Land_Laptop_unfolded_F
{
	author = "ExileLife Mod Team";
	mapSize = 0.45;
	editorPreview = "\A3\EditorPreviews_F\Data\CfgVehicles\Land_Laptop_unfolded_F.jpg";
	_generalMacro = "ExileLife_Item_Blackmarket_Laptop";
	scope = 2;
	scopeCurator = 2;
	displayName = "BlackMarket Laptop";
	model = "\A3\Structures_F\Items\Electronics\Laptop_unfolded_F.p3d";
	icon = "iconObject_3x2";
	editorSubcategory = "EdSubcat_Electronics";
	cost = 3000;
	hiddenSelections[] = {"camo"};
	hiddenSelectionsTextures[] = {"\A3\Structures_F\Items\Electronics\Data\Electronics_screens_laptop_CO.paa"};
	hiddenSelectionsMaterials[] = {"\A3\Structures_F\Items\Electronics\Data\electronics_screens.rvmat"};
	class UserActions
	{
		class Interact
		{
			displayName = "Access BlackMarket";
			position = "ohniste";
			radius = 3;
			priority = 6;
			onlyForPlayer = 1;
			condition = "true";
			statement = "createDialog 'RscExileLifeBlackmarket'";
		};
	};
};
class ExileLife_Methlab_RV: Land_cargo_house_slum_F
{
	author = "ExileLifeMod";
	mapSize = 9.67;
	model = "exilelife_assets\models\Items\Objects\ExileLife_Methlab_RV.p3d";
	_generalMacro = "ExileLife_Methlab_RV";
	scope = 2;
	scopeCurator = 2;
	displayName = "ExileLife Methlab RV";
	editorCategory = "EdCat_Structures_Altis";
	editorSubcategory = "EdSubcat_Residential_Village";
	cost = 5000;
	icon = "iconObject_2x1"; 
	explosionEffect = "FuelExplosion";
	maximumLoad = 200;
	transportMaxMagazines = 100;
	armor = 1000;
	destrType = "DestructDefault"; 
	memoryPointSupply = "interaction_bench";
	supplyRadius = 0.01; 
	class TransportItems
	{
	};
	class TransportWeapons
	{
	};
	class TransportMagazines
	{
	};
	class AnimationSources
	{
		class Door_1_source
		{
			source = user; 
			initPhase = 0;
			animPeriod = 1;
			sound = "GenericDoorsSound";
		};
		class item_beaker_acetone 
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};
		class item_beaker_acetone_empty_dirty
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};				
		class item_beaker_ingredient_acetone 
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};
		class item_beaker_ingredient_cold 
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};					
		class item_beaker_ingredient_mixing 
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};
		class item_beaker_ingredient_hot 
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};					
		class item_beaker_ingredient_hydrochloricacid 
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};
		class item_beaker_ingredient_phosphoricacid 
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};
		class item_beaker_filter_from 
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};
		class item_beaker_filter_to_cold 
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};
		class item_beaker_filter_to_hot 
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};
		class item_beaker_hydrochloricacid 
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};
		class item_beaker_hydrochloricacid_empty_dirty
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};				
		class item_beaker_mixing 
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};
		class item_beaker_mixing_empty_dirty 
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};
		class item_beaker_mixing_empty_clean
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};				
		class item_beaker_mixing_cold 
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};
		class item_beaker_mixing_hot 
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};
		class item_beaker_mixing_acetone 
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};
		class item_beaker_mixing_hydrochloricacid 
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};
		class item_beaker_mixing_phosphoricacid 
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};		
		class item_beaker_phosphoricacid 
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};
		class item_beaker_phosphoricacid_empty_dirty
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};				
		class item_beaker_wash_1 
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};
		class item_beaker_wash_2 
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};
		class item_cooker 
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};
		class item_cooker_beaker_acetone 
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};
		class item_cooker_beaker_hydrochloricacid 
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};
		class item_cooker_beaker_mixing
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};
		class item_cooker_beaker_phosphoricacid 
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};
		class item_filter_1 
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};
		class item_filter_2 
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};
		class item_filter_1_used
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};
		class item_filter_2_used 
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};		
		class item_ovencleaner 
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};
		class item_vishpirin
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};		
		class item_vishpirin_1
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};	
		class item_vishpirin_2
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};	
		class item_vishpirin_3
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};	
		class item_vishpirin_4
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};	
		class item_vishpirin_5
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};	
		class item_vishpirin_6
		{
			source = "user";
			animPeriod = 0.01;
			initPhase = 1;
		};	
	};
	class UserActions
	{
		class OpenDoor_1
		{
			displayNameDefault = "<img image='\A3\Ui_f\data\IGUI\Cfg\Actions\open_door_ca.paa' size='2.5' />";
			displayName = "Open Door"; 
			position = Door_1_trigger; 
			priority = 0.4; 
			radius = 1.5; 
			onlyForPlayer = true;
			condition = ((this animationPhase 'Door_1_rot') < 0.5); 
			statement = ([this, 'Door_1_rot'] call BIS_fnc_DoorNoHandleOpen);
		};
		class CloseDoor_1: OpenDoor_1
		{
			displayName = "Close Door";
			priority = 0.2;
			condition = ((this animationPhase 'Door_1_rot') >= 0.5);
			statement = ([this, 'Door_1_rot'] call BIS_fnc_DoorNoHandleClose);
		};
		class bench
		{
			displayName = "Use Chemistry Bench";
			priority = 1;
			position = bench; 
			radius = 1.1; 
			onlyForPlayer = true;			
			condition = "call ExileLifeClient_object_chemlab_check_use"; 
			statement = "call ExileLifeClient_object_chemlab_use";
		};
		class fridge
		{
			displayName = "Use Freezer";
			priority = 1;
			position = cool; 
			radius = 1.1; 
			onlyForPlayer = true;			
			condition = "alive player"; 
			statement = "systemchat 'this will call gui up to start the meth making process'";
		};
		class cook
		{
			displayName = "Use Cooker";
			priority = 1;
			position = cook; 
			radius = 1.1; 
			onlyForPlayer = true;			
			condition = "!((ExileClientInteractionObject getVariable ['item_cooker',[]]) isEqualto [])"; 
			statement = "systemchat 'this will call gui up to start the cooking process'";
		};
		class wash
		{
			displayName = "Use Sink";
			priority = 1;
			position = wash; 
			radius = 1.1; 
			onlyForPlayer = true;			
			condition = "[player,'ExileLife_Item_Beaker_Dirty'] call ExileLifeClient_util_playercargo_contains";
			statement = "systemchat 'this will call gui up to start washing beakers process'";
		};
		class ingredient
		{
			displayName = "Add Ingredient";
			priority = 1;
			position = ingredient; 
			radius = 1.1; 
			onlyForPlayer = true;			
			condition = "call ExileLifeClient_object_chemlab_check_ingredient"; 
			statement = "call ExileLifeClient_gui_chemlab_ingredient_cam_create";
		};
		class mixing
		{
			displayName = "Mix Chemicals";
			priority = 1;
			position = mixing; 
			radius = 1.1; 
			onlyForPlayer = true;			
			condition = "call ExileLifeClient_object_chemlab_check_mixing"; 
			statement = "[] call ExileLifeClient_object_chemlab_use_mixing;";
		};
		class filter
		{
			displayName = "Filter Mixture";
			priority = 1;
			position = filter; 
			radius = 1.1; 
			onlyForPlayer = true;			
			condition = "(!((ExileClientInteractionObject getVariable ['item_filter',[]]) isEqualto []) && !((ExileClientInteractionObject getVariable ['item_beaker_filter_from',[]]) isEqualto []))"; 
			statement = "systemchat 'this will call gui up to start the filter process'";
		};	
	};
	class DestructionEffects
	{	
	};
	class Damage
	{
		tex[] = {};
		mat[] = {};		
	};
};
class ExileLife_Construction_CameraPole: Land_cargo_house_slum_F
{
	author = "ExileLifeMod";
	mapSize = 9.67;
	model = "exilelife_assets\models\Items\Construction\ExileLife_Construction_CameraPole.p3d";
	_generalMacro = "ExileLife_Construction_CameraPole";
	scope = 2;
	scopeCurator = 2;
	displayName = "ExileLife Camera Pole";
	editorCategory = "EdCat_Structures_Altis";
	editorSubcategory = "EdSubcat_Residential_Village";
	cost = 5000;
	icon = "iconObject_2x1"; 
	explosionEffect = "FuelExplosion";
	armor = 1000;
	destrType = "DestructDefault"; 
	class TransportItems
	{
	};
	class TransportWeapons
	{
	};
	class TransportMagazines
	{
	};
	class DestructionEffects
	{	
	};
	class Damage
	{
		tex[] = {};
		mat[] = {};		
	};
};
class Land_GarbageContainer_open_F;
class ExileLife_GarbageBin_Prison: Land_GarbageContainer_open_F
{
	scope = 2;
	model = "a3\structures_f_epb\Civ\Garbage\GarbageContainer_open_F.p3d";
	displayName = "Ore Deposit";
	class UserActions
	{
		class Interact1
		{
			displayName = "Deposit Ore";
			position = "left";
			radius = 4;
			priority = 6;
			onlyForPlayer = 1;
			condition = "(player getVariable ['ExileLifePrisoner',false])";
			statement = "call ExileLifeClient_system_prison_depositOreRequest;";
		};
	};
};
class ExileLife_Guard_Terminal_1: Land_InfoStand_V2_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Terminal";
	hiddenSelectionsTextures[] = {"","exilelife_assets\models\Items\Objects\images\ExileLife_Guard_Terminal_CA.paa"};
	class UserActions
	{
		class OreQuantity
		{
			displayName = "View Ore Quantity";
			radius = 1.5;
			position = "left";
			onlyForPlayer = true;
			condition = "(ExileLifeClientClass isEqualTo 'Guard')";
			statement = "call ExileLifeClient_system_prison_retrieveOreRequest;"; 
		};
		class FillVehicle: OreQuantity
		{
			displayName = "Collect Ore (Fill Transport)";
			condition = "(ExileLifeClientClass isEqualTo 'Guard')";
			statement = "call ExileLifeClient_system_jobs_scenes_prisonCollect_oncollectOreRequest;";
		};
	};
};
class Land_fs_feed_f;
class ExileLife_Refinery_Pump: Land_fs_feed_f
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "ExileLife Refinery Pump";
};
class ExileLife_Leaf_Cannabis: Exile_Cosmetic_BBQSandwich
{
	displayName = "Cannabis Leaves";
	model = "exilelife_assets\models\Items\Plants\ExileLife_Plant_LeafCannabis.p3d";
	plantmodel = "ExileLife_Plant_Cannabis"; 
};
class ExileLife_Plant_Cannabis: PlantsBase
{
	scope = 2;
	author = "ExileLife Mod Team";		
	displayName = "Cannabis";
	model = "exilelife_assets\models\Items\Plants\ExileLife_Plant_Cannabis.p3d";
	growingtime = 120;  
	leafmodel = "ExileLife_Leaf_Cannabis";
	harvestItem = "ExileLife_Item_Cannabis";
	multiHarvest = 1;
	minHarvest = 3;
	maxHarvest = 6;
};
class ExileLife_Plant_Potato: PlantsBase
{
	scope = 2;
	author = "ExileLife Mod Team";		
	displayName = "Potatoes";
	model = "exilelife_assets\models\Items\Plants\ExileLife_Plant_Potato.p3d";
	growingtime = 80;  
	leafmodel = "";
	harvestItem = "ExileLife_Item_Potato";
	multiHarvest = 0;
	minHarvest = 8;
	maxHarvest = 15;
};
class ExileLife_Plant_Pumpkin: PlantsBase
{
	scope = 2;
	author = "ExileLife Mod Team";		
	displayName = "Pumpkin";
	model = "\exilelife_vehicles\a2_objects\ExileLife_Plant_Pumpkin.p3d";
	growingtime = 60;  
	leafmodel = "";
	harvestItem = "ExileLife_Item_Pumpkin";
	multiHarvest = 1;
	minHarvest = 4;
	maxHarvest = 8;
};
class ExileLife_Plant_Wheat: PlantsBase
{
	scope = 2;
	author = "ExileLife Mod Team";		
	displayName = "Wheat";
	model = "\exilelife_vehicles\a2_objects\ExileLife_Plant_Wheat.p3d";
	growingtime = 60;  
	leafmodel = "";
	harvestItem = "ExileLife_Item_Wheat";
	multiHarvest = 0;
	minHarvest = 10;
	maxHarvest = 20;
};
class ExileLife_Sign_DepositOre: SignAd_Sponsor_F
{
	author = "ExileLife Mod Team";
	displayName = "Exile Life Sign (Deposit Ore here)";
	hiddenSelectionsTextures[] = {"exilelife_assets\models\ExileLife_Sign_DepositOre.paa"};
};
class ExileLife_Sign_Garage: SignAd_Sponsor_F
{
	author = "ExileLife Mod Team";
	displayName = "Exile Life Sign (Garage)";
	hiddenSelectionsTextures[] = {"exilelife_assets\models\ExileLife_Sign_Garage_co.paa"};
};
class ExileLife_Sign_GarageParking_Small: SignAd_SponsorS_F
{
	author = "ExileLife Mod Team";
	displayName = "Exile Life Sign (Garage Parking, small)";
	hiddenSelectionsTextures[] = {"exilelife_assets\models\ExileLife_Sign_GarageParking_Small_co.paa"};
};
class ExileLife_Sign_Garage_DoNotEnter: SignAd_Sponsor_F
{
	author = "ExileLife Mod Team";
	displayName = "Exile Life Sign (Garage, Do Not Enter)";
	hiddenSelectionsTextures[] = {"exilelife_assets\models\ExileLife_Sign_Garage_DoNotEnter_co.paa"};
};
class ExileLife_Sign_Garage_Small: SignAd_SponsorS_F
{
	author = "ExileLife Mod Team";
	displayName = "Exile Life Sign (Garage, small)";
	hiddenSelectionsTextures[] = {"exilelife_assets\models\ExileLife_Sign_Garage_Small_co.paa"};
};
class ExileLife_Sign_JobBoard: SignAd_Sponsor_F
{
	author = "ExileLife Mod Team";
	displayName = "Exile Life Sign (Job Board)";
	hiddenSelectionsTextures[] = {"exilelife_assets\models\ExileLife_Sign_JobBoard_co.paa"};
	class UserActions
	{
		class Interact
		{
			displayName = "Access Job Board";
			position = "ohniste";
			radius = 3;
			priority = 6;
			onlyForPlayer = 1;
			condition = "true";
			statement = "createDialog 'RscExileLifeJobsBoard'";
		};
	};
};
class O_T_Truck_03_ammo_ghex_F;
class ExileLife_Truck_Tempest_Abstract: O_T_Truck_03_ammo_ghex_F
{
	author = "ExileLife Mod Team";
	scope = 0;
	side = 3;
	faction = "CIV_F";
	vehicleclass = "ExileCars";
	skinName = "";
	displayName = "Tempest (Cargo)";
	fuelConsumptionRate = "0.03f";
	exileLockSound = "exile_assets\sound\lock01.wss";
	exileUnlockSound = "a3\sounds_f\vehicles\soft\Hatchback_01\Hatchback_01_door.wss";
	maximumLoad = 3800; 
	class EventHandlers: DefaultEventHandlers
	{
		init = ""; 
	};
	class TransportItems
	{
	};
	class TransportBackpacks
	{
	};
	class TransportMagazines
	{
	};
	class TransportWeapons
	{
	};
};
class ExileLife_Truck_Tempest: ExileLife_Truck_Tempest_Abstract
{
	scope = 2;
};
class Weapon_ExileLife_Weapon_MK16: Weapon_Base_F
{
	dlc = "exilelife_weapons";
	scope = 2;
	scopeCurator = 2;
	displayName = "SCAR MK-16 (Tan)";
	editorCategory = "EdCat_Weapons";
	editorSubcategory = "EdSubcat_AssaultRifles";
	vehicleClass = "WeaponsPrimary";
	class TransportWeapons
	{
		class ExileLife_Weapon_MK16
		{
			weapon = "ExileLife_Weapon_MK16";
			count = 1;
		};
	};
};
class Weapon_ExileLife_Weapon_MK16_Black: Weapon_Base_F
{
	dlc = "exilelife_weapons";
	scope = 2;
	scopeCurator = 2;
	displayName = "SCAR MK-16 (Black)";
	editorCategory = "EdCat_Weapons";
	editorSubcategory = "EdSubcat_AssaultRifles";
	vehicleClass = "WeaponsPrimary";
	class TransportWeapons
	{
		class ExileLife_Weapon_MK16_Black
		{
			weapon = "ExileLife_Weapon_MK16_Black";
			count = 1;
		};
	};
};
};
class Mode_SemiAuto;	
class Mode_Burst;		
class Mode_FullAuto;	
class SlotInfo;	
class CowsSlot;
class MuzzleSlot;
class CfgWeapons
{
class ItemCore;
class HeadgearItem;
class BackpackItem;
class Item_Base_F;
class InventoryItem_Base_F;
class InventoryOpticsItem_Base_F;
class InventoryFlashLightItem_Base_F;
class Zasleh2;
class SlotInfo;
class Rifle;
class Pistol;
class TruckHorn;
class H_Cap_red;
class Vest_Camo_Base;
class VestItem;
class muzzle_snds_H;
class Put;
class arifle_MX_Base_F;
class arifle_AK12_base_F;
class arifle_AK12_GL_base_F;
class arifle_AKM_base_F;
class arifle_AKS_base_F;
class arifle_ARX_base_F;
class arifle_CTAR_base_F;
class arifle_CTAR_GL_base_F;
class arifle_CTARS_base_F;
class arifle_Katiba_Base_F;
class mk20_base_F;
class SDAR_base_F;
class arifle_SPAR_01_base_F;
class arifle_SPAR_01_GL_base_F;
class arifle_SPAR_02_base_F;
class arifle_SPAR_03_base_F;
class Tavor_base_F;
class SMG_01_Base;
class SMG_02_Base_F;
class SMG_05_Base_F;
class pdw2000_base_F;
class DMR_01_base_F;
class DMR_03_base_F;
class DMR_04_base_F;
class DMR_06_base_F;
class DMR_07_base_F;
class EBR_base_F;
class LMG_03_base_F;
class arifle_AK_Base;
class arifle_AK107_Base;
class exile_arifle_M16A4_base;
class acc_flashlight;
class acc_flashlight_pistol;
class MMG_01_base_F;
class MMG_02_base_F;
class Rifle_Long_Base_F;
class UniformItem: InventoryItem_Base_F
{
	type = 801;
};
class Uniform_Base: ItemCore
{
	scope = 0;
	allowedSlots[] = {901};
	class ItemInfo: UniformItem
	{
		uniformModel = "-";
		uniformClass = "Exile_Unit_Player";
		containerClass = "Supply0";
		mass = 0;
	};
};
class Pistol_Base_F: Pistol
{
	class ExileLife
	{
		brokenWeapon = "";
		casing = "";
		class Fired
		{
			misfireChance = 0;	
			jamChance = 0;
			breakChance = 0;
		};
	};
	class WeaponSlotsInfo;
};
class Rifle_Base_F: Rifle
{
	class ExileLife
	{
		brokenWeapon = "";
		casing = "";
		class Fired
		{
			misfireChance = 0;	
			jamChance = 0;
			breakChance = 0;
		};
	};
	class WeaponSlotsInfo;
	class GunParticles;
};
class Broken_Base_F: Rifle
{
	scope = 0;
	weaponInfoType = "RscWeaponZeroing";
	recoil = "recoil_default";
	deployedPivot = "bipod";
	class GunParticles
	{
		class FirstEffect
		{
			effectName = "RifleAssaultCloud";
			positionName = "Usti hlavne";
			directionName = "Konec hlavne";
		};
	};
	magazines[] = {};
	displayName = "Broken";
	descriptionShort = "Broken";
	showToPlayer = 0;
	modes[] = {"Broken"};
	discreteDistance[] = {0};
	discreteDistanceInitIndex = 0;
	drySound[] = {"A3\Sounds_F\arsenal\weapons\Rifles\MX\dry_Mx",0.562341,1,10};
	changeFiremodeSound[] = {"A3\sounds_f\weapons\closure\firemode_changer_2",0.551189,1,5};
	class Broken: Mode_SemiAuto
	{
		sounds[] = {};
		displayName = "Broken";
		descriptionShort = "Broken";
		showToPlayer = 0;
		discreteDistance[] = {0};
		discreteDistanceInitIndex = 0;
		magazines[] = {};
		minRange = 0;
		minRangeProbab = 0.001;
		midRange = 0.001;
		midRangeProbab = 0.001;
		maxRange = 0.001;
		maxRangeProbab = 0.001;
	};
};
class arifle_AK47: arifle_AK_Base
{
	scope = 1;
};
class arifle_AK74: arifle_AK_Base
{
	scope = 1;
};
class arifle_AK107: arifle_AK107_Base
{
	scope = 1;
};
class arifle_AK107_GL: arifle_AK107_Base
{
	scope = 1;
};
class arifle_AK74_GL: arifle_AK_Base
{
	scope = 1;
};
class arifle_AKM: arifle_AK_Base
{
	scope = 1;
};
class arifle_AKS: arifle_AKM
{
	scope = 1;
};
class arifle_AKS_Gold: arifle_AKS
{
	scope = 1;
};
class arifle_RPK74: arifle_AK74
{
	scope = 1;
};
class exile_arifle_M16A4: exile_arifle_M16A4_base
{
	scope = 1;
};
class exile_arifle_M16A2: exile_arifle_M16A4_base
{
	scope = 1;
};
class exile_arifle_m4: Rifle_Base_F
{
	scope = 1;
};
class PKP: Rifle_Long_Base_F
{
	scope = 1;
};
class Pecheneg: PKP
{
	scope = 1;
};
class lmg_UK59: Rifle_Long_Base_F
{
	scope = 1;
};
class M1014: Rifle_Base_F
{
	scope = 1;
};
class Colt1911: Pistol_Base_F
{
	scope = 1;
};
class exile_rifle_SA61: Pistol_Base_F
{
	scope = 1;
};
class Makarov: Pistol_Base_F
{
	scope = 1;
};
class TaurusTracker455: Pistol_Base_F
{
	scope = 1;
};
class TaurusTracker455_gold: TaurusTracker455
{
	scope = 1;
};
class srifle_DMR: Rifle_Base_F
{
	scope = 1;
};
class srifle_CZ550_base: Rifle_Base_F
{
	scope = 1;
};
class srifle_CZ550_shit_1: srifle_CZ550_base
{
	scope = 1;
};
class srifle_CZ550_shit_2: srifle_CZ550_base
{
	scope = 1;
};
class ksvk: Rifle_Base_F
{
	scope = 1;
};
class srifle_LeeEnfield: Rifle_Base_F
{
	scope = 1;
};
class exile_weapons_m107: Rifle_Long_Base_F
{
	scope = 1;
};
class srifle_SVD: Rifle_Base_F
{
	scope = 1;
};
class srifle_SVD_des: srifle_SVD
{
	scope = 1;
};
class srifle_VSSVintorez: Rifle_Base_F
{
	scope = 1;
};
class ExileLife_ARX_Base: arifle_ARX_base_F
{
	class Secondary;
};
class Default;
class GrenadeLauncher: Default {};
class Throw: GrenadeLauncher
{
	muzzles[] = {"HandFlareMuzzle","HandGrenade_Stone","HandGrenadeMuzzle","MiniGrenadeMuzzle","SmokeShellMuzzle","SmokeShellYellowMuzzle","SmokeShellGreenMuzzle","SmokeShellRedMuzzle","SmokeShellPurpleMuzzle","SmokeShellOrangeMuzzle","SmokeShellBlueMuzzle","ChemlightGreenMuzzle","ChemlightRedMuzzle","ChemlightYellowMuzzle","ChemlightBlueMuzzle","IRGrenade", "Exile_Item_ZipTie","ExileLife_Item_Apple","ExileLife_Item_Stone","ExileLife_Item_Orange","ExileLife_Item_Potato","ExileLife_Item_Potato_Cooked","ExileLife_Item_Banana"};
	class ThrowMuzzle;
	class HandFlareMuzzle: ThrowMuzzle
	{
		displayName = "Throwable Hand Flare";
		magazines[] = 
		{
			"ExileLife_Item_Flare_White",
			"ExileLife_Item_Flare_Red",
			"ExileLife_Item_Flare_Yellow",
			"ExileLife_Item_Flare_Green"
		};
		begin1[] = {"exilelife_assets\sounds\flare_start", 1.77828, 1, 1000};
		soundBegin[] = {"begin1", 1};
	};
	class Exile_Item_ZipTie: ThrowMuzzle
	{
		magazines[] = {"Exile_Item_ZipTie"};
	};
	class ExileLife_Item_Apple: ThrowMuzzle
	{
		magazines[] = {"ExileLife_Item_Apple"};
	};
	class ExileLife_Item_Orange: ThrowMuzzle
	{
		magazines[] = {"ExileLife_Item_Orange"};
	};
	class ExileLife_Item_Stone: ThrowMuzzle
	{
		magazines[] = {"ExileLife_Item_Stone"};
	};
	class ExileLife_Item_Potato: ThrowMuzzle
	{
		magazines[] = {"ExileLife_Item_Potato"};
	};
	class ExileLife_Item_Potato_Cooked: ThrowMuzzle
	{
		magazines[] = {"ExileLife_Item_Potato_Cooked"};
	};
	class ExileLife_Item_Banana: ThrowMuzzle
	{
		magazines[] = {"ExileLife_Item_Banana"};
	};
};
class optic_Nightstalker: ItemCore
{
	class ItemInfo: InventoryOpticsItem_Base_F
	{
		class OpticsModes
		{
			class NCTALKEP
			{
				visionMode[] = {"Normal","NVG"};
			};
		};
	};
};
class GM6_base_F: Rifle_Long_Base_F
{
magazines[] = {"5Rnd_127x108_Mag", "5Rnd_127x108_APDS_Mag", "Exile_Magazine_5Rnd_127x108_Bullet_Cam_Mag"};
};
class DMR_05_base_F: Rifle_Long_Base_F
{
magazines[] = {"10Rnd_93x64_DMR_05_Mag", "Exile_Magazine_10Rnd_93x64_DMR_05_Bullet_Cam_Mag"};
};
class LRR_base_F: Rifle_Long_Base_F
{
class EventHandler
{
	class Fired
	{
		boltSound[] = {};
		boltAnim = "GestureFireLRR";
	};
};
magazines[] = {"7Rnd_408_Mag", "Exile_Magazine_7Rnd_408_Bullet_Cam_Mag"};
};
class DMR_02_base_F: Rifle_Long_Base_F
{
magazines[] = {"10Rnd_338_Mag", "Exile_Magazine_10Rnd_338_Bullet_Cam_Mag"};
};
class Exile_Melee_Abstract: Rifle 
{
	scope = 1;
	author = "ExileLife Mod Team";
	displayName = "Dummy";
	descriptionShort = "Dummy";
	type = 4;
	optics = 0;
	primary = 0;
	model = "\exile_assets\model\Dummy.p3d";
	picture = "\exile_assets\texture\item\Dummy.paa"; 
	cursor = "EmptyCursor";
	cursorAim = "throw";
	cursorSize = 1;
	autoreload = 1;
	canDrop = 1;
	distanceZoomMin = 2; 
	distanceZoomMax = 2; 
	drySound[] = {"", 0, 1, 20};
	fireLightDuration = 0;
	fireLightIntensity = 0;
	isFakeWeapon = 0;
	minRange = 0.3;
	minRangeProbab = 0.33;
	midRange = 0.3;
	midRangeProbab = 0.33;
	maxRange = 0.3;
	maxRangeProbab = 0.34;
	airFriction = -0.0018;
	hit = 4; 
	initSpeed = 0.1; 
	modelOptics = "-";
	magazines[] = { "ExileLife_Magazine_Melee" };
	recoil = "";
	recoilProne = "";
	reloadAction = "";
	reloadMagazineSound[] = {"", 1};
	reloadTime = 0;
	closure1[] = {"", 1};
	soundClosure[] = {"closure1", 1};
	weaponInfoType = "RscWeaponEmpty";
	weaponReloadtime = 0;
	weaponSoundEffect = "DefaultRifle";
	modes[] = {"Hack"};
	craterEffects = "NoCrater";
	explosionEffects = "NoExplosion";
	class Library
	{
		libTextDesc = "Long Description";
	};
	class Melee
	{
		unlimitedAmmo = 0;			
		primaryAnimation[] = {"playActionNow","GestureExileAxeSwing01"}; 
		secondaryAnimation[] = {}; 
		disableShiftAnimation = 0; 
		swingTimeHitStart = 0.5; 
		swingTimeHitFinish = 0.7; 
		ammo = "ExileLife_Ammo_BatNails";
		swingMemoryPoints[] = {"head","weapon"}; 
		weaponPositions[] = {{-0.105469,1.22598,0.994736},{-0.105469,1.22598,0.694736}}; 
		executePrimary = ""; 
		executeSecondary = "ExileLifeClient_object_player_event_onFired_spikeBat";	
	};
};
class hlc_AWC_base;
class hlc_Springfield_base;
class hlc_rifle_awcovert: hlc_AWC_base
{
	class EventHandler
	{
		class Fired
		{
			boltSound[] = {"hlc_wp_fhawc\snd\AWM_rechamber.wss",1,1,15};
			boltAnim = "HLC_GestureRechamberAWM";
		};
	};
};
class hlc_rifle_awmagnum: hlc_AWC_base
{
	class EventHandler
	{
		class Fired
		{
			boltSound[] = {"hlc_wp_fhawc\snd\AWM_rechamber.wss",1,1,15};
			boltAnim = "HLC_GestureRechamberAWM";
		};
	};
};
class hlc_rifle_M1903A1_unertl: hlc_Springfield_base
{
	class EventHandler
	{
		class Fired
		{
			boltSound[] = {"hlc_wp_springfield\snd\1903A1_rechamber.wss",1,1,15};
			boltAnim = "HLC_GestureRechamberM1903A1_UN";
		};
	};
};
class hlc_rifle_M1903A1: hlc_Springfield_base
{
	class EventHandler
	{
		class Fired
		{
			boltSound[] = {"hlc_wp_springfield\snd\1903A1_rechamber.wss",1,1,15};
			boltAnim = "HLC_GestureRechamberM1903A1_UN";
		};
	};
};
class hlc_rifle_M1903A1OMR: hlc_rifle_M1903A1
{
	class EventHandler
	{
		class Fired
		{
			boltSound[] = {"hlc_wp_springfield\snd\1903A1_rechamber.wss",1,1,15};
			boltAnim = "HLC_GestureRechamberM1903A1_UN";
		};
	};
};
class hgun_ACPC2_F: Pistol_Base_F
{
	scope = 2;
	displayName = "Custom Covert II";
	class ExileLife
	{
		casing = "ExileLife_Item_45_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"hgun_ACPC2_F",
			"ExileLife_Weapon_ACPC2_F_Used",
			"ExileLife_Weapon_ACPC2_F_Worn",
			"ExileLife_Weapon_ACPC2_F_Damaged",
			"ExileLife_Weapon_ACPC2_F_Broken"
		};
	};
	class WeaponSlotsInfo: WeaponSlotsInfo
	{
		class MuzzleSlot: MuzzleSlot
		{
			linkProxy = "\A3\data_f\proxies\weapon_slots\MUZZLE";
			compatibleItems[] = {"muzzle_snds_acp","ExileLife_Item_BottleSuppressor"};
		};
	};	
};
class ExileLife_Weapon_ACPC2_F_Used: hgun_ACPC2_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Custom Covert II (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_ACPC2_F_Worn: hgun_ACPC2_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Custom Covert II (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_ACPC2_F_Damaged: hgun_ACPC2_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Custom Covert II (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_ACPC2_F_Broken: hgun_ACPC2_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Custom Covert II (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_AK12_F: arifle_AK12_base_F
{
	scope = 2;
	displayName = "AK12";
	class ExileLife
	{
		casing = "ExileLife_Item_762_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_AK12_F",
			"ExileLife_Weapon_AK12_F_Used",
			"ExileLife_Weapon_AK12_F_Worn",
			"ExileLife_Weapon_AK12_F_Damaged",
			"ExileLife_Weapon_AK12_F_Broken"
		};
	};
};
class ExileLife_Weapon_AK12_F_Used: arifle_AK12_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AK12 (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_AK12_F_Worn: arifle_AK12_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AK12 (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_AK12_F_Damaged: arifle_AK12_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AK12 (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_AK12_F_Broken: arifle_AK12_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AK12 (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_AK12_GL_F: arifle_AK12_GL_base_F
{
	scope = 2;
	displayName = "AK12 GL";
	class ExileLife
	{
		casing = "ExileLife_Item_762_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_AK12_GL_F",
			"ExileLife_Weapon_AK12_GL_F_Used",
			"ExileLife_Weapon_AK12_GL_F_Worn",
			"ExileLife_Weapon_AK12_GL_F_Damaged",
			"ExileLife_Weapon_AK12_GL_F_Broken"
		};
	};
};
class ExileLife_Weapon_AK12_GL_F_Used: arifle_AK12_GL_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AK12 GL (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_AK12_GL_F_Worn: arifle_AK12_GL_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AK12 GL (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_AK12_GL_F_Damaged: arifle_AK12_GL_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AK12 GL (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_AK12_GL_F_Broken: arifle_AK12_GL_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AK12 GL (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_AKM_F: arifle_AKM_base_F
{
	scope = 2;
	displayName = "AKM";
	class ExileLife
	{
		casing = "ExileLife_Item_762_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_AKM_F",
			"ExileLife_Weapon_AKM_F_Used",
			"ExileLife_Weapon_AKM_F_Worn",
			"ExileLife_Weapon_AKM_F_Damaged",
			"ExileLife_Weapon_AKM_F_Broken"
		};
	};
};
class ExileLife_Weapon_AKM_F_Used: arifle_AKM_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AKM (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_AKM_F_Worn: arifle_AKM_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AKM (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_AKM_F_Damaged: arifle_AKM_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AKM (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_AKM_F_Broken: arifle_AKM_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AKM (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_AKS_F: arifle_AKS_base_F
{
	scope = 2;
	displayName = "AKS";
	class ExileLife
	{
		casing = "ExileLife_Item_545_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_AKS_F",
			"ExileLife_Weapon_AKS_F_Used",
			"ExileLife_Weapon_AKS_F_Worn",
			"ExileLife_Weapon_AKS_F_Damaged",
			"ExileLife_Weapon_AKS_F_Broken"
		};
	};
};
class ExileLife_Weapon_AKS_F_Used: arifle_AKS_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AKS (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_AKS_F_Worn: arifle_AKS_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AKS (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_AKS_F_Damaged: arifle_AKS_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AKS (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_AKS_F_Broken: arifle_AKS_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AKS (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_ARX_blk_F: arifle_ARX_base_F
{
	scope = 2;
	displayName = "ARX (Black)";
	class ExileLife
	{
		casing = "ExileLife_Item_65_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_ARX_blk_F",
			"ExileLife_Weapon_ARX_blk_F_Used",
			"ExileLife_Weapon_ARX_blk_F_Worn",
			"ExileLife_Weapon_ARX_blk_F_Damaged",
			"ExileLife_Weapon_ARX_blk_F_Broken"
		};
	};
};
class ExileLife_Weapon_ARX_blk_F_Used: arifle_ARX_blk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "ARX (Black/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_ARX_blk_F_Worn: arifle_ARX_blk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "ARX (Black/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_ARX_blk_F_Damaged: arifle_ARX_blk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "ARX (Black/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_ARX_blk_F_Broken: arifle_ARX_blk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "ARX (Black/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_ARX_hex_F: arifle_ARX_base_F
{
	scope = 2;
	displayName = "ARX (Hex)";
	class ExileLife
	{
		casing = "ExileLife_Item_65_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_ARX_hex_F",
			"ExileLife_Weapon_ARX_hex_F_Used",
			"ExileLife_Weapon_ARX_hex_F_Worn",
			"ExileLife_Weapon_ARX_hex_F_Damaged",
			"ExileLife_Weapon_ARX_hex_F_Broken"
		};
	};
};
class ExileLife_Weapon_ARX_hex_F_Used: arifle_ARX_hex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "ARX (Hex/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_ARX_hex_F_Worn: arifle_ARX_hex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "ARX (Hex/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_ARX_hex_F_Damaged: arifle_ARX_hex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "ARX (Hex/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_ARX_hex_F_Broken: arifle_ARX_hex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "ARX (Hex/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_ARX_ghex_F: arifle_ARX_base_F
{
	scope = 2;
	displayName = "ARX (Green Hex)";
	class ExileLife
	{
		casing = "ExileLife_Item_65_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_ARX_ghex_F",
			"ExileLife_Weapon_ARX_ghex_F_Used",
			"ExileLife_Weapon_ARX_ghex_F_Worn",
			"ExileLife_Weapon_ARX_ghex_F_Damaged",
			"ExileLife_Weapon_ARX_ghex_F_Broken"
		};
	};
};
class ExileLife_Weapon_ARX_ghex_F_Used: arifle_ARX_ghex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "ARX (Green Hex/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_ARX_ghex_F_Worn: arifle_ARX_ghex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "ARX (Green Hex/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_ARX_ghex_F_Damaged: arifle_ARX_ghex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "ARX (Green Hex/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_ARX_ghex_F_Broken: arifle_ARX_ghex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "ARX (Green Hex/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_CTAR_blk_F: arifle_CTAR_base_F
{
	scope = 2;
	displayName = "QBZ-95-1 (Black)";
	class ExileLife
	{
		casing = "ExileLife_Item_58_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_CTAR_blk_F",
			"ExileLife_Weapon_CTAR_blk_F_Used",
			"ExileLife_Weapon_CTAR_blk_F_Worn",
			"ExileLife_Weapon_CTAR_blk_F_Damaged",
			"ExileLife_Weapon_CTAR_blk_F_Broken"
		};
	};
};
class ExileLife_Weapon_CTAR_blk_F_Used: arifle_CTAR_blk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBZ-95-1 (Black/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_CTAR_blk_F_Worn: arifle_CTAR_blk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBZ-95-1 (Black/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_CTAR_blk_F_Damaged: arifle_CTAR_blk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBZ-95-1 (Black/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_CTAR_blk_F_Broken: arifle_CTAR_blk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBZ-95-1 (Black/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_CTAR_ghex_F: arifle_CTAR_base_F
{
	scope = 2;
	displayName = "QBZ-95-1 (Green Hex)";
	class ExileLife
	{
		casing = "ExileLife_Item_58_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_CTAR_ghex_F",
			"ExileLife_Weapon_CTAR_ghex_F_Used",
			"ExileLife_Weapon_CTAR_ghex_F_Worn",
			"ExileLife_Weapon_CTAR_ghex_F_Damaged",
			"ExileLife_Weapon_CTAR_ghex_F_Broken"
		};
	};
};
class ExileLife_Weapon_CTAR_ghex_F_Used: arifle_CTAR_ghex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBZ-95-1 (Green Hex/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_CTAR_ghex_F_Worn: arifle_CTAR_ghex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBZ-95-1 (Green Hex/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_CTAR_ghex_F_Damaged: arifle_CTAR_ghex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBZ-95-1 (Green Hex/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_CTAR_ghex_F_Broken: arifle_CTAR_ghex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBZ-95-1 (Green Hex/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_CTAR_hex_F: arifle_CTAR_base_F
{
	scope = 2;
	displayName = "QBZ-95-1 (Hex)";
	class ExileLife
	{
		casing = "ExileLife_Item_58_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_CTAR_hex_F",
			"ExileLife_Weapon_CTAR_hex_F_Used",
			"ExileLife_Weapon_CTAR_hex_F_Worn",
			"ExileLife_Weapon_CTAR_hex_F_Damaged",
			"ExileLife_Weapon_CTAR_hex_F_Broken"
		};
	};
};
class ExileLife_Weapon_CTAR_hex_F_Used: arifle_CTAR_hex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBZ-95-1 (Hex/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_CTAR_hex_F_Worn: arifle_CTAR_hex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBZ-95-1 (Hex/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_CTAR_hex_F_Damaged: arifle_CTAR_hex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBZ-95-1 (Hex/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_CTAR_hex_F_Broken: arifle_CTAR_hex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBZ-95-1 (Hex/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_CTAR_GL_blk_F: arifle_CTAR_GL_base_F
{
	scope = 2;
	displayName = "QBZ-95-1 GL (Black)";
	class ExileLife
	{
		casing = "ExileLife_Item_58_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_CTAR_GL_blk_F",
			"ExileLife_Weapon_CTAR_GL_blk_F_Used",
			"ExileLife_Weapon_CTAR_GL_blk_F_Worn",
			"ExileLife_Weapon_CTAR_GL_blk_F_Damaged",
			"ExileLife_Weapon_CTAR_GL_blk_F_Broken"
		};
	};
};
class ExileLife_Weapon_CTAR_GL_blk_F_Used: arifle_CTAR_GL_blk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBZ-95-1 GL (Black/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_CTAR_GL_blk_F_Worn: arifle_CTAR_GL_blk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBZ-95-1 GL (Black/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_CTAR_GL_blk_F_Damaged: arifle_CTAR_GL_blk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBZ-95-1 GL (Black/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_CTAR_GL_blk_F_Broken: arifle_CTAR_GL_blk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBZ-95-1 GL (Black/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_CTAR_GL_ghex_F: arifle_CTAR_GL_base_F
{
	scope = 2;
	displayName = "QBZ-95-1 GL (Green Hex)";
	class ExileLife
	{
		casing = "ExileLife_Item_58_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_CTAR_GL_ghex_F",
			"ExileLife_Weapon_CTAR_GL_ghex_F_Used",
			"ExileLife_Weapon_CTAR_GL_ghex_F_Worn",
			"ExileLife_Weapon_CTAR_GL_ghex_F_Damaged",
			"ExileLife_Weapon_CTAR_GL_ghex_F_Broken"
		};
	};
};
class ExileLife_Weapon_CTAR_GL_ghex_F_Used: arifle_CTAR_GL_ghex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBZ-95-1 GL (Green Hex/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_CTAR_GL_ghex_F_Worn: arifle_CTAR_GL_ghex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBZ-95-1 GL (Green Hex/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_CTAR_GL_ghex_F_Damaged: arifle_CTAR_GL_ghex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBZ-95-1 GL (Green Hex/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_CTAR_GL_ghex_F_Broken: arifle_CTAR_GL_ghex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBZ-95-1 GL (Green Hex/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_CTAR_GL_hex_F: arifle_CTAR_GL_base_F
{
	scope = 2;
	displayName = "QBZ-95-1 GL (Hex)";
	class ExileLife
	{
		casing = "ExileLife_Item_58_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_CTAR_GL_hex_F",
			"ExileLife_Weapon_CTAR_GL_hex_F_Used",
			"ExileLife_Weapon_CTAR_GL_hex_F_Worn",
			"ExileLife_Weapon_CTAR_GL_hex_F_Damaged",
			"ExileLife_Weapon_CTAR_GL_hex_F_Broken"
		};
	};
};
class ExileLife_Weapon_CTAR_GL_hex_F_Used: arifle_CTAR_GL_hex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBZ-95-1 GL (Hex/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_CTAR_GL_hex_F_Worn: arifle_CTAR_GL_hex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBZ-95-1 GL (Hex/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_CTAR_GL_hex_F_Damaged: arifle_CTAR_GL_hex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBZ-95-1 GL (Hex/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_CTAR_GL_hex_F_Broken: arifle_CTAR_GL_hex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBZ-95-1 GL (Hex/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_CTARS_blk_F: arifle_CTARS_base_F
{
	scope = 2;
	displayName = "QBZ-95-1 LSW (Black)";
	class ExileLife
	{
		casing = "ExileLife_Item_58_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_CTARS_blk_F",
			"ExileLife_Weapon_CTARS_blk_F_Used",
			"ExileLife_Weapon_CTARS_blk_F_Worn",
			"ExileLife_Weapon_CTARS_blk_F_Damaged",
			"ExileLife_Weapon_CTARS_blk_F_Broken"
		};
	};
};
class ExileLife_Weapon_CTARS_blk_F_Used: arifle_CTARS_blk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBZ-95-1 LSW (Black/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_CTARS_blk_F_Worn: arifle_CTARS_blk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBZ-95-1 LSW (Black/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_CTARS_blk_F_Damaged: arifle_CTARS_blk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBZ-95-1 LSW (Black/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_CTARS_blk_F_Broken: arifle_CTARS_blk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBZ-95-1 LSW (Black/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_CTARS_ghex_F: arifle_CTARS_base_F
{
	scope = 2;
	displayName = "QBZ-95-1 LSW (Green Hex)";
	class ExileLife
	{
		casing = "ExileLife_Item_58_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_CTARS_ghex_F",
			"ExileLife_Weapon_CTARS_ghex_F_Used",
			"ExileLife_Weapon_CTARS_ghex_F_Worn",
			"ExileLife_Weapon_CTARS_ghex_F_Damaged",
			"ExileLife_Weapon_CTARS_ghex_F_Broken"
		};
	};
};
class ExileLife_Weapon_CTARS_ghex_F_Used: arifle_CTARS_ghex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBZ-95-1 LSW (Green Hex/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_CTARS_ghex_F_Worn: arifle_CTARS_ghex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBZ-95-1 LSW (Green Hex/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_CTARS_ghex_F_Damaged: arifle_CTARS_ghex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBZ-95-1 LSW (Green Hex/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_CTARS_ghex_F_Broken: arifle_CTARS_ghex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBZ-95-1 LSW (Green Hex/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_CTARS_hex_F: arifle_CTARS_base_F
{
	scope = 2;
	displayName = "QBZ-95-1 LSW (Hex)";
	class ExileLife
	{
		casing = "ExileLife_Item_58_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_CTARS_hex_F",
			"ExileLife_Weapon_CTARS_hex_F_Used",
			"ExileLife_Weapon_CTARS_hex_F_Worn",
			"ExileLife_Weapon_CTARS_hex_F_Damaged",
			"ExileLife_Weapon_CTARS_hex_F_Broken"
		};
	};
};
class ExileLife_Weapon_CTARS_hex_F_Used: arifle_CTARS_hex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBZ-95-1 LSW (Hex/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_CTARS_hex_F_Worn: arifle_CTARS_hex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBZ-95-1 LSW (Hex/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_CTARS_hex_F_Damaged: arifle_CTARS_hex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBZ-95-1 LSW (Hex/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_CTARS_hex_F_Broken: arifle_CTARS_hex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBZ-95-1 LSW (Hex/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class srifle_DMR_01_F: DMR_01_base_F
{
	scope = 2;
	displayName = "VS-121";
	class ExileLife
	{
		casing = "ExileLife_Item_762_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"srifle_DMR_01_F",
			"ExileLife_Weapon_DMR_01_F_Used",
			"ExileLife_Weapon_DMR_01_F_Worn",
			"ExileLife_Weapon_DMR_01_F_Damaged",
			"ExileLife_Weapon_DMR_01_F_Broken"
		};
	};
};
class ExileLife_Weapon_DMR_01_F_Used: srifle_DMR_01_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "VS-121 (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_DMR_01_F_Worn: srifle_DMR_01_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "VS-121 (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_DMR_01_F_Damaged: srifle_DMR_01_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "VS-121 (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_DMR_01_F_Broken: srifle_DMR_01_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "VS-121 (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class srifle_DMR_02_F: DMR_02_base_F
{
	scope = 2;
	displayName = "Noreen 'Bad News' ULR (Black)";
	class ExileLife
	{
		casing = "ExileLife_Item_338_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"srifle_DMR_02_F",
			"ExileLife_Weapon_DMR_02_F_Used",
			"ExileLife_Weapon_DMR_02_F_Worn",
			"ExileLife_Weapon_DMR_02_F_Damaged",
			"ExileLife_Weapon_DMR_02_F_Broken"
		};
	};
};
class ExileLife_Weapon_DMR_02_F_Used: srifle_DMR_02_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Noreen 'Bad News' ULR (Black/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_DMR_02_F_Worn: srifle_DMR_02_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Noreen 'Bad News' ULR (Black/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_DMR_02_F_Damaged: srifle_DMR_02_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Noreen 'Bad News' ULR (Black/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_DMR_02_F_Broken: srifle_DMR_02_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Noreen 'Bad News' ULR (Black/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class srifle_DMR_02_camo_F: srifle_DMR_02_F
{
	scope = 2;
	displayName = "Noreen 'Bad News' ULR (Camo)";
	class ExileLife
	{
		casing = "ExileLife_Item_338_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"srifle_DMR_02_camo_F",
			"ExileLife_Weapon_DMR_02_camo_F_Used",
			"ExileLife_Weapon_DMR_02_camo_F_Worn",
			"ExileLife_Weapon_DMR_02_camo_F_Damaged",
			"ExileLife_Weapon_DMR_02_camo_F_Broken"
		};
	};
};
class ExileLife_Weapon_DMR_02_camo_F_Used: srifle_DMR_02_camo_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Noreen 'Bad News' ULR (Camo/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_DMR_02_camo_F_Worn: srifle_DMR_02_camo_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Noreen 'Bad News' ULR (Camo/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_DMR_02_camo_F_Damaged: srifle_DMR_02_camo_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Noreen 'Bad News' ULR (Camo/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_DMR_02_camo_F_Broken: srifle_DMR_02_camo_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Noreen 'Bad News' ULR (Camo/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class srifle_DMR_02_sniper_F: srifle_DMR_02_F
{
	scope = 2;
	displayName = "Noreen 'Bad News' ULR (Tan)";
	class ExileLife
	{
		casing = "ExileLife_Item_338_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"srifle_DMR_02_sniper_F",
			"ExileLife_Weapon_DMR_02_sniper_F_Used",
			"ExileLife_Weapon_DMR_02_sniper_F_Worn",
			"ExileLife_Weapon_DMR_02_sniper_F_Damaged",
			"ExileLife_Weapon_DMR_02_sniper_F_Broken"
		};
	};
};
class ExileLife_Weapon_DMR_02_sniper_F_Used: srifle_DMR_02_sniper_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Noreen 'Bad News' ULR (Tan/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_DMR_02_sniper_F_Worn: srifle_DMR_02_sniper_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Noreen 'Bad News' ULR (Tan/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_DMR_02_sniper_F_Damaged: srifle_DMR_02_sniper_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Noreen 'Bad News' ULR (Tan/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_DMR_02_sniper_F_Broken: srifle_DMR_02_sniper_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Noreen 'Bad News' ULR (Tan/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class srifle_DMR_03_F: DMR_03_base_F
{
	scope = 2;
	displayName = "SIG 556 (Black)";
	class ExileLife
	{
		casing = "ExileLife_Item_762_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"srifle_DMR_03_F",
			"ExileLife_Weapon_DMR_03_F_Used",
			"ExileLife_Weapon_DMR_03_F_Worn",
			"ExileLife_Weapon_DMR_03_F_Damaged",
			"ExileLife_Weapon_DMR_03_F_Broken"
		};
	};
};
class ExileLife_Weapon_DMR_03_F_Used: srifle_DMR_03_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "SIG 556 (Black/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_DMR_03_F_Worn: srifle_DMR_03_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "SIG 556 (Black/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_DMR_03_F_Damaged: srifle_DMR_03_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "SIG 556 (Black/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_DMR_03_F_Broken: srifle_DMR_03_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "SIG 556 (Black/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class srifle_DMR_03_khaki_F: srifle_DMR_03_F
{
	scope = 2;
	displayName = "SIG 556 (Khaki)";
	class ExileLife
	{
		casing = "ExileLife_Item_762_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"srifle_DMR_03_khaki_F",
			"ExileLife_Weapon_DMR_03_khaki_F_Used",
			"ExileLife_Weapon_DMR_03_khaki_F_Worn",
			"ExileLife_Weapon_DMR_03_khaki_F_Damaged",
			"ExileLife_Weapon_DMR_03_khaki_F_Broken"
		};
	};
};
class ExileLife_Weapon_DMR_03_khaki_F_Used: srifle_DMR_03_khaki_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "SIG 556 (Khaki/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_DMR_03_khaki_F_Worn: srifle_DMR_03_khaki_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "SIG 556 (Khaki/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_DMR_03_khaki_F_Damaged: srifle_DMR_03_khaki_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "SIG 556 (Khaki/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_DMR_03_khaki_F_Broken: srifle_DMR_03_khaki_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "SIG 556 (Khaki/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class srifle_DMR_03_Tan_F: srifle_DMR_03_F
{
	scope = 2;
	displayName = "SIG 556 (Tan)";
	class ExileLife
	{
		casing = "ExileLife_Item_762_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"srifle_DMR_03_Tan_F",
			"ExileLife_Weapon_DMR_03_Tan_F_Used",
			"ExileLife_Weapon_DMR_03_Tan_F_Worn",
			"ExileLife_Weapon_DMR_03_Tan_F_Damaged",
			"ExileLife_Weapon_DMR_03_Tan_F_Broken"
		};
	};
};
class ExileLife_Weapon_DMR_03_Tan_F_Used: srifle_DMR_03_Tan_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "SIG 556 (Tan/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_DMR_03_Tan_F_Worn: srifle_DMR_03_Tan_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "SIG 556 (Tan/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_DMR_03_Tan_F_Damaged: srifle_DMR_03_Tan_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "SIG 556 (Tan/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_DMR_03_Tan_F_Broken: srifle_DMR_03_Tan_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "SIG 556 (Tan/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class srifle_DMR_03_multicam_F: srifle_DMR_03_F
{
	scope = 2;
	displayName = "SIG 556 (Camo)";
	class ExileLife
	{
		casing = "ExileLife_Item_762_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"srifle_DMR_03_multicam_F",
			"ExileLife_Weapon_DMR_03_multicam_F_Used",
			"ExileLife_Weapon_DMR_03_multicam_F_Worn",
			"ExileLife_Weapon_DMR_03_multicam_F_Damaged",
			"ExileLife_Weapon_DMR_03_multicam_F_Broken"
		};
	};
};
class ExileLife_Weapon_DMR_03_multicam_F_Used: srifle_DMR_03_multicam_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "SIG 556 (Camo/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_DMR_03_multicam_F_Worn: srifle_DMR_03_multicam_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "SIG 556 (Camo/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_DMR_03_multicam_F_Damaged: srifle_DMR_03_multicam_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "SIG 556 (Camo/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_DMR_03_multicam_F_Broken: srifle_DMR_03_multicam_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "SIG 556 (Camo/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class srifle_DMR_03_woodland_F: srifle_DMR_03_F
{
	scope = 2;
	displayName = "SIG 556 (Woodland)";
	class ExileLife
	{
		casing = "ExileLife_Item_762_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"srifle_DMR_03_woodland_F",
			"ExileLife_Weapon_DMR_03_woodland_F_Used",
			"ExileLife_Weapon_DMR_03_woodland_F_Worn",
			"ExileLife_Weapon_DMR_03_woodland_F_Damaged",
			"ExileLife_Weapon_DMR_03_woodland_F_Broken"
		};
	};
};
class ExileLife_Weapon_DMR_03_woodland_F_Used: srifle_DMR_03_woodland_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "SIG 556 (Woodland/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_DMR_03_woodland_F_Worn: srifle_DMR_03_woodland_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "SIG 556 (Woodland/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_DMR_03_woodland_F_Damaged: srifle_DMR_03_woodland_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "SIG 556 (Woodland/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_DMR_03_woodland_F_Broken: srifle_DMR_03_woodland_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "SIG 556 (Woodland/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class srifle_DMR_04_F: DMR_04_base_F
{
	scope = 2;
	displayName = "ASP-1 Kir (Black)";
	class ExileLife
	{
		casing = "ExileLife_Item_127_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"srifle_DMR_04_F",
			"ExileLife_Weapon_DMR_04_F_Used",
			"ExileLife_Weapon_DMR_04_F_Worn",
			"ExileLife_Weapon_DMR_04_F_Damaged",
			"ExileLife_Weapon_DMR_04_F_Broken"
		};
	};
};
class ExileLife_Weapon_DMR_04_F_Used: srifle_DMR_04_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "ASP-1 Kir (Black/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_DMR_04_F_Worn: srifle_DMR_04_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "ASP-1 Kir (Black/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_DMR_04_F_Damaged: srifle_DMR_04_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "ASP-1 Kir (Black/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_DMR_04_F_Broken: srifle_DMR_04_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "ASP-1 Kir (Black/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class srifle_DMR_04_Tan_F: srifle_DMR_04_F
{
	scope = 2;
	displayName = "ASP-1 Kir (Tan)";
	class ExileLife
	{
		casing = "ExileLife_Item_127_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"srifle_DMR_04_Tan_F",
			"ExileLife_Weapon_DMR_04_Tan_F_Used",
			"ExileLife_Weapon_DMR_04_Tan_F_Worn",
			"ExileLife_Weapon_DMR_04_Tan_F_Damaged",
			"ExileLife_Weapon_DMR_04_Tan_F_Broken"
		};
	};
};
class ExileLife_Weapon_DMR_04_Tan_F_Used: srifle_DMR_04_Tan_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "ASP-1 Kir (Tan/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_DMR_04_Tan_F_Worn: srifle_DMR_04_Tan_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "ASP-1 Kir (Tan/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_DMR_04_Tan_F_Damaged: srifle_DMR_04_Tan_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "ASP-1 Kir (Tan/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_DMR_04_Tan_F_Broken: srifle_DMR_04_Tan_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "ASP-1 Kir (Tan/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class srifle_DMR_05_blk_F: DMR_05_base_F
{
	scope = 2;
	displayName = "Cyrus (Black)";
	class ExileLife
	{
		casing = "ExileLife_Item_93_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"srifle_DMR_05_blk_F",
			"ExileLife_Weapon_DMR_05_blk_F_Used",
			"ExileLife_Weapon_DMR_05_blk_F_Worn",
			"ExileLife_Weapon_DMR_05_blk_F_Damaged",
			"ExileLife_Weapon_DMR_05_blk_F_Broken"
		};
	};
};
class ExileLife_Weapon_DMR_05_blk_F_Used: srifle_DMR_05_blk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Cyrus (Black/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_DMR_05_blk_F_Worn: srifle_DMR_05_blk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Cyrus (Black/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_DMR_05_blk_F_Damaged: srifle_DMR_05_blk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Cyrus (Black/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_DMR_05_blk_F_Broken: srifle_DMR_05_blk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Cyrus (Black/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class srifle_DMR_05_hex_F: srifle_DMR_05_blk_F
{
	scope = 2;
	displayName = "Cyrus (Hex)";
	class ExileLife
	{
		casing = "ExileLife_Item_93_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"srifle_DMR_05_hex_F",
			"ExileLife_Weapon_DMR_05_hex_F_Used",
			"ExileLife_Weapon_DMR_05_hex_F_Worn",
			"ExileLife_Weapon_DMR_05_hex_F_Damaged",
			"ExileLife_Weapon_DMR_05_hex_F_Broken"
		};
	};
};
class ExileLife_Weapon_DMR_05_hex_F_Used: srifle_DMR_05_hex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Cyrus (Hex/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_DMR_05_hex_F_Worn: srifle_DMR_05_hex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Cyrus (Hex/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_DMR_05_hex_F_Damaged: srifle_DMR_05_hex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Cyrus (Hex/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_DMR_05_hex_F_Broken: srifle_DMR_05_hex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Cyrus (Hex/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class srifle_DMR_05_tan_F: srifle_DMR_05_blk_F
{
	scope = 2;
	displayName = "Cyrus (Tan)";
	class ExileLife
	{
		casing = "ExileLife_Item_93_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"srifle_DMR_05_tan_F",
			"ExileLife_Weapon_DMR_05_tan_F_Used",
			"ExileLife_Weapon_DMR_05_tan_F_Worn",
			"ExileLife_Weapon_DMR_05_tan_F_Damaged",
			"ExileLife_Weapon_DMR_05_tan_F_Broken"
		};
	};
};
class ExileLife_Weapon_DMR_05_tan_F_Used: srifle_DMR_05_tan_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Cyrus (Tan/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_DMR_05_tan_F_Worn: srifle_DMR_05_tan_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Cyrus (Tan/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_DMR_05_tan_F_Damaged: srifle_DMR_05_tan_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Cyrus (Tan/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_DMR_05_tan_F_Broken: srifle_DMR_05_tan_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Cyrus (Tan/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class srifle_DMR_06_camo_F: DMR_06_base_F
{
	scope = 2;
	displayName = "M14 (Camo)";
	class ExileLife
	{
		casing = "ExileLife_Item_762_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"srifle_DMR_06_camo_F",
			"ExileLife_Weapon_DMR_06_camo_F_Used",
			"ExileLife_Weapon_DMR_06_camo_F_Worn",
			"ExileLife_Weapon_DMR_06_camo_F_Damaged",
			"ExileLife_Weapon_DMR_06_camo_F_Broken"
		};
	};
};
class ExileLife_Weapon_DMR_06_camo_F_Used: srifle_DMR_06_camo_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M14 (Camo/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_DMR_06_camo_F_Worn: srifle_DMR_06_camo_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M14 (Camo/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_DMR_06_camo_F_Damaged: srifle_DMR_06_camo_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M14 (Camo/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_DMR_06_camo_F_Broken: srifle_DMR_06_camo_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M14 (Camo/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class srifle_DMR_06_olive_F: srifle_DMR_06_camo_F
{
	scope = 2;
	displayName = "M14 (Olive)";
	class ExileLife
	{
		casing = "ExileLife_Item_762_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"srifle_DMR_06_olive_F",
			"ExileLife_Weapon_DMR_06_olive_F_Used",
			"ExileLife_Weapon_DMR_06_olive_F_Worn",
			"ExileLife_Weapon_DMR_06_olive_F_Damaged",
			"ExileLife_Weapon_DMR_06_olive_F_Broken"
		};
	};
};
class ExileLife_Weapon_DMR_06_olive_F_Used: srifle_DMR_06_olive_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M14 (Olive/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_DMR_06_olive_F_Worn: srifle_DMR_06_olive_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M14 (Olive/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_DMR_06_olive_F_Damaged: srifle_DMR_06_olive_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M14 (Olive/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_DMR_06_olive_F_Broken: srifle_DMR_06_olive_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M14 (Olive/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class srifle_DMR_07_blk_F: DMR_07_base_F
{
	scope = 2;
	displayName = "QBU-88 (Black)";
	class ExileLife
	{
		casing = "ExileLife_Item_65_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"srifle_DMR_07_blk_F",
			"ExileLife_Weapon_DMR_07_blk_F_Used",
			"ExileLife_Weapon_DMR_07_blk_F_Worn",
			"ExileLife_Weapon_DMR_07_blk_F_Damaged",
			"ExileLife_Weapon_DMR_07_blk_F_Broken"
		};
	};
};
class ExileLife_Weapon_DMR_07_blk_F_Used: srifle_DMR_07_blk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBU-88 (Black/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_DMR_07_blk_F_Worn: srifle_DMR_07_blk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBU-88 (Black/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_DMR_07_blk_F_Damaged: srifle_DMR_07_blk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBU-88 (Black/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_DMR_07_blk_F_Broken: srifle_DMR_07_blk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBU-88 (Black/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class srifle_DMR_07_ghex_F: srifle_DMR_07_blk_F
{
	scope = 2;
	displayName = "QBU-88 (Green Hex)";
	class ExileLife
	{
		casing = "ExileLife_Item_65_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"srifle_DMR_07_ghex_F",
			"ExileLife_Weapon_DMR_07_ghex_F_Used",
			"ExileLife_Weapon_DMR_07_ghex_F_Worn",
			"ExileLife_Weapon_DMR_07_ghex_F_Damaged",
			"ExileLife_Weapon_DMR_07_ghex_F_Broken"
		};
	};
};
class ExileLife_Weapon_DMR_07_ghex_F_Used: srifle_DMR_07_ghex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBU-88 (Green Hex/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_DMR_07_ghex_F_Worn: srifle_DMR_07_ghex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBU-88 (Green Hex/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_DMR_07_ghex_F_Damaged: srifle_DMR_07_ghex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBU-88 (Green Hex/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_DMR_07_ghex_F_Broken: srifle_DMR_07_ghex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBU-88 (Green Hex/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class srifle_DMR_07_hex_F: srifle_DMR_07_blk_F
{
	scope = 2;
	displayName = "QBU-88 (Hex)";
	class ExileLife
	{
		casing = "ExileLife_Item_65_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"srifle_DMR_07_hex_F",
			"ExileLife_Weapon_DMR_07_hex_F_Used",
			"ExileLife_Weapon_DMR_07_hex_F_Worn",
			"ExileLife_Weapon_DMR_07_hex_F_Damaged",
			"ExileLife_Weapon_DMR_07_hex_F_Broken"
		};
	};
};
class ExileLife_Weapon_DMR_07_hex_F_Used: srifle_DMR_07_hex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBU-88 (Hex/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_DMR_07_hex_F_Worn: srifle_DMR_07_hex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBU-88 (Hex/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_DMR_07_hex_F_Damaged: srifle_DMR_07_hex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBU-88 (Hex/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_DMR_07_hex_F_Broken: srifle_DMR_07_hex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "QBU-88 (Hex/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class srifle_EBR_F: EBR_base_F
{
	scope = 2;
	displayName = "Mk14 Mod 1 EBR";
	class ExileLife
	{
		casing = "ExileLife_Item_762_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"srifle_EBR_F",
			"ExileLife_Weapon_EBR_F_Used",
			"ExileLife_Weapon_EBR_F_Worn",
			"ExileLife_Weapon_EBR_F_Damaged",
			"ExileLife_Weapon_EBR_F_Broken"
		};
	};
};
class ExileLife_Weapon_EBR_F_Used: srifle_EBR_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Mk14 Mod 1 EBR (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_EBR_F_Worn: srifle_EBR_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Mk14 Mod 1 EBR (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_EBR_F_Damaged: srifle_EBR_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Mk14 Mod 1 EBR (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_EBR_F_Broken: srifle_EBR_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Mk14 Mod 1 EBR (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class srifle_GM6_F: GM6_base_F
{
	scope = 2;
	displayName = "GM6 Lynx (Black)";
	class ExileLife
	{
		casing = "ExileLife_Item_127_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"srifle_GM6_F",
			"ExileLife_Weapon_GM6_F_Used",
			"ExileLife_Weapon_GM6_F_Worn",
			"ExileLife_Weapon_GM6_F_Damaged",
			"ExileLife_Weapon_GM6_F_Broken"
		};
	};
};
class ExileLife_Weapon_GM6_F_Used: srifle_GM6_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "GM6 Lynx (Black/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_GM6_F_Worn: srifle_GM6_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "GM6 Lynx (Black/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_GM6_F_Damaged: srifle_GM6_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "GM6 Lynx (Black/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_GM6_F_Broken: srifle_GM6_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "GM6 Lynx (Black/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class srifle_GM6_camo_F: GM6_base_F
{
	scope = 2;
	displayName = "GM6 Lynx (Camo)";
	class ExileLife
	{
		casing = "ExileLife_Item_127_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"srifle_GM6_camo_F",
			"ExileLife_Weapon_GM6_camo_F_Used",
			"ExileLife_Weapon_GM6_camo_F_Worn",
			"ExileLife_Weapon_GM6_camo_F_Damaged",
			"ExileLife_Weapon_GM6_camo_F_Broken"
		};
	};
};
class ExileLife_Weapon_GM6_camo_F_Used: srifle_GM6_camo_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "GM6 Lynx (Camo/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_GM6_camo_F_Worn: srifle_GM6_camo_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "GM6 Lynx (Camo/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_GM6_camo_F_Damaged: srifle_GM6_camo_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "GM6 Lynx (Camo/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_GM6_camo_F_Broken: srifle_GM6_camo_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "GM6 Lynx (Camo/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class srifle_GM6_ghex_F: GM6_base_F
{
	scope = 2;
	displayName = "GM6 Lynx (Green Hex)";
	class ExileLife
	{
		casing = "ExileLife_Item_127_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"srifle_GM6_ghex_F",
			"ExileLife_Weapon_GM6_ghex_F_Used",
			"ExileLife_Weapon_GM6_ghex_F_Worn",
			"ExileLife_Weapon_GM6_ghex_F_Damaged",
			"ExileLife_Weapon_GM6_ghex_F_Broken"
		};
	};
};
class ExileLife_Weapon_GM6_ghex_F_Used: srifle_GM6_ghex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "GM6 Lynx (Green Hex/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_GM6_ghex_F_Worn: srifle_GM6_ghex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "GM6 Lynx (Green Hex/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_GM6_ghex_F_Damaged: srifle_GM6_ghex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "GM6 Lynx (Green Hex/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_GM6_ghex_F_Broken: srifle_GM6_ghex_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "GM6 Lynx (Green Hex/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_Katiba_F: arifle_Katiba_Base_F
{
	scope = 2;
	displayName = "KH2002 Sama";
	class ExileLife
	{
		casing = "ExileLife_Item_65_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_Katiba_F",
			"ExileLife_Weapon_Katiba_F_Used",
			"ExileLife_Weapon_Katiba_F_Worn",
			"ExileLife_Weapon_Katiba_F_Damaged",
			"ExileLife_Weapon_Katiba_F_Broken"
		};
	};
};
class ExileLife_Weapon_Katiba_F_Used: arifle_Katiba_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "KH2002 Sama (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_Katiba_F_Worn: arifle_Katiba_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "KH2002 Sama (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_Katiba_F_Damaged: arifle_Katiba_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "KH2002 Sama (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_Katiba_F_Broken: arifle_Katiba_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "KH2002 Sama (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_Katiba_C_F: arifle_Katiba_Base_F
{
	scope = 2;
	displayName = "KH2002C Sama";
	class ExileLife
	{
		casing = "ExileLife_Item_65_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_Katiba_C_F",
			"ExileLife_Weapon_Katiba_C_F_Used",
			"ExileLife_Weapon_Katiba_C_F_Worn",
			"ExileLife_Weapon_Katiba_C_F_Damaged",
			"ExileLife_Weapon_Katiba_C_F_Broken"
		};
	};
};
class ExileLife_Weapon_Katiba_C_F_Used: arifle_Katiba_C_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "KH2002C Sama (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_Katiba_C_F_Worn: arifle_Katiba_C_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "KH2002C Sama (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_Katiba_C_F_Damaged: arifle_Katiba_C_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "KH2002C Sama (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_Katiba_C_F_Broken: arifle_Katiba_C_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "KH2002C Sama (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_Katiba_GL_F: arifle_Katiba_Base_F
{
	scope = 2;
	displayName = "KH2002 Sama KGL";
	class ExileLife
	{
		casing = "ExileLife_Item_65_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_Katiba_GL_F",
			"ExileLife_Weapon_Katiba_GL_F_Used",
			"ExileLife_Weapon_Katiba_GL_F_Worn",
			"ExileLife_Weapon_Katiba_GL_F_Damaged",
			"ExileLife_Weapon_Katiba_GL_F_Broken"
		};
	};
};
class ExileLife_Weapon_Katiba_GL_F_Used: arifle_Katiba_GL_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "KH2002 Sama KGL (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_Katiba_GL_F_Worn: arifle_Katiba_GL_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "KH2002 Sama KGL (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_Katiba_GL_F_Damaged: arifle_Katiba_GL_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "KH2002 Sama KGL (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_Katiba_GL_F_Broken: arifle_Katiba_GL_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "KH2002 Sama KGL (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class LMG_03_F: LMG_03_base_F
{
	scope = 2;
	displayName = "M249 SPW";
	class ExileLife
	{
		casing = "ExileLife_Item_556_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"LMG_03_F",
			"ExileLife_Weapon_LMG_03_F_Used",
			"ExileLife_Weapon_LMG_03_F_Worn",
			"ExileLife_Weapon_LMG_03_F_Damaged",
			"ExileLife_Weapon_LMG_03_F_Broken"
		};
	};
};
class ExileLife_Weapon_LMG_03_F_Used: LMG_03_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M249 SPW (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_LMG_03_F_Worn: LMG_03_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M249 SPW (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_LMG_03_F_Damaged: LMG_03_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M249 SPW (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_LMG_03_F_Broken: LMG_03_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M249 SPW (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class LMG_Mk200_F: Rifle_Long_Base_F
{
	scope = 2;
	displayName = "Stoner 99 LMG";
	class ExileLife
	{
		casing = "ExileLife_Item_65_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"LMG_Mk200_F",
			"ExileLife_Weapon_LMG_Mk200_F_Used",
			"ExileLife_Weapon_LMG_Mk200_F_Worn",
			"ExileLife_Weapon_LMG_Mk200_F_Damaged",
			"ExileLife_Weapon_LMG_Mk200_F_Broken"
		};
	};
};
class ExileLife_Weapon_LMG_Mk200_F_Used: LMG_Mk200_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Stoner 99 LMG (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_LMG_Mk200_F_Worn: LMG_Mk200_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Stoner 99 LMG (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_LMG_Mk200_F_Damaged: LMG_Mk200_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Stoner 99 LMG (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_LMG_Mk200_F_Broken: LMG_Mk200_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Stoner 99 LMG (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class srifle_LRR_F: LRR_base_F
{
	scope = 2;
	displayName = "M200 Intervention (Black)";
	class ExileLife
	{
		casing = "ExileLife_Item_408_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"srifle_LRR_F",
			"ExileLife_Weapon_LRR_F_Used",
			"ExileLife_Weapon_LRR_F_Worn",
			"ExileLife_Weapon_LRR_F_Damaged",
			"ExileLife_Weapon_LRR_F_Broken"
		};
	};
};
class ExileLife_Weapon_LRR_F_Used: srifle_LRR_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M200 Intervention (Black/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_LRR_F_Worn: srifle_LRR_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M200 Intervention (Black/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_LRR_F_Damaged: srifle_LRR_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M200 Intervention (Black/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_LRR_F_Broken: srifle_LRR_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M200 Intervention (Black/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class srifle_LRR_camo_F: LRR_base_F
{
	scope = 2;
	displayName = "M200 Intervention (Camo)";
	class ExileLife
	{
		casing = "ExileLife_Item_408_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"srifle_LRR_camo_F",
			"ExileLife_Weapon_LRR_camo_F_Used",
			"ExileLife_Weapon_LRR_camo_F_Worn",
			"ExileLife_Weapon_LRR_camo_F_Damaged",
			"ExileLife_Weapon_LRR_camo_F_Broken"
		};
	};
};
class ExileLife_Weapon_LRR_camo_F_Used: srifle_LRR_camo_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M200 Intervention (Camo/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_LRR_camo_F_Worn: srifle_LRR_camo_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M200 Intervention (Camo/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_LRR_camo_F_Damaged: srifle_LRR_camo_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M200 Intervention (Camo/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_LRR_camo_F_Broken: srifle_LRR_camo_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M200 Intervention (Camo/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class srifle_LRR_tna_F: srifle_LRR_F
{
	scope = 2;
	displayName = "M200 Intervention (Tropic)";
	class ExileLife
	{
		casing = "ExileLife_Item_408_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"srifle_LRR_tna_F",
			"ExileLife_Weapon_LRR_tna_F_Used",
			"ExileLife_Weapon_LRR_tna_F_Worn",
			"ExileLife_Weapon_LRR_tna_F_Damaged",
			"ExileLife_Weapon_LRR_tna_F_Broken"
		};
	};
};
class ExileLife_Weapon_LRR_tna_F_Used: srifle_LRR_tna_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M200 Intervention (Tropic/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_LRR_tna_F_Worn: srifle_LRR_tna_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M200 Intervention (Tropic/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_LRR_tna_F_Damaged: srifle_LRR_tna_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M200 Intervention (Tropic/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_LRR_tna_F_Broken: srifle_LRR_tna_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M200 Intervention (Tropic/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_Mk20_F: mk20_base_F
{
	scope = 2;
	displayName = "F2000 (Camo)";
	class ExileLife
	{
		casing = "ExileLife_Item_556_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_Mk20_F",
			"ExileLife_Weapon_Mk20_F_Used",
			"ExileLife_Weapon_Mk20_F_Worn",
			"ExileLife_Weapon_Mk20_F_Damaged",
			"ExileLife_Weapon_Mk20_F_Broken"
		};
	};
};
class ExileLife_Weapon_Mk20_F_Used: arifle_Mk20_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "F2000 (Camo/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_Mk20_F_Worn: arifle_Mk20_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "F2000 (Camo/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_Mk20_F_Damaged: arifle_Mk20_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "F2000 (Camo/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_Mk20_F_Broken: arifle_Mk20_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "F2000 (Camo/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_Mk20_plain_F: arifle_Mk20_F
{
	scope = 2;
	displayName = "F2000";
	class ExileLife
	{
		casing = "ExileLife_Item_556_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_Mk20_plain_F",
			"ExileLife_Weapon_Mk20_plain_F_Used",
			"ExileLife_Weapon_Mk20_plain_F_Worn",
			"ExileLife_Weapon_Mk20_plain_F_Damaged",
			"ExileLife_Weapon_Mk20_plain_F_Broken"
		};
	};
};
class ExileLife_Weapon_Mk20_plain_F_Used: arifle_Mk20_plain_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "F2000 (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_Mk20_plain_F_Worn: arifle_Mk20_plain_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "F2000 (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_Mk20_plain_F_Damaged: arifle_Mk20_plain_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "F2000 (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_Mk20_plain_F_Broken: arifle_Mk20_plain_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "F2000 (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_Mk20C_F: mk20_base_F
{
	scope = 2;
	displayName = "F2000 Tactical (Camo)";
	class ExileLife
	{
		casing = "ExileLife_Item_556_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_Mk20C_F",
			"ExileLife_Weapon_Mk20C_F_Used",
			"ExileLife_Weapon_Mk20C_F_Worn",
			"ExileLife_Weapon_Mk20C_F_Damaged",
			"ExileLife_Weapon_Mk20C_F_Broken"
		};
	};
};
class ExileLife_Weapon_Mk20C_F_Used: arifle_Mk20C_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "F2000 Tactical (Camo/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_Mk20C_F_Worn: arifle_Mk20C_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "F2000 Tactical (Camo/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_Mk20C_F_Damaged: arifle_Mk20C_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "F2000 Tactical (Camo/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_Mk20C_F_Broken: arifle_Mk20C_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "F2000 Tactical (Camo/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_Mk20C_plain_F: arifle_Mk20C_F
{
	scope = 2;
	displayName = "F2000 Tactical";
	class ExileLife
	{
		casing = "ExileLife_Item_556_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_Mk20C_plain_F",
			"ExileLife_Weapon_Mk20C_plain_F_Used",
			"ExileLife_Weapon_Mk20C_plain_F_Worn",
			"ExileLife_Weapon_Mk20C_plain_F_Damaged",
			"ExileLife_Weapon_Mk20C_plain_F_Broken"
		};
	};
};
class ExileLife_Weapon_Mk20C_plain_F_Used: arifle_Mk20C_plain_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "F2000 Tactical (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_Mk20C_plain_F_Worn: arifle_Mk20C_plain_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "F2000 Tactical (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_Mk20C_plain_F_Damaged: arifle_Mk20C_plain_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "F2000 Tactical (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_Mk20C_plain_F_Broken: arifle_Mk20C_plain_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "F2000 Tactical (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_Mk20_GL_F: mk20_base_F
{
	scope = 2;
	displayName = "F2000 EGLM (Camo)";
	class ExileLife
	{
		casing = "ExileLife_Item_556_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_Mk20_GL_F",
			"ExileLife_Weapon_Mk20_GL_F_Used",
			"ExileLife_Weapon_Mk20_GL_F_Worn",
			"ExileLife_Weapon_Mk20_GL_F_Damaged",
			"ExileLife_Weapon_Mk20_GL_F_Broken"
		};
	};
};
class ExileLife_Weapon_Mk20_GL_F_Used: arifle_Mk20_GL_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "F2000 EGLM (Camo/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_Mk20_GL_F_Worn: arifle_Mk20_GL_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "F2000 EGLM (Camo/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_Mk20_GL_F_Damaged: arifle_Mk20_GL_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "F2000 EGLM (Camo/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_Mk20_GL_F_Broken: arifle_Mk20_GL_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "F2000 EGLM (Camo/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_Mk20_GL_plain_F: arifle_Mk20_GL_F
{
	scope = 2;
	displayName = "F2000 EGLM";
	class ExileLife
	{
		casing = "ExileLife_Item_556_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_Mk20_GL_plain_F",
			"ExileLife_Weapon_Mk20_GL_plain_F_Used",
			"ExileLife_Weapon_Mk20_GL_plain_F_Worn",
			"ExileLife_Weapon_Mk20_GL_plain_F_Damaged",
			"ExileLife_Weapon_Mk20_GL_plain_F_Broken"
		};
	};
};
class ExileLife_Weapon_Mk20_GL_plain_F_Used: arifle_Mk20_GL_plain_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "F2000 EGLM (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_Mk20_GL_plain_F_Worn: arifle_Mk20_GL_plain_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "F2000 EGLM (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_Mk20_GL_plain_F_Damaged: arifle_Mk20_GL_plain_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "F2000 EGLM (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_Mk20_GL_plain_F_Broken: arifle_Mk20_GL_plain_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "F2000 EGLM (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class MMG_01_hex_f: MMG_01_base_F
{
	scope = 2;
	displayName = "HK121 (Hex)";
	class ExileLife
	{
		casing = "ExileLife_Item_93_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"MMG_01_hex_f",
			"ExileLife_Weapon_MMG_01_hex_f_Used",
			"ExileLife_Weapon_MMG_01_hex_f_Worn",
			"ExileLife_Weapon_MMG_01_hex_f_Damaged",
			"ExileLife_Weapon_MMG_01_hex_f_Broken"
		};
	};
	class LinkedItems 
	{
		class LinkedItemsUnder
		{
			item = "";
			slot = "";
		};
	};	
};
class ExileLife_Weapon_MMG_01_hex_f_Used: MMG_01_hex_f
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK121 (Hex/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_MMG_01_hex_f_Worn: MMG_01_hex_f
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK121 (Hex/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_MMG_01_hex_f_Damaged: MMG_01_hex_f
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK121 (Hex/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_MMG_01_hex_f_Broken: MMG_01_hex_f
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK121 (Hex/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class MMG_01_tan_f: MMG_01_hex_f
{
	scope = 2;
	displayName = "HK121 (Tan)";
	class ExileLife
	{
		casing = "ExileLife_Item_93_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"MMG_01_tan_f",
			"ExileLife_Weapon_MMG_01_tan_f_Used",
			"ExileLife_Weapon_MMG_01_tan_f_Worn",
			"ExileLife_Weapon_MMG_01_tan_f_Damaged",
			"ExileLife_Weapon_MMG_01_tan_f_Broken"
		};
	};
	class LinkedItems 
	{
		class LinkedItemsUnder
		{
			item = "";
			slot = "";
		};
	};	
};
class ExileLife_Weapon_MMG_01_tan_f_Used: MMG_01_tan_f
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK121 (Tan/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_MMG_01_tan_f_Worn: MMG_01_tan_f
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK121 (Tan/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_MMG_01_tan_f_Damaged: MMG_01_tan_f
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK121 (Tan/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_MMG_01_tan_f_Broken: MMG_01_tan_f
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK121 (Tan/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class MMG_02_camo_F: MMG_02_base_F
{
	scope = 2;
	displayName = "LWMMG (MTP)";
	class ExileLife
	{
		casing = "ExileLife_Item_338_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"MMG_02_camo_F",
			"ExileLife_Weapon_MMG_02_camo_F_Used",
			"ExileLife_Weapon_MMG_02_camo_F_Worn",
			"ExileLife_Weapon_MMG_02_camo_F_Damaged",
			"ExileLife_Weapon_MMG_02_camo_F_Broken"
		};
	};
	class LinkedItems 
	{
		class LinkedItemsUnder
		{
			item = "";
			slot = "";
		};
	};	
};
class ExileLife_Weapon_MMG_02_camo_F_Used: MMG_02_camo_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "LWMMG (MTP/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_MMG_02_camo_F_Worn: MMG_02_camo_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "LWMMG (MTP/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_MMG_02_camo_F_Damaged: MMG_02_camo_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "LWMMG (MTP/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_MMG_02_camo_F_Broken: MMG_02_camo_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "LWMMG (MTP/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class MMG_02_black_F: MMG_02_camo_F
{
	scope = 2;
	displayName = "LWMMG (Black)";
	class ExileLife
	{
		casing = "ExileLife_Item_338_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"MMG_02_black_F",
			"ExileLife_Weapon_MMG_02_black_F_Used",
			"ExileLife_Weapon_MMG_02_black_F_Worn",
			"ExileLife_Weapon_MMG_02_black_F_Damaged",
			"ExileLife_Weapon_MMG_02_black_F_Broken"
		};
	};
	class LinkedItems 
	{
		class LinkedItemsUnder
		{
			item = "";
			slot = "";
		};
	};	
};
class ExileLife_Weapon_MMG_02_black_F_Used: MMG_02_black_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "LWMMG (Black/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_MMG_02_black_F_Worn: MMG_02_black_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "LWMMG (Black/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_MMG_02_black_F_Damaged: MMG_02_black_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "LWMMG (Black/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_MMG_02_black_F_Broken: MMG_02_black_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "LWMMG (Black/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class MMG_02_sand_F: MMG_02_camo_F
{
	scope = 2;
	displayName = "LWMMG (Sand)";
	class ExileLife
	{
		casing = "ExileLife_Item_338_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"MMG_02_sand_F",
			"ExileLife_Weapon_MMG_02_sand_F_Used",
			"ExileLife_Weapon_MMG_02_sand_F_Worn",
			"ExileLife_Weapon_MMG_02_sand_F_Damaged",
			"ExileLife_Weapon_MMG_02_sand_F_Broken"
		};
	};
	class LinkedItems 
	{
		class LinkedItemsUnder
		{
			item = "";
			slot = "";
		};
	};	
};
class ExileLife_Weapon_MMG_02_sand_F_Used: MMG_02_sand_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "LWMMG (Sand/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_MMG_02_sand_F_Worn: MMG_02_sand_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "LWMMG (Sand/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_MMG_02_sand_F_Damaged: MMG_02_sand_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "LWMMG (Sand/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_MMG_02_sand_F_Broken: MMG_02_sand_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "LWMMG (Sand/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_MX_F: arifle_MX_Base_F
{
	scope = 2;
	displayName = "MX (Tan)";
	class ExileLife
	{
		casing = "ExileLife_Item_65_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_MX_F",
			"ExileLife_Weapon_MX_F_Used",
			"ExileLife_Weapon_MX_F_Worn",
			"ExileLife_Weapon_MX_F_Damaged",
			"ExileLife_Weapon_MX_F_Broken"
		};
	};
};
class ExileLife_Weapon_MX_F_Used: arifle_MX_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MX (Tan/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_MX_F_Worn: arifle_MX_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MX (Tan/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_MX_F_Damaged: arifle_MX_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MX (Tan/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_MX_F_Broken: arifle_MX_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MX (Tan/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_MX_Black_F: arifle_MX_F
{
	scope = 2;
	displayName = "MX (Black)";
	class ExileLife
	{
		casing = "ExileLife_Item_65_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_MX_Black_F",
			"ExileLife_Weapon_MX_Black_F_Used",
			"ExileLife_Weapon_MX_Black_F_Worn",
			"ExileLife_Weapon_MX_Black_F_Damaged",
			"ExileLife_Weapon_MX_Black_F_Broken"
		};
	};
};
class ExileLife_Weapon_MX_Black_F_Used: arifle_MX_Black_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MX (Black/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_MX_Black_F_Worn: arifle_MX_Black_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MX (Black/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_MX_Black_F_Damaged: arifle_MX_Black_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MX (Black/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_MX_Black_F_Broken: arifle_MX_Black_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MX (Black/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_MX_khk_F: arifle_MX_Black_F
{
	scope = 2;
	displayName = "MX (Khaki)";
	class ExileLife
	{
		casing = "ExileLife_Item_65_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_MX_khk_F",
			"ExileLife_Weapon_MX_khk_F_Used",
			"ExileLife_Weapon_MX_khk_F_Worn",
			"ExileLife_Weapon_MX_khk_F_Damaged",
			"ExileLife_Weapon_MX_khk_F_Broken"
		};
	};
};
class ExileLife_Weapon_MX_khk_F_Used: arifle_MX_khk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MX (Khaki/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_MX_khk_F_Worn: arifle_MX_khk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MX (Khaki/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_MX_khk_F_Damaged: arifle_MX_khk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MX (Khaki/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_MX_khk_F_Broken: arifle_MX_khk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MX (Khaki/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_MXC_F: arifle_MX_Base_F
{
	scope = 2;
	displayName = "MXC (Tan)";
	class ExileLife
	{
		casing = "CASING_NAME";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_MXC_F",
			"ExileLife_Weapon_MXC_F_Used",
			"ExileLife_Weapon_MXC_F_Worn",
			"ExileLife_Weapon_MXC_F_Damaged",
			"ExileLife_Weapon_MXC_F_Broken"
		};
	};
};
class ExileLife_Weapon_MXC_F_Used: arifle_MXC_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MXC (Tan/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_MXC_F_Worn: arifle_MXC_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MXC (Tan/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_MXC_F_Damaged: arifle_MXC_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MXC (Tan/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_MXC_F_Broken: arifle_MXC_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MXC (Tan/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_MXC_Black_F: arifle_MXC_F
{
	scope = 2;
	displayName = "MXC (Black)";
	class ExileLife
	{
		casing = "CASING_NAME";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_MXC_Black_F",
			"ExileLife_Weapon_MXC_Black_F_Used",
			"ExileLife_Weapon_MXC_Black_F_Worn",
			"ExileLife_Weapon_MXC_Black_F_Damaged",
			"ExileLife_Weapon_MXC_Black_F_Broken"
		};
	};
};
class ExileLife_Weapon_MXC_Black_F_Used: arifle_MXC_Black_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MXC (Black/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_MXC_Black_F_Worn: arifle_MXC_Black_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MXC (Black/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_MXC_Black_F_Damaged: arifle_MXC_Black_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MXC (Black/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_MXC_Black_F_Broken: arifle_MXC_Black_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MXC (Black/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_MXC_khk_F: arifle_MXC_Black_F
{
	scope = 2;
	displayName = "MXC (Khaki)";
	class ExileLife
	{
		casing = "CASING_NAME";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_MXC_khk_F",
			"ExileLife_Weapon_MXC_khk_F_Used",
			"ExileLife_Weapon_MXC_khk_F_Worn",
			"ExileLife_Weapon_MXC_khk_F_Damaged",
			"ExileLife_Weapon_MXC_khk_F_Broken"
		};
	};
};
class ExileLife_Weapon_MXC_khk_F_Used: arifle_MXC_khk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MXC (Khaki/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_MXC_khk_F_Worn: arifle_MXC_khk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MXC (Khaki/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_MXC_khk_F_Damaged: arifle_MXC_khk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MXC (Khaki/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_MXC_khk_F_Broken: arifle_MXC_khk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MXC (Khaki/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_MXM_F: arifle_MX_Base_F
{
	scope = 2;
	displayName = "MXM (Tan)";
	class ExileLife
	{
		casing = "ExileLife_Item_65_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_MXM_F",
			"ExileLife_Weapon_MXM_F_Used",
			"ExileLife_Weapon_MXM_F_Worn",
			"ExileLife_Weapon_MXM_F_Damaged",
			"ExileLife_Weapon_MXM_F_Broken"
		};
	};
};
class ExileLife_Weapon_MXM_F_Used: arifle_MXM_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MXM (Tan/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_MXM_F_Worn: arifle_MXM_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MXM (Tan/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_MXM_F_Damaged: arifle_MXM_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MXM (Tan/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_MXM_F_Broken: arifle_MXM_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MXM (Tan/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_MXM_Black_F: arifle_MXM_F
{
	scope = 2;
	displayName = "MXM (Black)";
	class ExileLife
	{
		casing = "ExileLife_Item_65_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_MXM_Black_F",
			"ExileLife_Weapon_MXM_Black_F_Used",
			"ExileLife_Weapon_MXM_Black_F_Worn",
			"ExileLife_Weapon_MXM_Black_F_Damaged",
			"ExileLife_Weapon_MXM_Black_F_Broken"
		};
	};
};
class ExileLife_Weapon_MXM_Black_F_Used: arifle_MXM_Black_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MXM (Black/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_MXM_Black_F_Worn: arifle_MXM_Black_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MXM (Black/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_MXM_Black_F_Damaged: arifle_MXM_Black_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MXM (Black/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_MXM_Black_F_Broken: arifle_MXM_Black_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MXM (Black/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_MXM_khk_F: arifle_MXM_Black_F
{
	scope = 2;
	displayName = "MXM (Khaki)";
	class ExileLife
	{
		casing = "ExileLife_Item_65_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_MXM_khk_F",
			"ExileLife_Weapon_MXM_khk_F_Used",
			"ExileLife_Weapon_MXM_khk_F_Worn",
			"ExileLife_Weapon_MXM_khk_F_Damaged",
			"ExileLife_Weapon_MXM_khk_F_Broken"
		};
	};
};
class ExileLife_Weapon_MXM_khk_F_Used: arifle_MXM_khk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MXM (Khaki/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_MXM_khk_F_Worn: arifle_MXM_khk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MXM (Khaki/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_MXM_khk_F_Damaged: arifle_MXM_khk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MXM (Khaki/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_MXM_khk_F_Broken: arifle_MXM_khk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MXM (Khaki/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_MX_GL_F: arifle_MX_Base_F
{
	scope = 2;
	displayName = "MX 3GL (Tan)";
	class ExileLife
	{
		casing = "ExileLife_Item_65_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_MX_GL_F",
			"ExileLife_Weapon_MX_GL_F_Used",
			"ExileLife_Weapon_MX_GL_F_Worn",
			"ExileLife_Weapon_MX_GL_F_Damaged",
			"ExileLife_Weapon_MX_GL_F_Broken"
		};
	};
};
class ExileLife_Weapon_MX_GL_F_Used: arifle_MX_GL_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MX 3GL (Tan/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_MX_GL_F_Worn: arifle_MX_GL_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MX 3GL (Tan/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_MX_GL_F_Damaged: arifle_MX_GL_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MX 3GL (Tan/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_MX_GL_F_Broken: arifle_MX_GL_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MX 3GL (Tan/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_MX_GL_Black_F: arifle_MX_GL_F
{
	scope = 2;
	displayName = "MX 3GL (Black)";
	class ExileLife
	{
		casing = "ExileLife_Item_65_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_MX_GL_Black_F",
			"ExileLife_Weapon_MX_GL_Black_F_Used",
			"ExileLife_Weapon_MX_GL_Black_F_Worn",
			"ExileLife_Weapon_MX_GL_Black_F_Damaged",
			"ExileLife_Weapon_MX_GL_Black_F_Broken"
		};
	};
};
class ExileLife_Weapon_MX_GL_Black_F_Used: arifle_MX_GL_Black_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MX 3GL (Black/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_MX_GL_Black_F_Worn: arifle_MX_GL_Black_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MX 3GL (Black/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_MX_GL_Black_F_Damaged: arifle_MX_GL_Black_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MX 3GL (Black/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_MX_GL_Black_F_Broken: arifle_MX_GL_Black_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MX 3GL (Black/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_MX_GL_khk_F: arifle_MX_GL_Black_F
{
	scope = 2;
	displayName = "MX 3GL (Khaki)";
	class ExileLife
	{
		casing = "ExileLife_Item_65_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_MX_GL_khk_F",
			"ExileLife_Weapon_MX_GL_khk_F_Used",
			"ExileLife_Weapon_MX_GL_khk_F_Worn",
			"ExileLife_Weapon_MX_GL_khk_F_Damaged",
			"ExileLife_Weapon_MX_GL_khk_F_Broken"
		};
	};
};
class ExileLife_Weapon_MX_GL_khk_F_Used: arifle_MX_GL_khk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MX 3GL (Khaki/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_MX_GL_khk_F_Worn: arifle_MX_GL_khk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MX 3GL (Khaki/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_MX_GL_khk_F_Damaged: arifle_MX_GL_khk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MX 3GL (Khaki/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_MX_GL_khk_F_Broken: arifle_MX_GL_khk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MX 3GL (Khaki/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_MX_SW_F: arifle_MX_Base_F
{
	scope = 2;
	displayName = "MX LSW (Tan)";
	class ExileLife
	{
		casing = "ExileLife_Item_65_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_MX_SW_F",
			"ExileLife_Weapon_MX_SW_F_Used",
			"ExileLife_Weapon_MX_SW_F_Worn",
			"ExileLife_Weapon_MX_SW_F_Damaged",
			"ExileLife_Weapon_MX_SW_F_Broken"
		};
	};
	class LinkedItems 
	{
		class LinkedItemsUnder
		{
			item = "";
			slot = "";
		};
	};	
};
class ExileLife_Weapon_MX_SW_F_Used: arifle_MX_SW_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MX LSW (Tan/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_MX_SW_F_Worn: arifle_MX_SW_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MX LSW (Tan/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_MX_SW_F_Damaged: arifle_MX_SW_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MX LSW (Tan/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_MX_SW_F_Broken: arifle_MX_SW_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MX LSW (Tan/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_MX_SW_Black_F: arifle_MX_SW_F
{
	scope = 2;
	displayName = "MX LSW (Black)";
	class ExileLife
	{
		casing = "ExileLife_Item_65_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_MX_SW_Black_F",
			"ExileLife_Weapon_MX_SW_Black_F_Used",
			"ExileLife_Weapon_MX_SW_Black_F_Worn",
			"ExileLife_Weapon_MX_SW_Black_F_Damaged",
			"ExileLife_Weapon_MX_SW_Black_F_Broken"
		};
	};
	class LinkedItems 
	{
		class LinkedItemsUnder
		{
			item = "";
			slot = "";
		};
	};	
};
class ExileLife_Weapon_MX_SW_Black_F_Used: arifle_MX_SW_Black_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MX LSW (Black/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_MX_SW_Black_F_Worn: arifle_MX_SW_Black_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MX LSW (Black/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_MX_SW_Black_F_Damaged: arifle_MX_SW_Black_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MX LSW (Black/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_MX_SW_Black_F_Broken: arifle_MX_SW_Black_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MX LSW (Black/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class hgun_P07_F: Pistol_Base_F
{
	scope = 2;
	displayName = "P99";
	class ExileLife
	{
		casing = "ExileLife_Item_9mm_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"hgun_P07_F",
			"ExileLife_Weapon_P07_F_Used",
			"ExileLife_Weapon_P07_F_Worn",
			"ExileLife_Weapon_P07_F_Damaged",
			"ExileLife_Weapon_P07_F_Broken"
		};
	};
	class WeaponSlotsInfo: WeaponSlotsInfo
	{
		class MuzzleSlot: MuzzleSlot
		{
			linkProxy = "\A3\data_f\proxies\weapon_slots\MUZZLE";
			compatibleItems[] = {"muzzle_snds_L","ExileLife_Item_BottleSuppressor"};
		};
	};
};
class ExileLife_Weapon_P07_F_Used: hgun_P07_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "P99 (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_P07_F_Worn: hgun_P07_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "P99 (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_P07_F_Damaged: hgun_P07_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "P99 (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_P07_F_Broken: hgun_P07_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "P99 (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class hgun_P07_khk_F: Pistol_Base_F
{
	scope = 2;
	displayName = "P99 (Khaki)";
	class ExileLife
	{
		casing = "ExileLife_Item_9mm_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"hgun_P07_khk_F",
			"ExileLife_Weapon_P07_khk_F_Used",
			"ExileLife_Weapon_P07_khk_F_Worn",
			"ExileLife_Weapon_P07_khk_F_Damaged",
			"ExileLife_Weapon_P07_khk_F_Broken"
		};
	};
};
class ExileLife_Weapon_P07_khk_F_Used: hgun_P07_khk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "P99 (Khaki/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_P07_khk_F_Worn: hgun_P07_khk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "P99 (Khaki/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_P07_khk_F_Damaged: hgun_P07_khk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "P99 (Khaki/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_P07_khk_F_Broken: hgun_P07_khk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "P99 (Khaki/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class hgun_PDW2000_F: pdw2000_base_F
{
	scope = 2;
	displayName = "CPW";
	class ExileLife
	{
		casing = "ExileLife_Item_9mm_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"hgun_PDW2000_F",
			"ExileLife_Weapon_PDW2000_F_Used",
			"ExileLife_Weapon_PDW2000_F_Worn",
			"ExileLife_Weapon_PDW2000_F_Damaged",
			"ExileLife_Weapon_PDW2000_F_Broken"
		};
	};
};
class ExileLife_Weapon_PDW2000_F_Used: hgun_PDW2000_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "CPW (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_PDW2000_F_Worn: hgun_PDW2000_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "CPW (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_PDW2000_F_Damaged: hgun_PDW2000_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "CPW (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_PDW2000_F_Broken: hgun_PDW2000_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "CPW (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class hgun_Pistol_01_F: Pistol_Base_F
{
	scope = 2;
	displayName = "Makarov PM";
	class ExileLife
	{
		casing = "ExileLife_Item_9mm_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"hgun_Pistol_01_F",
			"ExileLife_Weapon_Pistol_01_F_Used",
			"ExileLife_Weapon_Pistol_01_F_Worn",
			"ExileLife_Weapon_Pistol_01_F_Damaged",
			"ExileLife_Weapon_Pistol_01_F_Broken"
		};
	};
};
class ExileLife_Weapon_Pistol_01_F_Used: hgun_Pistol_01_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Makarov PM (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_Pistol_01_F_Worn: hgun_Pistol_01_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Makarov PM (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_Pistol_01_F_Damaged: hgun_Pistol_01_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Makarov PM (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_Pistol_01_F_Broken: hgun_Pistol_01_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Makarov PM (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class hgun_Pistol_heavy_01_F: Pistol_Base_F
{
	scope = 2;
	displayName = "FNX-45 Tactical";
	class ExileLife
	{
		casing = "ExileLife_Item_45_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"hgun_Pistol_heavy_01_F",
			"ExileLife_Weapon_Pistol_heavy_01_F_Used",
			"ExileLife_Weapon_Pistol_heavy_01_F_Worn",
			"ExileLife_Weapon_Pistol_heavy_01_F_Damaged",
			"ExileLife_Weapon_Pistol_heavy_01_F_Broken"
		};
	};
	class WeaponSlotsInfo: WeaponSlotsInfo
	{
		class MuzzleSlot: MuzzleSlot
		{
			linkProxy = "\A3\data_f\proxies\weapon_slots\MUZZLE";
			compatibleItems[] = {"muzzle_snds_acp","ExileLife_Item_BottleSuppressor"};
		};
	};
};
class ExileLife_Weapon_Pistol_heavy_01_F_Used: hgun_Pistol_heavy_01_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "FNX-45 Tactical (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_Pistol_heavy_01_F_Worn: hgun_Pistol_heavy_01_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "FNX-45 Tactical (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_Pistol_heavy_01_F_Damaged: hgun_Pistol_heavy_01_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "FNX-45 Tactical (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_Pistol_heavy_01_F_Broken: hgun_Pistol_heavy_01_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "FNX-45 Tactical (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class hgun_Pistol_heavy_02_F: Pistol_Base_F
{
	scope = 2;
	displayName = "Chiappa Rhino 60DS";
	class ExileLife
	{
		casing = "ExileLife_Item_45_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"hgun_Pistol_heavy_02_F",
			"ExileLife_Weapon_Pistol_heavy_02_F_Used",
			"ExileLife_Weapon_Pistol_heavy_02_F_Worn",
			"ExileLife_Weapon_Pistol_heavy_02_F_Damaged",
			"ExileLife_Weapon_Pistol_heavy_02_F_Broken"
		};
	};
};
class ExileLife_Weapon_Pistol_heavy_02_F_Used: hgun_Pistol_heavy_02_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Chiappa Rhino 60DS (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_Pistol_heavy_02_F_Worn: hgun_Pistol_heavy_02_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Chiappa Rhino 60DS (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_Pistol_heavy_02_F_Damaged: hgun_Pistol_heavy_02_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Chiappa Rhino 60DS (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_Pistol_heavy_02_F_Broken: hgun_Pistol_heavy_02_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Chiappa Rhino 60DS (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class hgun_Pistol_Signal_F: Pistol_Base_F
{
	scope = 2;
	displayName = "Taurus Judge";
	class ExileLife
	{
		casing = "";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"hgun_Pistol_Signal_F",
			"ExileLife_Weapon_Pistol_Signal_F_Used",
			"ExileLife_Weapon_Pistol_Signal_F_Worn",
			"ExileLife_Weapon_Pistol_Signal_F_Damaged",
			"ExileLife_Weapon_Pistol_Signal_F_Broken"
		};
	};
};
class ExileLife_Weapon_Pistol_Signal_F_Used: hgun_Pistol_Signal_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Taurus Judge (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_Pistol_Signal_F_Worn: hgun_Pistol_Signal_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Taurus Judge (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_Pistol_Signal_F_Damaged: hgun_Pistol_Signal_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Taurus Judge (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_Pistol_Signal_F_Broken: hgun_Pistol_Signal_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Taurus Judge (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class hgun_Rook40_F: Pistol_Base_F
{
	scope = 2;
	displayName = "MP-443 Grach";
	class ExileLife
	{
		casing = "ExileLife_Item_9mm_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"hgun_Rook40_F",
			"ExileLife_Weapon_Rook40_F_Used",
			"ExileLife_Weapon_Rook40_F_Worn",
			"ExileLife_Weapon_Rook40_F_Damaged",
			"ExileLife_Weapon_Rook40_F_Broken"
		};
	};
	class WeaponSlotsInfo: WeaponSlotsInfo
	{
		class MuzzleSlot: MuzzleSlot
		{
			linkProxy = "\A3\data_f\proxies\weapon_slots\MUZZLE";
			compatibleItems[] = {"muzzle_snds_L","ExileLife_Item_BottleSuppressor"};
		};
	};
};
class ExileLife_Weapon_Rook40_F_Used: hgun_Rook40_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MP-443 Grach (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_Rook40_F_Worn: hgun_Rook40_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MP-443 Grach (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_Rook40_F_Damaged: hgun_Rook40_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MP-443 Grach (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_Rook40_F_Broken: hgun_Rook40_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MP-443 Grach (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_SDAR_F: SDAR_base_F
{
	scope = 2;
	displayName = "RFB SDAR";
	class ExileLife
	{
		casing = "ExileLife_Item_556_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_SDAR_F",
			"ExileLife_Weapon_SDAR_F_Used",
			"ExileLife_Weapon_SDAR_F_Worn",
			"ExileLife_Weapon_SDAR_F_Damaged",
			"ExileLife_Weapon_SDAR_F_Broken"
		};
	};
};
class ExileLife_Weapon_SDAR_F_Used: arifle_SDAR_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "RFB SDAR (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_SDAR_F_Worn: arifle_SDAR_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "RFB SDAR (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_SDAR_F_Damaged: arifle_SDAR_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "RFB SDAR (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_SDAR_F_Broken: arifle_SDAR_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "RFB SDAR (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class SMG_01_F: SMG_01_Base
{
	scope = 2;
	displayName = "Vermin SMG";
	class ExileLife
	{
		casing = "ExileLife_Item_45_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"SMG_01_F",
			"ExileLife_Weapon_SMG_01_F_Used",
			"ExileLife_Weapon_SMG_01_F_Worn",
			"ExileLife_Weapon_SMG_01_F_Damaged",
			"ExileLife_Weapon_SMG_01_F_Broken"
		};
	};
};
class ExileLife_Weapon_SMG_01_F_Used: SMG_01_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Vermin SMG (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_SMG_01_F_Worn: SMG_01_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Vermin SMG (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_SMG_01_F_Damaged: SMG_01_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Vermin SMG (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_SMG_01_F_Broken: SMG_01_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Vermin SMG (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class SMG_02_F: SMG_02_Base_F
{
	scope = 2;
	displayName = "Scorpion Evo 3 A1";
	class ExileLife
	{
		casing = "ExileLife_Item_9mm_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"SMG_02_F",
			"ExileLife_Weapon_SMG_02_F_Used",
			"ExileLife_Weapon_SMG_02_F_Worn",
			"ExileLife_Weapon_SMG_02_F_Damaged",
			"ExileLife_Weapon_SMG_02_F_Broken"
		};
	};
};
class ExileLife_Weapon_SMG_02_F_Used: SMG_02_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Scorpion Evo 3 A1 (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_SMG_02_F_Worn: SMG_02_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Scorpion Evo 3 A1 (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_SMG_02_F_Damaged: SMG_02_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Scorpion Evo 3 A1 (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_SMG_02_F_Broken: SMG_02_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Scorpion Evo 3 A1 (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class SMG_05_F: SMG_05_Base_F
{
	scope = 2;
	displayName = "MP5K";
	class ExileLife
	{
		casing = "ExileLife_Item_9mm_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"SMG_05_F",
			"ExileLife_Weapon_SMG_05_F_Used",
			"ExileLife_Weapon_SMG_05_F_Worn",
			"ExileLife_Weapon_SMG_05_F_Damaged",
			"ExileLife_Weapon_SMG_05_F_Broken"
		};
	};
};
class ExileLife_Weapon_SMG_05_F_Used: SMG_05_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MP5K (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_SMG_05_F_Worn: SMG_05_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MP5K (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_SMG_05_F_Damaged: SMG_05_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MP5K (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_SMG_05_F_Broken: SMG_05_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "MP5K (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_SPAR_01_blk_F: arifle_SPAR_01_base_F
{
	scope = 2;
	displayName = "HK416A5 11 in. (Black)";
	class ExileLife
	{
		casing = "ExileLife_Item_556_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_SPAR_01_blk_F",
			"ExileLife_Weapon_SPAR_01_blk_F_Used",
			"ExileLife_Weapon_SPAR_01_blk_F_Worn",
			"ExileLife_Weapon_SPAR_01_blk_F_Damaged",
			"ExileLife_Weapon_SPAR_01_blk_F_Broken"
		};
	};
};
class ExileLife_Weapon_SPAR_01_blk_F_Used: arifle_SPAR_01_blk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK416A5 11 in. (Black/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_SPAR_01_blk_F_Worn: arifle_SPAR_01_blk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK416A5 11 in. (Black/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_SPAR_01_blk_F_Damaged: arifle_SPAR_01_blk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK416A5 11 in. (Black/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_SPAR_01_blk_F_Broken: arifle_SPAR_01_blk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK416A5 11 in. (Black/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_SPAR_01_khk_F: arifle_SPAR_01_base_F
{
	scope = 2;
	displayName = "HK416A5 11 in. (Khaki)";
	class ExileLife
	{
		casing = "ExileLife_Item_556_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_SPAR_01_khk_F",
			"ExileLife_Weapon_SPAR_01_khk_F_Used",
			"ExileLife_Weapon_SPAR_01_khk_F_Worn",
			"ExileLife_Weapon_SPAR_01_khk_F_Damaged",
			"ExileLife_Weapon_SPAR_01_khk_F_Broken"
		};
	};
};
class ExileLife_Weapon_SPAR_01_khk_F_Used: arifle_SPAR_01_khk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK416A5 11 in. (Khaki/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_SPAR_01_khk_F_Worn: arifle_SPAR_01_khk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK416A5 11 in. (Khaki/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_SPAR_01_khk_F_Damaged: arifle_SPAR_01_khk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK416A5 11 in. (Khaki/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_SPAR_01_khk_F_Broken: arifle_SPAR_01_khk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK416A5 11 in. (Khaki/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_SPAR_01_snd_F: arifle_SPAR_01_base_F
{
	scope = 2;
	displayName = "HK416A5 11 in. (Sand)";
	class ExileLife
	{
		casing = "ExileLife_Item_556_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_SPAR_01_snd_F",
			"ExileLife_Weapon_SPAR_01_snd_F_Used",
			"ExileLife_Weapon_SPAR_01_snd_F_Worn",
			"ExileLife_Weapon_SPAR_01_snd_F_Damaged",
			"ExileLife_Weapon_SPAR_01_snd_F_Broken"
		};
	};
};
class ExileLife_Weapon_SPAR_01_snd_F_Used: arifle_SPAR_01_snd_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK416A5 11 in. (Sand/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_SPAR_01_snd_F_Worn: arifle_SPAR_01_snd_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK416A5 11 in. (Sand/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_SPAR_01_snd_F_Damaged: arifle_SPAR_01_snd_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK416A5 11 in. (Sand/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_SPAR_01_snd_F_Broken: arifle_SPAR_01_snd_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK416A5 11 in. (Sand/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_SPAR_01_GL_blk_F: arifle_SPAR_01_GL_base_F
{
	scope = 2;
	displayName = "HK416A5 11 in. GL (Black)";
	class ExileLife
	{
		casing = "ExileLife_Item_556_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_SPAR_01_GL_blk_F",
			"ExileLife_Weapon_SPAR_01_GL_blk_F_Used",
			"ExileLife_Weapon_SPAR_01_GL_blk_F_Worn",
			"ExileLife_Weapon_SPAR_01_GL_blk_F_Damaged",
			"ExileLife_Weapon_SPAR_01_GL_blk_F_Broken"
		};
	};
};
class ExileLife_Weapon_SPAR_01_GL_blk_F_Used: arifle_SPAR_01_GL_blk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK416A5 11 in. GL (Black/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_SPAR_01_GL_blk_F_Worn: arifle_SPAR_01_GL_blk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK416A5 11 in. GL (Black/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_SPAR_01_GL_blk_F_Damaged: arifle_SPAR_01_GL_blk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK416A5 11 in. GL (Black/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_SPAR_01_GL_blk_F_Broken: arifle_SPAR_01_GL_blk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK416A5 11 in. GL (Black/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_SPAR_01_GL_khk_F: arifle_SPAR_01_GL_base_F
{
	scope = 2;
	displayName = "HK416A5 11 in. GL (Khaki)";
	class ExileLife
	{
		casing = "ExileLife_Item_556_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_SPAR_01_GL_khk_F",
			"ExileLife_Weapon_SPAR_01_GL_khk_F_Used",
			"ExileLife_Weapon_SPAR_01_GL_khk_F_Worn",
			"ExileLife_Weapon_SPAR_01_GL_khk_F_Damaged",
			"ExileLife_Weapon_SPAR_01_GL_khk_F_Broken"
		};
	};
};
class ExileLife_Weapon_SPAR_01_GL_khk_F_Used: arifle_SPAR_01_GL_khk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK416A5 11 in. GL (Khaki/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_SPAR_01_GL_khk_F_Worn: arifle_SPAR_01_GL_khk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK416A5 11 in. GL (Khaki/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_SPAR_01_GL_khk_F_Damaged: arifle_SPAR_01_GL_khk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK416A5 11 in. GL (Khaki/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_SPAR_01_GL_khk_F_Broken: arifle_SPAR_01_GL_khk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK416A5 11 in. GL (Khaki/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_SPAR_01_GL_snd_F: arifle_SPAR_01_GL_base_F
{
	scope = 2;
	displayName = "HK416A5 11 in. GL (Sand)";
	class ExileLife
	{
		casing = "ExileLife_Item_556_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_SPAR_01_GL_snd_F",
			"ExileLife_Weapon_SPAR_01_GL_snd_F_Used",
			"ExileLife_Weapon_SPAR_01_GL_snd_F_Worn",
			"ExileLife_Weapon_SPAR_01_GL_snd_F_Damaged",
			"ExileLife_Weapon_SPAR_01_GL_snd_F_Broken"
		};
	};
};
class ExileLife_Weapon_SPAR_01_GL_snd_F_Used: arifle_SPAR_01_GL_snd_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK416A5 11 in. GL (Sand/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_SPAR_01_GL_snd_F_Worn: arifle_SPAR_01_GL_snd_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK416A5 11 in. GL (Sand/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_SPAR_01_GL_snd_F_Damaged: arifle_SPAR_01_GL_snd_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK416A5 11 in. GL (Sand/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_SPAR_01_GL_snd_F_Broken: arifle_SPAR_01_GL_snd_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK416A5 11 in. GL (Sand/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_SPAR_02_blk_F: arifle_SPAR_02_base_F
{
	scope = 2;
	displayName = "HK416A5 14.5 in. (Black)";
	class ExileLife
	{
		casing = "ExileLife_Item_556_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_SPAR_02_blk_F",
			"ExileLife_Weapon_SPAR_02_blk_F_Used",
			"ExileLife_Weapon_SPAR_02_blk_F_Worn",
			"ExileLife_Weapon_SPAR_02_blk_F_Damaged",
			"ExileLife_Weapon_SPAR_02_blk_F_Broken"
		};
	};
	class LinkedItems 
	{
		class LinkedItemsUnder
		{
			item = "";
			slot = "";
		};
	};	
};
class ExileLife_Weapon_SPAR_02_blk_F_Used: arifle_SPAR_02_blk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK416A5 14.5 in. (Black/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_SPAR_02_blk_F_Worn: arifle_SPAR_02_blk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK416A5 14.5 in. (Black/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_SPAR_02_blk_F_Damaged: arifle_SPAR_02_blk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK416A5 14.5 in. (Black/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_SPAR_02_blk_F_Broken: arifle_SPAR_02_blk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK416A5 14.5 in. (Black/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_SPAR_02_khk_F: arifle_SPAR_02_base_F
{
	scope = 2;
	displayName = "HK416A5 14.5 in. (Khaki)";
	class ExileLife
	{
		casing = "ExileLife_Item_556_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_SPAR_02_khk_F",
			"ExileLife_Weapon_SPAR_02_khk_F_Used",
			"ExileLife_Weapon_SPAR_02_khk_F_Worn",
			"ExileLife_Weapon_SPAR_02_khk_F_Damaged",
			"ExileLife_Weapon_SPAR_02_khk_F_Broken"
		};
	};
	class LinkedItems 
	{
		class LinkedItemsUnder
		{
			item = "";
			slot = "";
		};
	};	
};
class ExileLife_Weapon_SPAR_02_khk_F_Used: arifle_SPAR_02_khk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK416A5 14.5 in. (Khaki/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_SPAR_02_khk_F_Worn: arifle_SPAR_02_khk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK416A5 14.5 in. (Khaki/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_SPAR_02_khk_F_Damaged: arifle_SPAR_02_khk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK416A5 14.5 in. (Khaki/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_SPAR_02_khk_F_Broken: arifle_SPAR_02_khk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK416A5 14.5 in. (Khaki/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_SPAR_02_snd_F: arifle_SPAR_02_base_F
{
	scope = 2;
	displayName = "HK416A5 14.5 in. (Sand)";
	class ExileLife
	{
		casing = "ExileLife_Item_556_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_SPAR_02_snd_F",
			"ExileLife_Weapon_SPAR_02_snd_F_Used",
			"ExileLife_Weapon_SPAR_02_snd_F_Worn",
			"ExileLife_Weapon_SPAR_02_snd_F_Damaged",
			"ExileLife_Weapon_SPAR_02_snd_F_Broken"
		};
	};
	class LinkedItems 
	{
		class LinkedItemsUnder
		{
			item = "";
			slot = "";
		};
	};	
};
class ExileLife_Weapon_SPAR_02_snd_F_Used: arifle_SPAR_02_snd_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK416A5 14.5 in. (Sand/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_SPAR_02_snd_F_Worn: arifle_SPAR_02_snd_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK416A5 14.5 in. (Sand/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_SPAR_02_snd_F_Damaged: arifle_SPAR_02_snd_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK416A5 14.5 in. (Sand/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_SPAR_02_snd_F_Broken: arifle_SPAR_02_snd_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK416A5 14.5 in. (Sand/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_SPAR_03_blk_F: arifle_SPAR_03_base_F
{
	scope = 2;
	displayName = "HK417A2 20 in. (Black)";
	class ExileLife
	{
		casing = "ExileLife_Item_762_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_SPAR_03_blk_F",
			"ExileLife_Weapon_SPAR_03_blk_F_Used",
			"ExileLife_Weapon_SPAR_03_blk_F_Worn",
			"ExileLife_Weapon_SPAR_03_blk_F_Damaged",
			"ExileLife_Weapon_SPAR_03_blk_F_Broken"
		};
	};
};
class ExileLife_Weapon_SPAR_03_blk_F_Used: arifle_SPAR_03_blk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK417A2 20 in. (Black/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_SPAR_03_blk_F_Worn: arifle_SPAR_03_blk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK417A2 20 in. (Black/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_SPAR_03_blk_F_Damaged: arifle_SPAR_03_blk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK417A2 20 in. (Black/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_SPAR_03_blk_F_Broken: arifle_SPAR_03_blk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK417A2 20 in. (Black/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_SPAR_03_khk_F: arifle_SPAR_03_base_F
{
	scope = 2;
	displayName = "HK417A2 20 in. (Khaki)";
	class ExileLife
	{
		casing = "ExileLife_Item_762_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_SPAR_03_khk_F",
			"ExileLife_Weapon_SPAR_03_khk_F_Used",
			"ExileLife_Weapon_SPAR_03_khk_F_Worn",
			"ExileLife_Weapon_SPAR_03_khk_F_Damaged",
			"ExileLife_Weapon_SPAR_03_khk_F_Broken"
		};
	};
};
class ExileLife_Weapon_SPAR_03_khk_F_Used: arifle_SPAR_03_khk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK417A2 20 in. (Khaki/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_SPAR_03_khk_F_Worn: arifle_SPAR_03_khk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK417A2 20 in. (Khaki/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_SPAR_03_khk_F_Damaged: arifle_SPAR_03_khk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK417A2 20 in. (Khaki/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_SPAR_03_khk_F_Broken: arifle_SPAR_03_khk_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK417A2 20 in. (Khaki/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_SPAR_03_snd_F: arifle_SPAR_03_base_F
{
	scope = 2;
	displayName = "HK417A2 20 in. (Sand)";
	class ExileLife
	{
		casing = "ExileLife_Item_762_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_SPAR_03_snd_F",
			"ExileLife_Weapon_SPAR_03_snd_F_Used",
			"ExileLife_Weapon_SPAR_03_snd_F_Worn",
			"ExileLife_Weapon_SPAR_03_snd_F_Damaged",
			"ExileLife_Weapon_SPAR_03_snd_F_Broken"
		};
	};
};
class ExileLife_Weapon_SPAR_03_snd_F_Used: arifle_SPAR_03_snd_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK417A2 20 in. (Sand/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_SPAR_03_snd_F_Worn: arifle_SPAR_03_snd_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK417A2 20 in. (Sand/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_SPAR_03_snd_F_Damaged: arifle_SPAR_03_snd_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK417A2 20 in. (Sand/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_SPAR_03_snd_F_Broken: arifle_SPAR_03_snd_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "HK417A2 20 in. (Sand/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_TRG20_F: Tavor_base_F
{
	scope = 2;
	displayName = "CTAR-21";
	class ExileLife
	{
		casing = "ExileLife_Item_556_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_TRG20_F",
			"ExileLife_Weapon_TRG20_F_Used",
			"ExileLife_Weapon_TRG20_F_Worn",
			"ExileLife_Weapon_TRG20_F_Damaged",
			"ExileLife_Weapon_TRG20_F_Broken"
		};
	};
};
class ExileLife_Weapon_TRG20_F_Used: arifle_TRG20_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "CTAR-21 (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_TRG20_F_Worn: arifle_TRG20_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "CTAR-21 (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_TRG20_F_Damaged: arifle_TRG20_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "CTAR-21 (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_TRG20_F_Broken: arifle_TRG20_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "CTAR-21 (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_TRG21_F: Tavor_base_F
{
	scope = 2;
	displayName = "TAR-21";
	class ExileLife
	{
		casing = "ExileLife_Item_556_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_TRG21_F",
			"ExileLife_Weapon_TRG21_F_Used",
			"ExileLife_Weapon_TRG21_F_Worn",
			"ExileLife_Weapon_TRG21_F_Damaged",
			"ExileLife_Weapon_TRG21_F_Broken"
		};
	};
};
class ExileLife_Weapon_TRG21_F_Used: arifle_TRG21_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "TAR-21 (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_TRG21_F_Worn: arifle_TRG21_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "TAR-21 (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_TRG21_F_Damaged: arifle_TRG21_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "TAR-21 (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_TRG21_F_Broken: arifle_TRG21_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "TAR-21 (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class arifle_TRG21_GL_F: arifle_TRG21_F
{
	scope = 2;
	displayName = "TAR-21 EGLM";
	class ExileLife
	{
		casing = "ExileLife_Item_556_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"arifle_TRG21_GL_F",
			"ExileLife_Weapon_TRG21_GL_F_Used",
			"ExileLife_Weapon_TRG21_GL_F_Worn",
			"ExileLife_Weapon_TRG21_GL_F_Damaged",
			"ExileLife_Weapon_TRG21_GL_F_Broken"
		};
	};
};
class ExileLife_Weapon_TRG21_GL_F_Used: arifle_TRG21_GL_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "TAR-21 EGLM (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_TRG21_GL_F_Worn: arifle_TRG21_GL_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "TAR-21 EGLM (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_TRG21_GL_F_Damaged: arifle_TRG21_GL_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "TAR-21 EGLM (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_TRG21_GL_F_Broken: arifle_TRG21_GL_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "TAR-21 EGLM (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class LMG_Zafir_F: Rifle_Long_Base_F
{
	scope = 2;
	displayName = "Negev NG7";
	class ExileLife
	{
		casing = "ExileLife_Item_762_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"LMG_Zafir_F",
			"ExileLife_Weapon_LMG_Zafir_F_Used",
			"ExileLife_Weapon_LMG_Zafir_F_Worn",
			"ExileLife_Weapon_LMG_Zafir_F_Damaged",
			"ExileLife_Weapon_LMG_Zafir_F_Broken"
		};
	};
};
class ExileLife_Weapon_LMG_Zafir_F_Used: LMG_Zafir_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Negev NG7 (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_LMG_Zafir_F_Worn: LMG_Zafir_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Negev NG7 (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_LMG_Zafir_F_Damaged: LMG_Zafir_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Negev NG7 (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_LMG_Zafir_F_Broken: LMG_Zafir_F
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Negev NG7 (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class Exile_Weapon_AK107: arifle_AK107
{
	scope = 2;
	displayName = "AK107";
	class ExileLife
	{
		casing = "ExileLife_Item_545_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"Exile_Weapon_AK107",
			"ExileLife_Weapon_AK107_Used",
			"ExileLife_Weapon_AK107_Worn",
			"ExileLife_Weapon_AK107_Damaged",
			"ExileLife_Weapon_AK107_Broken"
		};
	};
	reloadAction = "HLC_GestureReloadAK";
	reloadMagazineSound[] = {"hlc_wp_ak\snd\soundshaders\aek\aek_reload",1,1,20};
};
class ExileLife_Weapon_AK107_Used: Exile_Weapon_AK107
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AK107 (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_AK107_Worn: Exile_Weapon_AK107
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AK107 (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_AK107_Damaged: Exile_Weapon_AK107
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AK107 (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_AK107_Broken: Exile_Weapon_AK107
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AK107 (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class Exile_Weapon_AK107_GL: arifle_AK107_GL
{
	scope = 2;
	displayName = "AK107 GL";
	class ExileLife
	{
		casing = "ExileLife_Item_545_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"Exile_Weapon_AK107_GL",
			"ExileLife_Weapon_AK107_GL_Used",
			"ExileLife_Weapon_AK107_GL_Worn",
			"ExileLife_Weapon_AK107_GL_Damaged",
			"ExileLife_Weapon_AK107_GL_Broken"
		};
	};
	reloadAction = "HLC_GestureReloadAK";
	reloadMagazineSound[] = {"hlc_wp_ak\snd\soundshaders\aek\aek_reload",1,1,20};
};
class ExileLife_Weapon_AK107_GL_Used: Exile_Weapon_AK107_GL
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AK107 GL (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_AK107_GL_Worn: Exile_Weapon_AK107_GL
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AK107 GL (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_AK107_GL_Damaged: Exile_Weapon_AK107_GL
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AK107 GL (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_AK107_GL_Broken: Exile_Weapon_AK107_GL
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AK107 GL (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class Exile_Weapon_AK47: arifle_AK47
{
	scope = 2;
	displayName = "AK47";
	class ExileLife
	{
		casing = "ExileLife_Item_762_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"Exile_Weapon_AK47",
			"ExileLife_Weapon_AK47_Used",
			"ExileLife_Weapon_AK47_Worn",
			"ExileLife_Weapon_AK47_Damaged",
			"ExileLife_Weapon_AK47_Broken"
		};
	};
	reloadAction = "HLC_GestureReloadAK";
	reloadMagazineSound[] = {"\hlc_wp_ak\snd\soundshaders\ak74\ak74m_reload",0.8,1,20};
};
class ExileLife_Weapon_AK47_Used: Exile_Weapon_AK47
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AK47 (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_AK47_Worn: Exile_Weapon_AK47
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AK47 (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_AK47_Damaged: Exile_Weapon_AK47
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AK47 (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_AK47_Broken: Exile_Weapon_AK47
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AK47 (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class Exile_Weapon_AK74: arifle_AK74
{
	scope = 2;
	displayName = "AK74";
	class ExileLife
	{
		casing = "ExileLife_Item_545_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"Exile_Weapon_AK74",
			"ExileLife_Weapon_AK74_Used",
			"ExileLife_Weapon_AK74_Worn",
			"ExileLife_Weapon_AK74_Damaged",
			"ExileLife_Weapon_AK74_Broken"
		};
	};
	reloadAction = "HLC_GestureReloadAK";
	reloadMagazineSound[] = {"\hlc_wp_ak\snd\soundshaders\ak74\ak74m_reload",0.8,1,20};	
};
class ExileLife_Weapon_AK74_Used: Exile_Weapon_AK74
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AK74 (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_AK74_Worn: Exile_Weapon_AK74
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AK74 (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_AK74_Damaged: Exile_Weapon_AK74
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AK74 (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_AK74_Broken: Exile_Weapon_AK74
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AK74 (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class Exile_Weapon_AK74_GL: arifle_AK74_GL
{
	scope = 2;
	displayName = "AK74 GL";
	class ExileLife
	{
		casing = "ExileLife_Item_545_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"Exile_Weapon_AK74_GL",
			"ExileLife_Weapon_AK74_GL_Used",
			"ExileLife_Weapon_AK74_GL_Worn",
			"ExileLife_Weapon_AK74_GL_Damaged",
			"ExileLife_Weapon_AK74_GL_Broken"
		};
	};
	reloadAction = "HLC_GestureReloadAK";
	reloadMagazineSound[] = {"\hlc_wp_ak\snd\soundshaders\ak74\ak74m_reload",0.8,1,20};	
};
class ExileLife_Weapon_AK74_GL_Used: Exile_Weapon_AK74_GL
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AK74 GL (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_AK74_GL_Worn: Exile_Weapon_AK74_GL
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AK74 GL (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_AK74_GL_Damaged: Exile_Weapon_AK74_GL
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AK74 GL (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_AK74_GL_Broken: Exile_Weapon_AK74_GL
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AK74 GL (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class Exile_Weapon_AKM: arifle_AKM
{
	scope = 2;
	displayName = "AKM";
	class ExileLife
	{
		casing = "ExileLife_Item_762_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"Exile_Weapon_AKM",
			"ExileLife_Weapon_AKM_Used",
			"ExileLife_Weapon_AKM_Worn",
			"ExileLife_Weapon_AKM_Damaged",
			"ExileLife_Weapon_AKM_Broken"
		};
	};
	reloadAction = "HLC_GestureReloadAK";
	reloadMagazineSound[] = {"\hlc_wp_ak\snd\soundshaders\ak74\ak74m_reload",0.8,1,20};	
};
class ExileLife_Weapon_AKM_Used: Exile_Weapon_AKM
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AKM (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_AKM_Worn: Exile_Weapon_AKM
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AKM (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_AKM_Damaged: Exile_Weapon_AKM
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AKM (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_AKM_Broken: Exile_Weapon_AKM
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AKM (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class Exile_Weapon_AKS: arifle_AKS
{
	scope = 2;
	displayName = "AKS";
	class ExileLife
	{
		casing = "ExileLife_Item_762_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"Exile_Weapon_AKS",
			"ExileLife_Weapon_AKS_Used",
			"ExileLife_Weapon_AKS_Worn",
			"ExileLife_Weapon_AKS_Damaged",
			"ExileLife_Weapon_AKS_Broken"
		};
	};
	reloadAction = "HLC_GestureReloadAK";
	reloadMagazineSound[] = {"\hlc_wp_ak\snd\soundshaders\ak74\ak74m_reload",0.8,1,20};
};
class ExileLife_Weapon_AKS_Used: Exile_Weapon_AKS
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AKS (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_AKS_Worn: Exile_Weapon_AKS
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AKS (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_AKS_Damaged: Exile_Weapon_AKS
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AKS (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_AKS_Broken: Exile_Weapon_AKS
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AKS (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class Exile_Weapon_AKS_Gold: arifle_AKS_Gold
{
	scope = 2;
	displayName = "AKS (Gold)";
	class ExileLife
	{
		casing = "ExileLife_Item_762_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"Exile_Weapon_AKS_Gold",
			"ExileLife_Weapon_AKS_Gold_Used",
			"ExileLife_Weapon_AKS_Gold_Worn",
			"ExileLife_Weapon_AKS_Gold_Damaged",
			"ExileLife_Weapon_AKS_Gold_Broken"
		};
	};
	reloadAction = "HLC_GestureReloadAK";
	reloadMagazineSound[] = {"\hlc_wp_ak\snd\soundshaders\ak74\ak74m_reload",0.8,1,20};	
};
class ExileLife_Weapon_AKS_Gold_Used: Exile_Weapon_AKS_Gold
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AKS (Gold/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_AKS_Gold_Worn: Exile_Weapon_AKS_Gold
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AKS (Gold/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_AKS_Gold_Damaged: Exile_Weapon_AKS_Gold
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AKS (Gold/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_AKS_Gold_Broken: Exile_Weapon_AKS_Gold
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "AKS (Gold/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class Exile_Weapon_Colt1911: Colt1911
{
	scope = 2;
	displayName = "Colt M1911";
	class ExileLife
	{
		casing = "ExileLife_Item_45_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"Exile_Weapon_Colt1911",
			"ExileLife_Weapon_Colt1911_Used",
			"ExileLife_Weapon_Colt1911_Worn",
			"ExileLife_Weapon_Colt1911_Damaged",
			"ExileLife_Weapon_Colt1911_Broken"
		};
	};
};
class ExileLife_Weapon_Colt1911_Used: Exile_Weapon_Colt1911
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Colt M1911 (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_Colt1911_Worn: Exile_Weapon_Colt1911
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Colt M1911 (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_Colt1911_Damaged: Exile_Weapon_Colt1911
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Colt M1911 (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_Colt1911_Broken: Exile_Weapon_Colt1911
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Colt M1911 (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class Exile_Weapon_CZ550: srifle_CZ550_base
{
	scope = 2;
	displayName = "CZ550";
	class ExileLife
	{
		casing = "ExileLife_Item_22_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"Exile_Weapon_CZ550",
			"ExileLife_Weapon_CZ550_Used",
			"ExileLife_Weapon_CZ550_Worn",
			"ExileLife_Weapon_CZ550_Damaged",
			"ExileLife_Weapon_CZ550_Broken"
		};
	};
	class EventHandler
	{
		class Fired
		{
			boltSound[] = {"hlc_wp_springfield\snd\1903A1_rechamber.wss",1,1,15};
			boltAnim = "HLC_GestureRechamberM1903A1_UN";
		};
	};
	reloadaction = "HLC_GestureReloadM1903A1_UN";
	drysound[] = {"\hlc_wp_springfield\snd\1903A1_dryfire",1,1,10};
	reloadmagazinesound[] = {"\hlc_wp_springfield\snd\1903A1Unertl_reload",0.8,1,20};
};
class ExileLife_Weapon_CZ550_Used: Exile_Weapon_CZ550
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "CZ550 (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_CZ550_Worn: Exile_Weapon_CZ550
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "CZ550 (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_CZ550_Damaged: Exile_Weapon_CZ550
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "CZ550 (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_CZ550_Broken: Exile_Weapon_CZ550
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "CZ550 (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class Exile_Weapon_DMR: srifle_DMR
{
	scope = 2;
	displayName = "DMR";
	class ExileLife
	{
		casing = "ExileLife_Item_762_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"Exile_Weapon_DMR",
			"ExileLife_Weapon_DMR_Used",
			"ExileLife_Weapon_DMR_Worn",
			"ExileLife_Weapon_DMR_Damaged",
			"ExileLife_Weapon_DMR_Broken"
		};
	};
};
class ExileLife_Weapon_DMR_Used: Exile_Weapon_DMR
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "DMR (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_DMR_Worn: Exile_Weapon_DMR
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "DMR (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_DMR_Damaged: Exile_Weapon_DMR
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "DMR (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_DMR_Broken: Exile_Weapon_DMR
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "DMR (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class Exile_Weapon_ksvk: ksvk
{
	scope = 2;
	displayName = "KSVK";
	class ExileLife
	{
		casing = "ExileLife_Item_127_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"Exile_Weapon_ksvk",
			"ExileLife_Weapon_ksvk_Used",
			"ExileLife_Weapon_ksvk_Worn",
			"ExileLife_Weapon_ksvk_Damaged",
			"ExileLife_Weapon_ksvk_Broken"
		};
	};
};
class ExileLife_Weapon_ksvk_Used: Exile_Weapon_ksvk
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "KSVK (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_ksvk_Worn: Exile_Weapon_ksvk
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "KSVK (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_ksvk_Damaged: Exile_Weapon_ksvk
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "KSVK (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_ksvk_Broken: Exile_Weapon_ksvk
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "KSVK (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class Exile_Weapon_LeeEnfield: srifle_LeeEnfield
{
	scope = 2;
	displayName = "Lee Enfield";
	class ExileLife
	{
		casing = "ExileLife_Item_303_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"Exile_Weapon_LeeEnfield",
			"ExileLife_Weapon_LeeEnfield_Used",
			"ExileLife_Weapon_LeeEnfield_Worn",
			"ExileLife_Weapon_LeeEnfield_Damaged",
			"ExileLife_Weapon_LeeEnfield_Broken"
		};
	};
	class EventHandler
	{
		class Fired
		{
			boltSound[] = {"hlc_wp_springfield\snd\1903A1_rechamber.wss",1,1,15};
			boltAnim = "HLC_GestureRechamberM1903A1_UN";
		};
	};
	reloadAction = "HLC_GestureReloadM1903A1";
	drysound[] = {"\hlc_wp_springfield\snd\1903A1_dryfire",1,1,10};
	reloadmagazinesound[] = {"\hlc_wp_springfield\snd\1903A1_reload_noscope",0.8,1,20};
};
class ExileLife_Weapon_LeeEnfield_Used: Exile_Weapon_LeeEnfield
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Lee Enfield (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_LeeEnfield_Worn: Exile_Weapon_LeeEnfield
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Lee Enfield (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_LeeEnfield_Damaged: Exile_Weapon_LeeEnfield
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Lee Enfield (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_LeeEnfield_Broken: Exile_Weapon_LeeEnfield
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Lee Enfield (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class Exile_Weapon_M1014: M1014
{
	scope = 2;
	displayName = "M1014";
	class ExileLife
	{
		casing = "ExileLife_Item_12Gauge_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"Exile_Weapon_M1014",
			"ExileLife_Weapon_M1014_Used",
			"ExileLife_Weapon_M1014_Worn",
			"ExileLife_Weapon_M1014_Damaged",
			"ExileLife_Weapon_M1014_Broken"
		};
	};
};
class ExileLife_Weapon_M1014_Used: Exile_Weapon_M1014
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M1014 (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_M1014_Worn: Exile_Weapon_M1014
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M1014 (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_M1014_Damaged: Exile_Weapon_M1014
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M1014 (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_M1014_Broken: Exile_Weapon_M1014
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M1014 (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class Exile_Weapon_m107: exile_weapons_m107
{
	scope = 2;
	displayName = "M107";
	class ExileLife
	{
		casing = "ExileLife_Item_127_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"Exile_Weapon_m107",
			"ExileLife_Weapon_m107_Used",
			"ExileLife_Weapon_m107_Worn",
			"ExileLife_Weapon_m107_Damaged",
			"ExileLife_Weapon_m107_Broken"
		};
	};
};
class ExileLife_Weapon_m107_Used: Exile_Weapon_m107
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M107 (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_m107_Worn: Exile_Weapon_m107
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M107 (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_m107_Damaged: Exile_Weapon_m107
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M107 (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_m107_Broken: Exile_Weapon_m107
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M107 (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class Exile_Weapon_M16A2: exile_arifle_M16A2
{
	scope = 2;
	displayName = "M16A2";
	class ExileLife
	{
		casing = "ExileLife_Item_556_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"Exile_Weapon_M16A2",
			"ExileLife_Weapon_M16A2_Used",
			"ExileLife_Weapon_M16A2_Worn",
			"ExileLife_Weapon_M16A2_Damaged",
			"ExileLife_Weapon_M16A2_Broken"
		};
	};
};
class ExileLife_Weapon_M16A2_Used: Exile_Weapon_M16A2
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M16A2 (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_M16A2_Worn: Exile_Weapon_M16A2
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M16A2 (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_M16A2_Damaged: Exile_Weapon_M16A2
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M16A2 (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_M16A2_Broken: Exile_Weapon_M16A2
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M16A2 (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class Exile_Weapon_M16A4: exile_arifle_M16A4
{
	scope = 2;
	displayName = "M16A4";
	class ExileLife
	{
		casing = "ExileLife_Item_556_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"Exile_Weapon_M16A4",
			"ExileLife_Weapon_M16A4_Used",
			"ExileLife_Weapon_M16A4_Worn",
			"ExileLife_Weapon_M16A4_Damaged",
			"ExileLife_Weapon_M16A4_Broken"
		};
	};
};
class ExileLife_Weapon_M16A4_Used: Exile_Weapon_M16A4
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M16A4 (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_M16A4_Worn: Exile_Weapon_M16A4
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M16A4 (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_M16A4_Damaged: Exile_Weapon_M16A4
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M16A4 (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_M16A4_Broken: Exile_Weapon_M16A4
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M16A4 (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class Exile_Weapon_M4: exile_arifle_M4
{
	scope = 2;
	displayName = "M4";
	class ExileLife
	{
		casing = "ExileLife_Item_556_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"Exile_Weapon_M4",
			"ExileLife_Weapon_M4_Used",
			"ExileLife_Weapon_M4_Worn",
			"ExileLife_Weapon_M4_Damaged",
			"ExileLife_Weapon_M4_Broken"
		};
	};
};
class ExileLife_Weapon_M4_Used: Exile_Weapon_M4
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M4 (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_M4_Worn: Exile_Weapon_M4
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M4 (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_M4_Damaged: Exile_Weapon_M4
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M4 (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_M4_Broken: Exile_Weapon_M4
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "M4 (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class Exile_Weapon_Makarov: Makarov
{
	scope = 2;
	displayName = "Makarov";
	class ExileLife
	{
		casing = "ExileLife_Item_9mm_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"Exile_Weapon_Makarov",
			"ExileLife_Weapon_Makarov_Used",
			"ExileLife_Weapon_Makarov_Worn",
			"ExileLife_Weapon_Makarov_Damaged",
			"ExileLife_Weapon_Makarov_Broken"
		};
	};
};
class ExileLife_Weapon_Makarov_Used: Exile_Weapon_Makarov
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Makarov (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_Makarov_Worn: Exile_Weapon_Makarov
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Makarov (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_Makarov_Damaged: Exile_Weapon_Makarov
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Makarov (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_Makarov_Broken: Exile_Weapon_Makarov
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Makarov (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class Exile_Weapon_PK: PKP
{
	scope = 2;
	displayName = "PK";
	class ExileLife
	{
		casing = "ExileLife_Item_762_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"Exile_Weapon_PK",
			"ExileLife_Weapon_PK_Used",
			"ExileLife_Weapon_PK_Worn",
			"ExileLife_Weapon_PK_Damaged",
			"ExileLife_Weapon_PK_Broken"
		};
	};
};
class ExileLife_Weapon_PK_Used: Exile_Weapon_PK
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "PK (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_PK_Worn: Exile_Weapon_PK
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "PK (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_PK_Damaged: Exile_Weapon_PK
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "PK (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_PK_Broken: Exile_Weapon_PK
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "PK (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class Exile_Weapon_PKP: Pecheneg
{
	scope = 2;
	displayName = "PKP 'Pecheneg'";
	class ExileLife
	{
		casing = "ExileLife_Item_762_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"Exile_Weapon_PKP",
			"ExileLife_Weapon_PKP_Used",
			"ExileLife_Weapon_PKP_Worn",
			"ExileLife_Weapon_PKP_Damaged",
			"ExileLife_Weapon_PKP_Broken"
		};
	};
};
class ExileLife_Weapon_PKP_Used: Exile_Weapon_PKP
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "PKP 'Pecheneg' (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_PKP_Worn: Exile_Weapon_PKP
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "PKP 'Pecheneg' (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_PKP_Damaged: Exile_Weapon_PKP
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "PKP 'Pecheneg' (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_PKP_Broken: Exile_Weapon_PKP
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "PKP 'Pecheneg' (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class Exile_Weapon_RPK: arifle_RPK74
{
	scope = 2;
	displayName = "RPK";
	class ExileLife
	{
		casing = "ExileLife_Item_545_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"Exile_Weapon_RPK",
			"ExileLife_Weapon_RPK_Used",
			"ExileLife_Weapon_RPK_Worn",
			"ExileLife_Weapon_RPK_Damaged",
			"ExileLife_Weapon_RPK_Broken"
		};
	};
	reloadMagazineSound[] = {"\hlc_wp_ak\snd\soundshaders\ak12\rpk12_reload",1,1,20};
	reloadAction = "HLC_GestureReloadRPK12";	
};
class ExileLife_Weapon_RPK_Used: Exile_Weapon_RPK
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "RPK (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_RPK_Worn: Exile_Weapon_RPK
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "RPK (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_RPK_Damaged: Exile_Weapon_RPK
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "RPK (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_RPK_Broken: Exile_Weapon_RPK
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "RPK (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class Exile_Weapon_SA61: exile_rifle_SA61
{
	scope = 2;
	displayName = "SA61";
	class ExileLife
	{
		casing = "ExileLife_Item_765_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"Exile_Weapon_SA61",
			"ExileLife_Weapon_SA61_Used",
			"ExileLife_Weapon_SA61_Worn",
			"ExileLife_Weapon_SA61_Damaged",
			"ExileLife_Weapon_SA61_Broken"
		};
	};
};
class ExileLife_Weapon_SA61_Used: Exile_Weapon_SA61
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "SA61 (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_SA61_Worn: Exile_Weapon_SA61
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "SA61 (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_SA61_Damaged: Exile_Weapon_SA61
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "SA61 (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_SA61_Broken: Exile_Weapon_SA61
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "SA61 (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class Exile_Weapon_SVD: srifle_SVD
{
	scope = 2;
	displayName = "SVD";
	class ExileLife
	{
		casing = "ExileLife_Item_762_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"Exile_Weapon_SVD",
			"ExileLife_Weapon_SVD_Used",
			"ExileLife_Weapon_SVD_Worn",
			"ExileLife_Weapon_SVD_Damaged",
			"ExileLife_Weapon_SVD_Broken"
		};
	};
};
class ExileLife_Weapon_SVD_Used: Exile_Weapon_SVD
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "SVD (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_SVD_Worn: Exile_Weapon_SVD
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "SVD (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_SVD_Damaged: Exile_Weapon_SVD
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "SVD (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_SVD_Broken: Exile_Weapon_SVD
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "SVD (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class Exile_Weapon_Taurus: TaurusTracker455
{
	scope = 2;
	displayName = "Taurus Tracker";
	class ExileLife
	{
		casing = "ExileLife_Item_45_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"Exile_Weapon_Taurus",
			"ExileLife_Weapon_Taurus_Used",
			"ExileLife_Weapon_Taurus_Worn",
			"ExileLife_Weapon_Taurus_Damaged",
			"ExileLife_Weapon_Taurus_Broken"
		};
	};
};
class ExileLife_Weapon_Taurus_Used: Exile_Weapon_Taurus
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Taurus Tracker (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_Taurus_Worn: Exile_Weapon_Taurus
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Taurus Tracker (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_Taurus_Damaged: Exile_Weapon_Taurus
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Taurus Tracker (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_Taurus_Broken: Exile_Weapon_Taurus
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Taurus Tracker (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class Exile_Weapon_TaurusGold: TaurusTracker455_gold
{
	scope = 2;
	displayName = "Taurus Tracker (Gold)";
	class ExileLife
	{
		casing = "ExileLife_Item_45_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"Exile_Weapon_TaurusGold",
			"ExileLife_Weapon_TaurusGold_Used",
			"ExileLife_Weapon_TaurusGold_Worn",
			"ExileLife_Weapon_TaurusGold_Damaged",
			"ExileLife_Weapon_TaurusGold_Broken"
		};
	};
};
class ExileLife_Weapon_TaurusGold_Used: Exile_Weapon_TaurusGold
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Taurus Tracker (Gold/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_TaurusGold_Worn: Exile_Weapon_TaurusGold
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Taurus Tracker (Gold/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_TaurusGold_Damaged: Exile_Weapon_TaurusGold
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Taurus Tracker (Gold/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_TaurusGold_Broken: Exile_Weapon_TaurusGold
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Taurus Tracker (Gold/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class Exile_Weapon_VSSVintorez: srifle_VSSVintorez
{
	scope = 2;
	displayName = "VSS Vintorez";
	class ExileLife
	{
		casing = "ExileLife_Item_9mm_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"Exile_Weapon_VSSVintorez",
			"ExileLife_Weapon_VSSVintorez_Used",
			"ExileLife_Weapon_VSSVintorez_Worn",
			"ExileLife_Weapon_VSSVintorez_Damaged",
			"ExileLife_Weapon_VSSVintorez_Broken"
		};
	};
};
class ExileLife_Weapon_VSSVintorez_Used: Exile_Weapon_VSSVintorez
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "VSS Vintorez (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_VSSVintorez_Worn: Exile_Weapon_VSSVintorez
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "VSS Vintorez (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_VSSVintorez_Damaged: Exile_Weapon_VSSVintorez
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "VSS Vintorez (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_VSSVintorez_Broken: Exile_Weapon_VSSVintorez
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "VSS Vintorez (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class ExileLife_Item_BottleSuppressor: muzzle_snds_H
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "ExileLife Bottle Suppressor";
	descriptionShort = "Homemade Suppressor";
	picture = "\exilelife_assets\Models\Items\Weapons\Attachments\Images\ExileLife_Item_BottleSuppressor.paa";
	model = "\exilelife_assets\Models\Items\Weapons\Attachments\ExileLife_Item_BottleSuppressor.p3d";
};
class ExileLife_Weapon_Compact: Pistol_Base_F
{
	author = "ExileLife Mod Team";
	_generalMacro = "ExileLife_Weapon_Compact";
	scope = 2;
	picture = "\exilelife_weapons\icons\compact\icon_compact_x_ca.paa";
	model = "exilelife_weapons\pistols\Compact\ExileLife_Weapon_Compact";
	magazines[] = {"15Rnd_9mm", "14Rnd_9mm"};
	displayname = "CZ 75 D PCR Compact";
	htMin = 1;
	htMax = 300;
	afMax = 0;
	mfMax = 0;
	mFact = 1;
	tBody = 100;
	bullet1[] = {"A3\Sounds_F\weapons\shells\9mm\metal_9mm_01",0.5011872,1,15};
	bullet2[] = {"A3\Sounds_F\weapons\shells\9mm\metal_9mm_02",0.5011872,1,15};
	bullet3[] = {"A3\Sounds_F\weapons\shells\9mm\metal_9mm_03",0.5011872,1,15};
	bullet4[] = {"A3\Sounds_F\weapons\shells\9mm\metal_9mm_04",0.5011872,1,15};
	bullet5[] = {"A3\Sounds_F\weapons\shells\9mm\dirt_9mm_01",0.39810717,1,15};
	bullet6[] = {"A3\Sounds_F\weapons\shells\9mm\dirt_9mm_02",0.39810717,1,15};
	bullet7[] = {"A3\Sounds_F\weapons\shells\9mm\dirt_9mm_03",0.39810717,1,15};
	bullet8[] = {"A3\Sounds_F\weapons\shells\9mm\dirt_9mm_04",0.39810717,1,15};
	bullet9[] = {"A3\Sounds_F\weapons\shells\9mm\grass_9mm_01",0.2238721,1,15};
	bullet10[] = {"A3\Sounds_F\weapons\shells\9mm\grass_9mm_02",0.2238721,1,15};
	bullet11[] = {"A3\Sounds_F\weapons\shells\9mm\grass_9mm_03",0.2238721,1,15};
	bullet12[] = {"A3\Sounds_F\weapons\shells\9mm\grass_9mm_04",0.2238721,1,15};
	soundBullet[] = {"bullet1",0.083,"bullet2",0.083,"bullet3",0.083,"bullet4",0.083,"bullet5",0.083,"bullet6",0.083,"bullet7",0.083,"bullet8",0.083,"bullet9",0.083,"bullet10",0.083,"bullet11",0.083,"bullet12",0.083};
	modes[] = {"Single"};
	initSpeed = -1.04;
	recoil = "recoil_pistol_p07";
	class Single: Mode_SemiAuto
	{
		sounds[] = {"StandardSound","SilencedSound"};
		class BaseSoundModeType
		{
			closure1[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\Closure_P07_01",0.22387211,1,10};
			closure2[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\Closure_P07_02",0.22387211,1.2,10};
			soundClosure[] = {"closure1",0.5,"closure2",0.5};
		};
		class StandardSound: BaseSoundModeType
		{
			begin1[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\P07_short_01",3.9810717,1,1200};
			begin2[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\P07_short_02",3.9810717,1,1200};
			begin3[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\P07_short_03",3.9810717,1,1200};
			soundBegin[] = {"begin1",0.33,"begin2",0.33,"begin1",0.34};
			class SoundTails
			{
				class TailInterior
				{
					sound[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\P07_tail_interior",1.0,1,1200};
					frequency = 1;
					volume = "interior";
				};
				class TailTrees
				{
					sound[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\P07_tail_trees",1.0,1,1200};
					frequency = 1;
					volume = "(1-interior/1.4)*trees";
				};
				class TailForest
				{
					sound[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\P07_tail_forest",1.0,1,1200};
					frequency = 1;
					volume = "(1-interior/1.4)*forest";
				};
				class TailMeadows
				{
					sound[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\P07_tail_meadows",1.0,1,1200};
					frequency = 1;
					volume = "(1-interior/1.4)*(meadows/2 max sea/2)";
				};
				class TailHouses
				{
					sound[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\P07_tail_houses",1.0,1,1200};
					frequency = 1;
					volume = "(1-interior/1.4)*houses";
				};
			};
		};
		class SilencedSound: BaseSoundModeType
		{
			begin1[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\Silencer_P07_short_01",0.56234133,1,400};
			begin2[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\Silencer_P07_short_02",0.56234133,1,400};
			begin3[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\Silencer_P07_short_03",0.56234133,1,400};
			soundBegin[] = {"begin1",0.33,"begin2",0.33,"begin1",0.34};
			class SoundTails
			{
				class TailInterior
				{
					sound[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\Silencer_P07_tail_interior",1.0,1,400};
					frequency = 1;
					volume = "interior";
				};
				class TailTrees
				{
					sound[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\Silencer_P07_tail_trees",1.0,1,400};
					frequency = 1;
					volume = "(1-interior/1.4)*trees";
				};
				class TailForest
				{
					sound[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\Silencer_P07_tail_forest",1.0,1,400};
					frequency = 1;
					volume = "(1-interior/1.4)*forest";
				};
				class TailMeadows
				{
					sound[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\Silencer_P07_tail_meadows",1.0,1,400};
					frequency = 1;
					volume = "(1-interior/1.4)*(meadows/2 max sea/2)";
				};
				class TailHouses
				{
					sound[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\Silencer_P07_tail_houses",1.0,1,400};
					frequency = 1;
					volume = "(1-interior/1.4)*houses";
				};
			};
		};
		recoil = "recoil_pistol_light";
		recoilProne = "recoil_prone_pistol_light";
		reloadTime = 0.12;
		dispersion = 0.0029;
		minRange = 5;
		minRangeProbab = 0.3;
		midRange = 25;
		midRangeProbab = 0.6;
		maxRange = 50;
		maxRangeProbab = 0.1;
		aiRateOfFire = 2;
		aiRateOfFireDistance = 25;
	};
	reloadAction = "GestureReloadPistol";
	drySound[] = {"exilelife_weapons\sounds\pistols\dry",0.39810717,1,20};
	reloadMagazineSound[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\reload_P07",0.56234133,1,30};
	recoilProne = "recoil_prone_pistol_heavy";
	inertia = 0.2;
	selectionFireAnim = "muzzleFlash";
	class WeaponSlotsInfo: WeaponSlotsInfo
	{
		mass = 20;
		class CowsSlot{};
		class MuzzleSlot: MuzzleSlot
		{
			linkProxy = "\A3\data_f\proxies\weapon_slots\MUZZLE";
			iconPosition[] = {0.39,0.35};
			iconScale = 0.3;
			iconPicture = "\A3\Weapons_F\Data\UI\attachment_muzzle.paa";
			iconPinPoint = "Right";
		};
	};
	class ExileLife
	{
		casing = "ExileLife_Item_9mm_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"ExileLife_Weapon_Compact",
			"ExileLife_Weapon_Compact_Used",
			"ExileLife_Weapon_Compact_Worn",
			"ExileLife_Weapon_Compact_Damaged",
			"ExileLife_Weapon_Compact_Broken"
		};
	};
};
class ExileLife_Weapon_Compact_Used: ExileLife_Weapon_Compact
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "CZ 75 D PCR Compact (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_Compact_Worn: ExileLife_Weapon_Compact
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "CZ 75 D PCR Compact (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_Compact_Damaged: ExileLife_Weapon_Compact
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "CZ 75 D PCR Compact (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_Compact_Broken: ExileLife_Weapon_Compact
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "CZ 75 D PCR Compact (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class ExileLife_Weapon_Glock17: Pistol_Base_F
{
	author = "ExileLife Mod Team";
	_generalMacro = "ExileLife_Weapon_Glock17";
	scope = 2;
	picture = "\exilelife_weapons\icons\glock17\icon_glock17_x_ca.paa";
	model = "\exilelife_weapons\pistols\glock17\ExileLife_Weapon_Glock17";
	magazines[] = {"17Rnd_9mm", "15Rnd_9mm", "14Rnd_9mm"};
	displayname = "Glock 17";
	htMin = 1;
	htMax = 300;
	afMax = 0;
	mfMax = 0;
	mFact = 1;
	tBody = 100;
	bullet1[] = {"A3\Sounds_F\weapons\shells\9mm\metal_9mm_01",0.5011872,1,15};
	bullet2[] = {"A3\Sounds_F\weapons\shells\9mm\metal_9mm_02",0.5011872,1,15};
	bullet3[] = {"A3\Sounds_F\weapons\shells\9mm\metal_9mm_03",0.5011872,1,15};
	bullet4[] = {"A3\Sounds_F\weapons\shells\9mm\metal_9mm_04",0.5011872,1,15};
	bullet5[] = {"A3\Sounds_F\weapons\shells\9mm\dirt_9mm_01",0.39810717,1,15};
	bullet6[] = {"A3\Sounds_F\weapons\shells\9mm\dirt_9mm_02",0.39810717,1,15};
	bullet7[] = {"A3\Sounds_F\weapons\shells\9mm\dirt_9mm_03",0.39810717,1,15};
	bullet8[] = {"A3\Sounds_F\weapons\shells\9mm\dirt_9mm_04",0.39810717,1,15};
	bullet9[] = {"A3\Sounds_F\weapons\shells\9mm\grass_9mm_01",0.2238721,1,15};
	bullet10[] = {"A3\Sounds_F\weapons\shells\9mm\grass_9mm_02",0.2238721,1,15};
	bullet11[] = {"A3\Sounds_F\weapons\shells\9mm\grass_9mm_03",0.2238721,1,15};
	bullet12[] = {"A3\Sounds_F\weapons\shells\9mm\grass_9mm_04",0.2238721,1,15};
	soundBullet[] = {"bullet1",0.083,"bullet2",0.083,"bullet3",0.083,"bullet4",0.083,"bullet5",0.083,"bullet6",0.083,"bullet7",0.083,"bullet8",0.083,"bullet9",0.083,"bullet10",0.083,"bullet11",0.083,"bullet12",0.083};
	modes[] = {"Single"};
	initSpeed = -1.04;
	recoil = "recoil_pistol_p07";
	class Single: Mode_SemiAuto
	{
		sounds[] = {"StandardSound","SilencedSound"};
		class BaseSoundModeType
		{
			closure1[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\Closure_P07_01",0.22387211,1,10};
			closure2[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\Closure_P07_02",0.22387211,1.2,10};
			soundClosure[] = {"closure1",0.5,"closure2",0.5};
		};
		class StandardSound: BaseSoundModeType
		{
			begin1[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\P07_short_01",3.9810717,1,1200};
			begin2[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\P07_short_02",3.9810717,1,1200};
			begin3[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\P07_short_03",3.9810717,1,1200};
			soundBegin[] = {"begin1",0.33,"begin2",0.33,"begin1",0.34};
			class SoundTails
			{
				class TailInterior
				{
					sound[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\P07_tail_interior",1.0,1,1200};
					frequency = 1;
					volume = "interior";
				};
				class TailTrees
				{
					sound[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\P07_tail_trees",1.0,1,1200};
					frequency = 1;
					volume = "(1-interior/1.4)*trees";
				};
				class TailForest
				{
					sound[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\P07_tail_forest",1.0,1,1200};
					frequency = 1;
					volume = "(1-interior/1.4)*forest";
				};
				class TailMeadows
				{
					sound[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\P07_tail_meadows",1.0,1,1200};
					frequency = 1;
					volume = "(1-interior/1.4)*(meadows/2 max sea/2)";
				};
				class TailHouses
				{
					sound[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\P07_tail_houses",1.0,1,1200};
					frequency = 1;
					volume = "(1-interior/1.4)*houses";
				};
			};
		};
		class SilencedSound: BaseSoundModeType
		{
			begin1[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\Silencer_P07_short_01",0.56234133,1,400};
			begin2[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\Silencer_P07_short_02",0.56234133,1,400};
			begin3[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\Silencer_P07_short_03",0.56234133,1,400};
			soundBegin[] = {"begin1",0.33,"begin2",0.33,"begin1",0.34};
			class SoundTails
			{
				class TailInterior
				{
					sound[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\Silencer_P07_tail_interior",1.0,1,400};
					frequency = 1;
					volume = "interior";
				};
				class TailTrees
				{
					sound[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\Silencer_P07_tail_trees",1.0,1,400};
					frequency = 1;
					volume = "(1-interior/1.4)*trees";
				};
				class TailForest
				{
					sound[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\Silencer_P07_tail_forest",1.0,1,400};
					frequency = 1;
					volume = "(1-interior/1.4)*forest";
				};
				class TailMeadows
				{
					sound[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\Silencer_P07_tail_meadows",1.0,1,400};
					frequency = 1;
					volume = "(1-interior/1.4)*(meadows/2 max sea/2)";
				};
				class TailHouses
				{
					sound[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\Silencer_P07_tail_houses",1.0,1,400};
					frequency = 1;
					volume = "(1-interior/1.4)*houses";
				};
			};
		};
		recoil = "recoil_pistol_light";
		recoilProne = "recoil_prone_pistol_light";
		reloadTime = 0.12;
		dispersion = 0.0029;
		minRange = 5;
		minRangeProbab = 0.3;
		midRange = 25;
		midRangeProbab = 0.6;
		maxRange = 50;
		maxRangeProbab = 0.1;
		aiRateOfFire = 2;
		aiRateOfFireDistance = 25;
	};
	reloadAction = "GestureReloadPistol";
	drySound[] = {"exilelife_weapons\sounds\pistols\dry",0.39810717,1,20};
	reloadMagazineSound[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\reload_P07",0.56234133,1,30};
	recoilProne = "recoil_prone_pistol_heavy";
	inertia = 0.2;
	selectionFireAnim = "muzzleFlash";
	class WeaponSlotsInfo: WeaponSlotsInfo
	{
		mass = 20;
		class CowsSlot: CowsSlot
		{
			compatibleItems[] = {"optic_ACO_grn_smg","optic_Aco_smg"};
			linkProxy = "\A3\data_f\proxies\weapon_slots\TOP";
			iconPosition[] = {0.6,0.27};
			iconScale = 0.15;
		};
		class MuzzleSlot: MuzzleSlot
		{
			linkProxy = "\A3\data_f\proxies\weapon_slots\MUZZLE";
			iconPosition[] = {0.39,0.35};
			iconScale = 0.3;
			iconPicture = "\A3\Weapons_F\Data\UI\attachment_muzzle.paa";
			iconPinPoint = "Right";
		};
	};
	class ExileLife
	{
		casing = "ExileLife_Item_9mm_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"ExileLife_Weapon_Glock17",
			"ExileLife_Weapon_Glock17_Used",
			"ExileLife_Weapon_Glock17_Worn",
			"ExileLife_Weapon_Glock17_Damaged",
			"ExileLife_Weapon_Glock17_Broken"
		};
	};
};
class ExileLife_Weapon_Glock17_Used: ExileLife_Weapon_Glock17
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Glock 17 (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_Glock17_Worn: ExileLife_Weapon_Glock17
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Glock 17 (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_Glock17_Damaged: ExileLife_Weapon_Glock17
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Glock 17 (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_Glock17_Broken: ExileLife_Weapon_Glock17
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Glock 17 (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class ExileLife_Weapon_M9: Pistol_Base_F
{
	author = "ExileLife Mod Team";
	_generalMacro = "ExileLife_Weapon_M9";
	scope = 2;
	picture = "\exilelife_weapons\icons\m9\icon_m9_x_ca.paa";
	model = "exilelife_weapons\pistols\m9\ExileLife_Weapon_M9";
	magazines[] = {"15Rnd_9mm", "14Rnd_9mm"};
	displayname = "Beretta M9";
	htMin = 1;
	htMax = 300;
	afMax = 0;
	mfMax = 0;
	mFact = 1;
	tBody = 100;
	bullet1[] = {"A3\Sounds_F\weapons\shells\9mm\metal_9mm_01",0.5011872,1,15};
	bullet2[] = {"A3\Sounds_F\weapons\shells\9mm\metal_9mm_02",0.5011872,1,15};
	bullet3[] = {"A3\Sounds_F\weapons\shells\9mm\metal_9mm_03",0.5011872,1,15};
	bullet4[] = {"A3\Sounds_F\weapons\shells\9mm\metal_9mm_04",0.5011872,1,15};
	bullet5[] = {"A3\Sounds_F\weapons\shells\9mm\dirt_9mm_01",0.39810717,1,15};
	bullet6[] = {"A3\Sounds_F\weapons\shells\9mm\dirt_9mm_02",0.39810717,1,15};
	bullet7[] = {"A3\Sounds_F\weapons\shells\9mm\dirt_9mm_03",0.39810717,1,15};
	bullet8[] = {"A3\Sounds_F\weapons\shells\9mm\dirt_9mm_04",0.39810717,1,15};
	bullet9[] = {"A3\Sounds_F\weapons\shells\9mm\grass_9mm_01",0.2238721,1,15};
	bullet10[] = {"A3\Sounds_F\weapons\shells\9mm\grass_9mm_02",0.2238721,1,15};
	bullet11[] = {"A3\Sounds_F\weapons\shells\9mm\grass_9mm_03",0.2238721,1,15};
	bullet12[] = {"A3\Sounds_F\weapons\shells\9mm\grass_9mm_04",0.2238721,1,15};
	soundBullet[] = {"bullet1",0.083,"bullet2",0.083,"bullet3",0.083,"bullet4",0.083,"bullet5",0.083,"bullet6",0.083,"bullet7",0.083,"bullet8",0.083,"bullet9",0.083,"bullet10",0.083,"bullet11",0.083,"bullet12",0.083};
	modes[] = {"Single"};
	initSpeed = -1.04;
	recoil = "recoil_pistol_p07";
	class Single: Mode_SemiAuto
	{
		sounds[] = {"StandardSound","SilencedSound"};
		class BaseSoundModeType
		{
			closure1[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\Closure_P07_01",0.22387211,1,10};
			closure2[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\Closure_P07_02",0.22387211,1.2,10};
			soundClosure[] = {"closure1",0.5,"closure2",0.5};
		};
		class StandardSound: BaseSoundModeType
		{
			begin1[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\P07_short_01",3.9810717,1,1200};
			begin2[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\P07_short_02",3.9810717,1,1200};
			begin3[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\P07_short_03",3.9810717,1,1200};
			soundBegin[] = {"begin1",0.33,"begin2",0.33,"begin1",0.34};
			class SoundTails
			{
				class TailInterior
				{
					sound[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\P07_tail_interior",1.0,1,1200};
					frequency = 1;
					volume = "interior";
				};
				class TailTrees
				{
					sound[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\P07_tail_trees",1.0,1,1200};
					frequency = 1;
					volume = "(1-interior/1.4)*trees";
				};
				class TailForest
				{
					sound[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\P07_tail_forest",1.0,1,1200};
					frequency = 1;
					volume = "(1-interior/1.4)*forest";
				};
				class TailMeadows
				{
					sound[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\P07_tail_meadows",1.0,1,1200};
					frequency = 1;
					volume = "(1-interior/1.4)*(meadows/2 max sea/2)";
				};
				class TailHouses
				{
					sound[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\P07_tail_houses",1.0,1,1200};
					frequency = 1;
					volume = "(1-interior/1.4)*houses";
				};
			};
		};
		class SilencedSound: BaseSoundModeType
		{
			begin1[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\Silencer_P07_short_01",0.56234133,1,400};
			begin2[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\Silencer_P07_short_02",0.56234133,1,400};
			begin3[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\Silencer_P07_short_03",0.56234133,1,400};
			soundBegin[] = {"begin1",0.33,"begin2",0.33,"begin1",0.34};
			class SoundTails
			{
				class TailInterior
				{
					sound[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\Silencer_P07_tail_interior",1.0,1,400};
					frequency = 1;
					volume = "interior";
				};
				class TailTrees
				{
					sound[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\Silencer_P07_tail_trees",1.0,1,400};
					frequency = 1;
					volume = "(1-interior/1.4)*trees";
				};
				class TailForest
				{
					sound[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\Silencer_P07_tail_forest",1.0,1,400};
					frequency = 1;
					volume = "(1-interior/1.4)*forest";
				};
				class TailMeadows
				{
					sound[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\Silencer_P07_tail_meadows",1.0,1,400};
					frequency = 1;
					volume = "(1-interior/1.4)*(meadows/2 max sea/2)";
				};
				class TailHouses
				{
					sound[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\Silencer_P07_tail_houses",1.0,1,400};
					frequency = 1;
					volume = "(1-interior/1.4)*houses";
				};
			};
		};
		recoil = "recoil_pistol_light";
		recoilProne = "recoil_prone_pistol_light";
		reloadTime = 0.12;
		dispersion = 0.0029;
		minRange = 5;
		minRangeProbab = 0.3;
		midRange = 25;
		midRangeProbab = 0.6;
		maxRange = 50;
		maxRangeProbab = 0.1;
		aiRateOfFire = 2;
		aiRateOfFireDistance = 25;
	};
	reloadAction = "GestureReloadPistol";
	drySound[] = {"exilelife_weapons\sounds\pistols\dry",0.39810717,1,20};
	reloadMagazineSound[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\reload_P07",0.56234133,1,30};
	recoilProne = "recoil_prone_pistol_heavy";
	inertia = 0.2;
	selectionFireAnim = "muzzleFlash";
	class WeaponSlotsInfo: WeaponSlotsInfo
	{
		mass = 20;
		class CowsSlot{};
		class MuzzleSlot: MuzzleSlot
		{
			linkProxy = "\A3\data_f\proxies\weapon_slots\MUZZLE";
			iconPosition[] = {0.39,0.35};
			iconScale = 0.3;
			iconPicture = "\A3\Weapons_F\Data\UI\attachment_muzzle.paa";
			iconPinPoint = "Right";
		};
	};
	class ExileLife
	{
		casing = "ExileLife_Item_9mm_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"ExileLife_Weapon_M9",
			"ExileLife_Weapon_M9_Used",
			"ExileLife_Weapon_M9_Worn",
			"ExileLife_Weapon_M9_Damaged",
			"ExileLife_Weapon_M9_Broken"
		};
	};
};
class ExileLife_Weapon_M9_Used: ExileLife_Weapon_M9
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Beretta M9 (Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_M9_Worn: ExileLife_Weapon_M9
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Beretta M9 (Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_M9_Damaged: ExileLife_Weapon_M9
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Beretta M9 (Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_M9_Broken: ExileLife_Weapon_M9
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "Beretta M9 (Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class ExileLife_Weapon_Taser: Pistol_Base_F
{
	author = "ExileLife Mod Team";
	_generalMacro = "ExileLife_Weapon_Taser";
	scope = 2;
	picture = "\exilelife_assets\models\Items\Weapons\Pistols\Images\ExileLife_Weapon_Taser.paa";
	model = "\exilelife_assets\models\Items\Weapons\Pistols\ExileLife_Weapon_Taser.p3d";
	modelMagazine="\exilelife_assets\models\Items\Weapons\Ammunition\ExileLife_Item_TaserCartridge.p3d";
	magazines[] = {"ExileLife_Item_TaserCartridge"};
	displayname = "Taser";
	htMin = 1;
	htMax = 300;
	afMax = 0;
	mfMax = 0;
	mFact = 1;
	tBody = 100;
	bullet1[] = {"A3\Sounds_F\weapons\shells\9mm\metal_9mm_01",0.5011872,1,15};
	bullet2[] = {"A3\Sounds_F\weapons\shells\9mm\metal_9mm_02",0.5011872,1,15};
	bullet3[] = {"A3\Sounds_F\weapons\shells\9mm\metal_9mm_03",0.5011872,1,15};
	bullet4[] = {"A3\Sounds_F\weapons\shells\9mm\metal_9mm_04",0.5011872,1,15};
	bullet5[] = {"A3\Sounds_F\weapons\shells\9mm\dirt_9mm_01",0.39810717,1,15};
	bullet6[] = {"A3\Sounds_F\weapons\shells\9mm\dirt_9mm_02",0.39810717,1,15};
	bullet7[] = {"A3\Sounds_F\weapons\shells\9mm\dirt_9mm_03",0.39810717,1,15};
	bullet8[] = {"A3\Sounds_F\weapons\shells\9mm\dirt_9mm_04",0.39810717,1,15};
	bullet9[] = {"A3\Sounds_F\weapons\shells\9mm\grass_9mm_01",0.2238721,1,15};
	bullet10[] = {"A3\Sounds_F\weapons\shells\9mm\grass_9mm_02",0.2238721,1,15};
	bullet11[] = {"A3\Sounds_F\weapons\shells\9mm\grass_9mm_03",0.2238721,1,15};
	bullet12[] = {"A3\Sounds_F\weapons\shells\9mm\grass_9mm_04",0.2238721,1,15};
	soundBullet[] = {"bullet1",0.083,"bullet2",0.083,"bullet3",0.083,"bullet4",0.083,"bullet5",0.083,"bullet6",0.083,"bullet7",0.083,"bullet8",0.083,"bullet9",0.083,"bullet10",0.083,"bullet11",0.083,"bullet12",0.083};
	modes[] = {"Single"};
	initSpeed = 70; 
	recoil = "recoil_pistol_p07";
	optics = 0;
	class Single: Mode_SemiAuto
	{
		sounds[] = {"StandardSound"};
		class BaseSoundModeType
		{
			closure1[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\Closure_P07_01",0.22387211,1,10};
			closure2[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\Closure_P07_02",0.22387211,1.2,10};
			soundClosure[] = {"closure1",0.5,"closure2",0.5};
		};
		class StandardSound: BaseSoundModeType
		{
			begin1[] = {"\exilelife_assets\sound\taser_shot_01.ogg",0.456,1,400};
			begin2[] = {"\exilelife_assets\sound\taser_shot_02.ogg",0.483,1,400};
			begin3[] = {"\exilelife_assets\sound\taser_shot_02.ogg",0.451,1,400};
			soundBegin[] = {"begin1",0.33,"begin2",0.33,"begin1",0.34};
			class SoundTails
			{
				class TailInterior
				{
					sound[] = {"\exilelife_assets\sound\taser_shot_02.ogg",0.502,1,400};
					frequency = 1;
					volume = "interior";
				};
				class TailTrees
				{
					sound[] = {"\exilelife_assets\sound\taser_shot_02.ogg",0.451,1,400};
					frequency = 1;
					volume = "(1-interior/1.4)*trees";
				};
				class TailForest
				{
					sound[] = {"\exilelife_assets\sound\taser_shot_02.ogg",0.451,1,400};
					frequency = 1;
					volume = "(1-interior/1.4)*forest";
				};
				class TailMeadows
				{
					sound[] = {"\exilelife_assets\sound\taser_shot_02.ogg",0.451,1,400};
					frequency = 1;
					volume = "(1-interior/1.4)*(meadows/2 max sea/2)";
				};
				class TailHouses
				{
					sound[] = {"\exilelife_assets\sound\taser_shot_02.ogg",0.451,1,400};
					frequency = 1;
					volume = "(1-interior/1.4)*houses";
				};
			};
		};
		recoil = "recoil_pistol_light";
		recoilProne = "recoil_prone_pistol_light";
		reloadTime = 0.12;
		dispersion = 0.0029;
		minRange = 5;
		minRangeProbab = 0.1;
		midRange = 7;
		midRangeProbab = 0.3;
		maxRange = 15;
		maxRangeProbab = 0.05;
		aiRateOfFire = 2;
		aiRateOfFireDistance = 15;
	};
	reloadAction = "GestureReloadPistol";
	drySound[] = {"exilelife_weapons\sounds\pistols\dry",0.39810717,1,20};
	reloadMagazineSound[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\reload_P07",0.56234133,1,30};
	recoilProne = "recoil_pistol_p07";
	inertia = 0.2;
	selectionFireAnim = "";
	class WeaponSlotsInfo: WeaponSlotsInfo
	{
		allowedSlots[] = {};
	};
	class LinkedItems {};
	class LinkedItemsMuzzle {};
};	
class ExileLife_Weapon_MK16: arifle_SPAR_01_base_F
{
	author = "ExileLife Mod Team";
	scope = 2;
	_generalMacro = "ExileLife_Weapon_MK16";
	displayName = "SCAR MK16 (Tan)";
	descriptionShort = "";
	picture = "\exilelife_weapons\icons\mk16\gear_mk16tan_x_ca.paa";
	model = "exilelife_weapons\rifle\mk16\ExileLife_Weapon_MK16.p3d";
	handAnim[] = {"OFP2_ManSkeleton","exilelife_weapons\rifle\mk16\anim\mk16_handanim.rtm"};
	hiddenSelections[] = {"Camo", "Camo2"};
	hiddenSelectionsTextures[] = {"exilelife_weapons\rifle\mk16\data\ExileLife_Weapon_MK16_l_co.paa", "exilelife_weapons\rifle\mk16\data\ExileLife_Weapon_MK16_acc_co.paa"};
	class Single: Mode_SemiAuto
	{
		sounds[] = {"StandardSound","SilencedSound"};
		class BaseSoundModeType
		{
			closure1[] = {"\A3\Sounds_F\arsenal\weapons\Rifles\TRG20\TRG20_closure_01",0.22387211,1,10};
			closure2[] = {"\A3\Sounds_F\arsenal\weapons\Rifles\TRG20\TRG20_closure_01",0.22387211,1.2,10};
			soundClosure[] = {"closure1",0.5,"closure2",0.5};
		};
		class StandardSound: BaseSoundModeType
		{
			begin1[] = {"exilelife_weapons\sounds\rifle\mk16\mk16_short_01",3.9810717,1,1200};
			begin2[] = {"exilelife_weapons\sounds\rifle\mk16\mk16_short_01",3.9810717,1,1200};
			soundBegin[] = {"begin1",0.33,"begin2",0.33,"begin2",0.34};
			class SoundTails
			{
				class TailInterior
				{
					sound[] = {"\A3\Sounds_F\arsenal\weapons\Rifles\TRG20\TRG20_tailinterior",1.0,1,1200};
					frequency = 1;
					volume = "interior";
				};
				class TailTrees
				{
					sound[] = {"\A3\Sounds_F\arsenal\weapons\Rifles\TRG20\TRG20_tailtrees",1.0,1,1200};
					frequency = 1;
					volume = "(1-interior/1.4)*trees";
				};
				class TailForest
				{
					sound[] = {"\A3\Sounds_F\arsenal\weapons\Rifles\TRG20\TRG20_tailforest",1.0,1,1200};
					frequency = 1;
					volume = "(1-interior/1.4)*forest";
				};
				class TailMeadows
				{
					sound[] = {"\A3\Sounds_F\arsenal\weapons\Rifles\TRG20\TRG20_tailmeadows",1.0,1,1200};
					frequency = 1;
					volume = "(1-interior/1.4)*(meadows/2 max sea/2)";
				};
				class TailHouses
				{
					sound[] = {"\A3\Sounds_F\arsenal\weapons\Rifles\TRG20\TRG20_tailhouses",1.0,1,1200};
					frequency = 1;
					volume = "(1-interior/1.4)*houses";
				};
			};
		};
		class SilencedSound: BaseSoundModeType
		{
			begin1[] = {"A3\Sounds_F\arsenal\weapons\Rifles\TRG20\TRG20_silencerShot_01",0.7943282,1,400};
			begin2[] = {"A3\Sounds_F\arsenal\weapons\Rifles\TRG20\TRG20_silencerShot_02",0.7943282,1,400};
			soundBegin[] = {"begin1",0.33,"begin2",0.33,"begin1",0.34};
			class SoundTails
			{
				class TailInterior
				{
					sound[] = {"\A3\Sounds_F\arsenal\weapons\Rifles\TRG20\TRG20_silencertailinterior",1.0,1,1200};
					frequency = 1;
					volume = "interior";
				};
				class TailTrees
				{
					sound[] = {"\A3\Sounds_F\arsenal\weapons\Rifles\TRG20\TRG20_silencertailtrees",1.0,1,1200};
					frequency = 1;
					volume = "(1-interior/1.4)*trees";
				};
				class TailForest
				{
					sound[] = {"\A3\Sounds_F\arsenal\weapons\Rifles\TRG20\TRG20_silencertailforest",1.0,1,1200};
					frequency = 1;
					volume = "(1-interior/1.4)*forest";
				};
				class TailMeadows
				{
					sound[] = {"\A3\Sounds_F\arsenal\weapons\Rifles\TRG20\TRG20_silencertailmeadows",1.0,1,1200};
					frequency = 1;
					volume = "(1-interior/1.4)*(meadows/2 max sea/2)";
				};
				class TailHouses
				{
					sound[] = {"\A3\Sounds_F\arsenal\weapons\Rifles\TRG20\TRG20_silencertailhouses",1.0,1,1200};
					frequency = 1;
					volume = "(1-interior/1.4)*houses";
				};
			};
		};
	};
	class FullAuto: Mode_FullAuto
	{
		soundContinuous = 0;
		soundBurst = 0;
		sounds[] = {"StandardSound","SilencedSound"};
		class BaseSoundModeType
		{
			closure1[] = {"\A3\Sounds_F\arsenal\weapons\Rifles\TRG20\TRG20_closure_01",0.22387211,1,10};
			closure2[] = {"\A3\Sounds_F\arsenal\weapons\Rifles\TRG20\TRG20_closure_01",0.22387211,1.2,10};
			soundClosure[] = {"closure1",0.5,"closure2",0.5};
			soundSet = "";
		};
		class StandardSound: BaseSoundModeType
		{
			begin1[] = {"exilelife_weapons\sounds\rifle\mk16\mk16_short_01",3.9810717,1,1200};
			begin2[] = {"exilelife_weapons\sounds\rifle\mk16\mk16_short_01",3.9810717,1,1200};
			soundBegin[] = {"begin1",0.33,"begin2",0.33,"begin1",0.34};
			class SoundTails
			{
				class TailInterior
				{
					sound[] = {"A3\Sounds_F\arsenal\weapons\Rifles\MX\mx_tail_interior",1.5848932,1,1800};
					frequency = 1;
					volume = "interior";
				};
				class TailTrees
				{
					sound[] = {"A3\Sounds_F\arsenal\weapons\Rifles\MX\mx_tail_trees",1.0,1,1800};
					frequency = 1;
					volume = "(1-interior/1.4)*trees";
				};
				class TailForest
				{
					sound[] = {"A3\Sounds_F\arsenal\weapons\Rifles\MX\mx_tail_forest",1.0,1,1800};
					frequency = 1;
					volume = "(1-interior/1.4)*forest";
				};
				class TailMeadows
				{
					sound[] = {"A3\Sounds_F\arsenal\weapons\Rifles\MX\mx_tail_meadows",1.0,1,1800};
					frequency = 1;
					volume = "(1-interior/1.4)*(meadows/2 max sea/2)";
				};
				class TailHouses
				{
					sound[] = {"A3\Sounds_F\arsenal\weapons\Rifles\MX\mx_tail_houses",1.0,1,1800};
					frequency = 1;
					volume = "(1-interior/1.4)*houses";
				};
			};
		};
		class SilencedSound: BaseSoundModeType
		{
			begin1[] = {"A3\Sounds_F\arsenal\weapons\Rifles\TRG20\TRG20_silencerShot_01",0.7943282,1,400};
			begin2[] = {"A3\Sounds_F\arsenal\weapons\Rifles\TRG20\TRG20_silencerShot_02",0.7943282,1,400};
			begin3[] = {"A3\Sounds_F\arsenal\weapons\Rifles\TRG20\TRG20_silencerShot_03",0.7943282,1,400};
			soundBegin[] = {"begin1",0.33,"begin2",0.33,"begin1",0.34};
			class SoundTails
			{
				class TailInterior
				{
					sound[] = {"\A3\Sounds_F\arsenal\weapons\Rifles\TRG20\TRG20_silencertailinterior",1.0,1,1200};
					frequency = 1;
					volume = "interior";
				};
				class TailTrees
				{
					sound[] = {"\A3\Sounds_F\arsenal\weapons\Rifles\TRG20\TRG20_silencertailtrees",1.0,1,1200};
					frequency = 1;
					volume = "(1-interior/1.4)*trees";
				};
				class TailForest
				{
					sound[] = {"\A3\Sounds_F\arsenal\weapons\Rifles\TRG20\TRG20_silencertailforest",1.0,1,1200};
					frequency = 1;
					volume = "(1-interior/1.4)*forest";
				};
				class TailMeadows
				{
					sound[] = {"\A3\Sounds_F\arsenal\weapons\Rifles\TRG20\TRG20_silencertailmeadows",1.0,1,1200};
					frequency = 1;
					volume = "(1-interior/1.4)*(meadows/2 max sea/2)";
				};
				class TailHouses
				{
					sound[] = {"\A3\Sounds_F\arsenal\weapons\Rifles\TRG20\TRG20_silencertailhouses",1.0,1,1200};
					frequency = 1;
					volume = "(1-interior/1.4)*houses";
				};
			};
		};
	};
	class ExileLife
	{
		casing = "ExileLife_Item_556_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"ExileLife_Weapon_MK16",
			"ExileLife_Weapon_MK16_Used",
			"ExileLife_Weapon_MK16_Worn",
			"ExileLife_Weapon_MK16_Damaged",
			"ExileLife_Weapon_MK16_Broken"
		};
	};
};
class ExileLife_Weapon_MK16_Used: ExileLife_Weapon_MK16
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "SCAR MK16 (Tan/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_MK16_Worn: ExileLife_Weapon_MK16
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "SCAR MK16 (Tan/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_MK16_Damaged: ExileLife_Weapon_MK16
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "SCAR MK16 (Tan/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_MK16_Broken: ExileLife_Weapon_MK16
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "SCAR MK16 (Tan/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class ExileLife_Weapon_MK16_Black: ExileLife_Weapon_MK16
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "SCAR MK16 (Black)";
	hiddenSelections[] = {"Camo", "Camo2"};
	hiddenSelectionsTextures[] = {"exilelife_weapons\rifle\mk16\data\ExileLife_Weapon_MK16_l_black_co.paa", "exilelife_weapons\rifle\mk16\data\ExileLife_Weapon_MK16_acc_black_co.paa"};
	picture = "\exilelife_weapons\icons\mk16\gear_mk16black_x_ca.paa";
	class ExileLife
	{
		casing = "ExileLife_Item_556_Casing";
		ExileLifeWeaponType = "New";
		ExileLifeWeaponVariants[] =
		{
			"ExileLife_Weapon_MK16_Black",
			"ExileLife_Weapon_MK16_Black_Used",
			"ExileLife_Weapon_MK16_Black_Worn",
			"ExileLife_Weapon_MK16_Black_Damaged",
			"ExileLife_Weapon_MK16_Black_Broken"
		};
	};
};
class ExileLife_Weapon_MK16_Black_Used: ExileLife_Weapon_MK16_Black
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "SCAR MK16 (Black/Used)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Used";
		class Fired
		{
			misfireChance = 0.01;	
			jamChance = 0.01;
		};
	};
};
class ExileLife_Weapon_MK16_Black_Worn: ExileLife_Weapon_MK16_Black
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "SCAR MK16 (Black/Worn)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Worn";
		class Fired
		{
			misfireChance = 0.02;	
			jamChance = 0.05;
			breakChance = 0.001;
		};
	};
};
class ExileLife_Weapon_MK16_Black_Damaged: ExileLife_Weapon_MK16_Black
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "SCAR MK16 (Black/Damaged)";
	class ExileLife: ExileLife
	{
		ExileLifeWeaponType = "Damaged";
		class Fired
		{
			misfireChance = 0.05;	
			jamChance = 0.10;
			breakChance = 0.01;
		};
	};
};
class ExileLife_Weapon_MK16_Black_Broken: ExileLife_Weapon_MK16_Black
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "SCAR MK16 (Black/Broken)";
	muzzles[]={"ExileLife_Broken_Weapon"};
	class ExileLife_Broken_Weapon: Broken_Base_F {};
	class ExileLife: ExileLife { ExileLifeWeaponType = "Broken"; };
};
class ExileLife_Clothing_Mafia_ArmBand: ItemCore
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "ExileLife Mafia Armband";
	descriptionShort = "No Armor";
	picture = "\exilelife_assets\texture\ui\Inventory\Mafia_icon_ca.paa";
	model = "\exilelife_assets\Models\Items\Clothing\TopWear\ExileLife_Clothing_ArmBand.p3d";
	hiddenSelections[] = {"Camo"};
	hiddenSelectionsTextures[] = {"exilelife_assets\models\items\clothing\topwear\images\exilelife_clothing_mafia_armband_co.paa"};
	weaponPoolAvailable = 1;
	class ItemInfo: InventoryItem_Base_F 
	{
		hmdType = 0;
		mass = 5;
		type = 616;
		allowedSlots[] = {616,701, 801, 901};
		modelOff = "\exilelife_assets\Models\Items\Clothing\TopWear\ExileLife_Clothing_ArmBand.p3d";
		uniformModel = "\exilelife_assets\Models\Items\Clothing\TopWear\ExileLife_Clothing_ArmBand.p3d";
		uniformClass = "ExileLife_ArmBand_Mafia";
		hiddenSelections[] = {"Camo"};
		hiddenSelectionsTextures[] = {"exilelife_assets\models\items\clothing\topwear\images\exilelife_clothing_mafia_armband_co.paa"};
	};	
};
class ExileLife_Clothing_Yakuza_ArmBand: ExileLife_Clothing_Mafia_ArmBand
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "ExileLife Yakuza Armband";
	descriptionShort = "No Armor";
	picture = "\exilelife_assets\texture\ui\Inventory\Yakuza_icon_ca.paa";
	model = "\exilelife_assets\Models\Items\Clothing\TopWear\ExileLife_Clothing_ArmBand.p3d";
	hiddenSelections[] = {"Camo"};
	hiddenSelectionsTextures[] = {"exilelife_assets\models\items\clothing\topwear\images\exilelife_clothing_yakuza_armband_co.paa"};
	weaponPoolAvailable = 1;
	class ItemInfo: InventoryItem_Base_F 
	{
		hmdType = 0;
		mass = 5;
		type = 616;
		allowedSlots[] = {616,701, 801, 901};
		modelOff = "\exilelife_assets\Models\Items\Clothing\TopWear\ExileLife_Clothing_ArmBand.p3d";
		uniformModel = "\exilelife_assets\Models\Items\Clothing\TopWear\ExileLife_Clothing_ArmBand.p3d";
		uniformClass = "ExileLife_ArmBand_Yakuza";
		hiddenSelections[] = {"Camo"};
		hiddenSelectionsTextures[] = {"exilelife_assets\models\items\clothing\topwear\images\exilelife_clothing_mafia_armband_co.paa"};
	};	
};
class ExileLife_Clothing_Syndicate_ArmBand: ExileLife_Clothing_Mafia_ArmBand
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "ExileLife Syndicate Armband";
	descriptionShort = "No Armor";
	picture = "\exilelife_assets\texture\ui\Inventory\Syndicate_icon_ca.paa";
	model = "\exilelife_assets\Models\Items\Clothing\TopWear\ExileLife_Clothing_ArmBand.p3d";
	hiddenSelections[] = {"Camo"};
	hiddenSelectionsTextures[] = {"exilelife_assets\models\items\clothing\topwear\images\exilelife_clothing_syndicate_armband_co.paa"};
	weaponPoolAvailable = 1;
	class ItemInfo: InventoryItem_Base_F 
	{
		hmdType = 0;
		mass = 5;
		type = 616;
		allowedSlots[] = {616,701, 801, 901};
		modelOff = "\exilelife_assets\Models\Items\Clothing\TopWear\ExileLife_Clothing_ArmBand.p3d";
		uniformModel = "\exilelife_assets\Models\Items\Clothing\TopWear\ExileLife_Clothing_ArmBand.p3d";
		uniformClass = "ExileLife_ArmBand_Syndicate";
		hiddenSelections[] = {"Camo"};
		hiddenSelectionsTextures[] = {"exilelife_assets\models\items\clothing\topwear\images\exilelife_clothing_mafia_armband_co.paa"};
	};	
};
class ExileLife_Clothing_Cartel_ArmBand: ExileLife_Clothing_Mafia_ArmBand
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "ExileLife Cartel Armband";
	descriptionShort = "No Armor";
	picture = "\exilelife_assets\texture\ui\Inventory\Cartel_icon_ca.paa";
	model = "\exilelife_assets\Models\Items\Clothing\TopWear\ExileLife_Clothing_ArmBand.p3d";
	hiddenSelections[] = {"camo"};
	hiddenSelectionsTextures[] = {"exilelife_assets\models\items\clothing\topwear\images\exilelife_clothing_cartel_armband_co.paa"};
	weaponPoolAvailable = 1;
	class ItemInfo: InventoryItem_Base_F 
	{
		hmdType = 0;
		mass = 5;
		type = 616;
		allowedSlots[] = {616,701, 801, 901};
		modelOff = "\exilelife_assets\Models\Items\Clothing\TopWear\ExileLife_Clothing_ArmBand.p3d";
		uniformModel = "\exilelife_assets\Models\Items\Clothing\TopWear\ExileLife_Clothing_ArmBand.p3d";
		uniformClass = "ExileLife_ArmBand_Cartel";
		hiddenSelections[] = {"Camo"};
		hiddenSelectionsTextures[] = {"exilelife_assets\models\items\clothing\topwear\images\exilelife_clothing_mafia_armband_co.paa"};
	};	
};
class ExileLife_Headgear_BubbaFat: ItemCore
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "ExileLife BubbaFat Helmet";
	descriptionShort = "Armored";
	picture = "\exilelife_assets\Models\Items\Clothing\Helmets\Images\ExileLife_Clothing_BubbaFat.paa";
	model = "\exilelife_assets\Models\Items\Clothing\Helmets\ExileLife_Clothing_BubbaFat_World.p3d";
	hiddenSelections[] = {};
	hiddenSelectionsTextures[] = {};
	hiddenUnderwaterSelections[] = {};
	hiddenUnderwaterSelectionsTextures[] = {};
	weaponPoolAvailable = 1;
	class ItemInfo: HeadgearItem 
	{
		hmdType = 0;
		mass = 30;
		allowedSlots[] = {616,701, 801, 901};		
		modelOff = "\exilelife_assets\Models\Items\Clothing\Helmets\ExileLife_Clothing_BubbaFat.p3d";
		uniformModel = "\exilelife_assets\Models\Items\Clothing\Helmets\ExileLife_Clothing_BubbaFat.p3d";
	};
};
class ExileLife_Headgear_CowboyHat: ItemCore
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "ExileLife Cowboy Hat";
	descriptionShort = "No Armor";
	picture = "\exilelife_assets\Models\Items\Clothing\Hats\Images\ExileLife_Clothing_CowboyHat.paa";
	model = "\exilelife_assets\Models\Items\Clothing\Hats\ExileLife_Clothing_CowboyHat_World.p3d";
	hiddenSelections[] = {};
	hiddenSelectionsTextures[] = {};
	hiddenUnderwaterSelections[] = {};
	hiddenUnderwaterSelectionsTextures[] = {};
	weaponPoolAvailable = 1;
	class ItemInfo: HeadgearItem 
	{
		hmdType = 0;
		mass = 30;
		allowedSlots[] = {616,701, 801, 901};		
		modelOff = "\exilelife_assets\Models\Items\Clothing\Hats\ExileLife_Clothing_CowboyHat.p3d";
		uniformModel = "\exilelife_assets\Models\Items\Clothing\Hats\ExileLife_Clothing_CowboyHat.p3d";
	};
};
class ExileLife_Headgear_ExiumMan: ItemCore
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "ExileLife ExiumMan Helmet";
	descriptionShort = "Armored";
	picture = "\exilelife_assets\Models\Items\Clothing\Helmets\Images\ExileLife_Clothing_ExiumMan.paa";
	model = "\exilelife_assets\Models\Items\Clothing\Helmets\ExileLife_Clothing_ExiumMan_World.p3d";
	hiddenSelections[] = {};
	hiddenSelectionsTextures[] = {};
	hiddenUnderwaterSelections[] = {};
	hiddenUnderwaterSelectionsTextures[] = {};
	weaponPoolAvailable = 1;
	class ItemInfo: HeadgearItem 
	{
		hmdType = 0;
		mass = 30;
		allowedSlots[] = {616,701, 801, 901};		
		modelOff = "\exilelife_assets\Models\Items\Clothing\Helmets\ExileLife_Clothing_ExiumMan.p3d";
		uniformModel = "\exilelife_assets\Models\Items\Clothing\Helmets\ExileLife_Clothing_ExiumMan.p3d";
	};
};
class ExileLife_Headgear_GuardHat: ItemCore
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "ExileLife Guard Hat";
	descriptionShort = "No Armor";
	picture = "\exilelife_assets\Models\Items\Clothing\Hats\Images\ExileLife_Clothing_GuardHat.paa";
	model = "\exilelife_assets\Models\Items\Clothing\Hats\ExileLife_Clothing_CowboyHat_World.p3d";
	hiddenSelections[] = {};
	hiddenSelectionsTextures[] = {};
	hiddenUnderwaterSelections[] = {};
	hiddenUnderwaterSelectionsTextures[] = {};
	weaponPoolAvailable = 1;
	class ItemInfo: HeadgearItem 
	{
		hmdType = 0;
		mass = 30;
		allowedSlots[] = {616,701, 801, 901};		
		modelOff = "\exilelife_assets\Models\Items\Clothing\Hats\ExileLife_Clothing_GuardHat.p3d";
		uniformModel = "\exilelife_assets\Models\Items\Clothing\Hats\ExileLife_Clothing_GuardHat.p3d";
	};
};
class ExileLife_Headgear_WarHelmet: ItemCore
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "ExileLife War Helmet";
	descriptionShort = "Armored";
	picture = "\exilelife_assets\Models\Items\Clothing\Helmets\Images\ExileLife_Clothing_WarHelmet.paa";
	model = "\exilelife_assets\Models\Items\Clothing\Helmets\ExileLife_Clothing_WarHelmet_World.p3d";
	hiddenSelections[] = {};
	hiddenSelectionsTextures[] = {};
	hiddenUnderwaterSelections[] = {};
	hiddenUnderwaterSelectionsTextures[] = {};
	weaponPoolAvailable = 1;
	class ItemInfo: HeadgearItem 
	{
		hmdType = 0;
		mass = 30;
		allowedSlots[] = {616,701, 801, 901};		
		modelOff = "\exilelife_assets\Models\Items\Clothing\Helmets\ExileLife_Clothing_WarHelmet.p3d";
		uniformModel = "\exilelife_assets\Models\Items\Clothing\Helmets\ExileLife_Clothing_WarHelmet.p3d";
	};
};
class ExileLife_Headgear_WarHelmet_Winter: ExileLife_Headgear_WarHelmet
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "ExileLife War Helmet Winter";
	picture = "\exilelife_assets\Models\Items\Clothing\Helmets\Images\ExileLife_Clothing_WarHelmet_Winter.paa";	
	hiddenSelections[] = {"","Camo"};
	hiddenselectionstextures[] = {"","\exilelife_assets\Models\Items\Clothing\Helmets\Images\ExileLife_Clothing_WarHelmet_Winter_co.paa"};
	class ItemInfo: HeadgearItem 
	{
		hmdType = 0;
		mass = 30;
		allowedSlots[] = {616,701, 801, 901};		
		modelOff = "\exilelife_assets\Models\Items\Clothing\Helmets\ExileLife_Clothing_WarHelmet.p3d";
		uniformModel = "\exilelife_assets\Models\Items\Clothing\Helmets\ExileLife_Clothing_WarHelmet.p3d";
		hiddenSelections[] = {"","Camo"};
		hiddenselectionstextures[] = {"","\exilelife_assets\Models\Items\Clothing\Helmets\Images\ExileLife_Clothing_WarHelmet_Winter_co.paa"};
	};
};
class ExileLife_Headgear_WarHelmet_Jungle: ExileLife_Headgear_WarHelmet
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "ExileLife War Helmet Jungle";
	picture = "\exilelife_assets\Models\Items\Clothing\Helmets\Images\ExileLife_Clothing_WarHelmet_Jungle.paa";		
	hiddenSelections[] = {"","Camo"};
	hiddenselectionstextures[] = {"","\exilelife_assets\Models\Items\Clothing\Helmets\Images\ExileLife_Clothing_WarHelmet_Jungle_co.paa"};
	class ItemInfo: HeadgearItem 
	{
		hmdType = 0;
		mass = 30;
		allowedSlots[] = {616,701, 801, 901};		
		modelOff = "\exilelife_assets\Models\Items\Clothing\Helmets\ExileLife_Clothing_WarHelmet.p3d";
		uniformModel = "\exilelife_assets\Models\Items\Clothing\Helmets\ExileLife_Clothing_WarHelmet.p3d";
		hiddenSelections[] = {"","Camo"};
		hiddenselectionstextures[] = {"","\exilelife_assets\Models\Items\Clothing\Helmets\Images\ExileLife_Clothing_WarHelmet_Jungle_co.paa"};
	};
};
	class ExileLife_Uniform_BoldNBrash: Uniform_Base 
	{
		scope = 2;
		displayName = "Bold N Brash";
		author = "ExileLife Mod Team";
		picture = "\exile_assets\texture\item\Exile_Uniform_Woodland.paa";
		model = "\A3\Characters_F\Common\Suitpacks\suitpack_civilian_F.p3d";
		hiddenSelections[] = {"camo"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\ExileLife_Uniform_BoldNBrash.paa"};
		class ItemInfo: UniformItem 
		{
			uniformModel = "-";
			uniformClass = "ExileLife_Unit_BoldNBrash";
			containerClass = "Supply80";
			mass = 40;
		};
	};
	class ExileLife_Uniform_Edgy: Uniform_Base 
	{
		scope = 2;
		displayName = "So Edgy";
		author = "ExileLife Mod Team";
		picture = "\exile_assets\texture\item\Exile_Uniform_Woodland.paa";
		model = "\A3\Characters_F\Common\Suitpacks\suitpack_civilian_F.p3d";
		hiddenSelections[] = {"camo"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\ExileLife_Uniform_Edgy.paa"};
		class ItemInfo: UniformItem 
		{
			uniformModel = "-";
			uniformClass = "ExileLife_Unit_Edgy";
			containerClass = "Supply80";
			mass = 40;
		};
	};
	class ExileLife_Uniform_GangsterSpongebob: Uniform_Base 
	{
		scope = 2;
		displayName = "Gangster Bob";
		author = "ExileLife Mod Team";
		picture = "\exile_assets\texture\item\Exile_Uniform_Woodland.paa";
		model = "\A3\Characters_F\Common\Suitpacks\suitpack_civilian_F.p3d";
		hiddenSelections[] = {"camo"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\ExileLife_Uniform_GangsterSpongebob.paa"};
		class ItemInfo: UniformItem 
		{
			uniformModel = "-";
			uniformClass = "ExileLife_Unit_GangsterSpongebob";
			containerClass = "Supply80";
			mass = 40;
		};
	};
	class ExileLife_Uniform_OldSchoolCherno: Uniform_Base 
	{
		scope = 2;
		displayName = "Chernogorsk Veteran";
		author = "ExileLife Mod Team";
		picture = "\exile_assets\texture\item\Exile_Uniform_Woodland.paa";
		model = "\A3\Characters_F\Common\Suitpacks\suitpack_civilian_F.p3d";
		hiddenSelections[] = {"camo"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\ExileLife_Uniform_OldSchoolCherno.paa"};
		class ItemInfo: UniformItem 
		{
			uniformModel = "-";
			uniformClass = "ExileLife_Unit_OldSchoolCherno";
			containerClass = "Supply80";
			mass = 40;
		};
	};
	class ExileLife_Uniform_P2W: Uniform_Base 
	{
		scope = 2;
		displayName = "P2W T-Shirt";
		author = "ExileLife Mod Team";
		picture = "\exile_assets\texture\item\Exile_Uniform_Woodland.paa";
		model = "\A3\Characters_F\Common\Suitpacks\suitpack_civilian_F.p3d";
		hiddenSelections[] = {"camo"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\ExileLife_Uniform_P2W.paa"};
		class ItemInfo: UniformItem 
		{
			uniformModel = "-";
			uniformClass = "ExileLife_Unit_P2W";
			containerClass = "Supply80";
			mass = 40;
		};
	};
	class ExileLife_Uniform_PeanutbutterCat: Uniform_Base 
	{
		scope = 2;
		displayName = "Puss Magnet";
		author = "ExileLife Mod Team";
		picture = "\exile_assets\texture\item\Exile_Uniform_Woodland.paa";
		model = "\A3\Characters_F\Common\Suitpacks\suitpack_civilian_F.p3d";
		hiddenSelections[] = {"camo"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\ExileLife_Uniform_PeanutbutterCat.paa"};
		class ItemInfo: UniformItem 
		{
			uniformModel = "-";
			uniformClass = "ExileLife_Unit_PeanutbutterCat";
			containerClass = "Supply80";
			mass = 40;
		};
	};
	class ExileLife_Uniform_Tiedie: Uniform_Base 
	{
		scope = 2;
		displayName = "Hippie Tiedie";
		author = "ExileLife Mod Team";
		picture = "\exile_assets\texture\item\Exile_Uniform_Woodland.paa";
		model = "\A3\Characters_F\Common\Suitpacks\suitpack_civilian_F.p3d";
		hiddenSelections[] = {"camo"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\ExileLife_Uniform_Tiedie.paa"};
		class ItemInfo: UniformItem 
		{
			uniformModel = "-";
			uniformClass = "ExileLife_Unit_Tiedie";
			containerClass = "Supply80";
			mass = 40;
		};
	};
	class ExileLife_Uniform_Waddup: Uniform_Base 
	{
		scope = 2;
		displayName = "Waddup";
		author = "ExileLife Mod Team";
		picture = "\exile_assets\texture\item\Exile_Uniform_Woodland.paa";
		model = "\A3\Characters_F\Common\Suitpacks\suitpack_civilian_F.p3d";
		hiddenSelections[] = {"camo"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\ExileLife_Uniform_Waddup.paa"};
		class ItemInfo: UniformItem 
		{
			uniformModel = "-";
			uniformClass = "ExileLife_Unit_Waddup";
			containerClass = "Supply80";
			mass = 40;
		};
	};
	class ExileLife_Uniform_PoloBlack_Brown: Uniform_Base 
	{
		scope = 2;
		displayName = "Black Polo Brown Pants";
		author = "ExileLife Mod Team";
		picture = "\exile_assets\texture\item\Exile_Uniform_Woodland.paa";
		model = "\A3\Characters_F\Common\Suitpacks\suitpack_civilian_F.p3d";
		hiddenSelections[] = {"camo"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\ExileLife_Uniform_PoloBlack_Brown.paa"};
		class ItemInfo: UniformItem 
		{
			uniformModel = "-";
			uniformClass = "ExileLife_Unit_PoloBlack_Brown";
			containerClass = "Supply80";
			mass = 40;
		};
	};
	class ExileLife_Uniform_PoloBlue_White: ExileLife_Uniform_PoloBlack_Brown
	{
		displayName = "Blue Polo White Pants";
		picture = "\exile_assets\texture\item\Exile_Uniform_Woodland.paa";
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\ExileLife_Uniform_PoloBlue_White.paa"};
		class ItemInfo: UniformItem 
		{
			uniformModel = "-";
			uniformClass = "ExileLife_Unit_PoloBlue_White";
			containerClass = "Supply80";
			mass = 40;
		};
	};
	class ExileLife_Uniform_PoloGrey_Maroon: ExileLife_Uniform_PoloBlack_Brown
	{
		displayName = "Grey Polo Maroon Pants";
		picture = "\exile_assets\texture\item\Exile_Uniform_Woodland.paa";
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\ExileLife_Uniform_PoloGrey_Maroon.paa"};
		class ItemInfo: UniformItem 
		{
			uniformModel = "-";
			uniformClass = "ExileLife_Unit_PoloGrey_Maroon";
			containerClass = "Supply80";
			mass = 40;
		};
	};
	class ExileLife_Uniform_PoloWhite_Blue: ExileLife_Uniform_PoloBlack_Brown
	{
		displayName = "White Polo Blue Pants";
		picture = "\exile_assets\texture\item\Exile_Uniform_Woodland.paa";
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\ExileLife_Uniform_PoloWhite_Blue.paa"};
		class ItemInfo: UniformItem 
		{
			uniformModel = "-";
			uniformClass = "ExileLife_Unit_PoloWhite_Blue";
			containerClass = "Supply80";
			mass = 40;
		};
	};
	class ExileLife_Uniform_PoloCustom_FoolBox: ExileLife_Uniform_PoloBlack_Brown
	{
		displayName = "Custom Polo FoolBox";
		picture = "\exile_assets\texture\item\Exile_Uniform_Woodland.paa";
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\ExileLife_Uniform_PoloCustom_FoolBox.paa"};
		class ItemInfo: UniformItem 
		{
			uniformModel = "-";
			uniformClass = "ExileLife_Unit_PoloCustom_FoolBox";
			containerClass = "Supply80";
			mass = 40;
		};
	};
	class ExileLife_Uniform_CartelTshirtClean: Uniform_Base 
	{
		scope = 2;
		displayName = "Cartel T-Shirt Clean";
		author = "ExileLife Mod Team";
		picture = "\exile_assets\texture\item\Exile_Uniform_Woodland.paa";
		model = "\A3\Characters_F\Common\Suitpacks\suitpack_civilian_F.p3d";
		hiddenSelections[] = {"camo"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\cartel\ExileLife_Uniform_CartelTshirtClean.paa"};
		class ItemInfo: UniformItem {
			uniformModel = "-";
			uniformClass = "ExileLife_Unit_CartelTshirtClean";
			containerClass = "Supply80";
			mass = 40;
		};
	};
	class ExileLife_Uniform_CartelTshirtDirty: Uniform_Base 
	{
		scope = 2;
		displayName = "Cartel T-Shirt Dirty";
		author = "ExileLife Mod Team";
		picture = "\exile_assets\texture\item\Exile_Uniform_Woodland.paa";
		model = "\A3\Characters_F\Common\Suitpacks\suitpack_civilian_F.p3d";
		hiddenSelections[] = {"camo"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\cartel\ExileLife_Uniform_CartelTshirtDirty.paa"};
		class ItemInfo: UniformItem {
			uniformModel = "-";
			uniformClass = "ExileLife_Unit_CartelTshirtDirty";
			containerClass = "Supply80";
			mass = 40;
		};
	};
	class ExileLife_Uniform_CartelVestClean: Uniform_Base 
	{
		scope = 2;
		displayName = "Cartel Vest Clean";
		author = "ExileLife Mod Team";
		picture = "\exile_assets\texture\item\Exile_Uniform_Woodland.paa";
		model = "\A3\Characters_F\Common\Suitpacks\suitpack_civilian_F.p3d";
		hiddenSelections[] = {"camo"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\cartel\ExileLife_Uniform_CartelVestClean.paa"};
		class ItemInfo: UniformItem {
			uniformModel = "-";
			uniformClass = "ExileLife_Unit_CartelVestClean";
			containerClass = "Supply80";
			mass = 40;
		};
	};
	class ExileLife_Uniform_CartelVestDirty: Uniform_Base 
	{
		scope = 2;
		displayName = "Cartel Vest Dirty";
		author = "ExileLife Mod Team";
		picture = "\exile_assets\texture\item\Exile_Uniform_Woodland.paa";
		model = "\A3\Characters_F\Common\Suitpacks\suitpack_civilian_F.p3d";
		hiddenSelections[] = {"camo"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\cartel\ExileLife_Uniform_CartelVestDirty.paa"};
		class ItemInfo: UniformItem {
			uniformModel = "-";
			uniformClass = "ExileLife_Unit_CartelVestDirty";
			containerClass = "Supply80";
			mass = 40;
		};
	};
	class ExileLife_Uniform_Guard: Uniform_Base
	{
		scope = 2;
		displayName = "Guard Desert Camo";
		author = "ExileLife Mod Team";
		picture = "\exile_assets\texture\item\Exile_Uniform_BambiOverall.paa";
		model = "\A3\Characters_F\Common\Suitpacks\suitpack_civilian_F.p3d";
		hiddenSelections[] = {"camo"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\guard\ExileLife_Uniform_G_DirtyDesertCamo.paa"};
		class ItemInfo: UniformItem
		{
			uniformModel = "-";
			uniformClass = "ExileLife_Unit_Guard";
			containerClass = "Supply40";
			mass = 30;
		};
	};
	class ExileLife_Uniform_Guard_BasicBlue: Uniform_Base
	{
		scope = 2;
		displayName = "Guard Basic Blue";
		author = "ExileLife Mod Team";
		picture = "\exile_assets\texture\item\Exile_Uniform_BambiOverall.paa";
		model = "\A3\Characters_F\Common\Suitpacks\suitpack_civilian_F.p3d";
		hiddenSelections[] = {"camo"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\guard\ExileLife_Uniform_G_DirtyBasicBlue.paa"};
		class ItemInfo: UniformItem
		{
			uniformModel = "-";
			uniformClass = "ExileLife_Unit_Guard_BasicBlue";
			containerClass = "Supply40";
			mass = 30;
		};
	};
	class ExileLife_Uniform_Guard_BasicBlack: Uniform_Base
	{
		scope = 2;
		displayName = "Guard Basic Black";
		author = "ExileLife Mod Team";
		picture = "\exile_assets\texture\item\Exile_Uniform_BambiOverall.paa";
		model = "\A3\Characters_F\Common\Suitpacks\suitpack_civilian_F.p3d";
		hiddenSelections[] = {"camo"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\guard\ExileLife_Uniform_G_DirtyBasicBlack.paa"};
		class ItemInfo: UniformItem
		{
			uniformModel = "-";
			uniformClass = "ExileLife_Unit_Guard_BasicBlack";
			containerClass = "Supply40";
			mass = 30;
		};
	};
	class ExileLife_Uniform_MafiaTshirtClean: Uniform_Base 
	{
		scope = 2;
		displayName = "Mafia T-Shirt Clean";
		author = "ExileLife Mod Team";
		picture = "\exile_assets\texture\item\Exile_Uniform_Woodland.paa";
		model = "\A3\Characters_F\Common\Suitpacks\suitpack_civilian_F.p3d";
		hiddenSelections[] = {"camo"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\mafia\ExileLife_Uniform_MafiaTshirtClean.paa"};
		class ItemInfo: UniformItem {
			uniformModel = "-";
			uniformClass = "ExileLife_Unit_MafiaTshirtClean";
			containerClass = "Supply80";
			mass = 40;
		};
	};
	class ExileLife_Uniform_MafiaTshirtDirty: Uniform_Base 
	{
		scope = 2;
		displayName = "Mafia T-Shirt Dirty";
		author = "ExileLife Mod Team";
		picture = "\exile_assets\texture\item\Exile_Uniform_Woodland.paa";
		model = "\A3\Characters_F\Common\Suitpacks\suitpack_civilian_F.p3d";
		hiddenSelections[] = {"camo"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\mafia\ExileLife_Uniform_MafiaTshirtDirty.paa"};
		class ItemInfo: UniformItem {
			uniformModel = "-";
			uniformClass = "ExileLife_Unit_MafiaTshirtDirty";
			containerClass = "Supply80";
			mass = 40;
		};
	};
	class ExileLife_Uniform_MafiaVestClean: Uniform_Base 
	{
		scope = 2;
		displayName = "Mafia Vest Clean";
		author = "ExileLife Mod Team";
		picture = "\exile_assets\texture\item\Exile_Uniform_Woodland.paa";
		model = "\A3\Characters_F\Common\Suitpacks\suitpack_civilian_F.p3d";
		hiddenSelections[] = {"camo"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\mafia\ExileLife_Uniform_MafiaVestClean.paa"};
		class ItemInfo: UniformItem {
			uniformModel = "-";
			uniformClass = "ExileLife_Unit_MafiaVestClean";
			containerClass = "Supply80";
			mass = 40;
		};
	};
	class ExileLife_Uniform_MafiaVestDirty: Uniform_Base 
	{
		scope = 2;
		displayName = "Mafia Vest Dirty";
		author = "ExileLife Mod Team";
		picture = "\exile_assets\texture\item\Exile_Uniform_Woodland.paa";
		model = "\A3\Characters_F\Common\Suitpacks\suitpack_civilian_F.p3d";
		hiddenSelections[] = {"camo"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\mafia\ExileLife_Uniform_MafiaVestDirty.paa"};
		class ItemInfo: UniformItem {
			uniformModel = "-";
			uniformClass = "ExileLife_Unit_MafiaVestDirty";
			containerClass = "Supply80";
			mass = 40;
		};
	};
	class ExileLife_Uniform_SyndicateTshirtClean: Uniform_Base 
	{
		scope = 2;
		displayName = "Syndicate T-Shirt Clean";
		author = "ExileLife Mod Team";
		picture = "\exile_assets\texture\item\Exile_Uniform_Woodland.paa";
		model = "\A3\Characters_F\Common\Suitpacks\suitpack_civilian_F.p3d";
		hiddenSelections[] = {"camo"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\syndicate\ExileLife_Uniform_SyndicateTshirtClean.paa"};
		class ItemInfo: UniformItem {
			uniformModel = "-";
			uniformClass = "ExileLife_Unit_SyndicateTshirtClean";
			containerClass = "Supply80";
			mass = 40;
		};
	};
	class ExileLife_Uniform_SyndicateTshirtDirty: Uniform_Base 
	{
		scope = 2;
		displayName = "Syndicate T-Shirt Dirty";
		author = "ExileLife Mod Team";
		picture = "\exile_assets\texture\item\Exile_Uniform_Woodland.paa";
		model = "\A3\Characters_F\Common\Suitpacks\suitpack_civilian_F.p3d";
		hiddenSelections[] = {"camo"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\syndicate\ExileLife_Uniform_SyndicateTshirtDirty.paa"};
		class ItemInfo: UniformItem {
			uniformModel = "-";
			uniformClass = "ExileLife_Unit_SyndicateTshirtDirty";
			containerClass = "Supply80";
			mass = 40;
		};
	};
	class ExileLife_Uniform_SyndicateVestClean: Uniform_Base 
	{
		scope = 2;
		displayName = "Syndicate Vest Clean";
		author = "ExileLife Mod Team";
		picture = "\exile_assets\texture\item\Exile_Uniform_Woodland.paa";
		model = "\A3\Characters_F\Common\Suitpacks\suitpack_civilian_F.p3d";
		hiddenSelections[] = {"camo"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\syndicate\ExileLife_Uniform_SyndicateVestClean.paa"};
		class ItemInfo: UniformItem {
			uniformModel = "-";
			uniformClass = "ExileLife_Unit_SyndicateVestClean";
			containerClass = "Supply80";
			mass = 40;
		};
	};
	class ExileLife_Uniform_SyndicateVestDirty: Uniform_Base 
	{
		scope = 2;
		displayName = "Syndicate Vest Dirty";
		author = "ExileLife Mod Team";
		picture = "\exile_assets\texture\item\Exile_Uniform_Woodland.paa";
		model = "\A3\Characters_F\Common\Suitpacks\suitpack_civilian_F.p3d";
		hiddenSelections[] = {"camo"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\syndicate\ExileLife_Uniform_SyndicateVestDirty.paa"};
		class ItemInfo: UniformItem {
			uniformModel = "-";
			uniformClass = "ExileLife_Unit_SyndicateVestDirty";
			containerClass = "Supply80";
			mass = 40;
		};
	};
	class ExileLife_Uniform_YakuzaTshirtClean: Uniform_Base 
	{
		scope = 2;
		displayName = "Yakuza T-Shirt Clean";
		author = "ExileLife Mod Team";
		picture = "\exile_assets\texture\item\Exile_Uniform_Woodland.paa";
		model = "\A3\Characters_F\Common\Suitpacks\suitpack_civilian_F.p3d";
		hiddenSelections[] = {"camo"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\yakuza\ExileLife_Uniform_YakuzaTshirtClean.paa"};
		class ItemInfo: UniformItem {
			uniformModel = "-";
			uniformClass = "ExileLife_Unit_YakuzaTshirtClean";
			containerClass = "Supply80";
			mass = 40;
		};
	};
	class ExileLife_Uniform_YakuzaTshirtDirty: Uniform_Base 
	{
		scope = 2;
		displayName = "Yakuza T-Shirt Dirty";
		author = "ExileLife Mod Team";
		picture = "\exile_assets\texture\item\Exile_Uniform_Woodland.paa";
		model = "\A3\Characters_F\Common\Suitpacks\suitpack_civilian_F.p3d";
		hiddenSelections[] = {"camo"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\yakuza\ExileLife_Uniform_YakuzaTshirtDirty.paa"};
		class ItemInfo: UniformItem {
			uniformModel = "-";
			uniformClass = "ExileLife_Unit_YakuzaTshirtDirty";
			containerClass = "Supply80";
			mass = 40;
		};
	};
	class ExileLife_Uniform_YakuzaVestClean: Uniform_Base 
	{
		scope = 2;
		displayName = "Yakuza Vest Clean";
		author = "ExileLife Mod Team";
		picture = "\exile_assets\texture\item\Exile_Uniform_Woodland.paa";
		model = "\A3\Characters_F\Common\Suitpacks\suitpack_civilian_F.p3d";
		hiddenSelections[] = {"camo"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\yakuza\ExileLife_Uniform_YakuzaVestClean.paa"};
		class ItemInfo: UniformItem {
			uniformModel = "-";
			uniformClass = "ExileLife_Unit_YakuzaVestClean";
			containerClass = "Supply80";
			mass = 40;
		};
	};
	class ExileLife_Uniform_YakuzaVestDirty: Uniform_Base 
	{
		scope = 2;
		displayName = "Yakuza Vest Dirty";
		author = "ExileLife Mod Team";
		picture = "\exile_assets\texture\item\Exile_Uniform_Woodland.paa";
		model = "\A3\Characters_F\Common\Suitpacks\suitpack_civilian_F.p3d";
		hiddenSelections[] = {"camo"};
		hiddenSelectionsTextures[] = {"\exilelife_assets\texture\units\prisoner\yakuza\ExileLife_Uniform_YakuzaVestDirty.paa"};
		class ItemInfo: UniformItem {
			uniformModel = "-";
			uniformClass = "ExileLife_Unit_YakuzaVestDirty";
			containerClass = "Supply80";
			mass = 40;
		};
	};
class Exile_Headgear_GasMask: ItemCore
{
	scope = 2;
	author = "ExileLife Mod Team";
	displayName = "DO NOT USE THIS MASK IN EXILE LIFE";
	descriptionShort = "No Armor";
	picture = "\exile_assets\texture\item\Exile_Clothing_Gasmask.paa";
	model = "\exile_assets\model\Exile_Clothing_Gasmask_World.p3d";
	hiddenSelections[] = {};
	hiddenSelectionsTextures[] = {};
	hiddenUnderwaterSelections[] = {};
	hiddenUnderwaterSelectionsTextures[] = {};
	weaponPoolAvailable = 1;
	simulation = "Weapon";
	optics = 0;
	useModelOptics = 0;
	class ItemInfo: HeadgearItem
	{
		hmdType = 0;
		mass = 60;
		type = 617;		
		modelOff = "\exile_assets\model\Exile_Clothing_Gasmask.p3d";
		uniformModel = "\exile_assets\model\Exile_Clothing_Gasmask.p3d";
	};
};
class ExileLife_Melee_FishingRod: Exile_Melee_Abstract 
{
	scope = 2;
	author = "ExileLife Mod Team";
	_generalMacro = "ExileLife_Melee_FishingRod";
	model = "\exilelife_assets\models\Items\Tools\ExileLife_Melee_FishingRod.p3d";
	displayName = "Fishing Rod";
	descriptionShort = "Go and be a fisher of fish!";
	picture = "\exilelife_assets\models\Items\Tools\Images\ExileLife_FishingRod.paa";
	handAnim[] = {"OFP2_ManSkeleton", "\exile_assets\animation\Exile_SledgeHammer_Idle01.rtm"};
	magazines[] = { "ExileLife_Item_worm" }; 
	canShootInWater = 1;
	class WeaponSlotsInfo 
	{
		mass = 30;
	};
	class Hack: Mode_FullAuto
	{
		burst = 0;
		autoFire = 1;
		flashSize = 0;
		dispersion = 0;
		sounds[] = {"StandardSound"};
		minRange = 0.3;
		minRangeProbab = 0.33;
		midRange = 0.3;
		midRangeProbab = 0.33;
		maxRange = 0.3;
		maxRangeProbab = 0.34;
		reloadTime = 1.75; 
		class StandardSound
		{
			begin1[]= {"\exilelife_assets\sound\swoosh01.ogg", "db3", 1, 100};
			begin2[]= {"\exilelife_assets\sound\swoosh02.ogg", "db3", 1, 100};
			closure1[] = {"", 1};
			soundBegin[] = {"begin1", 1, "begin2", 1};
			soundClosure[]= {"closure1", 1};
			weaponSoundEffect = "DefaultRifle";
		};
	};
	class Melee
	{
		primaryAnimation[] = {"playActionNow","GestureExileSledgeHammerSwing01"}; 
		secondaryAnimation[] = {}; 
		swingTimeHitStart = 0.5; 
		swingTimeHitFinish = 0.7; 
		swingMemoryPoints[] = {"launcher","weapon"}; 
		ammo = "ExileLife_Ammo_FishingRod";
		weaponPositions[] = {{0,1.2,0.55},{-0.105469,1.92598,0.65}}; 
		executePrimary = ""; 
		executeSecondary = "ExileLifeClient_object_player_event_onFired_fishingRod";	
	};
};
class ExileLife_Melee_GardenHoe: Exile_Melee_Abstract 
{
	scope = 2;
	author = "ExileLife Mod Team";
	_generalMacro = "ExileLife_Melee_GardenHoe";
	model = "\exilelife_assets\models\Items\Tools\ExileLife_Melee_GardenHoe.p3d";
	displayName = "Garden Hoe";
	descriptionShort = "A Stupid Hoe - Nicki Minaj";
	picture = "\exilelife_assets\models\Items\Tools\Images\ExileLife_GardenHoe.paa";
	handAnim[] = {"OFP2_ManSkeleton", "\exile_assets\animation\Exile_SledgeHammer_Idle01.rtm"};
	magazines[] = {"ExileLife_Magazine_Melee"};
	class WeaponSlotsInfo 
	{
		hmdType = 0;
		mass = 40;
	};	
	class Hack: Mode_FullAuto 
	{
		burst = 0;
		autoFire = 1;
		flashSize = 0;
		dispersion = 0;
		sounds[] = {"StandardSound"};
		minRange = 0.300000;
		minRangeProbab = 0.330000;
		midRange = 0.300000;
		midRangeProbab = 0.330000;
		maxRange = 0.300000;
		maxRangeProbab = 0.340000;
		reloadTime = 1.750000;
		class StandardSound
		{
			begin1[]= {"\exilelife_assets\sound\swoosh01.ogg", "db3", 1, 100};
			begin2[]= {"\exilelife_assets\sound\swoosh02.ogg", "db3", 1, 100};
			closure1[] = {"", 1};
			soundBegin[] = {"begin1", 1, "begin2", 1};
			soundClosure[]= {"closure1", 1};
			weaponSoundEffect = "DefaultHandTools";
		};
	};
	class Melee
	{
		unlimitedAmmo = 1;	
		primaryAnimation[] = {"playActionNow","GestureExileLifeHoeSwing01"}; 
		secondaryAnimation[] = {}; 
		disableShiftAnimation = 1;
		swingTimeHitStart = 0.5; 
		swingTimeHitFinish = 0.7; 
		ammo = "ExileLife_Ammo_GardenHoe";
		swingMemoryPoints[] = {"head","weapon"}; 
		weaponPositions[] = {{-0.405469,1.22598,1.214736},{-0.165469,1.65598,0.414736}}; 
		executePrimary = ""; 
		executeSecondary = "ExileLifeClient_object_player_event_onFired_gardenHoe";	
	};
};
class ExileLife_Melee_Guitar: Exile_Melee_Abstract {
	scope = 2;
	author = "ExileLife Mod Team";
	_generalMacro = "ExileLife_Melee_Guitar";
	model = "\exilelife_assets\models\Items\Tools\ExileLife_Melee_Guitar.p3d";
	displayName = "Guitar";
	descriptionShort = "This machine kills fascists and convicts!";
	picture = "\exilelife_assets\models\Items\Tools\Images\ExileLife_Guitar.paa";
	handAnim[] = {"OFP2_ManSkeleton", "\exile_assets\animation\Exile_SledgeHammer_Idle01.rtm"};
	magazines[] = {"ExileLife_Magazine_Melee"};
	class WeaponSlotsInfo {
		mass = 60;
	};
	class Hack: Mode_FullAuto {
		burst = 0;
		autoFire = 1;
		flashSize = 0;
		dispersion = 0;
		sounds[] = {"StandardSound"};
		minRange = 0.300000;
		minRangeProbab = 0.330000;
		midRange = 0.300000;
		midRangeProbab = 0.330000;
		maxRange = 0.300000;
		maxRangeProbab = 0.340000;
		reloadTime = 1.750000;
		class StandardSound {
			begin1[] = {"\exilelife_assets\sound\swoosh01.ogg", "db3", 1, 100};
			begin2[] = {"\exilelife_assets\sound\swoosh02.ogg", "db3", 1, 100};
			closure1[] = {"", 1};
			soundBegin[] = {"begin1", 1, "begin2", 1};
			soundClosure[] = {"closure1", 1};
			weaponSoundEffect = "DefaultRifle";
		};
	};
	class Melee
	{
		unlimitedAmmo = 1;	
		primaryAnimation[] = {"playActionNow","GestureExileSledgeHammerSwing01"}; 
		secondaryAnimation[] = {}; 
		swingTimeHitStart = 0.5; 
		swingTimeHitFinish = 0.7; 
		ammo = "ExileLife_Ammo_Axe";
		swingMemoryPoints[] = {"head","weapon"}; 
		weaponPositions[] = {{-0.105469,1,0.994736},{-0.105469,1.32598,0.7}}; 
		executePrimary = ""; 
		executeSecondary = "ExileLifeClient_object_player_event_onFired_guitar";	
	};
};
class ExileLife_Melee_PickAxe: Exile_Melee_Abstract 
{
	scope = 2;
	author = "ExileLife Mod Team";
	_generalMacro = "ExileLife_Melee_PickAxe";
	model = "\exilelife_assets\models\Items\Tools\ExileLife_Melee_PickAxe.p3d";
	displayName = "Pick Axe";
	descriptionShort = "Heigh ho, Heigh ho, it's off to work we go!";
	picture = "\exilelife_assets\models\Items\Tools\Images\ExileLife_Pickaxe.paa";
	handAnim[] = {"OFP2_ManSkeleton", "\exile_assets\animation\Exile_SledgeHammer_Idle01.rtm"};
	magazines[] = {"ExileLife_Magazine_Melee"};
	class WeaponSlotsInfo 
	{
		mass = 60;
	};
	class Hack: Mode_FullAuto 
	{
		burst = 0;
		autoFire = 1;
		flashSize = 0;
		dispersion = 0;
		sounds[] = {"StandardSound"};
		minRange = 0.300000;
		minRangeProbab = 0.330000;
		midRange = 0.300000;
		midRangeProbab = 0.330000;
		maxRange = 0.300000;
		maxRangeProbab = 0.340000;
		reloadTime = 1.750000;
		class StandardSound
		{
			begin1[]= {"\exilelife_assets\sound\swoosh01.ogg", "db3", 1, 100};
			begin2[]= {"\exilelife_assets\sound\swoosh02.ogg", "db3", 1, 100};
			closure1[] = {"", 1};
			soundBegin[] = {"begin1", 1, "begin2", 1};
			soundClosure[]= {"closure1", 1};
			weaponSoundEffect = "DefaultHandTools";
		};
	};
	class Melee
	{
		unlimitedAmmo = 1;	
		primaryAnimation[] = {"playActionNow","GestureExileSledgeHammerSwing01"}; 
		secondaryAnimation[] = {}; 
		swingTimeHitStart = 0.5; 
		swingTimeHitFinish = 0.7; 
		ammo = "ExileLife_Ammo_PickAxe";
		swingMemoryPoints[] = {"head","weapon"}; 
		weaponPositions[] = {{-0.125469,1.12598,0.894736},{-0.105469,1.24598,0.394736}}; 
		executePrimary = ""; 
		executeSecondary = "ExileLifeClient_object_player_event_onFired_pickAxe";	
	};
};
class Exile_Melee_Axe: Exile_Melee_Abstract 
{
	scope = 2;
	author = "ExileLife Mod Team";
	_generalMacro = "Exile_Melee_Axe";
	model = "\exile_assets\model\Exile_Melee_Axe.p3d";
	displayName = "Axe";
	descriptionShort = "An old-fashioned tool used to chop wood.";
	picture = "\exile_assets\texture\item\Exile_Item_Axe.paa";
	handAnim[] = {"OFP2_ManSkeleton", "\exile_assets\animation\Exile_Axe_Idle01.rtm"};
	magazines[] = {"ExileLife_Magazine_Melee"};
	class WeaponSlotsInfo 
	{
		mass = 35;
	};
	class Hack: Mode_FullAuto
	{
		burst = 0;
		autoFire = 1;
		flashSize = 0;
		dispersion = 0;
		sounds[] = {"StandardSound"};
		minRange = 0.3;
		minRangeProbab = 0.33;
		midRange = 0.3;
		midRangeProbab = 0.33;
		maxRange = 0.3;
		maxRangeProbab = 0.34;
		reloadTime = 1.0; 
		class StandardSound
		{
			begin1[]= {"\exile_assets\sound\swoosh01.ogg", "db3", 1, 100};
			begin2[]= {"\exile_assets\sound\swoosh02.ogg", "db3", 1, 100};
			closure1[] = {"", 1};
			soundBegin[] = {"begin1", 1, "begin2", 1};
			soundClosure[]= {"closure1", 1};
			weaponSoundEffect = "DefaultRifle";
		};
	};
	class Melee
	{
		unlimitedAmmo = 1;		
		primaryAnimation[] = {"playActionNow","GestureExileAxeSwing01"}; 
		secondaryAnimation[] = {}; 
		swingTimeHitStart = 0.3; 
		swingTimeHitFinish = 0.5; 
		ammo = "ExileLife_Ammo_Axe";
		swingMemoryPoints[] = {"head","weapon"}; 
		weaponPositions[] = {{0.315469,0.83598,0.724736},{0.255469,0.95598,0.454736}}; 
		executePrimary = ""; 
		executeSecondary = "ExileLifeClient_object_player_event_onFired_axe";	
	};
};
class Exile_Melee_Shovel: Exile_Melee_Abstract 
{
	scope = 2;
	author = "ExileLife Mod Team";
	_generalMacro = "Exile_Melee_Shovel";
	model = "\exile_assets\model\Exile_Melee_Shovel.p3d";
	displayName = "Shovel";
	descriptionShort = "Everyday I'm shovelling!";
	picture = "\exile_assets\texture\item\Exile_Item_Shovel.paa";
	handAnim[] = {"OFP2_ManSkeleton", "\exile_assets\animation\Exile_SledgeHammer_Idle01.rtm"};
	magazines[] = {"ExileLife_Magazine_Melee"};
	class WeaponSlotsInfo 
	{
		mass = 70;
	};
	class Hack: Mode_FullAuto
	{
		burst = 0;
		autoFire = 1;
		flashSize = 0;
		dispersion = 0;
		sounds[] = {"StandardSound"};
		minRange = 0.3;
		minRangeProbab = 0.33;
		midRange = 0.3;
		midRangeProbab = 0.33;
		maxRange = 0.3;
		maxRangeProbab = 0.34;
		reloadTime = 1.75; 
		class StandardSound
		{
			begin1[]= {"\exilelife_assets\sound\swoosh01.ogg", "db3", 1, 100};
			begin2[]= {"\exilelife_assets\sound\swoosh02.ogg", "db3", 1, 100};
			closure1[] = {"", 1};
			soundBegin[] = {"begin1", 1, "begin2", 1};
			soundClosure[]= {"closure1", 1};
			weaponSoundEffect = "DefaultHandTools";
		};
	};
	class Melee
	{
		unlimitedAmmo = 1;	
		primaryAnimation[] = {"playActionNow","GestureExileSledgeHammerSwing01"}; 
		secondaryAnimation[] = {}; 
		swingTimeHitStart = 0.5; 
		swingTimeHitFinish = 0.7; 
		ammo = "ExileLife_Ammo_Shovel";
		swingMemoryPoints[] = {"head","weapon"}; 
		weaponPositions[] = {{-0.2,1.16598,1.0514736},{-0.105469,1.32598,0.594736}}; 
		executePrimary = ""; 
		executeSecondary = "ExileLifeClient_object_player_event_onFired_shovel";	
	};
};
class Exile_Melee_SledgeHammer: Exile_Melee_Abstract 
{
	scope = 2;
	author = "ExileLife Mod Team";
	_generalMacro = "Exile_Melee_SledgeHammer";
	model = "\exile_assets\model\Exile_Melee_SledgeHammer.p3d";
	displayName = "Sledge Hammer";
	descriptionShort = "The ultimate solution when a normal hammer is simply not enough.";
	picture = "\exile_assets\texture\item\Exile_Item_SledgeHammer.paa";
	handAnim[] = {"OFP2_ManSkeleton", "\exile_assets\animation\Exile_SledgeHammer_Idle01.rtm"};
	magazines[] = {"ExileLife_Magazine_Melee"};
	class WeaponSlotsInfo 
	{
		mass = 70;
	};
	class Hack: Mode_FullAuto
	{
		burst = 0;
		autoFire = 1;
		flashSize = 0;
		dispersion = 0;
		sounds[] = {"StandardSound"};
		minRange = 0.3;
		minRangeProbab = 0.33;
		midRange = 0.3;
		midRangeProbab = 0.33;
		maxRange = 0.3;
		maxRangeProbab = 0.34;
		reloadTime = 1.75; 
		class StandardSound
		{
			begin1[]= {"\exilelife_assets\sound\swoosh01.ogg", "db3", 1, 100};
			begin2[]= {"\exilelife_assets\sound\swoosh02.ogg", "db3", 1, 100};
			closure1[] = {"", 1};
			soundBegin[] = {"begin1", 1, "begin2", 1};
			soundClosure[]= {"closure1", 1};
			weaponSoundEffect = "DefaultRifle";
		};
	};
	class Melee
	{
		unlimitedAmmo = 1;	
		primaryAnimation[] = {"playActionNow","GestureExileSledgeHammerSwing01"}; 
		secondaryAnimation[] = {}; 
		swingTimeHitStart = 0.5; 
		swingTimeHitFinish = 0.7; 
		ammo = "ExileLife_Ammo_Sledgehammer";
		swingMemoryPoints[] = {"head","weapon"}; 
		weaponPositions[] = {{-0.2,1.16598,1.0514736},{0.02,1.26598,0.5514736}}; 
		executePrimary = ""; 
		executeSecondary = "ExileLifeClient_object_player_event_onFired_sledgeHammer";	
	};
};	
	class ExileLife_Item_FlashLight: Pistol_Base_F
	{
		scope = 2;
		author = "ExileLife Mod Team";
		displayName = "FlashLight";
		descriptionShort = "Its a Flashlight!";
		picture = "\exilelife_assets\Models\Items\Tools\Images\ExileLife_Flashlight.paa";
		model = "\exilelife_assets\Models\Items\Tools\ExileLife_Item_Flashlight.p3d";
		magazines[] = {};		
		modelOptics = "-";
		begin1[] = {"",1.0,1,800};
		begin2[] = {"",1.0,1,800};
		soundBegin[] = {"begin1",0.5,"begin2",0.5};
		reloadMagazineSound[] = {"",1.0,1,20};
		recoil = "";
		recoilProne = "";
		distanceZoomMin = 50;
		distanceZoomMax = 50;
		class Library
		{
			libTextDesc = "Flash Light";
		};
		autoFire = 0;
		textureType = "semi";
		class GunParticles
		{
			class FirstEffect
			{
				effectName = "PistolCloud";
				positionName = "flash dir";
				directionName = "flash";
			};
			class SecondEffect
			{
				effectName = "PistolCloud";
				positionName = "flash dir";
				directionName = "outer flash";
			};			
		};
		class WeaponSlotsInfo
		{
			class MuzzleSlot: SlotInfo
			{
				linkProxy = "\A3\data_f\proxies\weapon_slots\MUZZLE";
				displayName = "$str_a3_cfgweapons_abr_base_f_weaponslotsinfo_muzzleslot0";
				compatibleItems[] = {};
			};
		};
		class Flashlight
		{
			color[] = {1,0.96,0.8,0.9};
			ambient[] = {0.9,0.81,0.7};
			intensity = 120;
			size = 1;
			innerAngle = 40;
			outerAngle = 120;
			coneFadeCoef = 2;
			position = "flash dir";
			direction = "outer flash";
			useFlare = 1;
			flareSize = 0.4;
			flareMaxDistance = "100.0f";
			dayLight = 0;
			class Attenuation
			{
				start = 0.5; 
				constant = 0.1;
				linear = 0.1;
				quadratic = 0.2;
				hardLimitStart = 27;
				hardLimitEnd = 34;
			};
			scale[] = {0};
		};	
	};
class ExileLife_Acc_Flashlight_Blue: acc_flashlight
{
	displayName = "Flashlight (Blue)";
	author = "ExileLife Mod Team";
	scope = 2;
	class ItemInfo: InventoryFlashLightItem_Base_F
	{
		class Flashlight
		{
			color[] = {100, 144, 180};
			ambient[] = {0.9,0.81,0.7};
			intensity = 100;
			size = 1;
			innerAngle = 5;
			outerAngle = 100;
			coneFadeCoef = 8;
			position = "flash dir";
			direction = "flash";
			useFlare = 1;
			flareSize = 1.4;
			flareMaxDistance = 100;
			dayLight = 0;
			class Attenuation 
			{
				start = 0;
				constant = 0.5;
				linear = 0.1;
				quadratic = 0.2;
				hardLimitStart = 27;
				hardLimitEnd = 34;
			};
			scale[] = {0};
			class Beam
			{
				texture = "";
				size = "";
			};
			ACE_Flashlight_Colour = "blue";
			ACE_Flashlight_Beam = "\z\ace\addons\flashlights\UI\Flashlight_beam_blue_ca.paa";
			ACE_Flashlight_Size = 1.75;
			ACE_Flashlight_Sound = 1;
		};
	};
};
class ExileLife_Acc_Flashlight_Green: acc_flashlight
{
	displayName = "Flashlight (Green)";
	author = "ExileLife Mod Team";
	scope = 2;
	class ItemInfo: InventoryFlashLightItem_Base_F
	{
		class Flashlight
		{
			color[] = {100, 180, 136};
			ambient[] = {0.9,0.81,0.7};
			intensity = 100;
			size = 1;
			innerAngle = 5;
			outerAngle = 100;
			coneFadeCoef = 8;
			position = "flash dir";
			direction = "flash";
			useFlare = 1;
			flareSize = 1.4;
			flareMaxDistance = 100;
			dayLight = 0;
			class Attenuation 
			{
				start = 0;
				constant = 0.5;
				linear = 0.1;
				quadratic = 0.2;
				hardLimitStart = 27;
				hardLimitEnd = 34;
			};
			scale[] = {0};
			class Beam
			{
				texture = "";
				size = "";
			};
			ACE_Flashlight_Colour = "green";
			ACE_Flashlight_Beam = "\z\ace\addons\flashlights\UI\Flashlight_beam_green_ca.paa";
			ACE_Flashlight_Size = 1.75;
			ACE_Flashlight_Sound = 1;
		};
	};
};
class ExileLife_Acc_Flashlight_Purple: acc_flashlight
{
	displayName = "Flashlight (Purple)";
	author = "ExileLife Mod Team";
	scope = 2;
	class ItemInfo: InventoryFlashLightItem_Base_F
	{
		class Flashlight
		{
			color[] = {102,51,153};
			ambient[] = {0.9,0.81,0.7};
			intensity = 100;
			size = 1;
			innerAngle = 5;
			outerAngle = 100;
			coneFadeCoef = 8;
			position = "flash dir";
			direction = "flash";
			useFlare = 1;
			flareSize = 1.4;
			flareMaxDistance = 100;
			dayLight = 0;
			class Attenuation 
			{
				start = 0;
				constant = 0.5;
				linear = 0.1;
				quadratic = 0.2;
				hardLimitStart = 27;
				hardLimitEnd = 34;
			};
			scale[] = {0};
			class Beam
			{
				texture = "";
				size = "";
			};
			ACE_Flashlight_Colour = "blue";
			ACE_Flashlight_Beam = "\z\ace\addons\flashlights\UI\Flashlight_beam_blue_ca.paa";
			ACE_Flashlight_Size = 1.75;
			ACE_Flashlight_Sound = 1;
		};
	};
};
class ExileLife_Acc_Flashlight_Red: acc_flashlight
{
	displayName = "Flashlight (Red)";
	author = "ExileLife Mod Team";
	scope = 2;
	class ItemInfo: InventoryFlashLightItem_Base_F
	{
		class Flashlight
		{
			color[] = {134,45,45};
			ambient[] = {0.9,0.81,0.7};
			intensity = 100;
			size = 1;
			innerAngle = 5;
			outerAngle = 100;
			coneFadeCoef = 8;
			position = "flash dir";
			direction = "flash";
			useFlare = 1;
			flareSize = 1.4;
			flareMaxDistance = 100;
			dayLight = 0;
			class Attenuation 
			{
				start = 0;
				constant = 0.5;
				linear = 0.1;
				quadratic = 0.2;
				hardLimitStart = 27;
				hardLimitEnd = 34;
			};
			scale[] = {0};
			class Beam
			{
				texture = "";
				size = "";
			};
			ACE_Flashlight_Colour = "red";
			ACE_Flashlight_Beam = "\z\ace\addons\flashlights\UI\Flashlight_beam_red_ca.paa";
			ACE_Flashlight_Size = 1.75;
			ACE_Flashlight_Sound = 1;
		};
	};
};
class ExileLife_Acc_Flashlight_Yellow: acc_flashlight
{
	displayName = "Flashlight (Yellow)";
	author = "ExileLife Mod Team";
	scope = 2;
	class ItemInfo: InventoryFlashLightItem_Base_F
	{
		class Flashlight
		{
			color[] = {180, 176, 100};
			ambient[] = {0.9,0.81,0.7};
			intensity = 100;
			size = 1;
			innerAngle = 5;
			outerAngle = 100;
			coneFadeCoef = 8;
			position = "flash dir";
			direction = "flash";
			useFlare = 1;
			flareSize = 1.4;
			flareMaxDistance = 100;
			dayLight = 0;
			class Attenuation 
			{
				start = 0;
				constant = 0.5;
				linear = 0.1;
				quadratic = 0.2;
				hardLimitStart = 27;
				hardLimitEnd = 34;
			};
			scale[] = {0};
			class Beam
			{
				texture = "";
				size = "";
			};
			ACE_Flashlight_Colour = "yellow";
			ACE_Flashlight_Beam = "\z\ace\addons\flashlights\UI\Flashlight_beam_yellow_ca.paa";
			ACE_Flashlight_Size = 1.75;
			ACE_Flashlight_Sound = 1;
		};
	};
};
class ExileLife_Acc_Flashlight_Blue_Pistol: acc_flashlight_pistol
{
	displayName = "Pistol Flashlight (Blue)";
	author = "ExileLife Mod Team";
	scope = 2;
	class ItemInfo: InventoryFlashLightItem_Base_F
	{
		class Flashlight
		{
			color[] = {100, 144, 180};
			ambient[] = {0.9,0.81,0.7};
			intensity = 100;
			size = 1;
			innerAngle = 5;
			outerAngle = 100;
			coneFadeCoef = 8;
			position = "flash dir";
			direction = "flash";
			useFlare = 1;
			flareSize = 1.4;
			flareMaxDistance = 100;
			dayLight = 0;
			class Attenuation 
			{
				start = 0;
				constant = 0.5;
				linear = 0.1;
				quadratic = 0.2;
				hardLimitStart = 27;
				hardLimitEnd = 34;
			};
			scale[] = {0};
			class Beam
			{
				texture = "";
				size = "";
			};
			ACE_Flashlight_Colour = "blue";
			ACE_Flashlight_Beam = "\z\ace\addons\flashlights\UI\Flashlight_beam_blue_ca.paa";
			ACE_Flashlight_Size = 1.5;
			ACE_Flashlight_Sound = 1;
		};
	};
};
class ExileLife_Acc_Flashlight_Green_Pistol: acc_flashlight_pistol
{
	displayName = "Pistol Flashlight (Green)";
	author = "ExileLife Mod Team";
	scope = 2;
	class ItemInfo: InventoryFlashLightItem_Base_F
	{
		class Flashlight
		{
			color[] = {100, 180, 136};
			ambient[] = {0.9,0.81,0.7};
			intensity = 100;
			size = 1;
			innerAngle = 5;
			outerAngle = 100;
			coneFadeCoef = 8;
			position = "flash dir";
			direction = "flash";
			useFlare = 1;
			flareSize = 1.4;
			flareMaxDistance = 100;
			dayLight = 0;
			class Attenuation 
			{
				start = 0;
				constant = 0.5;
				linear = 0.1;
				quadratic = 0.2;
				hardLimitStart = 27;
				hardLimitEnd = 34;
			};
			scale[] = {0};
			class Beam
			{
				texture = "";
				size = "";
			};
			ACE_Flashlight_Colour = "green";	
			ACE_Flashlight_Beam = "\z\ace\addons\flashlights\UI\Flashlight_beam_green_ca.paa";
			ACE_Flashlight_Size = 1.5;
			ACE_Flashlight_Sound = 1;
		};
	};
};
class ExileLife_Acc_Flashlight_Purple_Pistol: acc_flashlight_pistol
{
	displayName = "Pistol Flashlight (Purple)";
	author = "ExileLife Mod Team";
	scope = 2;
	class ItemInfo: InventoryFlashLightItem_Base_F
	{
		class Flashlight
		{
			color[] = {102,51,153};
			ambient[] = {0.9,0.81,0.7};
			intensity = 100;
			size = 1;
			innerAngle = 5;
			outerAngle = 100;
			coneFadeCoef = 8;
			position = "flash dir";
			direction = "flash";
			useFlare = 1;
			flareSize = 1.4;
			flareMaxDistance = 100;
			dayLight = 0;
			class Attenuation 
			{
				start = 0;
				constant = 0.5;
				linear = 0.1;
				quadratic = 0.2;
				hardLimitStart = 27;
				hardLimitEnd = 34;
			};
			scale[] = {0};
			class Beam
			{
				texture = "";
				size = "";
			};
			ACE_Flashlight_Colour = "blue";
			ACE_Flashlight_Beam = "\z\ace\addons\flashlights\UI\Flashlight_beam_blue_ca.paa";
			ACE_Flashlight_Size = 1.5;
			ACE_Flashlight_Sound = 1;
		};
	};
};
class ExileLife_Acc_Flashlight_Red_Pistol: acc_flashlight_pistol
{
	displayName = "Pistol Flashlight (Red)";
	author = "ExileLife Mod Team";
	scope = 2;
	class ItemInfo: InventoryFlashLightItem_Base_F
	{
		class Flashlight
		{
			color[] = {134,45,45};
			ambient[] = {0.9,0.81,0.7};
			intensity = 100;
			size = 1;
			innerAngle = 5;
			outerAngle = 100;
			coneFadeCoef = 8;
			position = "flash dir";
			direction = "flash";
			useFlare = 1;
			flareSize = 1.4;
			flareMaxDistance = 100;
			dayLight = 0;
			class Attenuation 
			{
				start = 0;
				constant = 0.5;
				linear = 0.1;
				quadratic = 0.2;
				hardLimitStart = 27;
				hardLimitEnd = 34;
			};
			scale[] = {0};
			class Beam
			{
				texture = "";
				size = "";
			};
			ACE_Flashlight_Colour = "red";
			ACE_Flashlight_Beam = "\z\ace\addons\flashlights\UI\Flashlight_beam_red_ca.paa";
			ACE_Flashlight_Size = 1.5;
			ACE_Flashlight_Sound = 1;
		};
	};
};
class ExileLife_Acc_Flashlight_Yellow_Pistol: acc_flashlight_pistol
{
	displayName = "Pistol Flashlight (Yellow)";
	author = "ExileLife Mod Team";
	scope = 2;
	class ItemInfo: InventoryFlashLightItem_Base_F
	{
		class Flashlight
		{
			color[] = {180, 176, 100};
			ambient[] = {0.9,0.81,0.7};
			intensity = 100;
			size = 1;
			innerAngle = 5;
			outerAngle = 100;
			coneFadeCoef = 8;
			position = "flash dir";
			direction = "flash";
			useFlare = 1;
			flareSize = 1.4;
			flareMaxDistance = 100;
			dayLight = 0;
			class Attenuation 
			{
				start = 0;
				constant = 0.5;
				linear = 0.1;
				quadratic = 0.2;
				hardLimitStart = 27;
				hardLimitEnd = 34;
			};
			scale[] = {0};
			class Beam
			{
				texture = "";
				size = "";
			};
			ACE_Flashlight_Colour = "yellow";
			ACE_Flashlight_Beam = "\z\ace\addons\flashlights\UI\Flashlight_beam_yellow_ca.paa";
			ACE_Flashlight_Size = 1.5;
			ACE_Flashlight_Sound = 1;
		};
	};
};
class ExileLife_Melee_BareFist: Exile_Melee_Abstract 
{
	scope = 2;
	author = "ExileLife Mod Team";
	_generalMacro = "ExileLife_Melee_BareFist";
	model = "\exilelife_assets\models\Items\Weapons\Melee\ExileLife_Melee_BareFist.p3d";
	displayName = "Bare Knuckle";
	descriptionShort = "I'll give you one hell of a beating!";
	picture = "";
	handAnim[] = {"OFP2_ManSkeleton", "\exile_assets\animation\Exile_SledgeHammer_Idle01.rtm"}; 
	magazines[] = {"ExileLife_Magazine_Melee"};
	class WeaponSlotsInfo 
	{
		hmdType = 0;
		mass = 0;
	};	
	class Hack: Mode_FullAuto 
	{
		burst = 0;
		autoFire = 1;
		flashSize = 0;
		dispersion = 0;
		sounds[] = {"StandardSound"};
		minRange = 0.300000;
		minRangeProbab = 0.330000;
		midRange = 0.300000;
		midRangeProbab = 0.330000;
		maxRange = 0.300000;
		maxRangeProbab = 0.340000;
		reloadTime = 1.750000;
		class StandardSound
		{
			begin1[]= {"\exilelife_assets\sound\swoosh01.ogg", "db3", 1, 100};
			begin2[]= {"\exilelife_assets\sound\swoosh02.ogg", "db3", 1, 100};
			closure1[] = {"", 1};
			soundBegin[] = {"begin1", 1, "begin2", 1};
			soundClosure[]= {"closure1", 1};
			weaponSoundEffect = "DefaultHandTools";
		};
	};
	class Melee
	{
		primaryAnimation[] = {"playActionNow","GestureExileSledgeHammerSwing01"}; 
		secondaryAnimation[] = {}; 
		swingTimeHitStart = 0.5; 
		swingTimeHitFinish = 0.7; 
		ammo = "ExileLife_Ammo_Fist";
		swingMemoryPoints[] = {"head","weapon"}; 
		weaponPositions[] = {{-0.105469,1.22598,0.994736},{-0.105469,1.22598,0.694736}}; 
		executePrimary = ""; 
		executeSecondary = "ExileLifeClient_object_player_event_onFired_bareFist";	
	};
};
class ExileLife_Melee_SpikeBat: Exile_Melee_Abstract 
{
	scope = 2;
	author = "ExileLife Mod Team";
	_generalMacro = "ExileLife_Melee_SpikeBat";
	model = "\exilelife_assets\models\Items\Weapons\Melee\ExileLife_Melee_SpikeBat.p3d";
	displayName = "Monica";
	descriptionShort = "Monica is thirsty.";
	picture = "\exilelife_assets\models\Items\Weapons\Melee\Images\ExileLife_Melee_SpikeBat.paa";
	handAnim[] = {"OFP2_ManSkeleton", "\exile_assets\animation\Exile_SledgeHammer_Idle01.rtm"};
	magazines[] = {"ExileLife_Magazine_Melee"};
	modelOptics = "-";
	begin1[] = {"",1.0,1,800};
	begin2[] = {"",1.0,1,800};
	soundBegin[] = {"begin1",0.5,"begin2",0.5};
	reloadMagazineSound[] = {"",1.0,1,20};
	recoil = "";
	recoilProne = "";	
	class WeaponSlotsInfo 
	{
		hmdType = 0;
		mass = 40;
	};	
	class Hack: Mode_FullAuto 
	{
		burst = 0;
		autoFire = 1;
		flashSize = 0;
		dispersion = 0;
		sounds[] = {"StandardSound"};
		minRange = 0.300000;
		minRangeProbab = 0.330000;
		midRange = 0.300000;
		midRangeProbab = 0.330000;
		maxRange = 0.300000;
		maxRangeProbab = 0.340000;
		reloadTime = 1.750000;
		class StandardSound
		{
			begin1[]= {"\exilelife_assets\sound\swoosh01.ogg", "db3", 1, 100};
			begin2[]= {"\exilelife_assets\sound\swoosh02.ogg", "db3", 1, 100};
			closure1[] = {"", 1};
			soundBegin[] = {"begin1", 1, "begin2", 1};
			soundClosure[]= {"closure1", 1};
			weaponSoundEffect = "DefaultHandTools";
		};
	};
	class Melee
	{
		unlimitedAmmo = 1;
		primaryAnimation[] = {"playActionNow","GestureExileSledgeHammerSwing01"}; 
		secondaryAnimation[] = {}; 
		swingTimeHitStart = 0.5; 
		swingTimeHitFinish = 0.7; 
		ammo = "ExileLife_Ammo_BatNails";
		swingMemoryPoints[] = {"head","weapon"}; 
		weaponPositions[] = {{-0.2,1.16598,1.0514736},{-0.105469,1.42598,0.614736}}; 
		executePrimary = ""; 
		executeSecondary = "ExileLifeClient_object_player_event_onFired_spikeBat";	
	};
};
class ExileLife_Melee_Knife: Pistol_Base_F 
{
    scope = 2;
    author = "ExileLife Mod Team";
    _generalMacro = "ExileLife_Melee_Knife";
    model = "\exilelife_assets\models\Items\Weapons\Primitive\ExileLife_Melee_Knife.p3d";
    displayName = "Primitive Knife";
    descriptionShort = "The blade thirsts!";
    picture = "\exilelife_assets\models\Items\Weapons\Primitive\Images\ExileLife_Melee_Knife.paa";
    handAnim[] = {"OFP2_ManSkeleton", "\exile_assets\animation\Exile_SledgeHammer_Idle01.rtm"};
    magazines[] = {"ExileLife_Magazine_Melee"};
    modelOptics = "-";
    type = 2;
        showToPlayer = 1;
        showEmpty = 1;        
    begin1[] = {"",1.0,1,800};
    begin2[] = {"",1.0,1,800};
    soundBegin[] = {"begin1",0.5,"begin2",0.5};
    reloadMagazineSound[] = {"",1.0,1,20};
    cursor = "EmptyCursor";
    cursorAim = "throw";
    cursorSize = 1;
    autoreload = 1;
    canDrop = 1;
    distanceZoomMin = 2; 
    distanceZoomMax = 2; 
    drySound[] = {"", 0, 1, 20};
    minRange = 0.3;
    minRangeProbab = 0.33;
    midRange = 0.3;
    midRangeProbab = 0.33;
    maxRange = 0.3;
    maxRangeProbab = 0.34;
    airFriction = -0.0018;
    hit = 4; 
    initSpeed = 0.1; 
    soundClosure[] = {"closure1", 1};
    weaponInfoType = "RscWeaponEmpty";
    weaponReloadtime = 0;
    weaponSoundEffect = "DefaultRifle";
    simulation = "Weapon";
    reloadAction = "";
    class WeaponSlotsInfo
    {
        class MuzzleSlot: SlotInfo
        {
            linkProxy = "\A3\data_f\proxies\weapon_slots\MUZZLE";
            displayName = "$str_a3_cfgweapons_abr_base_f_weaponslotsinfo_muzzleslot0";
            compatibleItems[] = {};
        };
    };  
    class Hack: Mode_FullAuto 
    {
        burst = 0;
        autoFire = 1;
        flashSize = 0;
        dispersion = 0;
        sounds[] = {"StandardSound"};
        minRange = 0.300000;
        minRangeProbab = 0.330000;
        midRange = 0.300000;
        midRangeProbab = 0.330000;
        maxRange = 0.300000;
        maxRangeProbab = 0.340000;
        reloadTime = 1.750000;
        class StandardSound
        {
            begin1[]= {"\exilelife_assets\sound\swoosh01.ogg", "db3", 1, 100};
            begin2[]= {"\exilelife_assets\sound\swoosh02.ogg", "db3", 1, 100};
            closure1[] = {"", 1};
            soundBegin[] = {"begin1", 1, "begin2", 1};
            soundClosure[]= {"closure1", 1};
            weaponSoundEffect = "DefaultHandTools";
        };
    };
    class Melee
    {
        unlimitedAmmo = 1;
        primaryAnimation[] = {"switchmove","amovpercmstpsraswpstdnon_aidlpercmstpslowwpstdnon"}; 
        secondaryAnimation[] = {}; 
        swingTimeHitStart = 0.2; 
        swingTimeHitFinish = 0.4; 
        ammo = "ExileLife_Ammo_Knife";
        swingMemoryPoints[] = {"head","weapon"}; 
        weaponPositions[] = {{-0.2,1.16598,1.0514736},{-0.105469,1.42598,0.614736}}; 
        executePrimary = "ExileLifeClient_object_player_event_onFired_knife"; 
        executeSecondary = "";  
    };
};
class ExileLife_Weapon_Bow: Rifle
{
    author = "ExileLife Mod Team";
    _generalMacro = "ExileLife_Weapon_Bow";
    scope = 2;
    type = 4;    
    picture = "\exilelife_assets\models\Items\Weapons\Primitive\Images\ExileLife_Weapon_Bow.paa";
    model = "\exilelife_assets\models\Items\Weapons\Primitive\ExileLife_Weapon_Bow.p3d";
    modelMagazine="\exilelife_assets\models\Items\Weapons\Ammunition\ExileLife_Item_TaserCartridge.p3d";
    magazines[] = {"ExileLife_Item_Arrow"};
    displayname = "Bow";
    cursor = "EmptyCursor";
    cursorAim = "throw";
    optics = 0;
    primary = 0;
    htMin = 1;
    htMax = 300;
    afMax = 0;
    mfMax = 0;
    mFact = 1;
    tBody = 100;
    bullet1[] = {"A3\Sounds_F\weapons\shells\9mm\metal_9mm_01",0.5011872,1,15};
    bullet2[] = {"A3\Sounds_F\weapons\shells\9mm\metal_9mm_02",0.5011872,1,15};
    bullet3[] = {"A3\Sounds_F\weapons\shells\9mm\metal_9mm_03",0.5011872,1,15};
    bullet4[] = {"A3\Sounds_F\weapons\shells\9mm\metal_9mm_04",0.5011872,1,15};
    bullet5[] = {"A3\Sounds_F\weapons\shells\9mm\dirt_9mm_01",0.39810717,1,15};
    bullet6[] = {"A3\Sounds_F\weapons\shells\9mm\dirt_9mm_02",0.39810717,1,15};
    bullet7[] = {"A3\Sounds_F\weapons\shells\9mm\dirt_9mm_03",0.39810717,1,15};
    bullet8[] = {"A3\Sounds_F\weapons\shells\9mm\dirt_9mm_04",0.39810717,1,15};
    bullet9[] = {"A3\Sounds_F\weapons\shells\9mm\grass_9mm_01",0.2238721,1,15};
    bullet10[] = {"A3\Sounds_F\weapons\shells\9mm\grass_9mm_02",0.2238721,1,15};
    bullet11[] = {"A3\Sounds_F\weapons\shells\9mm\grass_9mm_03",0.2238721,1,15};
    bullet12[] = {"A3\Sounds_F\weapons\shells\9mm\grass_9mm_04",0.2238721,1,15};
    soundBullet[] = {"bullet1",0.083,"bullet2",0.083,"bullet3",0.083,"bullet4",0.083,"bullet5",0.083,"bullet6",0.083,"bullet7",0.083,"bullet8",0.083,"bullet9",0.083,"bullet10",0.083,"bullet11",0.083,"bullet12",0.083};
    modes[] = {"Single"};
    initSpeed = 170; 
    recoil = "recoil_pistol_p07";
    class Single: Mode_SemiAuto
    {
        sounds[] = {"StandardSound"};
        class BaseSoundModeType
        {
            closure1[] = {};
            closure2[] = {};
            soundClosure[] = {"closure1",0.5,"closure2",0.5};
        };
        class StandardSound: BaseSoundModeType
        {
            begin1[] = {};
            begin2[] = {};
            begin3[] = {};
            soundBegin[] = {"begin1",0.33,"begin2",0.33,"begin1",0.34};
            class SoundTails
            {
                class TailInterior
                {
                    sound[] = {};
                    frequency = 1;
                    volume = "interior";
                };
                class TailTrees
                {
                    sound[] = {};
                    frequency = 1;
                    volume = "(1-interior/1.4)*trees";
                };
                class TailForest
                {
                    sound[] = {};
                    frequency = 1;
                    volume = "(1-interior/1.4)*forest";
                };
                class TailMeadows
                {
                    sound[] = {};
                    frequency = 1;
                    volume = "(1-interior/1.4)*(meadows/2 max sea/2)";
                };
                class TailHouses
                {
                    sound[] = {};
                    frequency = 1;
                    volume = "(1-interior/1.4)*houses";
                };
            };
        };
        recoil = "recoil_pistol_light";
        recoilProne = "recoil_prone_pistol_light";
        reloadTime = 0.12;
        dispersion = 0.0029;
        minRange = 5;
        minRangeProbab = 0.3;
        midRange = 7;
        midRangeProbab = 0.6;
        maxRange = 15;
        maxRangeProbab = 0.1;
        aiRateOfFire = 2;
        aiRateOfFireDistance = 15;
    };
    reloadAction = "GestureReloadPistol";
    drySound[] = {"exilelife_weapons\sounds\pistols\dry",0.39810717,1,20};
    reloadMagazineSound[] = {"A3\Sounds_F\arsenal\weapons\Pistols\P07\reload_P07",0.56234133,1,30};
    recoilProne = "recoil_pistol_p07";
    inertia = 0.2;
    selectionFireAnim = "";
};    
class ExileLife_Rifle_DMR_06_Blue: srifle_DMR_06_camo_F
{
	author= "ExileLife Mod Team";
	scope = 2;
	_generalMacro="ExileLife_Rifle_DMR_06_Blue";
	displayName="Mk14 7.62 mm (Blue)";
	picture="\exilelife_assets\texture\ui\Gear\weapon_exilelife_dmr_06_blue_ux.paa";
	hiddenSelectionsTextures[]=
	{
		"\exilelife_assets\texture\weapons\exilelife_dmr_06_blue_01_co.paa",
		"\exilelife_assets\texture\weapons\exilelife_dmr_06_blue_02_co.paa"
	};
};
class ExileLife_Rifle_MX_BlackHex: arifle_MX_F
{
	baseWeapon="ExileLife_Rifle_MX_BlackHex";
	author= "ExileLife Mod Team";
	scope = 2;
	_generalMacro="ExileLife_Rifle_MX_BlackHex";
	displayName="MX 6.5mm (Black Hex)";
	hiddenSelections[]=
	{
		"camo1",
		"camo2"
	};
	hiddenSelectionsTextures[]=
	{
		"\exilelife_assets\texture\weapons\exilelife_xmx_blackhex_co.paa",
		"\A3\Weapons_F_EPB\Rifles\MX_Black\Data\XMX_short_Black_co.paa"
	};
	picture="\exilelife_assets\texture\ui\Gear\weapon_exilelife_xmx_blackhex_ux.paa";
};
class ExileLife_Rifle_WhiteBlack_MX: arifle_MX_F
{
	baseWeapon="ExileLife_Rifle_WhiteBlack_MX";
	author= "ExileLife Mod Team";
	scope = 2;
	_generalMacro="ExileLife_Rifle_WhiteBlack_MX";
	displayName="MX 6.5mm (Cookies-n-Cream)";
	hiddenSelections[]=
	{
		"camo1",
		"camo2"
	};
	hiddenSelectionsTextures[]=
	{
		"\exilelife_assets\texture\weapons\exilelife_xmx_whiteblack_co.paa",
		"\A3\Weapons_F_EPB\Rifles\MX_Black\Data\XMX_short_Black_co.paa"
	};
	picture="\exilelife_assets\texture\ui\Gear\weapon_exilelife_xmx_whiteblack_ux.paa";
};
class hlc_rifle_SAMR;
class hlc_rifle_samr3: hlc_rifle_SAMR
{
	picture = "\hlc_wp_ar15\tex\ui\gear_SAMR2_ca";
	displayName = "RRA LAR-15";
	author = "Twinke Masta, Tigg, Toadie";
	descriptionShort = "Accurised Assault Rifle<br/>Caliber: 5.56mm<br/> ";
	hiddenSelections[] = {"Upper","Lower","D-Ring","Rails","Panels","VFG","Harris","Patch","Stock"};
	hiddenSelectionsTextures[] = {"hlc_wp_ar15\tex\samr\upper_co.paa","hlc_wp_ar15\tex\samr\lower2_co.paa","hlc_wp_ar15\tex\samr\ras_co.paa","hlc_wp_ar15\tex\samr\risras_co.paa","exilelife_assets\texture\weapons\xtm3_co.paa","hlc_wp_ar15\tex\melon_cqbr\vgrip_co.paa","hlc_wp_ar15\tex\samr\hbipod_co.paa","","hlc_wp_ar15\tex\samr\stock_co.paa"};
};    
};
class CfgWorlds
{
	class CAWorld;
	class Altis: CAWorld
	{
		cutscenes[] = {"ExileIntro"};
		class AmbientA3
		{
			class Radius40_60
			{
				class Species
				{
					delete CatShark_F;
					delete Mackerel_F;
					delete Mullet_F;
					delete Ornate_random_F;
					delete Salema_F;
					delete Snake_random_F;
					delete Tuna_F;
					delete Turtle_F;
				};
			};
			class Radius440_500
			{
				class Species
				{
					delete Rabbit_F;
				};
			};
		};
	};
	class Stratis: CAWorld
	{
		cutscenes[] = {"ExileIntro"};
	};
	class VR: CAWorld
	{
		cutscenes[] = {"ExileIntro"};
	};
	initWorld = "VR";
	demoWorld = "VR";
	groupNameFormat = "Inmate %ExileAlphabet-%ExileNumbers";
	class ExileAlphabet
	{
		class A { name = "A"; };
		class B { name = "B"; };
		class C { name = "C"; };
		class D { name = "D"; };
		class E { name = "E"; };
		class F { name = "F"; };
		class G { name = "G"; };
		class H { name = "H"; };
		class I { name = "I"; };
		class J { name = "J"; };
		class K { name = "K"; };
		class L { name = "L"; };
		class M { name = "M"; };
		class N { name = "N"; };
		class O { name = "O"; };
		class P { name = "P"; };
		class Q { name = "Q"; };
		class R { name = "R"; };
		class S { name = "S"; };
		class T { name = "T"; };
		class U { name = "U"; };
		class V { name = "V"; };
		class W { name = "W"; };
		class X { name = "X"; };
		class Y { name = "Y"; };
		class Z { name = "Z"; };
	};
	class ExileNumbers
	{
		class Number1 { name = "1"; };
		class Number2 { name = "2"; };
		class Number3 { name = "3"; };
		class Number4 { name = "4"; };
		class Number5 { name = "5"; };
		class Number6 { name = "6"; };
		class Number7 { name = "7"; };
		class Number8 { name = "8"; };
		class Number9 { name = "9"; };
	};
};
class CfgXM8
{
	class apps
	{
		controlID = 4040;
		title = "XM8";
	};
	class players
	{
		controlID = 4110;
		title = "8G Network";
	};
	class settings
	{
		controlID = 4070;
		title = "Settings";
	};
	class slothMachine
	{
		controlID = 4140;
		title = "Sloth Machine";
	};
	class clan
	{
		controlID = 4060;
		title = "Family";
	};
	class hostParty
	{
		controlID = 4080;
		title = "Host Party";
	};
	class party
	{
		controlID = 4100;
		title = "Party";
	};
	class server
	{
		controlID = 4090;
		title = "Server Rules";
	};
	class territory
	{
		controlID = 4130;
		title = "Territory";
	};
	class mobileXm8
	{
		controlID = 4200;
		title = "Mobile XM8";
	};
	class extraApps
	{
		controlID = 5000;
		title = "XM8";
	};
	class extraAppsTransition
	{
		controlID = 6000;
		title = "XM8";
	};
	class jobManagement
	{
		controlID = 31000;
		title = "Job Management";
	};
	class notify
	{
		controlID = 32200;
		title = "Notifications";
	};
	class messages
	{
		controlID = 31100;
		title = "Messages";
	};
	class messageNew
	{
		controlID = 31125;
		title = "New Message";
	};
	class messageManagement
	{
		controlID = 31175;
		title = "Message Management";
	};
	class healthScanner
	{
		controlID = 4120;
		title = "Health Scanner";
	};
	class criminalHistory
	{
		controlID = 4150;
		title = "Criminal Records";
	};
	class criminalHistoryAdd
	{
		controlID = 5200;
		title = "Add Criminal Record";
	};
	class criminalHistoryUpdate
	{
		controlID = 5300; 
		title = "Update Criminal Record";
	};
};
class PhysXParams {
	epeImpulseDamageCoef = 1500.0;
	impulseForceRagdollCoef = 250;
	impulseTorqueRagdollCoef = 100;
	maxRagdollImpulseForceMagnitude = 2500;
	maxRagdollImpulseTorqueMagnitude = 200;
	ragdollUnderwaterBuoyancyCoef = 9.7;
	ragdollUnderwaterResistanceCoef = 0.005;
	ragdollOnCollideSpeedLimit = "2500.0f";
	ragdollOnCollideMassLimit = "0.0f";
	ragdollOnCollideForceCoef = "20.0f";
	ragdollOnCollideMaxForce = "25.0f";
	ragdollOnCollideMaxOffset = "2.0f";
	ragdollOnCollideMaxOffsetSpeed = "50.0f";
	ragdollOnCollideVehicleImpulseCoef = "0.5f";
	ragdollUnconsciousSleepCoef = "0f";
	ragdollHitTime = "10f";
	ragdollHitForceCoef = "800.0f";
	ragdollHitDmgLimit = "10000f";
	ragdollVehicleCollision = 1;
};
class RagDollDefaultLimit {
	value = 0;
	restitution = 0.9;
	hardness = 0.5;
};
class RagDollDefaultSpring {
	enabled = 0;
	value = 0.5;
	damper = 1;
	targetValue = 0;
};
class RagDollSphericalJoint {
	class TwistLimitLow : RagDollDefaultLimit {};
	class TwistLimitHigh : RagDollDefaultLimit {};
	class SwingLimit : RagDollDefaultLimit {};
	class TwistSpring : RagDollDefaultSpring {
		enabled = 1;
	};
	class SwingSpring : RagDollDefaultSpring {
		enabled = 1;
		damper = 2;
	};
	class JointSpring : RagDollDefaultSpring {
		enabled = 0;
	};
	type = "spherical";
	enableCollision = 0;
	projectionDistance = 0.05;
	projectionMode = "point";
};
class RagDollRevoluteJoint {
	class LimitLow : RagDollDefaultLimit {};
	class LimitHigh : RagDollDefaultLimit {};
	class Spring : RagDollDefaultSpring {
		enabled = 0;
	};
	type = "revolute";
	enableCollision = 0;
	projectionDistance = 0.05;
	projectionMode = "point";
};
class RagDollD6Joint_PX3 {
	type = "D6";
	enableCollision = 0;
	projectionDistance = 0.05;
	projectionMode = "point";
	swingLimitY = "0.0f";
	swingLimitZ = "0.0f";
	swingSpring = "0.0f";
	swingDamping = "0.0f";
	swingRestitution = "0.6f";
	swingContactDistance = "0.05f";
	twistLimitLower = "0.0f";
	twistLimitUpper = "0.0f";
	twistSpring = "0.0f";
	twistDamping = "0.0f";
	twistRestitution = "0.6f";
	twistContactDistance = "0.05f";
	driveSpring = "20.0f";
	driveDamping = "20.0f";
	driveMaxForce = "1000000.0f";
	driveUseAcceleration = 1;
	driveLinearVelocity[] = {0, 0, 0};
	driveAngularVelocity[] = {0, 0, 0};
};
class CfgRagDollSkeletons {
	class BaseRagdoll {
		primaryWeaponBone = "";
		secondaryWeaponBone = "";
		networkBonePrimary = "";
		networkBoneSecondary = "";
		weaponSleepLinearVelocity = 20;
		weaponSleepAngularVelocity = 20;
		weaponDropMinTime = 1.0;
		weaponDropMaxTime = 100.0;
		weaponDistanceLimit = "10f";
		weaponDistanceLimitTime = "5.0f";
		sleepLinearVelocity = 0.05;
		sleepAngularVelocity = 0.05;
		simulateMinTime = 30;
		simulateMaxTime = 100.0;
		simulateDistanceLimit = "0.05f";
		simulateDistanceLimitTime = "5.0f";
		recoveryBlendTime = "0.5f";
		recoveryCosLimit = "0.3f";
		recoveryDistLimit = "0.7f";
		animBlendTime = "0.0f";
	};
	class Soldier : BaseRagdoll {
		primaryWeaponBone = "weapon";
		secondaryWeaponBone = "launcher";
		networkBonePrimary = "chest";
		networkBoneSecondary = "pelvis";
		draggingMask = "dragging";
		hitMask = "hit";
		hitMaskUnderwater = "hitUnderwater";
		class WeaponLinkBones {
			class LinkBone1 {
				bone = "leftHand";
				canBeDropped = 1;
				prefference = "1.0f";
			};
			class LinkBone2 {
				bone = "rightHand";
				canBeDropped = 1;
				prefference = "2.0f";
			};
			class LinkBone3 {
				bone = "chest";
				canBeDropped = 1;
				prefference = "1.0f";
			};
		};
		class Masks {
			class DraggingMask {
				name = "dragging";
				mask[] = {{"pelvis", 0, 1}, {"chest", 0, 1}, {"head", "0.6f", 0}, {"leftArm", 1, 0}, {"leftForeArm", 1, 0}, {"leftHand", 1, 0}, {"rightArm", 1, 0}, {"rightForeArm", 1, 0}, {"rightHand", 1, 0}, {"leftUpLeg", 1, 0}, {"leftLeg", 1, 0}, {"leftFoot", 1, 0}, {"rightUpLeg", 1, 0}, {"rightLeg", 1, 0}, {"rightFoot", 1, 0}, {"weapon", 0, 1}, {"launcher", 0, 1}};
			};
			class HitMask {
				name = "hit";
				mask[] = {{"pelvis", 1, 0}, {"chest", 1, 0}, {"head", 1, 0}, {"leftArm", 1, 0}, {"leftForeArm", 1, 0}, {"leftHand", 1, 0}, {"rightArm", 1, 0}, {"rightForeArm", 1, 0}, {"rightHand", 1, 0}, {"leftUpLeg", 1, 0}, {"leftLeg", 1, 0}, {"leftFoot", 1, 1}, {"rightUpLeg", 1, 0}, {"rightLeg", 1, 0}, {"rightFoot", 1, 1}, {"weapon", 1, 0}, {"launcher", 1, 0}};
			};
			class HitMaskUnderwater {
				name = "hitUnderwater";
				mask[] = {{"pelvis", 1, 1}, {"chest", 1, 1}, {"head", 1, 0}, {"leftArm", 1, 0}, {"leftForeArm", 1, 0}, {"leftHand", 1, 0}, {"rightArm", 1, 0}, {"rightForeArm", 1, 0}, {"rightHand", 1, 0}, {"leftUpLeg", 1, 0}, {"leftLeg", 1, 0}, {"leftFoot", 1, 0}, {"rightUpLeg", 1, 0}, {"rightLeg", 1, 0}, {"rightFoot", 1, 0}, {"weapon", 1, 0}, {"launcher", 1, 0}};
			};
		};
		class BaseRagdollBone {
			material = "Ragdoll";
			childrenUseStartTrans = 1;
		};
		class Bones {
			class Pelvis : BaseRagdollBone {
				name = "pelvis";
				type = "capsule";
				startBone = "pelvis";
				endBone = "spine2";
				mass = 15;
				radius = 0.12;
				networkType = "root";
			};
			class Chest : BaseRagdollBone {
				name = "chest";
				type = "capsule";
				startBone = "spine1";
				endBone = "neck";
				radius = 0.16;
				mass = 15;
			};
			class Head : BaseRagdollBone {
				name = "head";
				type = "sphere";
				startBone = "head";
				mass = 8;
				radius = 0.16;
			};
			class LeftArm : BaseRagdollBone {
				name = "leftArm";
				type = "capsule";
				startBone = "leftArm";
				endBone = "leftForeArm";
				mass = 8;
			};
			class LeftForeArm : BaseRagdollBone {
				name = "leftForeArm";
				type = "capsule";
				startBone = "leftForeArm";
				endBone = "leftHand";
				mass = 6;
			};
			class LeftHand : BaseRagdollBone {
				name = "leftHand";
				type = "sphere";
				startBone = "leftHand";
				mass = 6;
				radius = 0.08;
				childrenUseStartTrans = 0;
				networkType = "leftHand";
			};
			class RightArm : BaseRagdollBone {
				name = "rightArm";
				type = "capsule";
				startBone = "rightArm";
				endBone = "rightForeArm";
				mass = 8;
			};
			class RightForeArm : BaseRagdollBone {
				name = "rightForeArm";
				type = "capsule";
				startBone = "rightForeArm";
				endBone = "rightHand";
				mass = 6;
			};
			class RightHand : BaseRagdollBone {
				name = "rightHand";
				type = "sphere";
				startBone = "rightHand";
				mass = 6;
				radius = 0.08;
				childrenUseStartTrans = 0;
				networkType = "rightHand";
			};
			class LeftUpLeg : BaseRagdollBone {
				name = "leftUpLeg";
				type = "capsule";
				startBone = "leftUpLeg";
				endBone = "leftLeg";
				mass = 15;
			};
			class LeftLeg : BaseRagdollBone {
				name = "leftLeg";
				type = "capsule";
				startBone = "leftLeg";
				endBone = "leftFoot";
				mass = 10;
			};
			class LeftFoot : BaseRagdollBone {
				name = "leftFoot";
				type = "box";
				startBone = "leftFoot";
				size[] = {0.15, 0.035, 0.07};
				mass = 8;
				networkType = "leftFoot";
			};
			class RightUpLeg : BaseRagdollBone {
				name = "rightUpLeg";
				type = "capsule";
				startBone = "rightUpLeg";
				endBone = "rightLeg";
				mass = 15;
			};
			class RightLeg : BaseRagdollBone {
				name = "rightLeg";
				type = "capsule";
				startBone = "rightLeg";
				endBone = "rightFoot";
				mass = 10;
			};
			class RightFoot : BaseRagdollBone {
				name = "rightFoot";
				type = "box";
				startBone = "rightFoot";
				size[] = {0.15, 0.035, 0.07};
				mass = 8;
				networkType = "rightFoot";
			};
			class Weapon : BaseRagdollBone {
				name = "weapon";
				type = "weapon";
				startBone = "weapon";
				endPosRelToStart[] = {0.0, 1.0, 0.0};
				mass = 3;
			};
			class Launcher : BaseRagdollBone {
				name = "launcher";
				type = "weapon";
				startBone = "launcher";
				endPosRelToStart[] = {1.0, 0.0, 0.0};
				mass = 3;
			};
		};
		class JointsPX2 {
			class Pelvis_Chest_PX2 : RagDollSphericalJoint {
				name = "pelvis_chest";
				bone1 = "pelvis";
				bone2 = "chest";
				axis[] = {0, 1, 0.3};
				class SwingLimit : SwingLimit {
					value = 25;
				};
				class TwistLimitLow : TwistLimitLow {
					value = -15;
				};
				class TwistLimitHigh : TwistLimitHigh {
					value = 25;
				};
			};
			class Chest_Head_PX2 : RagDollSphericalJoint {
				name = "chest_head";
				bone1 = "chest";
				bone2 = "head";
				class SwingLimit : SwingLimit {
					value = 20;
				};
				class TwistLimitLow : TwistLimitLow {
					value = -15;
				};
				class TwistLimitHigh : TwistLimitHigh {
					value = 15;
				};
			};
			class Chest_LeftArm_PX2 : RagDollSphericalJoint {
				name = "chest_leftArm";
				bone1 = "chest";
				bone2 = "leftArm";
				axis[] = {-1, 0.0, 0.5};
				enableCollision = 1;
				class SwingLimit : SwingLimit {
					value = 60;
				};
				class TwistLimitLow : TwistLimitLow {
					value = -20;
				};
				class TwistLimitHigh : TwistLimitHigh {
					value = 20;
				};
			};
			class LeftArm_LeftForeArm_PX2 : RagDollRevoluteJoint {
				name = "leftArm_leftForeArm";
				bone1 = "leftArm";
				bone2 = "leftForeArm";
				axis[] = {1, -1, 0.2};
				class LimitLow : LimitLow {
					value = -2;
				};
				class LimitHigh : LimitHigh {
					value = 60;
				};
			};
			class LeftForeArm_LeftHand_PX2 : RagDollSphericalJoint {
				name = "leftForeArm_leftHand";
				bone1 = "leftForeArm";
				bone2 = "leftHand";
				class SwingLimit : SwingLimit {
					value = 20;
				};
				class TwistLimitLow : TwistLimitLow {
					value = -5;
				};
				class TwistLimitHigh : TwistLimitHigh {
					value = 5;
				};
			};
			class Chest_RightArm_PX2 : RagDollSphericalJoint {
				name = "chest_rightArm";
				bone1 = "chest";
				bone2 = "rightArm";
				axis[] = {1, 0.0, 0.5};
				enableCollision = 1;
				class SwingLimit : SwingLimit {
					value = 60;
				};
				class TwistLimitLow : TwistLimitLow {
					value = -20;
				};
				class TwistLimitHigh : TwistLimitHigh {
					value = 20;
				};
			};
			class RightArm_RightForeArm_PX2 : RagDollRevoluteJoint {
				name = "rightArm_rightForeArm";
				bone1 = "rightArm";
				bone2 = "rightForeArm";
				axis[] = {1, 1, -0.2};
				class LimitLow : LimitLow {
					value = -2;
				};
				class LimitHigh : LimitHigh {
					value = 60;
				};
			};
			class RightForeArm_RightHand_PX2 : RagDollSphericalJoint {
				name = "rightForeArm_rightHand";
				bone1 = "rightForeArm";
				bone2 = "rightHand";
				class SwingLimit : SwingLimit {
					value = 20;
				};
				class TwistLimitLow : TwistLimitLow {
					value = -5;
				};
				class TwistLimitHigh : TwistLimitHigh {
					value = 5;
				};
			};
			class Pelvis_LeftUpLeg_PX2 : RagDollSphericalJoint {
				name = "pelvis_leftUpLeg";
				bone1 = "pelvis";
				bone2 = "leftUpLeg";
				axis[] = {-1.5, -1.1, 2};
				enableCollision = 1;
				class SwingLimit : SwingLimit {
					value = 45;
				};
				class TwistLimitLow : TwistLimitLow {
					value = -10;
				};
				class TwistLimitHigh : TwistLimitHigh {
					value = 20;
				};
			};
			class LeftUpLeg_LeftLeg_PX2 : RagDollRevoluteJoint {
				name = "leftUpLeg_leftLeg";
				bone1 = "leftUpLeg";
				bone2 = "leftLeg";
				axis[] = {-1, 0, 0};
				class LimitLow : LimitLow {
					value = -5;
				};
				class LimitHigh : LimitHigh {
					value = 110;
				};
			};
			class LeftLeg_LeftFoot_PX2 : RagDollRevoluteJoint {
				name = "leftLeg_leftFoot";
				bone1 = "leftLeg";
				bone2 = "leftFoot";
				axis[] = {-1, 0, 0};
				class LimitLow : LimitLow {
					value = -15;
				};
				class LimitHigh : LimitHigh {
					value = 45;
				};
			};
			class Pelvis_RightUpLeg_PX2 : RagDollSphericalJoint {
				name = "pelvis_rightUpLeg";
				bone1 = "pelvis";
				bone2 = "rightUpLeg";
				axis[] = {1.5, -1.1, 2};
				enableCollision = 1;
				class SwingLimit : SwingLimit {
					value = 45;
				};
				class TwistLimitLow : TwistLimitLow {
					value = -10;
				};
				class TwistLimitHigh : TwistLimitHigh {
					value = 20;
				};
			};
			class RightUpLeg_RightLeg_PX2 : RagDollRevoluteJoint {
				name = "rightUpLeg_rightLeg";
				bone1 = "rightUpLeg";
				bone2 = "rightLeg";
				axis[] = {-1, 0, 0};
				class LimitLow : LimitLow {
					value = -5;
				};
				class LimitHigh : LimitHigh {
					value = 110;
				};
			};
			class RightLeg_RightFoot_PX2 : RagDollRevoluteJoint {
				name = "rightLeg_rightFoot";
				bone1 = "rightLeg";
				bone2 = "rightFoot";
				axis[] = {-1, 0, 0};
				class LimitLow : LimitLow {
					value = -15;
				};
				class LimitHigh : LimitHigh {
					value = 45;
				};
			};
		};
		class JointsPX3 {
			class Pelvis_Chest_PX3 : RagDollD6Joint_PX3 {
				name = "pelvis_chest";
				bone1 = "pelvis";
				bone2 = "chest";
				axis[] = {0, 1, 0.3};
				enableCollision = 0;
				swingLimitY = 30;
				swingLimitZ = 30;
				twistLimitLower = -25;
				twistLimitUpper = 25;
				driveSpring = 30;
				driveDamping = 30;
				driveSpringWater = 5;
				driveDampingWater = 5;
			};
			class Chest_Head_PX3 : RagDollD6Joint_PX3 {
				name = "chest_head";
				bone1 = "chest";
				bone2 = "head";
				swingLimitY = 45;
				swingLimitZ = 45;
				twistLimitLower = -40;
				twistLimitUpper = 40;
				driveSpring = 15.0;
				driveDamping = 30;
				driveSpringWater = 1.5;
				driveDampingWater = 3.0;
				twistSpring = 15.0;
				twistDamping = 30.0;
			};
			class Chest_LeftArm_PX3 : RagDollD6Joint_PX3 {
				name = "chest_leftArm";
				bone1 = "chest";
				bone2 = "leftArm";
				enableCollision = 1;
				swingLimitY = 85;
				swingLimitZ = 85;
				twistLimitLower = -60;
				twistLimitUpper = 60;
				driveSpring = 30;
				driveDamping = 30;
				driveSpringWater = 3;
				driveDampingWater = 3;
			};
			class LeftArm_LeftForeArm_PX3 : RagDollD6Joint_PX3 {
				name = "leftArm_leftForeArm";
				bone1 = "leftArm";
				bone2 = "leftForeArm";
				axis[] = {-1, 1, -0.2};
				swingLimitY = 10;
				swingLimitZ = 10;
				twistLimitLower = -5;
				twistLimitUpper = 150;
				driveSpring = 10;
				driveDamping = 10;
				driveSpringWater = 1;
				driveDampingWater = 1;
			};
			class LeftForeArm_LeftHand_PX3 : RagDollD6Joint_PX3 {
				name = "leftForeArm_leftHand";
				bone1 = "leftForeArm";
				bone2 = "leftHand";
				swingLimitY = 10;
				swingLimitZ = 10;
				twistLimitLower = -20;
				twistLimitUpper = 20;
				driveSpring = 10;
				driveDamping = 10;
				driveSpringWater = 1;
				driveDampingWater = 1;
			};
			class Chest_RightArm_PX3 : RagDollD6Joint_PX3 {
				name = "chest_rightArm";
				bone1 = "chest";
				bone2 = "rightArm";
				enableCollision = 1;
				swingLimitY = 85;
				swingLimitZ = 85;
				twistLimitLower = -60;
				twistLimitUpper = 60;
				driveSpring = 30;
				driveDamping = 30;
				driveSpringWater = 3;
				driveDampingWater = 3;
			};
			class RightArm_RightForeArm_PX3 : RagDollD6Joint_PX3 {
				name = "rightArm_rightForeArm";
				bone1 = "rightArm";
				bone2 = "rightForeArm";
				axis[] = {-1, -1, 0.2};
				swingLimitY = 10;
				swingLimitZ = 10;
				twistLimitLower = -5;
				twistLimitUpper = 150;
				driveSpring = 10;
				driveDamping = 10;
				driveSpringWater = 1;
				driveDampingWater = 1;
			};
			class RightForeArm_RightHand_PX3 : RagDollD6Joint_PX3 {
				name = "rightForeArm_rightHand";
				bone1 = "rightForeArm";
				bone2 = "rightHand";
				swingLimitY = 10;
				swingLimitZ = 10;
				twistLimitLower = -20;
				twistLimitUpper = 20;
				driveSpring = 10;
				driveDamping = 10;
				driveSpringWater = 1;
				driveDampingWater = 1;
			};
			class Pelvis_LeftUpLeg_PX3 : RagDollD6Joint_PX3 {
				name = "pelvis_leftUpLeg";
				bone1 = "pelvis";
				bone2 = "leftUpLeg";
				enableCollision = 1;
				swingLimitY = 35;
				swingLimitZ = 35;
				twistLimitLower = -10;
				twistLimitUpper = 60;
				driveSpring = 30;
				driveDamping = 30;
				driveSpringWater = 3;
				driveDampingWater = 3;
				twistDamping = 30.0;
			};
			class LeftUpLeg_LeftLeg_PX3 : RagDollD6Joint_PX3 {
				name = "leftUpLeg_leftLeg";
				bone1 = "leftUpLeg";
				bone2 = "leftLeg";
				axis[] = {1, 0, 0};
				swingLimitY = 10;
				swingLimitZ = 10;
				twistLimitLower = -5;
				twistLimitUpper = 120;
				driveSpring = 20;
				driveDamping = 20;
				driveSpringWater = 2;
				driveDampingWater = 2;
			};
			class LeftLeg_LeftFoot_PX3 : RagDollD6Joint_PX3 {
				name = "leftLeg_leftFoot";
				bone1 = "leftLeg";
				bone2 = "leftFoot";
				axis[] = {1, 0, 0};
				swingLimitY = 10;
				swingLimitZ = 10;
				twistLimitLower = -15;
				twistLimitUpper = 45;
				driveSpring = 20;
				driveDamping = 20;
				driveSpringWater = 2;
				driveDampingWater = 2;
			};
			class Pelvis_RightUpLeg_PX3 : RagDollD6Joint_PX3 {
				name = "pelvis_rightUpLeg";
				bone1 = "pelvis";
				bone2 = "rightUpLeg";
				enableCollision = 1;
				swingLimitY = 35;
				swingLimitZ = 35;
				twistLimitLower = -10;
				twistLimitUpper = 60;
				driveSpring = 30;
				driveDamping = 30;
				driveSpringWater = 3;
				driveDampingWater = 3;
				twistDamping = 30.0;
			};
			class RightUpLeg_RightLeg_PX3 : RagDollD6Joint_PX3 {
				name = "rightUpLeg_rightLeg";
				bone1 = "rightUpLeg";
				bone2 = "rightLeg";
				axis[] = {1, 0, 0};
				swingLimitY = 10;
				swingLimitZ = 10;
				twistLimitLower = -5;
				twistLimitUpper = 120;
				driveSpring = 20;
				driveDamping = 20;
				driveSpringWater = 2;
				driveDampingWater = 2;
			};
			class RightLeg_RightFoot_PX3 : RagDollD6Joint_PX3 {
				name = "rightLeg_rightFoot";
				bone1 = "rightLeg";
				bone2 = "rightFoot";
				axis[] = {1, 0, 0};
				swingLimitY = 10;
				swingLimitZ = 10;
				twistLimitLower = -15;
				twistLimitUpper = 45;
				driveSpring = 20;
				driveDamping = 20;
				driveSpringWater = 2;
				driveDampingWater = 2;
			};
		};
	};
};
class Attributes;
class RscStandardDisplay;
class RscProgress;
class RscStructuredText;
class RscPicture;
class RscButton;
class RscShortcutButton;
class RscButtonMenu;
class RscButtonMenuOK;
class RscButtonMenuCancel;
class RscText;
class RscVignette;
class RscDisplayGetReady;
class RscActiveText;
class RscListBox;
class RscListNBox;
class RscCombo;
class RscXListBox;
class RscHTML;
class RscPictureKeepAspect;
class RscActivePicture;
class RscMapControl;
class RscControlsGroupNoScrollbars;
class RscControlsGroupNoHScrollbars;
class RscFrame;
class RscTitle;
class CA_Title;
class RscDebugConsole;
class RscTrafficLight;
class RscFeedback;
class RscMessageBox;
class RscControlsGroup;
class RscTextCheckbox;
class RscDisplayInventory_DLCTemplate;
class RscEdit;
class RscCheckBox;
class RscIGProgress;
class RscHitZones;
class RscIGUIText;
class RscIGUIValue;
class RscOpticsValue;
class RscOpticsText;
class Scrollbar;
class RscIGUIShortcutButton;
class RscActivePictureKeepAspect;
class RscTree;
class RscXSliderH;
class RscObject;
class ctrlMenu;
class ctrlStaticPicture;
class RscButtonMenuSteam;
class RscButtonTextOnly;
class RscEditMulti;
class RscVehicleToggles
{
	y = -1;
};
class RscPictureButton: RscActivePicture
{
	color[] = {1, 1, 1, 0.7};
	tooltip = "";
	text = "";
	action = "";
	style = 2096; 
};
class RscPictureMenuButton: RscButtonMenu
{
	style = 2; 
};
class RscExileQuickStats: RscStructuredText
{
	size = 1 * pixelH;
};
class RscExileItemListBox: RscListBox
{
	sizeEx = "0.8 * 			(			(			((safezoneW / safezoneH) min 1.2) / 1.2) / 25)";
	sizeEx2 = "0.8 * 			(			(			((safezoneW / safezoneH) min 1.2) / 1.2) / 25)";
	rowHeight = "2 * 			(			(			((safezoneW / safezoneH) min 1.2) / 1.2) / 25)";
	canDrag = 0;
	itemSpacing = 0.001;
	period = 1.2;
	shadow = 0;
	maxHistoryDelay = 1;
	fade = 0;
	deletable = 0;
	type = 5;
	style = 16;
	colorPicture[] = {1, 1, 1, 1};
	colorPictureDisabled[] = {1, 1, 1, 0.25};
	colorPictureRight[] = {1, 1, 1, 1};
	colorPictureRightDisabled[] = {1, 1, 1, 0.25};
	colorPictureSelected[] = {1, 1, 1, 1};
	colorScrollbar[] = {1, 0, 0, 0}; 
	colorBackground[] = {0, 0, 0, 0.3};
	colorDisabled[] = {1, 1, 1, 0.25};
	colorSelect2[] = {0, 0, 0, 1};
	colorSelect2Right[] = {0, 0, 0, 1};
	colorSelectBackground2[] = {1, 1, 1, 0.5};
	colorSelectBackground[] = {0.95, 0.95, 0.95, 1};
	colorSelectRight[] = {0, 0, 0, 1};
	colorShadow[] = {0, 0, 0, 0.5};
	colorText[] = {1, 1, 1, 1};
	colorTextRight[] = {1, 1, 1, 1};
	disabledCtrlColor[] = {1, 1, 1, 0.5};
	itemBackground[] = {1, 1, 1, 0.1};
	tooltipColorBox[] = {1, 1, 1, 1};
	tooltipColorShade[] = {0, 0, 0, 0.65};
	tooltipColorText[] = {1, 1, 1, 1};
};
class RscExileLifeDropDown: RscCombo
{
	sizeEx = 0.04;
	colorBackground[] = {0, 0, 0, 0.8};
	colorDisabled[] = {1, 1, 1, 0.25};
	colorSelect2[] = {0, 0, 0, 1};
	colorSelect2Right[] = {0, 0, 0, 1};
	colorSelectBackground2[] = {1, 1, 1, 0.5};
	colorSelectBackground[] = {0.95, 0.95, 0.95, 1};
	colorSelectRight[] = {0, 0, 0, 1};
	colorShadow[] = {0, 0, 0, 0.5};
	colorText[] = {1, 1, 1, 1};
	colorTextRight[] = {1, 1, 1, 1};
	disabledCtrlColor[] = {1, 1, 1, 0.5};
};
class RscExilePrimaryButton: RscButton
{
	w = 300 * pixelW;
	h = 60 * pixelH;
	colorBackground[] = {199/255, 38/255, 81/255, 1};
	colorText[] = {1, 1, 1, 1};
	shadow = 0;
	font = "RobotoMedium";
	sizeEx = 30 * pixelH;
	colorFocused[] = {199/255, 38/255, 81/255, 0.8};
	colorBackgroundActive[] = {199/255, 38/255, 81/255, 0.8};
};
class RscExileLifeMenuButton: RscShortcutButton
{
	style = "0x30 + 0x800";
    text = "";
    w = 0.2 * safezoneW;
    h = 0.083428 * safezoneH;
	period = 0;
	periodFocus = 0;
	periodOver = 0;
    onButtonClick = "";
    animTextureNormal = "";
    animTextureDisabled = "";
    animTextureOver = "";
    animTextureFocused = "";
    animTexturePressed = "";
    animTextureDefault = "";
    color[] =  {};
    colorFocused[] =  {};
    color2[] =  {};
    colorDisabled[] =  {};
    colorBackground[] =  {};
    colorBackgroundFocused[] =  {};
    colorBackground2[] =  {};
    textSecondary = "";
    colorSecondary[] =  {};
    colorFocusedSecondary[] = {};
    color2Secondary[] =  {};
    colorDisabledSecondary[] =  {};
};
class RscDisplayClient: RscStandardDisplay
{
	delete scriptName;
	delete scriptPath;
	access = 3;
	onLoad = "with uiNameSpace do { [_this select 0, 'RscDisplayClient'] call ExileClient_gui_loadingScreen_load; };"; 
	onUnload = "with uiNameSpace do { (_this select 0) call ExileClient_gui_loadingScreen_unload; };"; 
	class controlsBackground
	{
		class Black: RscText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class Map: RscPicture
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class Noise: RscPicture
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class CA_Vignette: RscVignette
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class Line: RscPicture
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class ExileBlackBackground: RscText
		{
			idc = -1;
			colorBackground[] = {0,0,0,1};
			x = safezoneXAbs;
			y = safezoneY;
			w = safezoneWAbs;
			h = safezoneH;
		};
		class ExileBackgroundPicture: RscPicture 
		{
			idc = 66000;
			x = safezoneX;
			y = safezoneY;
			w = safezoneW;
			h = safezoneW * 4/3;
			text = "exile_assets\texture\loading\loading_cheathas_co.paa";
		};
	};
	class Controls
	{
		class Disclaimer: RscControlsGroupNoScrollbars
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class MapAuthor: RscText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class MapBackBottom: RscText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class MapBackTop: RscText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class MapName: RscText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class MapDescription: RscStructuredText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class ProgressMap: RscProgress
		{
			x = safeZoneX;
			y = safeZoneY;
			w = safeZoneW;
			h = 5 * pixelH;
			colorBar[] = {63/255, 212/255, 252/255, 1};
		};
		class ProgressMission: ProgressMap
		{
			x = safeZoneX;
			y = safeZoneY;
			w = safeZoneW;
			h = 5 * pixelH;
			colorBar[] = {63/255, 212/255, 252/255, 1};
		};
		class ExileSpinnerPicture: RscPicture 
		{
			idc = 66001;
			x = safeZoneX + 60 * pixelW;
			y = safeZoneY + safeZoneH - (60 + 64) * pixelH;
			w = 64 * pixelW;
			h = 64 * pixelH;
			text = "exile_assets\texture\loading\spinner_ca.paa";
			type = 0;
			centerU = 0.5;
			centerV = 0.5;
			angle = 90;
			show = 0;
		};
		class ExileSpinnerTitle: RscStructuredText
		{
			idc = 66002;
			text = "<t>Still loading...</t>";
			x = safeZoneX + 60 * pixelW;
			y = safeZoneY + safeZoneH - (60 + 64 - 10) * pixelH; 
			w = safeZoneW - (60 + 64 + 15) * pixelW;
			h = 64 * pixelH;
			size = 44 * pixelH;
			sizeEx = 44 * pixelH;
			colorText[] = {1, 1, 1, 1};
			shadow = 0;
			class Attributes
			{
				font = "RobotoMedium";
				color = "#ffffff";
				colorLink = "#ffffff";
				align = "left";
				shadow = 0;
			};
		};
		class ExileLifeLogo: RscPictureKeepAspect
		{
			idc = -1;
			text = "exilelife_assets\texture\mod\logo.paa";
			x = safeZoneX + safeZoneW - (180) * pixelW;
			y = safeZoneY + 30 * pixelH;
			w = 120 * pixelW;
			h = 120 * pixelH;
		};
		class ExileLogo: RscControlsGroupNoScrollbars
		{
			idc = -1;
			x = safeZoneX + safeZoneW - (60 + 380) * pixelW;
			y = safeZoneY + 60 * pixelH;
			w = 380 * pixelW;
			h = 60 * pixelH;
			show = 0;
			class controls {};
		};
		class ExileMap: RscControlsGroupNoScrollbars
		{
			idc = 66003;
			x = safeZoneX + safeZoneW - (60 + 380) * pixelW;
			y = safeZoneY + (60 + 60 + 30) * pixelH;
			w = 380 * pixelW;
			h = (190 + 30 + 20) * pixelH;
			show = 0;
			class controls {};
		};
		class ExileMission: RscControlsGroupNoScrollbars
		{
			idc = 66007;
			x = safeZoneX + safeZoneW - (60 + 380) * pixelW;
			y = safeZoneY + (60 + 60 + 30 + 190 + 30 + 20 + 30) * pixelH;
			w = 380 * pixelW;
			h = (190 + 30 + 20) * pixelH;
			show = 0;
			class controls {};
		};
	};
};
class RscDisplayLoadMission: RscStandardDisplay
{
	movingEnable = 0;
	enableSimulation = 0;
	enableDisplay = 1;
	access = 3;
	onLoad = "with uiNameSpace do { [_this select 0, 'RscDisplayLoadMission'] call ExileClient_gui_loadingScreen_load; };"; 
	onUnload = "with uiNameSpace do { (_this select 0) call ExileClient_gui_loadingScreen_unload; };"; 
	delete scriptName; 
	delete scriptPath; 
	class controlsBackground
	{
		class Black: RscText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class CA_Vignette: RscVignette
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class Line: RscPicture
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class Map: RscPicture
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class Noise: RscPicture
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class ExileBlackBackground: RscText
		{
			idc = -1;
			colorBackground[] = {0,0,0,1};
			x = safezoneXAbs;
			y = safezoneY;
			w = safezoneWAbs;
			h = safezoneH;
		};
		class ExileBackgroundPicture: RscPicture 
		{
			idc = 66000;
			x = safezoneX;
			y = safezoneY;
			w = safezoneW;
			h = safezoneW * 4/3;
			text = "exile_assets\texture\loading\loading_cheathas_co.paa";
		};
	};
	class controls
	{
		class Disclaimer: RscControlsGroupNoScrollbars
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class LoadingStart: RscControlsGroup
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class MapAuthor: RscText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class MapBackBottom: RscText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class MapBackTop: RscText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class MapDescription: RscStructuredText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class MapName: RscText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class Mission: RscControlsGroupNoScrollbars
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class ProgressMap: RscProgress
		{
			x = safeZoneX;
			y = safeZoneY;
			w = safeZoneW;
			h = 5 * pixelH;
			colorBar[] = {63/255, 212/255, 252/255, 1};
		};
		class ProgressMission: ProgressMap
		{
			x = safeZoneX;
			y = safeZoneY;
			w = safeZoneW;
			h = 5 * pixelH;
			colorBar[] = {63/255, 212/255, 252/255, 1};
		};
		class Logo3DEN: ctrlStaticPicture
		{
			x = safeZoneX + safeZoneW - 60 * pixelW - 0.3;
			y = safeZoneY + safeZoneH - 60 * pixelW - 0.2;
		};
		class ExileSpinnerPicture: RscPicture 
		{
			idc = 66001;
			x = safeZoneX + 60 * pixelW;
			y = safeZoneY + safeZoneH - (60 + 64) * pixelH;
			w = 64 * pixelW;
			h = 64 * pixelH;
			text = "exile_assets\texture\loading\spinner_ca.paa";
			type = 0;
			centerU = 0.5;
			centerV = 0.5;
			angle = 90;
			show = 0;
		};
		class ExileSpinnerTitle: RscStructuredText
		{
			idc = 66002;
			text = "<t>Still loading...</t>";
			x = safeZoneX + 60 * pixelW;
			y = safeZoneY + safeZoneH - (60 + 64 - 10) * pixelH; 
			w = safeZoneW - (60 + 64 + 15) * pixelW;
			h = 64 * pixelH;
			size = 44 * pixelH;
			sizeEx = 44 * pixelH;
			colorText[] = {1, 1, 1, 1};
			shadow = 0;
			class Attributes
			{
				font = "RobotoMedium";
				color = "#ffffff";
				colorLink = "#ffffff";
				align = "left";
				shadow = 0;
			};
		};
		class ExileLifeLogo: RscPictureKeepAspect
		{
			idc = -1;
			text = "exilelife_assets\texture\mod\logo.paa";
			x = safeZoneX + safeZoneW - (180) * pixelW;
			y = safeZoneY + 30 * pixelH;
			w = 120 * pixelW;
			h = 120 * pixelH;
		};
		class ExileLogo: RscControlsGroupNoScrollbars
		{
			idc = -1;
			x = safeZoneX + safeZoneW - (60 + 380) * pixelW;
			y = safeZoneY + 60 * pixelH;
			w = 380 * pixelW;
			h = 60 * pixelH;
			show = 0;
			class controls {};
		};
		class ExileMap: RscControlsGroupNoScrollbars
		{
			idc = 66003;
			x = safeZoneX + safeZoneW - (60 + 380) * pixelW;
			y = safeZoneY + (60 + 60 + 30) * pixelH;
			w = 380 * pixelW;
			h = (190 + 30 + 20) * pixelH;
			show = 0;
			class controls {};
		};
		class ExileMission: RscControlsGroupNoScrollbars
		{
			idc = 66007;
			x = safeZoneX + safeZoneW - (60 + 380) * pixelW;
			y = safeZoneY + (60 + 60 + 30 + 190 + 30 + 20 + 30) * pixelH;
			w = 380 * pixelW;
			h = (190 + 30 + 20) * pixelH;
			show = 0;
			class controls {};
		};
	};
};
class RscDisplayMultiplayerSetup: RscStandardDisplay
{
	access = 3;
	onLoad = "with uiNameSpace do { [_this select 0, 'RscDisplayLoadMission'] call ExileClient_gui_loadingScreen_load; };"; 
	onUnload = "with uiNameSpace do { (_this select 0) call ExileClient_gui_loadingScreen_unload; };"; 
	delete scriptName; 
	delete scriptPath; 
	class controlsbackground
	{
		class TileGroup: RscControlsGroupNoScrollbars
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class Vignette: RscVignette
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class RscTitleBackground: RscText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class MainBackground: RscText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class MissionSettingsBackground: RscText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class NumOfPlayersBackground: RscText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class SideBackground: RscText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class PlayersPoolHeaderBackground: RscText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class RolesBackground: RscText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class ChatBackground: RscText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class PlayersPoolBackground: RscText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class ExileBlackBackground: RscText
		{
			idc = -1;
			colorBackground[] = {0,0,0,1};
			x = safezoneXAbs;
			y = safezoneY;
			w = safezoneWAbs;
			h = safezoneH;
		};
		class ExileBackgroundPicture: RscPicture 
		{
			idc = 66000;
			x = safezoneX;
			y = safezoneY;
			w = safezoneW;
			h = safezoneW * 4/3;
			text = "exile_assets\texture\loading\loading_cheathas_co.paa";
		};
	};
	class controls
	{
		class SortPing: RscPicture
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class SortPlayers: RscPicture
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class Y_GamerCard: RscActiveText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class PartyGUI: RscActiveText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class MuteAll: RscCheckBox
		{
			x = -1;
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class AssignRole: RscActiveText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class ButtonPlayers: RscButtonTextOnly
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class ButtonPing: ButtonPlayers
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class Title: RscTitle
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class PlayersName: RscTitle
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class CA_TextVotingTimeLeft: RscTitle
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class ValueMission: RscTitle
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class CA_TextDescription: RscText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class CA_ValueDescription: RscText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class TextIsland: RscText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class ValueIsland: RscText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class TextSide: RscText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class CA_B_West: RscActiveText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class CA_B_Logic: CA_B_West
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class CA_B_East: CA_B_West
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class CA_B_Guerrila: CA_B_West
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class CA_B_Civilian: CA_B_West
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class CA_B_Virtual: CA_B_West
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class CA_ValueRoles: RscListBox
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class CA_ValuePool: RscListNBox
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class CA_B_EnableAll: RscButtonMenu
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class CA_B_Lock: RscButtonMenu
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class CA_B_Params: RscButtonMenu
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class ButtonSteamWorkshop: RscButtonMenuSteam
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class CA_B_Kick: RscButtonMenu
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class CA_ButtonContinue: RscButtonMenuOK
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class CA_ButtonCancel: RscButtonMenuCancel
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class TextMission: RscText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class TextRole: RscText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class TextPlayersPool: RscText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class TextListedPlayers: RscText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class ValueListedPlayers: RscText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class ProgressMap: RscProgress
		{
			idc = -1;
			x = safeZoneX;
			y = safeZoneY;
			w = safeZoneW;
			h = 5 * pixelH;
			colorBar[] = {63/255, 212/255, 252/255, 1};
		};
		class ProgressMission: ProgressMap
		{
			idc = -1;
			x = safeZoneX;
			y = safeZoneY;
			w = safeZoneW;
			h = 5 * pixelH;
			colorBar[] = {63/255, 212/255, 252/255, 1};
		};
		class ExileSpinnerPicture: RscPicture 
		{
			idc = 66001;
			x = safeZoneX + 60 * pixelW;
			y = safeZoneY + safeZoneH - (60 + 64) * pixelH;
			w = 64 * pixelW;
			h = 64 * pixelH;
			text = "exile_assets\texture\loading\spinner_ca.paa";
			type = 0;
			centerU = 0.5;
			centerV = 0.5;
			angle = 90;
			show = 0;
		};
		class ExileSpinnerTitle: RscStructuredText
		{
			idc = 66002;
			text = "<t>Still loading...</t>";
			x = safeZoneX + 60 * pixelW;
			y = safeZoneY + safeZoneH - (60 + 64 - 10) * pixelH; 
			w = safeZoneW - (60 + 64 + 15) * pixelW;
			h = 64 * pixelH;
			size = 44 * pixelH;
			sizeEx = 44 * pixelH;
			colorText[] = {1, 1, 1, 1};
			shadow = 0;
			class Attributes
			{
				font = "RobotoMedium";
				color = "#ffffff";
				colorLink = "#ffffff";
				align = "left";
				shadow = 0;
			};
		};
		class ExileLifeLogo: RscPictureKeepAspect
		{
			idc = -1;
			text = "exilelife_assets\texture\mod\logo.paa";
			x = safeZoneX + safeZoneW - (180) * pixelW;
			y = safeZoneY + 30 * pixelH;
			w = 120 * pixelW;
			h = 120 * pixelH;
		};
		class ExileLogo: RscControlsGroupNoScrollbars
		{
			idc = -1;
			x = safeZoneX + safeZoneW - (60 + 380) * pixelW;
			y = safeZoneY + 60 * pixelH;
			w = 380 * pixelW;
			h = 60 * pixelH;
			show = 0;
			class controls {};
		};
		class ExileMap: RscControlsGroupNoScrollbars
		{
			idc = 66003;
			x = safeZoneX + safeZoneW - (60 + 380) * pixelW;
			y = safeZoneY + (60 + 60 + 30) * pixelH;
			w = 380 * pixelW;
			h = (190 + 30 + 20) * pixelH;
			show = 0;
			class controls {};
		};
		class ExileMission: RscControlsGroupNoScrollbars
		{
			idc = 66007;
			x = safeZoneX + safeZoneW - (60 + 380) * pixelW;
			y = safeZoneY + (60 + 60 + 30 + 190 + 30 + 20 + 30) * pixelH;
			w = 380 * pixelW;
			h = (190 + 30 + 20) * pixelH;
			show = 0;
			class controls {};
		};
	};
};
class RscDisplayNotFreeze: RscStandardDisplay
{
	enableSimulation = 1;
	access = 3;
	onLoad = "with uiNameSpace do { [_this select 0, 'RscDisplayNotFreeze'] call ExileClient_gui_loadingScreen_load; };"; 
	onUnload = "with uiNameSpace do { (_this select 0) call ExileClient_gui_loadingScreen_unload; };"; 
	delete scriptName; 
	delete scriptPath; 
	class controlsBackground
	{
		class Black: RscText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class CA_Vignette: RscVignette
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class Line: RscPicture
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class Map: RscPicture
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class Noise: RscPicture
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class ExileBlackBackground: RscText
		{
			idc = -1;
			colorBackground[] = {0,0,0,1};
			x = safezoneXAbs;
			y = safezoneY;
			w = safezoneWAbs;
			h = safezoneH;
		};
		class ExileBackgroundPicture: RscPicture 
		{
			idc = 66000;
			x = safezoneX;
			y = safezoneY;
			w = safezoneW;
			h = safezoneW * 4/3;
			text = "exile_assets\texture\loading\loading_cheathas_co.paa";
		};
	};
	class controls
	{
		class Disclaimer: RscControlsGroupNoScrollbars
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class LoadingStart: RscControlsGroup
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class MapAuthor: RscText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class MapBackBottom: RscText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class MapBackTop: RscText 
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class MapDescription: RscStructuredText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class MapName: RscText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class Mission: RscControlsGroupNoScrollbars
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class ProgressMap: RscProgress
		{
			x = safeZoneX;
			y = safeZoneY;
			w = safeZoneW;
			h = 5 * pixelH;
			colorBar[] = {63/255, 212/255, 252/255, 1};
		};
		class ProgressMission: ProgressMap
		{
			x = safeZoneX;
			y = safeZoneY;
			w = safeZoneW;
			h = 5 * pixelH;
			colorBar[] = {63/255, 212/255, 252/255, 1};
		};
		class Logo3DEN: ctrlStaticPicture
		{
			x = safeZoneX + safeZoneW - 60 * pixelW - 0.3;
			y = safeZoneY + safeZoneH - 60 * pixelW - 0.2;
		};
		class ExileSpinnerPicture: RscPicture
		{
			idc = 66001;
			x = safeZoneX + 60 * pixelW;
			y = safeZoneY + safeZoneH - (60 + 64) * pixelH;
			w = 64 * pixelW;
			h = 64 * pixelH;
			text = "exile_assets\texture\loading\spinner_ca.paa";
			type = 0;
			centerU = 0.5;
			centerV = 0.5;
			angle = 90;
			show = 0;
		};
		class ExileSpinnerTitle: RscStructuredText
		{
			idc = 66002;
			text = "<t>Almost there...</t>";
			x = safeZoneX + 60 * pixelW;
			y = safeZoneY + safeZoneH - (60 + 64 - 10) * pixelH; 
			w = safeZoneW - (60 + 64 + 15) * pixelW;
			h = 64 * pixelH;
			size = 44 * pixelH;
			sizeEx = 44 * pixelH;
			colorText[] = {1, 1, 1, 1};
			shadow = 0;
			class Attributes
			{
				font = "RobotoMedium";
				color = "#ffffff";
				colorLink = "#ffffff";
				align = "left";
				shadow = 0;
			};
		};
		class ExileLifeLogo: RscPictureKeepAspect
		{
			idc = -1;
			text = "exilelife_assets\texture\mod\logo.paa";
			x = safeZoneX + safeZoneW - (180) * pixelW;
			y = safeZoneY + 30 * pixelH;
			w = 120 * pixelW;
			h = 120 * pixelH;
		};
		class ExileLogo: RscControlsGroupNoScrollbars
		{
			idc = -1;
			x = safeZoneX + safeZoneW - (60 + 380) * pixelW;
			y = safeZoneY + 60 * pixelH;
			w = 380 * pixelW;
			h = 60 * pixelH;
			show = 0;
			class controls {};
		};
		class ExileMap: RscControlsGroupNoScrollbars
		{
			idc = 66003;
			x = safeZoneX + safeZoneW - (60 + 380) * pixelW;
			y = safeZoneY + (60 + 60 + 30) * pixelH;
			w = 380 * pixelW;
			h = (190 + 30 + 20) * pixelH;
			show = 0;
			class controls {};
		};
		class ExileMission: RscControlsGroupNoScrollbars
		{
			idc = 66007;
			x = safeZoneX + safeZoneW - (60 + 380) * pixelW;
			y = safeZoneY + (60 + 60 + 30 + 190 + 30 + 20 + 30) * pixelH;
			w = 380 * pixelW;
			h = (190 + 30 + 20) * pixelH;
			show = 0;
			class controls {};
		};
	};
};
class RscExileLifeSelectSpawnLocationDialog {
	idd = 24002;
	onLoad = "uiNamespace setVariable ['RscExileLifeSelectSpawnLocationDialog', _this select 0];";
	onUnload = "uiNamespace setVariable ['RscExileLifeSelectSpawnLocationDialog', displayNull]";
	duration = -1;
	class controlsBackground {
		class BlackBackground: RscText {
			colorBackground[] = {0, 0, 0, 1};
			x = "safezoneXAbs";
			y = "safezoneY";
			w = "safezoneWAbs";
			h = "safezoneH";
		};
		class Noise: RscPicture {
			text = "\a3\ui_f\data\IGUI\RscTitles\Interlacing\interlacing_ca.paa";
			colorText[] = {1, 1, 1, 1};
			x = "safezoneX";
			y = "safezoneY";
			w = "safezoneW";
			h = "safezoneH";
		};
		class Vignette: RscVignette {
			colorText[] = {0, 0, 0, 1};
		};
	};
	class controls 
	{
		class LoadingText: RscText {
			idc = 20002;
			text = "";
			x = "0 * (0.025) + (0)";
			y = "0 * (0.04) + (0)";
			w = "40 * (0.025)";
			h = "2 * (0.04)";
			sizeEx = "2 * (0.04)";
			style = 2;
		};
		class ProgressMap: RscProgress {
			colorBar[] = {"(profilenamespace getvariable ['GUI_BCG_RGB_R',0.77])", "(profilenamespace getvariable ['GUI_BCG_RGB_G',0.51])", "(profilenamespace getvariable ['GUI_BCG_RGB_B',0.08])", "(profilenamespace getvariable ['GUI_BCG_RGB_A',0.8])"};
			texture = "#(argb,8,8,3)color(1,1,1,1)";
			x = "safezoneX";
			y = "2.5 * 					(			(			((safezoneW / safezoneH) min 1.2) / 1.2) / 25) + safezoneY";
			w = "safezoneW";
			idc = 104;
			h = "0.2 * 					(			(			((safezoneW / safezoneH) min 1.2) / 1.2) / 25)";
		};
		class ProgressMission: ProgressMap {
			idc = 1013;
			x = "1.5 * 					(			((safezoneW / safezoneH) min 1.2) / 40) + 		(safezoneX + (safezoneW - 					((safezoneW / safezoneH) min 1.2))/2)";
			y = "10 * 					(			(			((safezoneW / safezoneH) min 1.2) / 1.2) / 25) + 		(safezoneY + (safezoneH - 					(			((safezoneW / safezoneH) min 1.2) / 1.2))/2)";
			w = "16 * 					(			((safezoneW / safezoneH) min 1.2) / 40)";
			h = "0.2 * 					(			(			((safezoneW / safezoneH) min 1.2) / 1.2) / 25)";
		};
		class TextCaption: RscText {
			idc = 24000;
			text = "Choose your spawn location:";
			x = "0 * (0.025) + (0)";
			y = "0 * (0.04) + (0)";
			w = "40 * (0.025)";
			h = "2 * (0.04)";
			sizeEx = "2 * (0.04)";
			style = 2;
		};
		class Map: RscMapControl {
			idc = 24001;
			text = "";
			x = "8 * (0.025) + (0)";
			y = "3 * (0.04) + (0)";
			w = "32 * (0.025)";
			h = "20 * (0.04)";
			moveOnEdges = 0;
			maxSatelliteAlpha = 0.750000;
			alphaFadeStartScale = 1.150000;
			alphaFadeEndScale = 1.290000;
		};
		class ListBoxLocations: RscListBox {
			idc = 24002;
			text = "Locations";
			x = "0 * (0.025) + (0)";
			y = "3 * (0.04) + (0)";
			w = "9.5 * (0.025)";
			h = "20 * (0.04)";
			colorBackground[] = {0, 0, 0, 0.250000};
			onLBSelChanged = "_this call ExileClient_gui_selectSpawnLocation_event_onListBoxSelectionChanged;";
		};
		class ButtonSpawn: RscButton {
			idc = 24003;
			text = "OKAY";
			x = "0 * (0.025) + (0)";
			y = "23.5 * (0.04) + (0)";
			w = "9.5 * (0.025)";
			h = "1.5 * (0.04)";
			onButtonClick = "[] call ExileClient_gui_selectSpawnLocation_event_onSpawnButtonClick";
		};
	};
};
class RscExileLoadingScreen: RscDisplayLoadMission
{
	idd = 24001;
	access = 3;
	onLoad = "uiNamespace setVariable ['RscExileLoadingScreen', _this select 0]; with uiNameSpace do { [_this select 0, 'RscExileLoadingScreen'] call ExileClient_gui_loadingScreen_load; };"; 
	onUnload = "with uiNameSpace do { (_this select 0) call ExileClient_gui_loadingScreen_unload; }; uiNamespace setVariable ['RscExileLoadingScreen', displayNull]"; 
};
class RscExileSelectSpawnLocationDialog
{
	idd = 24002;
	access = 3;
	duration = -1;
	onLoad = "uiNamespace setVariable ['RscExileSelectSpawnLocationDialog', _this select 0]; with uiNameSpace do { [_this select 0, 'RscExileSelectSpawnLocationDialog'] call ExileClient_gui_loadingScreen_load; };";
	onUnload = "with uiNameSpace do { (_this select 0) call ExileClient_gui_loadingScreen_unload; }; uiNamespace setVariable ['RscExileSelectSpawnLocationDialog', displayNull]";
	class controlsBackground
	{
		class ExileBlackBackground: RscText
		{
			idc = -1;
			colorBackground[] = {0,0,0,1};
			x = safezoneXAbs;
			y = safezoneY;
			w = safezoneWAbs;
			h = safezoneH;
		};
		class ExileBackgroundPicture: RscPicture
		{
			idc = 66000;
			x = safezoneX;
			y = safezoneY;
			w = safezoneW;
			h = safezoneW * 4/3;
			text = "exile_assets\texture\loading\loading_cheathas_co.paa";
		};
	};
	class controls
	{
		class ExileLifeLogo: RscPictureKeepAspect
		{
			idc = -1;
			text = "exilelife_assets\texture\mod\logo.paa";
			x = safeZoneX + safeZoneW - (180) * pixelW;
			y = safeZoneY + 30 * pixelH;
			w = 120 * pixelW;
			h = 120 * pixelH;
		};
		class ExileLogo: RscControlsGroupNoScrollbars
		{
			idc = -1;
			x = safeZoneX + safeZoneW - (60 + 380) * pixelW;
			y = safeZoneY + 60 * pixelH;
			w = 380 * pixelW;
			h = 60 * pixelH;
			show = 0;
			class controls {};
		};
		class ExileMap: RscControlsGroupNoScrollbars
		{
			idc = 66003;
			x = safeZoneX + safeZoneW - (60 + 380) * pixelW;
			y = safeZoneY + (60 + 60 + 30) * pixelH;
			w = 380 * pixelW;
			h = (190 + 30 + 20) * pixelH;
			show = 0;
			class controls {};
		};
		class ExileMission: RscControlsGroupNoScrollbars
		{
			idc = 66007;
			x = safeZoneX + safeZoneW - (60 + 380) * pixelW;
			y = safeZoneY + (60 + 60 + 30 + 190 + 30 + 20 + 30) * pixelH;
			w = 380 * pixelW;
			h = (190 + 30 + 20) * pixelH;
			show = 0;
			class controls {};
		};
		class DialogBackground: RscText
		{
			idc = -1;
			x = safeZoneX + 60 * pixelW;
			y = safeZoneY + 60 * pixelH;
			w = safeZoneW - (60 + 60 + 380 + 60) * pixelW;
			h = safeZoneH - (60 + 60) * pixelH;
			colorBackground[] = {32/255, 36/255, 42/255, 1};
		};
		class DialogTitleBackground: RscText
		{
			idc = -1;
			x = safeZoneX + 60 * pixelW;
			y = safeZoneY + 60 * pixelH;
			w = safeZoneW - (60 + 60 + 380 + 60) * pixelW;
			h = 60 * pixelH;
			colorBackground[] = {0, 0, 0, 1};
		};
		class DialogTitle: RscText
		{
			idc = -1;
			x = safeZoneX + (60 + 15) * pixelW;
			y = safeZoneY + 60 * pixelH;
			w = safeZoneW - (60 + 60 + 380 + 60 + 60 + 10) * pixelW;
			h = 60 * pixelH;
			text = "Spawn Location";
			sizeEx = 30 * pixelH;
			font = "RobotoCondensed";
		};
		class ListBoxLocations: RscListbox
		{
			idc = 24002;
			text = "Locations";
			font = "RobotoCondensed";
			x = safeZoneX + (60 + 15) * pixelW;
			y = safeZoneY + (60 + 60 + 15) * pixelH;
			w = 300 * pixelW;
			h = safeZoneH - (60 + 60 + 60 + 15 + 15 + 60 + 15) * pixelH;
			colorBackground[] = {0, 0, 0, 0.25};
			onLBSelChanged = "_this call ExileClient_gui_selectSpawnLocation_event_onListBoxSelectionChanged;";
		};
		class Map: RscMapControl
		{
			idc = 24001;
			text = "";
			x = safeZoneX + (60 + 15 + 300 + 15) * pixelW;
			y = safeZoneY + (60 + 60 + 15) * pixelH;
			w = safeZoneW - (60 + 15 + 300 + 15 + 15 + 60 + 380 + 60) * pixelW;
			h = safeZoneH - (60 + 60 + 15 + 60 + 15) * pixelH;
			moveOnEdges = 0;
			maxSatelliteAlpha = 0.75;
			alphaFadeStartScale = 1.15;
			alphaFadeEndScale = 1.29;
		};
		class ButtonSpawn: RscExilePrimaryButton
		{
			idc = 24003;
			text = "OKAY";
			x = safeZoneX + (60 + 15) * pixelW;
			y = safeZoneY + safeZoneH - (60 + 15 + 60) * pixelH;
			w = 300 * pixelW;
			h = 60 * pixelH;
			onButtonClick = "[] call ExileClient_gui_selectSpawnLocation_event_onSpawnButtonClick";
		};
	};
};
class RscMPSetupMessage
{
	access = 3;
	onLoad = "with uiNameSpace do { [_this select 0, 'RscMPSetupMessage'] call ExileClient_gui_loadingScreen_load; };"; 
	onUnload = "with uiNameSpace do { (_this select 0) call ExileClient_gui_loadingScreen_unload; };"; 
	class controlsBackground
	{
		class FullscreenBackground: RscText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class Vignette: RscVignette
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class ExileBlackBackground: RscText
		{
			idc = -1;
			colorBackground[] = {0,0,0,1};
			x = safezoneXAbs;
			y = safezoneY;
			w = safezoneWAbs;
			h = safezoneH;
		};
		class ExileBackgroundPicture: RscPicture 
		{
			idc = 66000;
			x = safezoneX;
			y = safezoneY;
			w = safezoneW;
			h = safezoneW * 4/3;
			text = "exile_assets\texture\loading\loading_cheathas_co.paa";
		};
	};
	class Controls
	{
		class BackgroundFull: RscText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class BackgroundProgress: RscText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class DownloadText: RscStructuredText
		{
			x = -1; 
			y = -1;
			h = 0;
			w = 0;
			show = 0;
		};
		class ExileProgress: RscProgress 
		{
			idc = 102;
			x = safeZoneX;
			y = safeZoneY;
			w = safeZoneW;
			h = 5 * pixelH;
			colorBar[] = {63/255, 212/255, 252/255, 1};
		};
		class ExileSpinnerTitle: RscStructuredText 
		{
			idc = 101;
			text = "<t>Downloading...</t>";
			x = safeZoneX + 60 * pixelW;
			y = safeZoneY + safeZoneH - (60 + 64 - 10) * pixelH; 
			w = safeZoneW - (60 + 64 + 15) * pixelW;
			h = 64 * pixelH;
			size = 44 * pixelH;
			sizeEx = 44 * pixelH;
			colorText[] = {1, 1, 1, 1};
			shadow = 0;
			class Attributes
			{
				font = "RobotoMedium";
				color = "#ffffff";
				colorLink = "#ffffff";
				align = "left";
				shadow = 0;
			};
		};
		class ExileLifeLogo: RscPictureKeepAspect
		{
			idc = -1;
			text = "exilelife_assets\texture\mod\logo.paa";
			x = safeZoneX + safeZoneW - (180) * pixelW;
			y = safeZoneY + 30 * pixelH;
			w = 120 * pixelW;
			h = 120 * pixelH;
		};
		class ExileLogo: RscControlsGroupNoScrollbars
		{
			idc = -1;
			x = safeZoneX + safeZoneW - (60 + 380) * pixelW;
			y = safeZoneY + 60 * pixelH;
			w = 380 * pixelW;
			h = 60 * pixelH;
			show = 0;
			class controls {};
		};
		class ExileMap: RscControlsGroupNoScrollbars
		{
			idc = 66003;
			x = safeZoneX + safeZoneW - (60 + 380) * pixelW;
			y = safeZoneY + (60 + 60 + 30) * pixelH;
			w = 380 * pixelW;
			h = (190 + 30 + 20) * pixelH;
			show = 0;
			class controls {};
		};
		class ExileMission: RscControlsGroupNoScrollbars
		{
			idc = 66007;
			x = safeZoneX + safeZoneW - (60 + 380) * pixelW;
			y = safeZoneY + (60 + 60 + 30 + 190 + 30 + 20 + 30) * pixelH;
			w = 380 * pixelW;
			h = (190 + 30 + 20) * pixelH;
			show = 0;
			class controls {};
		};
	};
};
class RscExileLifeCharacterSelection
{
	idd = 72850;
	onLoad = "uiNamespace setVariable ['RscExileLifeCharacterSelection', _this select 0];";
	onUnload = "uiNamespace setVariable ['RscExileLifeCharacterSelection', displayNull]";
	duration = -1;
	class controlsBackground {};
	class controls
	{
        class WelcomeLogo: RscPictureKeepAspect
        {
            idc = 728508;
            text = "\exilelife_assets\texture\mod\logo_welcome.paa";
            x = 6 * (0.025) + (0);
            y = 5 * (0.04) + (0);
            w = 28 * (0.025);
            h = 15 * (0.04);
        };
        class TopButtonImg1: RscExileLifeMenuButton        
        {
            idc = 728504;
            x = 0.15 * safezoneW + safezoneX;
            y = 0.46239 * safezoneH + safezoneY;
            onButtonClick = "[] call ExileLifeClient_gui_selectCharacter_enter"; 
            animTextureNormal = "\exilelife_assets\texture\ui\Menu\enter_world.paa";
            animTextureDisabled = "\exilelife_assets\texture\ui\Menu\enter_world.paa";
            animTextureOver = "\exilelife_assets\texture\ui\Menu\enter_world_light.paa"; 
            animTextureFocused = "\exilelife_assets\texture\ui\Menu\enter_world.paa";
            animTexturePressed = "\exilelife_assets\texture\ui\Menu\enter_world.paa";
            animTextureDefault = "\exilelife_assets\texture\ui\Menu\enter_world.paa";        
        };
        class TopButtonImg2: RscExileLifeMenuButton        
        {
            idc = 728505;
            x = 0.15 * safezoneW + safezoneX;
            y = 0.46239 * safezoneH + safezoneY;
            onButtonClick = "[] call ExileLifeClient_gui_selectCharacter_enter"; 
            animTextureNormal = "\exilelife_assets\texture\ui\Menu\choose_class.paa";
            animTextureDisabled = "\exilelife_assets\texture\ui\Menu\choose_class.paa";
            animTextureOver = "\exilelife_assets\texture\ui\Menu\choose_class_light.paa"; 
            animTextureFocused = "\exilelife_assets\texture\ui\Menu\choose_class.paa";
            animTexturePressed = "\exilelife_assets\texture\ui\Menu\choose_class.paa";
            animTextureDefault = "\exilelife_assets\texture\ui\Menu\choose_class.paa";        
        };
        class MiddleButtonImg: RscExileLifeMenuButton
        {
            idc = 728506;
            x = 0.15 * safezoneW + safezoneX;
            y = 0.518805 * safezoneH + safezoneY;
            onButtonClick = "[2] call ExilelifeClient_gui_selectCharacter_switchMenu"; 
            animTextureNormal = "\exilelife_assets\texture\ui\Menu\change_character.paa";
            animTextureDisabled = "\exilelife_assets\texture\ui\Menu\change_character.paa";
            animTextureOver = "\exilelife_assets\texture\ui\Menu\change_character_light.paa"; 
            animTextureFocused = "\exilelife_assets\texture\ui\Menu\change_character.paa";
            animTexturePressed = "\exilelife_assets\texture\ui\Menu\change_character.paa";
            animTextureDefault = "\exilelife_assets\texture\ui\Menu\change_character.paa";                 
        };
        class BottomButtonImg: RscExileLifeMenuButton
        {
            idc = 728507;
            x = 0.15 * safezoneW + safezoneX;
            y = 0.578981 * safezoneH + safezoneY;
            onButtonClick = "[] call ExileLifeClient_system_process_disconnect;";
            animTextureNormal = "\exilelife_assets\texture\ui\Menu\return_to_lobby.paa";
            animTextureDisabled = "\exilelife_assets\texture\ui\Menu\return_to_lobby.paa";
            animTextureOver = "\exilelife_assets\texture\ui\Menu\return_to_lobby_light.paa"; 
            animTextureFocused = "\exilelife_assets\texture\ui\Menu\return_to_lobby.paa";
            animTexturePressed = "\exilelife_assets\texture\ui\Menu\return_to_lobby.paa";
            animTextureDefault = "\exilelife_assets\texture\ui\Menu\return_to_lobby.paa";   
        };
	};
};
class RscExileLifeCharacterSelectionChooseChar
{
	idd = 73850;
	onLoad = "uiNamespace setVariable ['RscExileLifeCharacterSelectionChooseChar', _this select 0];";
	onUnload = "uiNamespace setVariable ['RscExileLifeCharacterSelectionChooseChar', displayNull]";
	duration = -1;
	class controlsBackground {};
	class controls
	{
		class RscShortcutButton_1701: RscExileLifeMenuButton
		{
			idc = 738502;
			onButtonClick = "ExileLifeClientCharacterSwap call ExileLifeClient_gui_spawnCam_switchChar;";
            x = 0.15 * safezoneW + safezoneX;
			y = 0.521992 * safezoneH + safezoneY;
            animTextureNormal = "\exilelife_assets\texture\ui\Menu\switch_character.paa";
            animTextureDisabled = "\exilelife_assets\texture\ui\Menu\switch_character.paa";
            animTextureOver = "\exilelife_assets\texture\ui\Menu\switch_character_light.paa"; 
            animTextureFocused = "\exilelife_assets\texture\ui\Menu\switch_character.paa";
            animTexturePressed = "\exilelife_assets\texture\ui\Menu\switch_character.paa";
            animTextureDefault = "\exilelife_assets\texture\ui\Menu\switch_character.paa";   
		};
		class RscShortcutButton_1702: RscExileLifeMenuButton
		{
			idc = 738505;
			onButtonClick = "[1] call ExileLifeClient_gui_selectCharacter_switchMenu;";
            x = 0.15 * safezoneW + safezoneX;
			y = 0.576973 * safezoneH + safezoneY;
            animTextureNormal = "\exilelife_assets\texture\ui\Menu\main_menu.paa";
            animTextureDisabled = "\exilelife_assets\texture\ui\Menu\main_menu.paa";
            animTextureOver = "\exilelife_assets\texture\ui\Menu\main_menu_light.paa"; 
            animTextureFocused = "\exilelife_assets\texture\ui\Menu\main_menu.paa";
            animTexturePressed = "\exilelife_assets\texture\ui\Menu\main_menu.paa";
            animTextureDefault = "\exilelife_assets\texture\ui\Menu\main_menu.paa";   
		};
        class LockpickingProgress: RscPictureKeepAspect
        {
            idc = 728511;
            text = "\exilelife_assets\texture\ui\GUI\progressbar\Percentagebar_00.paa";
            x = 41.5 * (0.025) + (0);
            y = -8 * (0.04) + (0);
            w = 19 * (0.025);
        };   
		class LockPickingText: RscText
        {
        	idc = 728509;
        	text = "Lockpicking"; 
        	x = 43.1 * (0.025) + (0);
        	y = -6.7 * (0.04) + (0);
        	w = 10.5 * (0.025);
        	h = 1 * (0.04);
        };
        class LockPickingLevel: RscStructuredText
        {
        	idc = 728510;
        	text = "1"; 
        	x = 47.5 * (0.025) + (0);
            y = -6.5 * (0.04) + (0);
        	w = 1.5 * (0.025);
        	h = 1 * (0.04);
        	colorBackground[] = {-1,-1,-1,0};
        };
        class StrengthProgress: RscPictureKeepAspect
        {
            idc = 728514;
            text = "\exilelife_assets\texture\ui\GUI\progressbar\Percentagebar_00.paa";            
            x = 41.5 * (0.025) + (0);
            y = -6 * (0.04) + (0);
            w = 19 * (0.025);
        };
        class StrengthText: RscText
        {
        	idc = 728512;
        	text = "Strength"; 
        	x = 43.1 * (0.025) + (0);
        	y = -4.7 * (0.04) + (0);
        	w = 10.5 * (0.025);
        	h = 1 * (0.04);
        };
        class StrengthLevel: RscStructuredText
        {
        	idc = 728513;
        	text = "4"; 
            x = 46.25 * (0.025) + (0);
            y = -4.55 * (0.04) + (0);
        	w = 1.5 * (0.025);
        	h = 1 * (0.04);
        	colorBackground[] = {-1,-1,-1,0};
        };
        class RepairProgress: RscPictureKeepAspect
        {
            idc = 728517;
            text = "\exilelife_assets\texture\ui\GUI\progressbar\Percentagebar_00.paa";   
            x = 41.5 * (0.025) + (0);
            y = -4 * (0.04) + (0);                      
            w = 19 * (0.025);
        };
        class RepairText: RscText
        {
        	idc = 728515;
        	text = "Repair"; 
        	x = 43.1 * (0.025) + (0);
        	y = -2.7 * (0.04) + (0);
        	w = 10.5 * (0.025);
        	h = 1 * (0.04);
        };
        class RepairLevel: RscStructuredText
        {
        	idc = 728516;
        	text = "1"; 
            x = 45.45 * (0.025) + (0);
            y = -2.55 * (0.04) + (0);
        	w = 1.5 * (0.025);
        	h = 1 * (0.04);
        	colorBackground[] = {-1,-1,-1,0};
        };
        class HealingProgress: RscPictureKeepAspect
        {
            idc = 728520;
            text = "\exilelife_assets\texture\ui\GUI\progressbar\Percentagebar_00.paa";  
            x = 41.5 * (0.025) + (0);
            y = -2 * (0.04) + (0);                       
            w = 19 * (0.025);
        };
        class HealingText: RscText
        {
            idc = 728518;
            text = "Healing"; 
            x = 43.1 * (0.025) + (0);
            y = -0.7 * (0.04) + (0);
            w = 10.5 * (0.025);
            h = 1 * (0.04);
        };
        class HealingLevel: RscStructuredText
        {
        	idc = 728519;
        	text = "5"; 
            x = 45.8 * (0.025) + (0);
            y = -0.5 * (0.04) + (0);
        	w = 1.5 * (0.025);
        	h = 1 * (0.04);
        	colorBackground[] = {-1,-1,-1,0};
        };
        class SpeedProgress: RscPictureKeepAspect
        {
            idc = 728523;
            text = "\exilelife_assets\texture\ui\GUI\progressbar\Percentagebar_00.paa";   
            x = 41.5 * (0.025) + (0);
            y = 0 * (0.04) + (0);                      
            w = 19 * (0.025);
        };
        class SpeedText: RscText
        {
        	idc = 728521;
        	text = "Speed"; 
        	x = 43.1 * (0.025) + (0);
        	y = 1.3 * (0.04) + (0);
        	w = 10.5 * (0.025);
        	h = 1 * (0.04);
        };
        class SpeedLevel: RscStructuredText
        {
        	idc = 728522;
        	text = "2"; 
            x = 45.35 * (0.025) + (0);
            y = 1.45 * (0.04) + (0);
        	w = 1.5 * (0.025);
        	h = 1 * (0.04);
        	colorBackground[] = {-1,-1,-1,0};
        };
        class BottomInfo: RscStructuredText
        {
        	idc = 728524;
        	text = ""; 
        	x = 41.5 * (0.025) + (0);
        	y = 3.5 * (0.04) + (0);
        	w = 19 * (0.025);
        	h = 2.5 * (0.04);
        	colorBackground[] = {-1,-1,-1,0};
        };
	};
};
class RscExileLifeClassSelectionChooseClass
{
	idd = 74850;
	onLoad = "uiNamespace setVariable ['RscExileLifeSelectClassDialog', _this select 0];";
	onUnload = "uiNamespace setVariable ['RscExileLifeSelectClassDialog', displayNull]";
	duration = -1;
	class controlsBackground {};
	class controls
	{
        class RscShortcutButton_1701: RscExileLifeMenuButton
        {
            idc = 748502;
            onButtonClick = "closeDialog 0; [] call ExileLifeClient_gui_selectClass_enter;";
            x = 0.15 * safezoneW + safezoneX;
            y = 0.576973 * safezoneH + safezoneY;
            animTextureNormal = "\exilelife_assets\texture\ui\Menu\enter_world.paa";
            animTextureDisabled = "\exilelife_assets\texture\ui\Menu\enter_world.paa";
            animTextureOver = "\exilelife_assets\texture\ui\Menu\enter_world_light.paa"; 
            animTextureFocused = "\exilelife_assets\texture\ui\Menu\enter_world.paa";
            animTexturePressed = "\exilelife_assets\texture\ui\Menu\enter_world.paa";
            animTextureDefault = "\exilelife_assets\texture\ui\Menu\enter_world.paa";    
        };
        class RscShortcutButton_1702: RscExileLifeMenuButton
        {
            idc = 748505;
            onButtonClick = "[] call ExileLifeClient_gui_spawnCam_switchClass";
            x = 0.15 * safezoneW + safezoneX;
            y = 0.521992 * safezoneH + safezoneY;
            animTextureNormal = "\exilelife_assets\texture\ui\Menu\switch_class.paa";
            animTextureDisabled = "\exilelife_assets\texture\ui\Menu\switch_class.paa";
            animTextureOver = "\exilelife_assets\texture\ui\Menu\switch_class_light.paa"; 
            animTextureFocused = "\exilelife_assets\texture\ui\Menu\switch_class.paa";
            animTexturePressed = "\exilelife_assets\texture\ui\Menu\switch_class.paa";
            animTextureDefault = "\exilelife_assets\texture\ui\Menu\switch_class.paa";   
        };
        class LockpickingProgress: RscPictureKeepAspect
        {
            idc = 748508;
            text = "\exilelife_assets\texture\ui\GUI\progressbar\Percentagebar_00.paa";
            x = 41.5 * (0.025) + (0);
            y = -8 * (0.04) + (0);
            w = 19 * (0.025);
        };   
        class LockPickingText: RscText
        {
            idc = 748507;
            text = "Lockpicking"; 
            x = 43.1 * (0.025) + (0);
            y = -6.7 * (0.04) + (0);
            w = 10.5 * (0.025);
            h = 1 * (0.04);
        };
        class StrengthProgress: RscPictureKeepAspect
        {
            idc = 748510;
            text = "\exilelife_assets\texture\ui\GUI\progressbar\Percentagebar_00.paa";            
            x = 41.5 * (0.025) + (0);
            y = -6 * (0.04) + (0);
            w = 19 * (0.025);
        };
        class StrengthText: RscText
        {
            idc = 748509;
            text = "Strength"; 
            x = 43.1 * (0.025) + (0);
            y = -4.7 * (0.04) + (0);
            w = 10.5 * (0.025);
            h = 1 * (0.04);
        };
        class RepairProgress: RscPictureKeepAspect
        {
            idc = 748512;
            text = "\exilelife_assets\texture\ui\GUI\progressbar\Percentagebar_00.paa";   
            x = 41.5 * (0.025) + (0);
            y = -4 * (0.04) + (0);                      
            w = 19 * (0.025);
        };
        class RepairText: RscText
        {
        	idc = 748511;
            text = "Repair"; 
            x = 43.1 * (0.025) + (0);
            y = -2.7 * (0.04) + (0);
            w = 10.5 * (0.025);
            h = 1 * (0.04);
        };
        class HealingProgress: RscPictureKeepAspect
        {
            idc = 748514;
            text = "\exilelife_assets\texture\ui\GUI\progressbar\Percentagebar_00.paa";  
            x = 41.5 * (0.025) + (0);
            y = -2 * (0.04) + (0);                       
            w = 19 * (0.025);
        };
        class HealingText: RscText
        {
            idc = 748513;
            text = "Healing"; 
            x = 43.1 * (0.025) + (0);
            y = -0.7 * (0.04) + (0);
            w = 10.5 * (0.025);
            h = 1 * (0.04);
        };
        class SpeedProgress: RscPictureKeepAspect
        {
            idc = 748516;
            text = "\exilelife_assets\texture\ui\GUI\progressbar\Percentagebar_00.paa";   
            x = 41.5 * (0.025) + (0);
            y = 0 * (0.04) + (0);                      
            w = 19 * (0.025);
        };
        class SpeedText: RscText
        {
            idc = 748515;
            text = "Speed"; 
            x = 43.1 * (0.025) + (0);
            y = 1.3 * (0.04) + (0);
            w = 10.5 * (0.025);
            h = 1 * (0.04);
        };
        class BottomInfo: RscPictureKeepAspect
        {
            idc = 748519;
            text = "\exilelife_assets\texture\ui\GUI\Thief.paa"; 
            x = 36 * (0.025) + (0);
            y = 28 * (0.04) + (0);
            w = 20 * (0.025);
            h = 7 * (0.04);
            colorBackground[] = {-1,-1,-1,0};
        };
	};
};
class RscExileXM8Slide
{
	deletable = 0;
	fade = 0;
	shadow = 0;
	style = 16;
	type = 15;
	x = 0 * (0.025);
	y = 0 * (0.04);
	w = 34 * (0.025);
	h = 19 * (0.04);
	show = false;
	class Controls
	{
	};
	class HScrollbar: Scrollbar
	{
		show = false;
	};
	class VScrollbar: Scrollbar
	{
		show = false;
	};
};
class RscExileXM8Frame: RscText
{
	colorBackground[] = {255, 255, 255, 0.1};
};
class RscExileXM8AppButton: RscButtonMenu
{
	type = 16;
	style = "0x02"; 
	period = 1.2;
	periodFocus = 1.2;
	periodOver = 1.2;
	shadow = 0;
	shortcuts[] = {};
	textureNoShortcut = "\A3\Ui_f\data\GUI\RscCommon\RscButtonMenuSteam\steam_ca.paa";
	animTextureDefault = "#(argb,8,8,3)color(1,1,1,1)";
	animTextureDisabled = "#(argb,8,8,3)color(1,1,1,1)";
	animTextureFocused = "#(argb,8,8,3)color(1,1,1,1)";
	animTextureNormal = "#(argb,8,8,3)color(1,1,1,1)";
	animTextureOver = "#(argb,8,8,3)color(1,1,1,1)";
	animTexturePressed = "#(argb,8,8,3)color(1,1,1,1)";
	colorBackground[] = {255, 255, 255, 0.05};
	colorBackground2[] = {255, 255, 255, 0.05};
	colorBackgroundFocused[] = {255, 255, 255, 0.1};
	colorDisabled[] = {1,1,1,0.25};
	colorDisabledSecondary[] = {1,1,1,0.25};
	colorFocused[] = {225/255, 65/255, 65/255, 1};
	colorFocusedSecondary[] = {225/255, 65/255, 65/255, 1};
	colorText[] = {1,1,1,1};
	color[] = {1,1,1,1};
	color2[] = {225/255, 65/255, 65/255, 1};
	font = "PuristaMedium";
	size = "(			(			(			((safezoneW / safezoneH) min 1.2) / 1.2) / 25) * 0.8)";
	sizeEx = "(			(			(			((safezoneW / safezoneH) min 1.2) / 1.2) / 25) * 1)";
	text = "Text";
	colorSecondary[] = {1,1,1,1};
	color2Secondary[] = {0,0,0,1};
	fontSecondary = "PuristaLight";
	sizeExSecondary = "(			(			(			((safezoneW / safezoneH) min 1.2) / 1.2) / 25) * 0.8)";
	textSecondary = "";
	soundClick[] = {"\A3\ui_f\data\sound\RscButtonMenu\soundClick",0.09,1};
	soundEnter[] = {"\A3\ui_f\data\sound\RscButtonMenu\soundEnter",0.09,1};
	soundEscape[] = {"\A3\ui_f\data\sound\RscButtonMenu\soundEscape",0.09,1};
	soundPush[] = {"\A3\ui_f\data\sound\RscButtonMenu\soundPush",0.09,1};
	tooltipColorBox[] = {1,1,1,1};
	tooltipColorShade[] = {0,0,0,0.65};
	tooltipColorText[] = {1,1,1,1};
	class Attributes
	{
		align = "center";
	};
	class AttributesImage
	{
		align = "center";
		color = "#E5E5E5";
		font = "PuristaMedium";
	};
	class ShortcutPos
	{
		left = 0;
		top = 0;
		h = 1;
		w = 1;
	};
};
class RscExileXM8AppButton1x1: RscExileXM8AppButton
{
	w = 6 * (0.025);
	h = 5 * (0.04);
	textureNoShortcut = "";
	text = "";
	class ShortcutPos
	{
		left = (6 * (0.025)) * 0.25;
		top = (5 * (0.04)) * 0.15;
		w = (6 * (0.025)) * 0.5;
		h = (5 * (0.04)) * 0.5;
	};
	class TextPos
	{
		bottom = 0;
		left = 0;
		right = 0;
		top = (5 * (0.04)) * 0.65;
	};
};
class RscExileXM8AppButtonHalf: RscExileXM8AppButton
{
	w = 6 * (0.025);
	h = 2.5 * (0.04);
	textureNoShortcut = "";
	text = "";
	class ShortcutPos
	{
		left = (6 * (0.025)) * 0.25;
		top = (2.5 * (0.04)) * 0.15;
		w = (6 * (0.025)) * 0.5;
		h = (2.5 * (0.04)) * 0.5;
	};
	class TextPos
	{
		bottom = 0;
		left = 0;
		right = 0;
		top = (1.5 * (0.04)) * 0.65;
	};
};
class RscExileXM8AppButton2x1: RscExileXM8AppButton1x1
{
	w = 12.5 * (0.025);
	class ShortcutPos
	{
		left = (12.5 * (0.025)) * 0.5 - (6 * (0.025)) * 0.25;
		top = (5 * (0.04)) * 0.15;
		w = (6 * (0.025)) * 0.5;
		h = (5 * (0.04)) * 0.5;
	};
};
class RscExileXM8Edit: RscEdit
{
	colorBackground[] = {255, 255, 255, 0.1};
	colorDisabled[] = {255, 255, 255, 0.1};
	colorSelection[] = {0/255, 178/255, 205/255, 1};
	colorText[] = {252/255, 253/255, 255/255, 1};
	shadow = 2;
	style = "0x00 + 0x50"; 
	type = 2;
	onSetFocus = "_this call ExileClient_gui_xm8_event_onInputBoxFocus";
	onKillFocus = "_this call ExileClient_gui_xm8_event_onInputBoxKillFocus";
};
class RscExileXM8Button: RscExileXM8AppButton1x1
{
	height = 2 * (0.04);
	size = "(			(			(			((safezoneW / safezoneH) min 1.2) / 1.2) / 25) * 1)";
	class Attributes
	{
		align = "center";
	};
	class AttributesImage
	{
		align = "center";
		color = "#E5E5E5";
		font = "PuristaMedium";
	};
	class TextPos
	{
		bottom = 0;
		left = 0;
		right = 0;
		top = (1 * (0.04)) * 0.5;
	};
};
class RscExileXM8ButtonMenu: RscExileXM8Button
{
	height = 1 * (0.04);
	class TextPos
	{
		bottom = 0;
		left = 0;
		right = 0;
		top = 0;
	};
};
class RscExileXM8BackButton: RscExileXM8AppButton1x1
{
	textureNoShortcut = "\exile_assets\texture\ui\xm8_back_ca.paa";
	w = 3 * (0.025);
	h = 2.5 * (0.04);
	class ShortcutPos
	{
		left = 0;
		top = 0;
		w = 3 * (0.025);
		h = 2.5 * (0.04);
	};
};
class RscExileXM8ListBox: RscListbox
{
};
class RscExileXM8
{
	idd = 24015;
	onLoad = "uiNamespace setVariable ['RscExileXM8', _this select 0]";
	onUnload = "call ExileClient_gui_xm8_event_onUnload; uiNamespace setVariable ['RscExileXM8', displayNull]";
	onKeyUp = "_this call ExileClient_gui_xm8_event_onKeyUp";
	onKeyDown = "_this call ExileClient_gui_xm8_event_onKeyDown";
	class ControlsBackground
	{
		class BackgroundOff: RscPictureKeepAspect
		{
			idc = 4000;
			text = "\exile_assets\texture\ui\xm8_off_ca.paa";
			x = 0 * (0.025) + (0);
			y = -4 * (0.04) + (0);
			w = 40 * (0.025);
			h = 33.3333 * (0.04);
		};
		class BackgroundOn: RscPictureKeepAspect
		{
			idc = 4001;
			text = "\exile_assets\texture\ui\xm8_on_ca.paa";
			x = 0 * (0.025) + (0);
			y = -4 * (0.04) + (0);
			w = 40 * (0.025);
			h = 33.3333 * (0.04);
		};
	};
	class Controls
	{
		class Slides: RscExileXM8Slide
		{
			idc = 4007;
			x = 3 * (0.025) + (0);
			y = 2 * (0.04) + (0);
			class Controls
			{
				class SlideExtraApps: RscExileXM8Slide
				{
					idc = 5000;
					show = false;
					class Controls
					{
						class GoFwdHalfButton: RscExileXM8AppButtonHalf
						{
							idc = 5100;
							text = "NEXT";
							x = (30 - 3) * (0.025);
							y = (15 - 2) * (0.04);
							onButtonClick = "['extraAppsTransition', 0] call ExileClient_gui_xm8_slide;";
						};
						class GoBackHalfButton: RscExileXM8AppButtonHalf
						{
							idc = 5101;
							text = "PREVIOUS";
							x = (30 - 3) * (0.025);
							y = (17.5 - 2) * (0.04);
							onButtonClick = "['extraAppsTransition', 1] call ExileClient_gui_xm8_slide;";
						};
						class GoBackButton: RscExileXM8AppButton1x1
						{
							idc = 5102;
							text = "PREVIOUS";
							w = 6 * (0.025);
							h = 5 * (0.04);
							x = (30 - 3) * (0.025);
							y = (15 - 2) * (0.04);
							textureNoShortcut = "\exile_assets\texture\ui\xm8_app_extra_apps_ca.paa";
							onButtonClick = "['extraAppsTransition', 1] call ExileClient_gui_xm8_slide;";
							class TextPos
							{
								bottom = 0;
								left = 0;
								right = 0;
								top = (5 * (0.04)) * 0.65;
							};
						};
						class GoFwdButton: RscExileXM8AppButton1x1
						{
							idc = 5103;
							text = "NEXT";
							w = 6 * (0.025);
							h = 5 * (0.04);
							x = (30 - 3) * (0.025);
							y = (15 - 2) * (0.04);
							textureNoShortcut = "\exile_assets\texture\ui\xm8_app_extra_apps_ca.paa";
							onButtonClick = "['extraAppsTransition', 0] call ExileClient_gui_xm8_slide;";
						};
					};
				};
				class SlideExtraAppsTransition: RscExileXM8Slide
				{
					idc = 6000;
					show = false;
					class Controls
					{
						class GoFwdHalfButton: RscExileXM8AppButtonHalf
						{
							idc = 6100;
							text = "NEXT";
							x = (30 - 3) * (0.025);
							y = (15 - 2) * (0.04);
							onButtonClick = "['extraApps', 0] call ExileClient_gui_xm8_slide;";
						};
						class GoBackHalfButton: RscExileXM8AppButtonHalf
						{
							idc = 6101;
							text = "PREVIOUS";
							x = (30 - 3) * (0.025);
							y = (17.5 - 2) * (0.04);
							onButtonClick = "['extraApps', 1] call ExileClient_gui_xm8_slide;";
						};
						class GoBackButton: RscExileXM8AppButton1x1
						{
							idc = 6102;
							text = "PREVIOUS";
							w = 6 * (0.025);
							h = 5 * (0.04);
							x = (30 - 3) * (0.025);
							y = (15 - 2) * (0.04);
							textureNoShortcut = "\exile_assets\texture\ui\xm8_app_extra_apps_ca.paa";
							onButtonClick = "['extraApps', 1] call ExileClient_gui_xm8_slide;";
							class TextPos
							{
								bottom = 0;
								left = 0;
								right = 0;
								top = (5 * (0.04)) * 0.65;
							};
						};
						class GoFwdButton: RscExileXM8ButtonMenu
						{
							idc = 6103;
							text = "NEXT";
							w = 6 * (0.025);
							h = 5 * (0.04);
							x = (30 - 3) * (0.025);
							y = (15 - 2) * (0.04);
							textureNoShortcut = "\exile_assets\texture\ui\xm8_app_extra_apps_ca.paa";
							onButtonClick = "['extraApps', 0] call ExileClient_gui_xm8_slide;";
						};
					};
				};
				class SlideMobileXm8: RscExileXM8Slide
				{
					idc = 4200;
					show = false;
					class Controls
					{
						class Description: RscStructuredText
						{
							idc = -1;
							x = 11.5 * (0.025);
							y = 3 * (0.04);
							w = 20.5 * (0.025);
							h = 12 * (0.04);
							colorBackground[] = {0,0,0,0.25};
							text = "<t size='1.5'>Never miss a base raid!<br/><br/></t>Use the code to the left to link your smartphone with your in-game character. You will then receive notifications about base raids, protection money reminders and more!<br/><br/><a href='https://xm8.exilemod.com/'>Read more</a>";
							size = 24 * pixelH;
							class Attributes
							{
								align = "left";
								color = "#ffffff";
								colorLink = "#00b2cd";
								font = "PuristaMedium";
								shadow = 0;
							};
						};
						class CodeLabel: RscStructuredText
						{
							idc = 4201;
							text = "<t color='#00b2cd' font='OrbitronLight' size='1.6' valign='middle' align='center' shadow='0'><br/><br/><br/><t font='OrbitronMedium' size='3.5' color='#ffffff'>ABCD</t><br/>SERVER CODE</t>";
							x = 2 * (0.025);
							y = 3 * (0.04);
							w = 9 * (0.025);
							h = 12 * (0.04);
							colorBackground[] = {255, 255, 255, 0.05};
							size = 10 * pixelH;
						};
						class PlayStoreImage: RscStructuredText
						{
							idc = -1;
							text = "<t valign='middle' align='center' shadow='0'><a href='https://xm8.exilemod.com/redirect/playstore'><img image='exile_assets\texture\ui\google_play_ca.paa'></a></t>";
							x = 2 * (0.025);
							y = 9 * (0.04);
							w = 9 * (0.025);
							h = 3 * (0.04);
							colorBackground[] = {0,0,0,0};
							size = 64 * pixelH;
						};
						class AppStoreImage: RscStructuredText
						{
							idc = -1;
							text = "<t valign='middle' align='center' shadow='0'><img color='#40FFFFFF' image='exile_assets\texture\ui\app_store_ca.paa'></t>";
							x = 2 * (0.025);
							y = 11 * (0.04);
							w = 9 * (0.025);
							h = 3 * (0.04);
							colorBackground[] = {0,0,0,0};
							size = 64 * pixelH;
							tooltip = "Not available yet";
						};
						class GoogleLegalHint: RscText
						{
							idc = -1;
							text = "Google Play and the Google Play logo are trademarks of Google Inc.";
							colorText[] = {1, 1, 1, 0.5};
							x = 2 * (0.025);
							y = 16 * (0.04);
							w = 30 * (0.025);
							h = 1 * (0.04);
							sizeEx = 14 * pixelH;
						};
						class AppleShitLegalHint: RscText
						{
							idc = -1;
							text = "Apple and the Apple logo are trademarks of Apple Inc. - App Store is a service mark of Apple Inc.";
							colorText[] = {1, 1, 1, 0.5};
							x = 2 * (0.025);
							y = 17 * (0.04);
							w = 30 * (0.025);
							h = 1 * (0.04);
							sizeEx = 14 * pixelH;
						};
						class GoBackButton: RscExileXM8ButtonMenu
						{
							idc = -1;
							text = "GO BACK";
							x = 27.5 * (0.025) + (0);
							y = 16 * (0.04);
							w = 6 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "[ExileExtraAppsHomePage, 1] call ExileClient_gui_xm8_slide";
						};
					};
				};
				class SlideCriminalHistory: RscExileXM8Slide
				{
					idc = 4150;
					show = false;
					class Controls
					{
						class BackgroundTop: RscText
						{
							idc = 4183;
							x = 1.35 * (0.025) + (0);
							y = 3.8 * (0.04) + (0);
							w = 31.2 * (0.025);
							h = 2 * (0.04);
							colorBackground[] = {0.1,0.1,0.1,0.4};
						};
						class BackgroundCentre: RscText
						{
							idc = 4184;
							x = 1.35 * (0.025) + (0);
							y = 6.1 * (0.04) + (0);
							w = 31.2 * (0.025);
							h = 8.7 * (0.04);
							colorBackground[] = {0.1,0.1,0.1,0.4};
						};
						class BackgroundCentreTitle: RscText
						{
							idc = 4185;
							x = 1.35 * (0.025) + (0);
							y = 6.1 * (0.04) + (0);
							w = 31.2 * (0.025);
							h = 2 * (0.04);
							colorBackground[] = {0.1,0.1,0.1,0.5};
						};
						class scanBtn: RscExileXM8ButtonMenu
						{
							idc = 4151;
							text = "Scan Prisoner"; 
							x = 1 * (0.025) + (0);
							y = 1.7 * (0.04) + (0);
							w = 5.5 * (0.025);
							h = 1.5 * (0.04);
							class TextPos
							{
								bottom = 0;
								left = 0;
								right = 0;
								top = (0.5 * (0.04)) * 0.5;
							};
							onButtonClick = "call ExileLifeClient_gui_xm8_slide_criminalHistory_event_onScanButtonClick;";
						};
						class PrisonerIDText: RscText
						{
							idc = 4177;
							text = "Prisoner ID:"; 
							x = 7.5 * (0.025) + (0);
							y = 1.25 * (0.04) + (0);
							w = 4.5 * (0.025);
							h = 2.5 * (0.04);
						};
						class PrisonerIDInput: RscEdit
						{
							idc = 4152;
							x = 12 * (0.025) + (0);
							y = 2 * (0.04) + (0);
							w = 5 * (0.025);
							h = 1 * (0.04);
						};
						class PrisonerNameText: RscText
						{
							idc = 4178;
							text = "Name:"; 
							x = 17.5 * (0.025) + (0);
							y = 1.25 * (0.04) + (0);
							w = 4 * (0.025);
							h = 2.5 * (0.04);
						};
						class PrisonerNameInput: RscEdit
						{
							idc = 4153;
							x = 20.5 * (0.025) + (0);
							y = 2 * (0.04) + (0);
							w = 5 * (0.025);
							h = 1 * (0.04);
						};
						class recordsBtn: RscExileXM8ButtonMenu
						{
							idc = 4179;
							text = "Search Records"; 
							x = 27 * (0.025) + (0);
							y = 1.7 * (0.04) + (0);
							w = 6 * (0.025);
							h = 1.5 * (0.04);
							class TextPos
							{
								bottom = 0;
								left = 0;
								right = 0;
								top = (0.5 * (0.04)) * 0.5;
							};
							onButtonClick = "call ExileLifeClient_gui_xm8_slide_criminalHistory_event_onSearchButtonClick;";
						};
						class wantedText: RscText
						{
							idc = 4154;
							text = "Wanted"; 
							x = 2.2 * (0.025) + (0);
							y = 4 * (0.04) + (0);
							w = 3.6 * (0.025);
							h = 1.5 * (0.04);
							sizeEx = 1.25 * (0.04);
						};
						class armedText: RscText
						{
							idc = 4155;
							text = "Armed"; 
							x = 6.4 * (0.025) + (0);
							y = 4 * (0.04) + (0);
							w = 4 * (0.025);
							h = 1.5 * (0.04);
							sizeEx = 1.25 * (0.04);
						};
						class lastScanDateText: RscText
						{
							idc = 4171;
							text = "Last Scan: "; 
							x = 12.53 * (0.025) + (0);
							y = 4.1 * (0.04) + (0);
							w = 4 * (0.025);
							h = 1.5 * (0.04);
						};
						class lastScanDateOutput: RscText
						{
							idc = 4157;
							text = ""; 
							x = 16.5 * (0.025) + (0);
							y = 4.1 * (0.04) + (0);
							w = 4.5 * (0.025);
							h = 1.5 * (0.04);
						};
						class lastScanNameText: RscText
						{
							idc = 4172;
							text = "By: "; 
							x = 21.6 * (0.025) + (0);
							y = 4.1 * (0.04) + (0);
							w = 1.5 * (0.025);
							h = 1.5 * (0.04);
						};
						class lastScanNameOutput: RscText
						{
							idc = 4156;
							text = ""; 
							x = 22.9 * (0.025) + (0);
							y = 4.1 * (0.04) + (0);
							w = 9 * (0.025);
							h = 1.5 * (0.04);
						};
						class prisonerFullNameInput: RscText
						{
							idc = 4170;
							text = ""; 
							x = 2 * (0.025) + (0);
							y = 6.5 * (0.04) + (0);
							w = 13.5 * (0.025);
							h = 1 * (0.04);
							sizeEx = 1.25 * (0.04);
						};
						class prisonerRecordNumber: RscText
						{
							idc = 4159;
							text = ""; 
							x = 29.5 * (0.025) + (0);
							y = 6.5 * (0.04) + (0);
							w = 2.5 * (0.025);
							h = 1 * (0.04);
							sizeEx = 1.25 * (0.04);
						};
						class crimeBtn: RscExileXM8ButtonMenu
						{
							idc = 4160;
							text = "Crime"; 
							x = 2 * (0.025) + (0);
							y = 8.5 * (0.04) + (0);
							w = 3 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "4160 call ExileLifeClient_gui_xm8_slide_criminalHistory_event_showCrimeStats;";
						};
						class itemsBtn: RscExileXM8ButtonMenu
						{
							idc = 4161;
							text = "Items"; 
							x = 2 * (0.025) + (0);
							y = 10 * (0.04) + (0);
							w = 3 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "4161 call ExileLifeClient_gui_xm8_slide_criminalHistory_event_showCrimeStats;";
						};
						class fineBtn: RscExileXM8ButtonMenu
						{
							idc = 4163;
							text = "Fine"; 
							x = 2 * (0.025) + (0);
							y = 11.5 * (0.04) + (0);
							w = 3 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "4163 call ExileLifeClient_gui_xm8_slide_criminalHistory_event_showCrimeStats;";
						};
						class notesBtn: RscExileXM8ButtonMenu
						{
							idc = 4162;
							text = "Notes"; 
							x = 2 * (0.025) + (0);
							y = 13 * (0.04) + (0);
							w = 3 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "4162 call ExileLifeClient_gui_xm8_slide_criminalHistory_event_showCrimeStats;";
						};
						class recordListboxTitle: RscStructuredText
						{
							idc = 4182;
							show = false;
							x = 5.8 * (0.025) + (0);
							y = 8.5 * (0.04) + (0);
							w = 25.5 * (0.025);
							h = 1.5 * (0.04);
							text = "";
						};
						class RecordBox: RscControlsGroupNoScrollbars { 
							idc = 4180;
							show = false;
							x = 6.3 * (0.025) + (0);
							y = 10.3 * (0.04) + (0);
							w = 25.5 * (0.025);
							h = 3.8 * (0.04);
							class Controls
							{
								class recordListbox: RscStructuredText
								{
									idc = 4166;
									x = 0;
								    y = 0;
								    w = 24.5 * (0.025);
								    h = 6.6 * (0.04);
								};
							};
						};
						class issuedByText: RscText
						{
							idc = 4174;
							text = "Issuer:"; 
							x = 1.6 * (0.025) + (0);
							y = 16 * (0.04) + (0);
							w = 2.5 * (0.025);
							h = 1.5 * (0.04);
						};
						class issuedByOutput: RscText
						{
							idc = 4164;
							text = ""; 
							x = 4.3 * (0.025) + (0);
							y = 16 * (0.04) + (0);
							w = 8 * (0.025);
							h = 1.5 * (0.04);
						};
						class issuedDateText: RscText
						{
							idc = 4175;
							text = "Date:"; 
							x = 2.1 * (0.025) + (0);
							y = 16.9 * (0.04) + (0);
							w = 2 * (0.025);
							h = 1.5 * (0.04);
						};
						class issuedDateOutput: RscText
						{
							idc = 4165;
							text = ""; 
							x = 4.2 * (0.025) + (0);
							y = 16.9 * (0.04) + (0);
							w = 4.5 * (0.025);
							h = 1.5 * (0.04);
						};
						class infractionArmedText: RscText
						{
							idc = 4176;
							text = ""; 
							x = 3 * (0.025) + (0);
							y = 16.2 * (0.04) + (0);
							w = 3 * (0.025);
							h = 1.5 * (0.04);
						};
						class prevRecordBtn: RscExileXM8ButtonMenu
						{
							idc = 4168;
							text = "PREV"; 
							x = 14 * (0.025) + (0);
							y = 15.7 * (0.04) + (0);
							w = 4 * (0.025);
							h = 1 * (0.04);
							class TextPos
							{
								bottom = 0;
								left = 0;
								right = 0;
								top = (0.14 * (0.04)) * 0.5;
							};
							onButtonClick = "call ExileLifeClient_gui_xm8_slide_criminalHistory_event_onPrevButtonClick;";
						};
						class nextRecordBtn: RscExileXM8ButtonMenu
						{
							idc = 4167;
							text = "NEXT"; 
							x = 18.5 * (0.025) + (0);
							y = 15.7 * (0.04) + (0);
							w = 4 * (0.025);
							h = 1 * (0.04);
							class TextPos
							{
								bottom = 0;
								left = 0;
								right = 0;
								top = (0.14 * (0.04)) * 0.5;
							};
							onButtonClick = "call ExileLifeClient_gui_xm8_slide_criminalHistory_event_onNextButtonClick;";
						};
						class updateRecordBtn: RscExileXM8ButtonMenu
						{
							idc = 4181;
							text = "UPDATE RECORD"; 
							x = 14 * (0.025) + (0);
							y = 17.25 * (0.04) + (0);
							w = 8.5 * (0.025);
							h = 1.25 * (0.04);
							class TextPos
							{
								bottom = 0;
								left = 0;
								right = 0;
								top = (0.3 * (0.04)) * 0.5;
							};
							onButtonClick = "ExileLifeCriminalRecordsAdd = true; ['criminalHistoryUpdate', 0] call ExileClient_gui_xm8_slide;";
						};
						class addRecordBtn: RscExileXM8ButtonMenu
						{
							idc = 4169;
							text = "ADD RECORD"; 
							x = 23.5 * (0.025) + (0);
							y = 15.7 * (0.04) + (0);
							w = 8.5 * (0.025);
							h = 1.25 * (0.04);
							class TextPos
							{
								bottom = 0;
								left = 0;
								right = 0;
								top = (0.3 * (0.04)) * 0.5;
							};
							onButtonClick = "ExileLifeCriminalRecordsAdd = true; ['criminalHistoryAdd', 0] call ExileClient_gui_xm8_slide;";
						};
						class CloseButton: RscExileXM8ButtonMenu
						{
							idc = 4170;
							text = "GO BACK";
							x = 23.5 * (0.025) + (0);
							y = 17.25 * (0.04) + (0);
							w = 8.5 * (0.025);
							h = 1.25 * (0.04);
							class TextPos
							{
								bottom = 0;
								left = 0;
								right = 0;
								top = (0.3 * (0.04)) * 0.5;
							};
						    onButtonClick = "[ExileExtraAppsHomePage, 1] call ExileClient_gui_xm8_slide";
						};
					};
				};
				class SlideCriminalHistoryAdd: RscExileXM8Slide
				{
					idc = 5200;
					show = false;
					class Controls
					{
						class BackgroundTop: RscText
						{
							idc = 5201;
							x = 1.35 * (0.025) + (0);
							y = 3.8 * (0.04) + (0);
							w = 31.2 * (0.025);
							h = 2 * (0.04);
							colorBackground[] = {0.1,0.1,0.1,0.4};
						};
						class BackgroundCentre: RscText
						{
							idc = 5202;
							x = 1.35 * (0.025) + (0);
							y = 6.1 * (0.04) + (0);
							w = 31.2 * (0.025);
							h = 8.7 * (0.04);
							colorBackground[] = {0.1,0.1,0.1,0.4};
						};
						class BackgroundCentreTitle: RscText
						{
							idc = 5203;
							x = 1.35 * (0.025) + (0);
							y = 6.1 * (0.04) + (0);
							w = 31.2 * (0.025);
							h = 2 * (0.04);
							colorBackground[] = {0.1,0.1,0.1,0.5};
						};
						class wantedBtn: RscExileXM8ButtonMenu
						{
							idc = 5204;
							text = "Wanted"; 
							x = 2.2 * (0.025) + (0);
							y = 4 * (0.04) + (0);
							w = 3.5 * (0.025);
							h = 1.5 * (0.04);
							sizeEx = 1.25 * (0.04);
							class TextPos
							{
								bottom = 0;
								left = 0;
								right = 0;
								top = (0.5 * (0.04)) * 0.5;
							};
							onButtonClick = "call ExilelifeClient_gui_xm8_slide_criminalHistoryAdd_event_onWantedButtonClick;";
						};
						class armedBtn: RscExileXM8ButtonMenu
						{
							idc = 5205;
							text = "Armed"; 
							x = 6.4 * (0.025) + (0);
							y = 4 * (0.04) + (0);
							w = 4 * (0.025);
							h = 1.5 * (0.04);
							sizeEx = 1.25 * (0.04);
							class TextPos
							{
								bottom = 0;
								left = 0;
								right = 0;
								top = (0.5 * (0.04)) * 0.5;
							};
							onButtonClick = "call ExilelifeClient_gui_xm8_slide_criminalHistoryAdd_event_onArmedButtonClick;";
						};
						class unfocusHiddenBtn: RscExileXM8ButtonMenu
						{
							idc = 5216;
							text = ""; 
							x = 0;
							y = 0;
							w = 0;
							h = 0;
						};
						class lastScanDateText: RscText
						{
							idc = 5206;
							text = "Last Scan: "; 
							x = 12.53 * (0.025) + (0);
							y = 4.1 * (0.04) + (0);
							w = 4 * (0.025);
							h = 1.5 * (0.04);
						};
						class lastScanDateOutput: RscText
						{
							idc = 5207;
							text = ""; 
							x = 16.5 * (0.025) + (0);
							y = 4.1 * (0.04) + (0);
							w = 4.5 * (0.025);
							h = 1.5 * (0.04);
						};
						class lastScanNameText: RscText
						{
							idc = 5208;
							text = "By: "; 
							x = 21.6 * (0.025) + (0);
							y = 4.1 * (0.04) + (0);
							w = 1.5 * (0.025);
							h = 1.5 * (0.04);
						};
						class lastScanNameOutput: RscText
						{
							idc = 5209;
							text = ""; 
							x = 22.9 * (0.025) + (0);
							y = 4.1 * (0.04) + (0);
							w = 9 * (0.025);
							h = 1.5 * (0.04);
						};
						class prisonerFullNameInput: RscText
						{
							idc = 5210;
							text = ""; 
							x = 2 * (0.025) + (0);
							y = 6.5 * (0.04) + (0);
							w = 13.5 * (0.025);
							h = 1 * (0.04);
							sizeEx = 1.25 * (0.04);
						};
						class prisonerRecordNumber: RscText
						{
							idc = 5211;
							text = ""; 
							x = 29.5 * (0.025) + (0);
							y = 6.5 * (0.04) + (0);
							w = 2.5 * (0.025);
							h = 1 * (0.04);
							sizeEx = 1.25 * (0.04);
						};
						class crimeBtn: RscExileXM8ButtonMenu
						{
							idc = 5212;
							text = "Crime"; 
							x = 2 * (0.025) + (0);
							y = 8.5 * (0.04) + (0);
							w = 3 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "5212 call ExileLifeClient_gui_xm8_slide_criminalHistoryAdd_event_setCrimeStats;";
						};
						class itemsBtn: RscExileXM8ButtonMenu
						{
							idc = 5213;
							text = "Items"; 
							x = 2 * (0.025) + (0);
							y = 10 * (0.04) + (0);
							w = 3 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "5213 call ExileLifeClient_gui_xm8_slide_criminalHistoryAdd_event_setCrimeStats;";
						};
						class itemListbox: RscExileItemListBox
						{
							idc = 5224;
							x = 14 * (0.025) + (0);
							y = 8.5 * (0.04) + (0);
							w = 17 * (0.025);
							h = 5 * (0.04);
							rowHeight = "1.2 * ((((safezoneW / safezoneH) min 0.8) / 1.2) / 25)";
							onLBSelChanged = "_this call ExileLifeClient_gui_xm8_slide_criminalHistoryAdd_event_onItemLBSelChanged;";
						};
						class itemText: RscStructuredText
						{
							idc = 5220;
							text = "Item Name";
							x = 6.5 * (0.025) + (0);
							y = 8.5 * (0.04) + (0);
							w = 12 * (0.025);
							h = 6.6 * (0.04);
						};
						class itemTextInput: RscEdit
						{
							idc = 5221;
							x = 6.3 * (0.025) + (0);
							y = 9.5 * (0.04) + (0);
							w = 5 * (0.025);
							h = 1 * (0.04);
						};
						class itemQuantity: RscStructuredText
						{
							idc = 5222;
							text = "Quantity";
							x = 7.1 * (0.025) + (0);
							y = 10.5 * (0.04) + (0);
							w = 12 * (0.025);
							h = 6.6 * (0.04);
						};
						class itemQuantityInput: RscEdit
						{
							idc = 5223;
							x = 6.3 * (0.025) + (0);
							y = 11.5 * (0.04) + (0);
							w = 5 * (0.025);
							h = 1 * (0.04);
						};
						class addItemBtn: RscExileXM8ButtonMenu
						{
							idc = 5225;
							text = "Add Item"; 
							x = 6.3 * (0.025) + (0);
							y = 13 * (0.04) + (0);
							w = 5 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "call ExileLifeClient_gui_xm8_slide_criminalHistoryAdd_event_onItemButtonAdd;";
						};
						class removeItemBtn: RscExileXM8ButtonMenu
						{
							idc = 5226;
							text = "Remove Item"; 
							x = 19.5 * (0.025) + (0);
							y = 13.7 * (0.04) + (0);
							w = 6 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "call ExileLifeClient_gui_xm8_slide_criminalHistoryAdd_event_onItemButtonRemove;";
						};
						class crimeDropDown: RscExileLifeDropDown
						{
							idc = 5227;
							x = 20 * (0.025) + (0);
							y = 6.7 * (0.04) + (0);
							w = 11.5 * (0.025);
							h = 1 * (0.04);
							sizeEx = 0.04;
							rowHeight = "1 * ((((safezoneW / safezoneH) min 0.8) / 1.2) / 25)";
							onLBSelChanged = "_this call ExileLifeClient_gui_xm8_slide_criminalHistoryAdd_event_onCrimeDropDownSelChanged;";
						};
						class crimeFineTextBox: RscStructuredText
						{
							idc = 5230;
							x = 19 * (0.025) + (0);
							y = 8 * (0.04) + (0);
							w = 13.5 * (0.025);
							h = 3 * (0.04);
						};
						class crimePrisonTextBox: RscStructuredText
						{
							idc = 5231;
							x = 19 * (0.025) + (0);
							y = 11.5 * (0.04) + (0);
							w = 13.5 * (0.025);
							h = 3 * (0.04);
						};
						class crimeNotePadText: RscStructuredText
						{
							idc = 5229;
							text = "Notepad";
							x = 10 * (0.025) + (0);
							y = 8.3 * (0.04) + (0);
							w = 12 * (0.025);
							h = 1.2 * (0.04);
						};
						class crimeNotePadBox: RscEditMulti
						{
							idc = 5228;
							x = 6.3 * (0.025) + (0);
							y = 9.6 * (0.04) + (0);
							w = 12 * (0.025);
							h = 4.7 * (0.04);
							rowHeight = "1.2 * ((((safezoneW / safezoneH) min 0.8) / 1.2) / 25)";
						};
						class addRecordBtn: RscExileXM8ButtonMenu
						{
							idc = 5232;
							text = "SUBMIT"; 
							x = 23.5 * (0.025) + (0);
							y = 15.7 * (0.04) + (0);
							w = 8.5 * (0.025);
							h = 1.25 * (0.04);
							class TextPos
							{
								bottom = 0;
								left = 0;
								right = 0;
								top = (0.3 * (0.04)) * 0.5;
							};
							onButtonClick = "call ExileLifeClient_gui_xm8_slide_criminalHistoryAdd_event_onSubmitButtonClick;";
						};
						class CloseButton: RscExileXM8ButtonMenu
						{
							idc = 5219;
							text = "GO BACK";
							x = 23.5 * (0.025) + (0);
							y = 17.25 * (0.04) + (0);
							w = 8.5 * (0.025);
							h = 1.25 * (0.04);
							class TextPos
							{
								bottom = 0;
								left = 0;
								right = 0;
								top = (0.3 * (0.04)) * 0.5;
							};
						    onButtonClick = "['CriminalHistory', 1] call ExileClient_gui_xm8_slide;";
						};
					};
				};
				class SlideCriminalHistoryUpdate: RscExileXM8Slide
				{
					idc = 5300;
					show = false;
					class Controls
					{
						class BackgroundTop: RscText
						{
							idc = 5301;
							x = 1.35 * (0.025) + (0);
							y = 3.8 * (0.04) + (0);
							w = 31.2 * (0.025);
							h = 2 * (0.04);
							colorBackground[] = {0.1,0.1,0.1,0.4};
						};
						class BackgroundCentre: RscText
						{
							idc = 5302;
							x = 1.35 * (0.025) + (0);
							y = 6.1 * (0.04) + (0);
							w = 31.2 * (0.025);
							h = 8.7 * (0.04);
							colorBackground[] = {0.1,0.1,0.1,0.4};
						};
						class BackgroundCentreTitle: RscText
						{
							idc = 5303;
							x = 1.35 * (0.025) + (0);
							y = 6.1 * (0.04) + (0);
							w = 31.2 * (0.025);
							h = 2 * (0.04);
							colorBackground[] = {0.1,0.1,0.1,0.5};
						};
						class wantedBtn: RscExileXM8ButtonMenu
						{
							idc = 5304;
							text = "Wanted"; 
							x = 2.2 * (0.025) + (0);
							y = 4 * (0.04) + (0);
							w = 3.5 * (0.025);
							h = 1.5 * (0.04);
							sizeEx = 1.25 * (0.04);
							class TextPos
							{
								bottom = 0;
								left = 0;
								right = 0;
								top = (0.5 * (0.04)) * 0.5;
							};
							onButtonClick = "call ExilelifeClient_gui_xm8_slide_criminalHistoryUpdate_event_onWantedButtonClick;";
						};
						class armedBtn: RscExileXM8ButtonMenu
						{
							idc = 5305;
							text = "Armed"; 
							x = 6.4 * (0.025) + (0);
							y = 4 * (0.04) + (0);
							w = 4 * (0.025);
							h = 1.5 * (0.04);
							sizeEx = 1.25 * (0.04);
							class TextPos
							{
								bottom = 0;
								left = 0;
								right = 0;
								top = (0.5 * (0.04)) * 0.5;
							};
							onButtonClick = "call ExilelifeClient_gui_xm8_slide_criminalHistoryUpdate_event_onArmedButtonClick;";
						};
						class unfocusHiddenBtn: RscExileXM8ButtonMenu
						{
							idc = 5216;
							text = ""; 
							x = 0;
							y = 0;
							w = 0;
							h = 0;
						};
						class lastScanDateText: RscText
						{
							idc = 5307;
							text = "Last Scan: "; 
							x = 12.53 * (0.025) + (0);
							y = 4.1 * (0.04) + (0);
							w = 4 * (0.025);
							h = 1.5 * (0.04);
						};
						class lastScanDateOutput: RscText
						{
							idc = 5308;
							text = ""; 
							x = 16.5 * (0.025) + (0);
							y = 4.1 * (0.04) + (0);
							w = 4.5 * (0.025);
							h = 1.5 * (0.04);
						};
						class lastScanNameText: RscText
						{
							idc = 5309;
							text = "By: "; 
							x = 21.6 * (0.025) + (0);
							y = 4.1 * (0.04) + (0);
							w = 1.5 * (0.025);
							h = 1.5 * (0.04);
						};
						class lastScanNameOutput: RscText
						{
							idc = 5310;
							text = ""; 
							x = 22.9 * (0.025) + (0);
							y = 4.1 * (0.04) + (0);
							w = 9 * (0.025);
							h = 1.5 * (0.04);
						};
						class prisonerFullNameInput: RscText
						{
							idc = 5311;
							text = ""; 
							x = 2 * (0.025) + (0);
							y = 6.5 * (0.04) + (0);
							w = 13.5 * (0.025);
							h = 1 * (0.04);
							sizeEx = 1.25 * (0.04);
						};
						class prisonerRecordNumber: RscText
						{
							idc = 5312;
							text = ""; 
							x = 29.5 * (0.025) + (0);
							y = 6.5 * (0.04) + (0);
							w = 2.5 * (0.025);
							h = 1 * (0.04);
							sizeEx = 1.25 * (0.04);
						};
						class crimeBtn: RscExileXM8ButtonMenu
						{
							idc = 5329;
							text = "Crime"; 
							x = 2 * (0.025) + (0);
							y = 8.5 * (0.04) + (0);
							w = 3 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "5329 call ExileLifeClient_gui_xm8_slide_criminalHistoryUpdate_event_setCrimeStats;";
						};
						class itemsBtn: RscExileXM8ButtonMenu
						{
							idc = 5314;
							text = "Items"; 
							x = 2 * (0.025) + (0);
							y = 10 * (0.04) + (0);
							w = 3 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "5314 call ExileLifeClient_gui_xm8_slide_criminalHistoryUpdate_event_setCrimeStats;";
						};
						class itemListbox: RscExileItemListBox
						{
							idc = 5316;
							x = 14 * (0.025) + (0);
							y = 8.5 * (0.04) + (0);
							w = 17 * (0.025);
							h = 5 * (0.04);
							rowHeight = "1.2 * ((((safezoneW / safezoneH) min 0.8) / 1.2) / 25)";
							onLBSelChanged = "_this call ExileLifeClient_gui_xm8_slide_criminalHistoryUpdate_event_onItemLBSelChanged;";
						};
						class itemText: RscStructuredText
						{
							idc = 5317;
							text = "Item Name";
							x = 6.5 * (0.025) + (0);
							y = 8.5 * (0.04) + (0);
							w = 12 * (0.025);
							h = 6.6 * (0.04);
						};
						class itemTextInput: RscEdit
						{
							idc = 5318;
							x = 6.3 * (0.025) + (0);
							y = 9.5 * (0.04) + (0);
							w = 5 * (0.025);
							h = 1 * (0.04);
						};
						class itemQuantity: RscStructuredText
						{
							idc = 5319;
							text = "Quantity";
							x = 7.1 * (0.025) + (0);
							y = 10.5 * (0.04) + (0);
							w = 12 * (0.025);
							h = 6.6 * (0.04);
						};
						class itemQuantityInput: RscEdit
						{
							idc = 5333;
							x = 6.3 * (0.025) + (0);
							y = 11.5 * (0.04) + (0);
							w = 5 * (0.025);
							h = 1 * (0.04);
						};
						class addItemBtn: RscExileXM8ButtonMenu
						{
							idc = 5320;
							text = "Add Item"; 
							x = 6.3 * (0.025) + (0);
							y = 13 * (0.04) + (0);
							w = 5 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "call ExileLifeClient_gui_xm8_slide_criminalHistoryUpdate_event_onItemButtonAdd;";
						};
						class removeItemBtn: RscExileXM8ButtonMenu
						{
							idc = 5321;
							text = "Remove Item"; 
							x = 19.5 * (0.025) + (0);
							y = 13.7 * (0.04) + (0);
							w = 6 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "call ExileLifeClient_gui_xm8_slide_criminalHistoryUpdate_event_onItemButtonRemove;";
						};
						class crimeDropDown: RscExileLifeDropDown
						{
							idc = 5322;
							x = 20 * (0.025) + (0);
							y = 6.7 * (0.04) + (0);
							w = 11.5 * (0.025);
							h = 1 * (0.04);
							sizeEx = 0.04;
							rowHeight = "1 * ((((safezoneW / safezoneH) min 0.8) / 1.2) / 25)";
							onLBSelChanged = "_this call ExileLifeClient_gui_xm8_slide_criminalHistoryUpdate_event_onCrimeDropDownSelChanged;";
						};
						class crimeFineTextBox: RscStructuredText
						{
							idc = 5323;
							x = 19 * (0.025) + (0);
							y = 8 * (0.04) + (0);
							w = 13.5 * (0.025);
							h = 3 * (0.04);
						};
						class crimePrisonTextBox: RscStructuredText
						{
							idc = 5324;
							x = 19 * (0.025) + (0);
							y = 11.5 * (0.04) + (0);
							w = 13.5 * (0.025);
							h = 3 * (0.04);
						};
						class crimeNotePadText: RscStructuredText
						{
							idc = 5325;
							text = "Notepad";
							x = 10 * (0.025) + (0);
							y = 8.3 * (0.04) + (0);
							w = 12 * (0.025);
							h = 1.2 * (0.04);
						};
						class crimeNotePadBox: RscEditMulti
						{
							idc = 5326;
							x = 6.3 * (0.025) + (0);
							y = 9.6 * (0.04) + (0);
							w = 12 * (0.025);
							h = 4.7 * (0.04);
							rowHeight = "1.2 * ((((safezoneW / safezoneH) min 0.8) / 1.2) / 25)";
						};
						class addRecordBtn: RscExileXM8ButtonMenu
						{
							idc = 5327;
							text = "SUBMIT"; 
							x = 23.5 * (0.025) + (0);
							y = 15.7 * (0.04) + (0);
							w = 8.5 * (0.025);
							h = 1.25 * (0.04);
							class TextPos
							{
								bottom = 0;
								left = 0;
								right = 0;
								top = (0.3 * (0.04)) * 0.5;
							};
							onButtonClick = "call ExileLifeClient_gui_xm8_slide_criminalHistoryUpdate_event_onSubmitButtonClick;";
						};
						class CloseButton: RscExileXM8ButtonMenu
						{
							idc = 5328;
							text = "GO BACK";
							x = 23.5 * (0.025) + (0);
							y = 17.25 * (0.04) + (0);
							w = 8.5 * (0.025);
							h = 1.25 * (0.04);
							class TextPos
							{
								bottom = 0;
								left = 0;
								right = 0;
								top = (0.3 * (0.04)) * 0.5;
							};
						    onButtonClick = "['CriminalHistory', 1] call ExileClient_gui_xm8_slide;";
						};
					};
				};
				class SlideMessages: RscExileXM8Slide
				{
					idc = 31100;
					show = false;
					class Controls
					{
						class MessageBackground: RscText
						{
							idc = 31101;
							x = 14.5 * (0.025) + (0);
							y = 2 * (0.04) + (0);
							w = 19 * (0.025);
							h = 15 * (0.04);
							colorBackground[] = {0.05,0.05,0.05,0.7};
						};
						class ThreadText: RscText
						{
							idc = 31102;
							text = "Chats"; 
							x = 0 * (0.025) + (0);
							y = 1 * (0.04) + (0);
							w = 5 * (0.025);
							h = 1 * (0.04);
													};
						class ThreadListbox: RscExileItemListBox
						{
							idc = 31103;
							x = 0.5 * (0.025) + (0);
							y = 2 * (0.04) + (0);
							w = 13.5 * (0.025);
							h = 15 * (0.04);
							onLBSelChanged = "_this call ExileLifeClient_gui_xm8_slide_messages_event_onLBSelChanged;";
						};
						class NewThreadButton: RscExileXM8ButtonMenu
						{
							idc = 31104;
							text = "New"; 
							x = 8 * (0.025) + (0);
							y = 17.5 * (0.04) + (0);
							w = 6 * (0.025);
							h = 1 * (0.04);
														onButtonClick = "['messageNew', 0] call ExileClient_gui_xm8_slide;";
						};
						class ManageThreadButton: RscExileXM8ButtonMenu
						{
							idc = 31105;
							text = "Manage"; 
							x = 0.5 * (0.025) + (0);
							y = 17.5 * (0.04) + (0);
							w = 5.5 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "if !(isNil 'ExileLifeSelectedMsg') then {['messageManagement', 0] call ExileClient_gui_xm8_slide;}else{['You need to select a message first!','Fine!'] call ExileClient_gui_xm8_showWarning;};";
						};
						class MessageBox: RscControlsGroup
						{
							idc = 31108;
							x = 14.5 * (0.025) + (0);
							y = 3.7 * (0.04) + (0);
							w = 19 * (0.025);
							h = 10 * (0.04);
							class Controls
							{
								class ThreadMessages: RscStructuredText
								{
								    idc = 31109;
								    x = 0;
								    y = 0;
								    w = 18.5 * (0.025);
								    h = 10 * (0.04);
								};
							};
						};
						class MessageEditbox: RscEdit
						{
							idc = 31110;
							x = 14.5 * (0.025) + (0);
							y = 14 * (0.04) + (0);
							w = 19 * (0.025);
							h = 3 * (0.04);
							style = 0x10;
						};
						class SendButton: RscExileXM8ButtonMenu
						{
							idc = 31111;
							text = "Send"; 
							x = 27.5 * (0.025) + (0);
							y = 17.5 * (0.04) + (0);
							w = 6 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "call ExileLifeClient_gui_xm8_slide_messages_event_onSendButtonClick;";
						};
						class CloseButton: RscExileXM8ButtonMenu
						{
							idc = 31112;
							text = "GO BACK";
							x = 15 * (0.025) + (0);
							y = 17.5 * (0.04) + (0);
							w = 6 * (0.025);
							h = 1 * (0.04);
						    onButtonClick = "[ExileExtraAppsHomePage, 1] call ExileClient_gui_xm8_slide";
						};
					};
				};
				class SlideMessageManagement: RscExileXM8Slide
				{
				    idc = 31175;
				    show = false;
				    class Controls
				    {
				        class AvailableContactsText: RscText
				        {
				            idc = 31202;
				            text = "Add Recipients"; 
				            x = 0.2 * (0.025) + (0);
				            y = 1.1 * (0.04) + (0);
				            w = 8 * (0.025);
				            h = 1 * (0.04);
				       };
				        class AvailableContactsListbox: RscListbox
				        {
				            idc = 31203;
				            x = 0.5 * (0.025) + (0);
				            y = 2 * (0.04) + (0);
				            w = 10.5 * (0.025);
				            h = 16 * (0.04);
				        };
				        class RecipientsText: RscText
				        {
				            idc = 31204;
				            text = "Current Recipients"; 
				            x = 13.2 * (0.025) + (0);
				            y = 1.1 * (0.04) + (0);
				            w = 8 * (0.025);
				            h = 1 * (0.04);
				            				        };
				        class RecipientsListbox: RscListbox
				        {
				            idc = 31205;
				            x = 13.5 * (0.025) + (0);
				            y = 2 * (0.04) + (0);
				            w = 19.5 * (0.025);
				            h = 6.5 * (0.04);
				        };
				        class AddRecipientButton: RscExileXM8ButtonMenu
				        {
				            idc = 31206;
				            text = ">"; 
				            x = 11.5 * (0.025) + (0);
				            y = 4 * (0.04) + (0);
				            w = 1.5 * (0.025);
				            h = 1 * (0.04);
				            onButtonClick = "call ExileLifeClient_gui_xm8_slide_messageManagement_event_onAddRecipientButtonClick";
				        };
				        class RemoveRecipientButton: RscExileXM8ButtonMenu
				        {
				            idc = 31207;
				            text = "<"; 
				            x = 11.5 * (0.025) + (0);
				            y = 5.5 * (0.04) + (0);
				            w = 1.5 * (0.025);
				            h = 1 * (0.04);
				            onButtonClick = "call ExileLifeClient_gui_xm8_slide_messageManagement_event_onRemoveRecipientButtonClick";
				        };
				        class ThreadNameText: RscText
				        {
				            idc = 31208;
				            text = "Chat Name"; 
				            x = 11.6 * (0.025) + (0);
				            y = 9.1 * (0.04) + (0);
				            w = 8 * (0.025);
				            h = 1 * (0.04);
				            				        };
				        class ThreadName: RscEdit
				        {
				            idc = 31209;
				            x = 12 * (0.025) + (0);
				            y = 10 * (0.04) + (0);
				            w = 21 * (0.025);
				            h = 1 * (0.04);
				        };
				        class UpdateThreadButton: RscExileXM8ButtonMenu
				        {
				            idc = 31212;
				            text = "UPDATE"; 
				            x = 27.5 * (0.025) + (0);
				            y = 17.5 * (0.04) + (0);
				            w = 6 * (0.025);
				            h = 1 * (0.04);
				            onButtonClick = "call ExileLifeClient_gui_xm8_slide_messageManagement_event_onUpdateButtonClick";
				        };
				        class CloseButton: RscExileXM8ButtonMenu
				        {
				            idc = 31213;
							text = "GO BACK";
							x = 13 * (0.025) + (0);
							y = 17.5 * (0.04) + (0);
							w = 6 * (0.025);
							h = 1 * (0.04);
							action = "['messages', 1] call ExileClient_gui_xm8_slide; ExileLifeSelectedMsg call ExileLifeClient_gui_xm8_slide_messages_event_showMessages;";
				        };
				    };
				};
				class SlideMessagesNew: RscExileXM8Slide
				{
					idc = 31125;
					show = false;
					class Controls
					{
						class MessageBackground: RscText
						{
							idc = 31120;
							x = 11.5 * (0.025) + (0);
							y = 9 * (0.04) + (0);
							w = 22 * (0.025);
							h = 7.5 * (0.04);
							colorBackground[] = {0.05,0.05,0.05,0.7};
						};
						class AvailableContactsText: RscText
						{
							idc = 31121;
							text = "Available Contacts"; 
							x = 0.2 * (0.025) + (0);
							y = 1.1 * (0.04) + (0);
							w = 8 * (0.025);
							h = 1 * (0.04);
													};
						class AvailableContactsListbox: RscListbox
						{
							idc = 31122;
							x = 0.5 * (0.025) + (0);
							y = 2 * (0.04) + (0);
							w = 10.5 * (0.025);
							h = 16 * (0.04);
						};
						class RecipientsText: RscText
						{
							idc = 31123;
							text = "Recipients"; 
							x = 13.2 * (0.025) + (0);
							y = 1.1 * (0.04) + (0);
							w = 8 * (0.025);
							h = 1 * (0.04);
													};
						class RecipientsListbox: RscListbox
						{
							idc = 31124;
							x = 13.5 * (0.025) + (0);
							y = 2 * (0.04) + (0);
							w = 19.5 * (0.025);
							h = 6.5 * (0.04);
						};
						class AddRecipientButton: RscExileXM8ButtonMenu
						{
							idc = 31125;
							text = ">"; 
							x = 11.5 * (0.025) + (0);
							y = 4 * (0.04) + (0);
							w = 1.5 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "call ExileLifeClient_gui_xm8_slide_messageNew_event_onAddRecipientButtonClick";
						};
						class RemoveRecipientButton: RscExileXM8ButtonMenu
						{
							idc = 31126;
							text = "<"; 
							x = 11.5 * (0.025) + (0);
							y = 5.5 * (0.04) + (0);
							w = 1.5 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "call ExileLifeClient_gui_xm8_slide_messageNew_event_onRemoveRecipientButtonClick";
						};
						class ThreadNameText: RscText
						{
							idc = 31127;
							text = "Chat Name"; 
							x = 11.6 * (0.025) + (0);
							y = 9.1 * (0.04) + (0);
							w = 8 * (0.025);
							h = 1 * (0.04);
													};
						class ThreadName: RscEdit
						{
							idc = 31128;
							x = 12 * (0.025) + (0);
							y = 10 * (0.04) + (0);
							w = 21 * (0.025);
							h = 1 * (0.04);
						};
						class MessageText: RscText
						{
							idc = 31129;
							text = "Message"; 
							x = 11.7 * (0.025) + (0);
							y = 11.5 * (0.04) + (0);
							w = 4.5 * (0.025);
							h = 1 * (0.04);
													};
						class Message: RscEdit
						{
							idc = 31130;
							x = 12 * (0.025) + (0);
							y = 12.5 * (0.04) + (0);
							w = 21 * (0.025);
							h = 3.5 * (0.04);
							style = 0x10;
						};
						class CreateThreadButton: RscExileXM8ButtonMenu
						{
							idc = 31131;
							text = "Send"; 
							x = 27.5 * (0.025) + (0);
							y = 17.5 * (0.04) + (0);
							w = 6 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "call ExileLifeClient_gui_xm8_slide_messageNew_event_onSendButtonClick";
						};
						class CloseButton: RscExileXM8ButtonMenu
						{
							idc = 31132;
							text = "GO BACK";
							x = 13 * (0.025) + (0);
							y = 17.5 * (0.04) + (0);
							w = 6 * (0.025);
							h = 1 * (0.04);
							action = "['messages', 1] call ExileClient_gui_xm8_slide; ExileLifeSelectedMsg call ExileLifeClient_gui_xm8_slide_messages_event_showMessages;";
						};
					};
				};
				class SlideJobManagement: RscExileXM8Slide
				{
					idc = 31000;
					show = false;
					class Controls
					{
						class CurrentJobText: RscText
						{
							idc = 31002;
							text = "Current Job"; 
							x = 1.2 * (0.025) + (0);
							y = 3 * (0.04) + (0);
							w = 7 * (0.025);
							h = 1 * (0.04);
						};
						class CurrentJobBody: RscStructuredText
						{
							idc = 31003;
							x = 1.5 * (0.025) + (0);
							y = 4 * (0.04) + (0);
							w = 31.5 * (0.025);
							h = 1 * (0.04);
							colorBackground[] = {-1,-1,-1,0.5};
						};
						class DescriptionText: RscText
						{
							idc = 31005;
							text = "Description:"; 
							x = 1.2 * (0.025) + (0);
							y = 6 * (0.04) + (0);
							w = 5 * (0.025);
							h = 1 * (0.04);
						};
						class DescriptionBody: RscStructuredText
						{
							idc = 31006;
							x = 1.5 * (0.025) + (0);
							y = 7.1 * (0.04) + (0);
							w = 14.5 * (0.025);
							h = 9.5 * (0.04);
							colorBackground[] = {-1,-1,-1,0.5};
							style = 0x10 + 0x200;
						};
						class Map: RscMapControl
						{
							idc = 31015;
							text = "";
							x = 4.5 * (0.025) + (0);
							y = 9.1 * (0.04) + (0);
							w = 14.5 * (0.025);
							h = 9.5 * (0.04);
							moveOnEdges = 0;
							maxSatelliteAlpha = 0.75;
							alphaFadeStartScale = 1.15;
							alphaFadeEndScale = 1.29;
						};
						class CurrentObjectiveText: RscText
						{
							idc = 31007;
							text = "Current Objective:"; 
							x = 16.2 * (0.025) + (0);
							y = 6 * (0.04) + (0);
							w = 7 * (0.025);
							h = 1 * (0.04);
						};
						class CurrentObjectiveBody: RscStructuredText
						{
							idc = 31008;
							x = 16.5 * (0.025) + (0);
							y = 7.1 * (0.04) + (0);
							w = 16.5 * (0.025);
							h = 1 * (0.04);
							colorBackground[] = {-1,-1,-1,0.5};
						};
						class RewardText: RscText
						{
							idc = 31009;
							text = "Reward:"; 
							x = 16.2 * (0.025) + (0);
							y = 8.5 * (0.04) + (0);
							w = 3.5 * (0.025);
							h = 1 * (0.04);
						};
						class RewardBody: RscStructuredText
						{
							idc = 31010;
							x = 16.5 * (0.025) + (0);
							y = 9.7 * (0.04) + (0);
							w = 16.5 * (0.025);
							h = 4.5 * (0.04);
							colorBackground[] = {-1,-1,-1,0.5};
						};
						class TimeLeftText: RscText
						{
							idc = 31011;
							text = "Time Left:"; 
							x = 16.2 * (0.025) + (0);
							y = 14.6 * (0.04) + (0);
							w = 4.5 * (0.025);
							h = 1 * (0.04);
						};
						class TimeLeftBody: RscStructuredText
						{
							idc = 31012;
							x = 16.5 * (0.025) + (0);
							y = 15.7 * (0.04) + (0);
							w = 16.5 * (0.025);
							h = 1 * (0.04);
							colorBackground[] = {-1,-1,-1,0.5};
						};
						class ForfeitJobButton: RscButtonMenu
						{
							idc = 31013;
							text = "FORFEIT JOB"; 
							x = 16.5 * (0.025) + (0);
							y = 17.5 * (0.04) + (0);
							w = 6.5 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "[] spawn ExileLifeClient_gui_xm8_slide_jobManagement_event_onForfeitButtonClick";
						};
						class AcceptJobButton: RscButtonMenu 
						{
							idc = 31016;
							text = "ACCEPT JOB"; 
							x = 27.5 * (0.025) + (0);
							y = 17.5 * (0.04) + (0);
							w = 6 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "[] spawn ExileLifeClient_gui_xm8_slide_jobManagement_event_onAcceptButtonClick";
						};
						class GoBackButton: RscButtonMenu
						{
							idc = 31014;
							text = "GO BACK"; 
							x = 27.5 * (0.025) + (0);
							y = 17.5 * (0.04) + (0);
							w = 6 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "[ExileExtraAppsHomePage, 1] call ExileClient_gui_xm8_slide; ExileLifeJobManagmentIsOpen = false;";
						};
					};
				};
				class SlideNotify: RscExileXM8Slide
				{
					idc = 32200;
					show = false;
					class Controls
					{
						class MembersListBox: RscExileXM8ListBox
						{
							idc = 32201;
							x = 0.5 * (0.025) + (0);
							y = 1.5 * (0.04) + (0);
							w = 16 * (0.025);
							h = 15.5 * (0.04);
							onLBSelChanged = "_this call ExilelifeClient_gui_xm8_slide_notify_event_onLBSelChanged;";
						};
						class MainText: RscStructuredText
						{
							idc = 32202;
							x = 17 * (0.025) + (0);
							y = 1.5 * (0.04) + (0);
							w = 16 * (0.025);
							h = 3 * (0.04);
						};
						class Subtext: RscStructuredText
						{
							idc = 32203;
							x = 17 * (0.025) + (0);
							y = 5 * (0.04) + (0);
							w = 16 * (0.025);
							h = 11.5 * (0.04);
						};
						class ClearNotif: RscExileXM8ButtonMenu
						{
							idc = 32204;
							text = "Clear Notification"; 
							x = 6.5 * (0.025) + (0);
							y = 17.5 * (0.04) + (0);
							w = 10 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "'ONE' call ExilelifeClient_gui_xm8_slide_notify_event_clear;";
						};
						class ClearAll: RscExileXM8ButtonMenu
						{
							idc = 32205;
							text = "Clear All"; 
							x = 0.5 * (0.025) + (0);
							y = 17.5 * (0.04) + (0);
							w = 5.5 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "'ALL' call ExilelifeClient_gui_xm8_slide_notify_event_clear;";
						};
						class GoBackButton: RscExileXM8ButtonMenu
						{
							idc = 32206;
							text = "GO BACK";
							x = 27.5 * (0.025) + (0);
							y = 17.5 * (0.04) + (0);
							w = 6 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "[ExileExtraAppsHomePage, 1] call ExileClient_gui_xm8_slide";
						};
					};
				};
				class SlideBugReport: RscExileXM8Slide
				{
					idc = 31050;
					show = false;
					class Controls
					{
						class TitleText: RscText
						{
							idc = 31051;
							text = "Title"; 
							x = 0.7 * (0.025) + (0);
							y = 1.5 * (0.04) + (0);
							w = 5 * (0.025);
							h = 1 * (0.04);
						};
						class TitleEdit: RscEdit
						{
							idc = 31052;
							x = 1 * (0.025) + (0);
							y = 2.8 * (0.04) + (0);
							w = 16.5 * (0.025);
							h = 1 * (0.04);
						};
						class DisclaimerText: RscStructuredText
						{
							idc = 31053;
							text = "<t size='0.9'>Please be as descriptive as possible and include steps to replicate the issue/bug</t>"; 
							x = 10 * (0.025) + (0);
							y = 4 * (0.04) + (0);
							w = 23 * (0.025);
							h = 1 * (0.04);
							colorBackground[] = {-1,-1,-1,0};
						};
						class DescriptionTitle: RscText
						{
							idc = 31054;
							text = "Long Description"; 
							x = 0.7 * (0.025) + (0);
							y = 4 * (0.04) + (0);
							w = 6 * (0.025);
							h = 1 * (0.04);
						};
						class DescriptionEdit: RscEdit
						{
							idc = 31055;
							x = 1 * (0.025) + (0);
							y = 5.3 * (0.04) + (0);
							w = 32 * (0.025);
							h = 11 * (0.04);
						};
						class ExitBtn: RscExileXM8ButtonMenu
						{
							idc = 31056;
							text = "Back"; 
							x = 21 * (0.025) + (0);
							y = 17.5 * (0.04) + (0);
							w = 6 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "[ExileExtraAppsHomePage, 1] call ExileClient_gui_xm8_slide";
						};
						class SubmitBtn: RscExileXM8ButtonMenu
						{
							idc = 31057;
							text = "Submit"; 
							x = 27.5 * (0.025) + (0);
							y = 17.5 * (0.04) + (0);
							w = 6 * (0.025);
							h = 1 * (0.04);
						};
					};
				};
				class SlideHealthScanner: RscExileXM8Slide
				{
					idc = 4120;
					show = false;
					class Controls
					{
						class GoBackButton: RscExileXM8ButtonMenu
						{
							idc = 4122;
							text = "GO BACK";
							x = 27.5 * (0.025) + (0);
							y = 17.5 * (0.04) + (0);
							w = 6 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "[ExileExtraAppsHomePage, 1] call ExileClient_gui_xm8_slide";
						};
						class HealthInfoControlGroup: RscControlsGroupNoHScrollbars
						{
							idc = -1;
							x = (5 - 3) * (0.025);
							y = (5 - 2) * (0.04);
							w = 30 * (0.025);
							h = 12 * (0.04);
							colorBackground[] = {0,0,0,0.25};
							class controls
							{
								class HealthInfo: RscStructuredText
								{
									idc = 4121;
									x = 0;
									y = 0;
									w = 29 * (0.025); 
									h = 12 * (0.04);
								};
							};
						};
					};
				};
				class SlideHostParty: RscExileXM8Slide
				{
					idc = 4080;
					show = false;
					class Controls
					{
						class PartyButton: RscExileXM8Button
						{
							idc = 4081;
							text = "Host Party";
							x = (10.5 - 3) * (0.025);
							y = (12 - 2) * (0.04);
							w = 19 * (0.025);
							h = 2 * (0.04);
							onButtonClick = "_this call ExileClient_gui_xm8_slide_hostParty_event_onOkayButtonClick";
						};
						class NameInput: RscExileXM8Edit
						{
							idc = 4082;
							text = "Eichi's Party";
							x = (10.5 - 3) * (0.025);
							y = (9 - 2) * (0.04);
							w = 19 * (0.025);
							h = 2 * (0.04);
							tooltip = "Name for your party";
						};
						class GoBackButton: RscExileXM8ButtonMenu
						{
							idc = -1;
							text = "GO BACK";
							x = 27.5 * (0.025) + (0);
							y = 17.5 * (0.04) + (0);
							w = 6 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "[ExileExtraAppsHomePage, 1] call ExileClient_gui_xm8_slide";
						};
					};
				};
				class SlideSettings: RscExileXM8Slide
				{
					idc = 4070;
					show = false;
					class Controls
					{
						class GoBackButton: RscExileXM8ButtonMenu
						{
							idc = 4071;
							text = "GO BACK";
							x = 27.5 * (0.025) + (0);
							y = 17.5 * (0.04) + (0);
							w = 6 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "[ExileExtraAppsHomePage, 1] call ExileClient_gui_xm8_slide";
						};
						class 8GDropDown: RscCombo
						{
							idc = 4072;
							x = (5 - 3) * (0.025);
							y = (5 - 2) * (0.04);
							w = 7 * (0.025);
							h = 1 * (0.04);
							onLBSelChanged = "_this call ExileClient_gui_xm8_slide_settings_event_on8GSelectionChanged";
						};
						class 8GLabel: RscText
						{
							idc = -1;
							text = "Show my device in global 8G network.";
							x = (13 - 3) * (0.025);
							y = (5 - 2) * (0.04);
							w = 22 * (0.025);
							h = 1 * (0.04);
							shadow = 0;
						};
						class SoundDropDown: RscCombo
						{
							idc = 4075;
							x = (5 - 3) * (0.025);
							y = (7 - 2) * (0.04);
							w = 7 * (0.025);
							h = 1 * (0.04);
							onLBSelChanged = "_this call ExileClient_gui_xm8_slide_settings_event_onSoundSelectionChanged";
						};
						class SoundLabel: RscText
						{
							idc = -1;
							text = "Play a beep sound on notifications.";
							x = (13 - 3) * (0.025);
							y = (7 - 2) * (0.04);
							w = 22 * (0.025);
							h = 1 * (0.04);
							shadow = 0;
						};
						class PartyEspDropDown: RscCombo
						{
							idc = 4076;
							x = (5 - 3) * (0.025);
							y = (9 - 2) * (0.04);
							w = 7 * (0.025);
							h = 1 * (0.04);
							onLBSelChanged = "_this call ExileClient_gui_xm8_slide_settings_event_onPartyEspSelectionChanged";
						};
						class PartyEspLabel: RscText
						{
							idc = -1;
							text = "Color of 3D party icons and name tags.";
							x = (13 - 3) * (0.025);
							y = (9 - 2) * (0.04);
							w = 22 * (0.025);
							h = 1 * (0.04);
							shadow = 0;
						};
						class PartyEspSlider: RscXSliderH
						{
							idc = 4078;
							x = (5 - 3) * (0.025);
							y = (11 - 2) * (0.04);
							w = 7 * (0.025);
							h = 1 * (0.04);
							onSliderPosChanged = "_this call ExileClient_gui_xm8_slide_settings_event_onPartyEspSliderChanged";
						};
						class PartyEspSliderLabel: RscText
						{
							idc = -1;
							text = "Opacity of 3D party icons and name tags.";
							x = (13 - 3) * (0.025);
							y = (11 - 2) * (0.04);
							w = 22 * (0.025);
							h = 1 * (0.04);
							shadow = 0;
						};
						class PartyMarkerSlider: RscXSliderH
						{
							idc = 4079;
							x = (5 - 3) * (0.025);
							y = (13 - 2) * (0.04);
							w = 7 * (0.025);
							h = 1 * (0.04);
							onSliderPosChanged = "_this call ExileClient_gui_xm8_slide_settings_event_onPartyMarkerSliderChanged";
						};
						class PartyMarkerSliderLabel: RscText
						{
							idc = -1;
							text = "Opacity of 3D party markers.";
							x = (13 - 3) * (0.025);
							y = (13 - 2) * (0.04);
							w = 22 * (0.025);
							h = 1 * (0.04);
							shadow = 0;
						};
						class StreamModeDropDown: RscCombo
						{
							idc = 4077;
							x = (5 - 3) * (0.025);
							y = (15 - 2) * (0.04);
							w = 7 * (0.025);
							h = 1 * (0.04);
							onLBSelChanged = "_this call ExileClient_gui_xm8_slide_settings_event_onStreamModeSelectionChanged";
						};
						class StreamModeLabel: RscText
						{
							idc = -1;
							text = "Masquerade PIN codes. Perfect for streamers.";
							x = (13 - 3) * (0.025);
							y = (15 - 2) * (0.04);
							w = 22 * (0.025);
							h = 1 * (0.04);
							shadow = 0;
						};
						class MapMarkerDropDown: RscCombo
						{
							idc = 5015;
							x = (5 - 3) * (0.025);
							y = (17 - 2) * (0.04);
							w = 7 * (0.025);
							h = 1 * (0.04);
							onLBSelChanged = "_this call ExileLifeClient_gui_xm8_slide_settings_event_onShowMapMarkersChanged";
						};
						class MapMarkerLabel: RscText
						{
							idc = -1;
							text = "Enable/Disable Map Markers";
							x = (13 - 3) * (0.025);
							y = (17 - 2) * (0.04);
							w = 22 * (0.025);
							h = 1 * (0.04);
							shadow = 0;
						};
						class PaymentMsgsDropDown: RscCombo
						{
							idc = 5016;
							x = (5 - 3) * (0.025);
							y = (19 - 2) * (0.04);
							w = 7 * (0.025);
							h = 1 * (0.04);
							onLBSelChanged = "_this call ExileLifeClient_gui_xm8_slide_settings_event_onShowPaymentMessagesChanged";
						};
						class PaymentMsgsLabel: RscText
						{
							idc = -1;
							text = "Enable/Disable Payment Messages";
							x = (13 - 3) * (0.025);
							y = (19 - 2) * (0.04);
							w = 22 * (0.025);
							h = 1 * (0.04);
							shadow = 0;
						};
					};
				};
				class SlideServer: RscExileXM8Slide
				{
					idc = 4090;
					show = false;
					class Controls
					{
						class GoBackButton: RscExileXM8ButtonMenu
						{
							idc = 4091;
							text = "GO BACK";
							x = 27.5 * (0.025) + (0);
							y = 17.5 * (0.04) + (0);
							w = 6 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "[ExileExtraAppsHomePage, 1] call ExileClient_gui_xm8_slide";
						};
						class InfoHTML: RscHtml
						{
							idc = 4092;
							x = (5 - 3) * (0.025);
							y = (5 - 2) * (0.04);
							w = 30 * (0.025);
							h = 12 * (0.04);
							colorBackground[] = {0,0,0,0.25};
						};
					};
				};
				class SlideClan: RscExileXM8Slide
				{
					idc = 4060;
					show = false;
					class Controls
					{
						class MembersListBox: RscExileXM8ListBox
						{
							idc = 4061;
							x = 2 * (0.025) + (0);
							y = 3 * (0.04) + (0);
							w = 23 * (0.025);
							h = 14 * (0.04);
							onLBSelChanged = "_this call ExileClient_gui_xm8_slide_clan_event_onMemberLBSelChanged";
						};
						class KickButton: RscExileXM8ButtonMenu
						{
							idc = 4062;
							text = "KICK"; 
							x = 26 * (0.025) + (0);
							y = 6 * (0.04) + (0);
							w = 6 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "_this spawn ExileClient_gui_xm8_slide_clan_event_onClanKickButtonClick";
						};
						class LeaveButton: RscExileXM8ButtonMenu
						{
							idc = 4063;
							text = "Leave"; 
							x = 26 * (0.025) + (0);
							y = 3 * (0.04) + (0);
							w = 6 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "_this spawn ExileClient_gui_xm8_slide_clan_event_onClanLeaveButtonClick";
						};
						class GoBackButton: RscExileXM8ButtonMenu
						{
							onButtonClick = "[ExileExtraAppsHomePage, 1] call ExileClient_gui_xm8_slide";
							idc = -1;
							text = "GO BACK"; 
							x = 27.5 * (0.025) + (0);
							y = 17.5 * (0.04) + (0);
							w = 6 * (0.025);
							h = 1 * (0.04);
						};
					};
				};
				class SlideParty: RscExileXM8Slide
				{
					idc = 4100;
					show = false;
					class Controls
					{
						class MembersListBox: RscExileXM8ListBox
						{
							idc = 4102;
							x = (5 - 3) * (0.025);
							y = (5 - 2) * (0.04);
							w = 22 * (0.025);
							h = 14 * (0.04);
							onLBSelChanged = "_this call ExileClient_gui_xm8_slide_party_event_onMemberListBoxSelectionChanged";
						};
						class KickButton: RscExileXM8ButtonMenu
						{
							idc = 4104;
							text = "KICK";
							x = 27.5 * (0.025) + (0);
							y = (10 - 2) * (0.04);
							w = 6 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "_this spawn ExileClient_gui_xm8_slide_party_event_onKickButtonClick";
						};
						class LeaveButton: RscExileXM8ButtonMenu
						{
							idc = 4105;
							text = "LEAVE";
							x = 27.5 * (0.025) + (0);
							y = (5 - 2) * (0.04);
							w = 6 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "_this spawn ExileClient_gui_xm8_slide_party_event_onLeaveButtonClick";
						};
						class GoBackButton: RscExileXM8ButtonMenu
						{
							idc = -1;
							text = "GO BACK";
							x = 27.5 * (0.025) + (0);
							y = 17.5 * (0.04) + (0);
							w = 6 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "[ExileExtraAppsHomePage, 1] call ExileClient_gui_xm8_slide";
						};
					};
				};
				class SlidePlayers: RscExileXM8Slide
				{
					idc = 4110;
					show = false;
					class Controls
					{
						class PlayersListBox: RscExileXM8ListBox
						{
							idc = 4111;
							x = (5 - 3) * (0.025) + (0);
							y = (5 - 2) * (0.04) + (0);
							w = 19 * (0.025);
							h = 14 * (0.04);
							onLBSelChanged = "_this call ExileClient_gui_xm8_slide_players_event_onPlayerListBoxSelectionChanged";
						};
						class PartyButton: RscExileXM8ButtonMenu
						{
							idc = 4112;
							text = "INVITE TO PARTY";
							x = (26 - 3) * (0.025) + (0);
							y = (5 - 2) * (0.04) + (0);
							w = 9 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "_this call ExileClient_gui_xm8_slide_players_event_onPartyButtonClick";
						};
						class ClanButton: RscExileXM8ButtonMenu
						{
							idc = 4116;
							text = "INVITE TO FAMILY"; 
							x = 23 * (0.025) + (0);
							y = 5 * (0.04) + (0);
							w = 9 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "_this call ExileClient_gui_xm8_slide_players_event_onClanButtonClick";
						};
						class TerritoryGroup: RscExileXM8Frame
						{
							idc = -1;
							x = 23 * (0.025) + (0);
							y = 7 * (0.04) + (0);
							w = 9 * (0.025);
							h = 4 * (0.04);
						};
						class TerritoryGroupCaption: RscText
						{
							idc = -1;
							text = "TERRITORY";
							sizeEx = 11 * pixelH;
							font = "OrbitronLight";
							colorText[] = {252/255, 253/255, 255/255, 1};
							x = 23 * (0.025) + (0);
							y = 7 * (0.04) + (0);
							w = 9 * (0.025);
							h = 1 * (0.04);
							style = 0x02;
						};
						class TerritoryDropdown: RscCombo
						{
							idc = 4114;
							x = 23.5 * (0.025) + (0);
							y = 8 * (0.04) + (0);
							w = 8 * (0.025);
							h = 1 * (0.04);
						};
						class GrantTerritoryBuildRightsButton: RscExileXM8ButtonMenu
						{
							idc = 4115;
							text = "GRANT RIGHTS";
							x = 23.5 * (0.025) + (0);
							y = 9.5 * (0.04) + (0);
							w = 8 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "_this spawn ExileClient_gui_xm8_slide_players_event_onGrantTerritoryButtonClick";
						};
						class GoBackButton: RscExileXM8ButtonMenu
						{
							idc = 4113;
							text = "GO BACK";
							x = 27.5 * (0.025) + (0);
							y = 17.5 * (0.04) + (0);
							w = 6 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "[ExileExtraAppsHomePage, 1] call ExileClient_gui_xm8_slide";
						};
					};
				};
				class SlideTerritory: RscExileXM8Slide
				{
					idc = 4130;
					show = false;
					class Controls
					{
						class TerritoryDropdown: RscCombo
						{
							idc = 4132;
							x = (5 - 3) * (0.025) + (0);
							y = (5 - 2) * (0.04) + (0);
							w = 22 * (0.025);
							h = 1 * (0.04);
							onLBSelChanged = "_this call ExileClient_gui_xm8_slide_territory_event_onTerritoryDropdownSelectionChanged";
						};
						class PlayersListBox: RscListbox
						{
							idc = 4131;
							x = (5 - 3) * (0.025) + (0);
							y = (6.5 - 2) * (0.04) + (0);
							w = 22 * (0.025);
							h = 11.5 * (0.04);
							onLBSelChanged = "_this call ExileClient_gui_xm8_slide_territory_event_onPlayerListBoxSelectionChanged";
						};
						class InfoText: RscText
						{
							idc = 4133;
							text = "";
							x = (5 - 3) * (0.025) + (0);
							y = (18 - 2) * (0.04) + (0);
							w = 22 * (0.025);
							h = 1 * (0.04);
							colorBackground[] = {0,0,0,0.8};
						};
						class GoBackButton: RscExileXM8ButtonMenu
						{
							idc = -1;
							text = "GO BACK";
							x = 27.5 * (0.025) + (0);
							y = 17.5 * (0.04) + (0);
							w = 6 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "[ExileExtraAppsHomePage, 1] call ExileClient_gui_xm8_slide";
						};
						class KickButton: RscExileXM8ButtonMenu
						{
							idc = 4134;
							text = "KICK";
							x = (29 - 3) * (0.025) + (0);
							y = (6.5 - 2) * (0.04) + (0);
							w = 6 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "_this spawn ExileClient_gui_xm8_slide_territory_event_onKickButtonClick";
						};
						class LeaveButton: RscExileXM8ButtonMenu
						{
							idc = 4135;
							text = "LEAVE";
							x = (29 - 3) * (0.025) + (0);
							y = (5 - 2) * (0.04) + (0);
							w = 6 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "_this spawn ExileClient_gui_xm8_slide_territory_event_onLeaveButtonClick";
						};
						class PromoteButton: RscExileXM8ButtonMenu
						{
							idc = 4136;
							text = "PROMOTE";
							x = (29 - 3) * (0.025) + (0);
							y = (8 - 2) * (0.04) + (0);
							w = 6 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "_this spawn ExileClient_gui_xm8_slide_territory_event_onPromoteButtonClick";
						};
						class DemoteButton: RscExileXM8ButtonMenu
						{
							idc = 4137;
							text = "DEMOTE";
							x = (29 - 3) * (0.025) + (0);
							y = (9.5 - 2) * (0.04) + (0);
							w = 6 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "_this spawn ExileClient_gui_xm8_slide_territory_event_onDemoteButtonClick";
						};
						class RadiusButton: RscExileXM8ButtonMenu
						{
							idc = 4138;
							text = "RADIUS";
							x = (29 - 3) * (0.025) + (0);
							y = (11 - 2) * (0.04) + (0);
							w = 6 * (0.025);
							h = 1 * (0.04);
							onButtonClick = "_this spawn ExileClient_gui_xm8_slide_territory_event_onRadiusButtonClick";
						};
					};
				};
				class SlideSlothMachine: RscExileXM8Slide
				{
					idc = 4140;
					show = false;
					class Controls
					{
						class Background: RscPictureKeepAspect
						{
							idc = -1;
							text = "\exile_assets\texture\ui\slothMachine\xm8_slothMachineBackground.paa";
							x = -3.1 * (0.025) + (0);
							y = -6 * (0.04) + (0);
							w = 40 * (0.025);
							h = 33 * (0.04);
						};
						class XM8SlothMachineSpinButton: RscPictureButton
						{
							idc = 4141;
							style = 0x30;
							x = 14.3 * (0.025) + (0);
							y = 15.9 * (0.04) + (0);
							w = 5.7 * (0.025);
							h = 2 * (0.04);
							text = "\exile_assets\texture\ui\slothMachine\button_off_ca.paa";
							action = "[] call ExileClient_gui_xm8_slide_slothMachine_event_onSpinButtonClick;";
						};
						class GoBackButton: RscExileXM8ButtonMenu
						{
							idc = 4148;
							text = "GO BACK";
							x = 29.25 * (0.025) + (0);
							y = 17.5 * (0.04) + (0);
							w = 4.5 * (0.025);
							h = 1 * (0.04);
							sizeEx = .9 * (0.04);
							onButtonClick = "[ExileExtraAppsHomePage, 1] call ExileClient_gui_xm8_slide";
						};
						class PopTabsLabel: RscStructuredText
						{
							idc = 4142;
							text = "<t align='center'><t color='#e14141'><img image='\exile_assets\texture\ui\poptab_inline_ca.paa' size='1' shadow='true' /></t>";
							x = 6.5 * (0.025) + (0);
							y = 13 * (0.04) + (0);
							w = 6 * (0.025);
							h = 2 * (0.04);
						};
						class JackpotLabel: RscStructuredText
						{
							idc = 4143;
							text = "<t align='center'><t color='#e14141'></t>";
							x = 14 * (0.025) + (0);
							y = 13 * (0.04) + (0);
							w = 6 * (0.025);
							h = 2 * (0.04);
						};
						class WinningsLabel: RscStructuredText
						{
							idc = 4144;
							text = "<t align='center'><t color='#e14141'>0</t>";
							x = 21.5 * (0.025) + (0);
							y = 13 * (0.04) + (0);
							w = 6 * (0.025);
							h = 2 * (0.04);
						};
						class Symbol01: RscPictureKeepAspect
						{
							idc = 4145;
							text = "";
							x = 6.55 * (0.025) + (0);
							y = 4 * (0.04) + (0);
							w = 5.83 * (0.025);
							h = 5 * (0.04);
						};
						class Symbol02: RscPictureKeepAspect
						{
							idc = 4146;
							text = "";
							x = 14.1 * (0.025) + (0);
							y = 4 * (0.04) + (0);
							w = 5.83 * (0.025);
							h = 5 * (0.04);
						};
						class Symbol03: RscPictureKeepAspect
						{
							idc = 4147;
							text = "";
							x = 21.6 * (0.025) + (0);
							y = 4 * (0.04) + (0);
							w = 5.83 * (0.025);
							h = 5 * (0.04);
						};
					};
				};
			};
		};
		class Warning: RscExileXM8Slide
		{
			idc = 4030;
			show = false;
			x = 3 * (0.025) + (0);
			y = (2 + 1.5) * (0.04) + (0);
			h = (19 - 1.5) * (0.04);
			class Controls
			{
				class Background: RscText
				{
					idc = -1;
					x = 0;
					y = 0;
					w = 34 * (0.025);
					h = 19 * (0.04);
					colorBackground[] = {41/255, 39/255, 46/255, 0.95};
				};
				class OkayButton: RscExileXM8Button
				{
					idc = 4031;
					text = "Meh... Okay";
					x = (16.5 - 3) * (0.025);
					y = (12 - 2) * (0.04);
					w = 7 * (0.025);
					h = 2 * (0.04);
					onButtonClick = "call ExileClient_gui_xm8_hideWarning";
				};
				class Message: RscStructuredText
				{
					idc = 4032;
					text = "<t align='center'><t color='#e14141'>Whoops</t><br/><t color='#fcfdff' size='1.4'>Computer says no.</t></t>";
					x = (4 - 3) * (0.025);
					y = (7 - 2) * (0.04);
					w = 32 * (0.025);
					h = 3.5 * (0.04);
					colorBackground[] = {0,0,0,0};
				};
			};
		};
		class Message: RscExileXM8Slide
		{
			idc = 4010;
			show = false;
			x = 3 * (0.025) + (0);
			y = (2 + 1.5) * (0.04) + (0);
			h = (19 - 1.5) * (0.04);
			class Controls
			{
				class Background: RscText
				{
					idc = -1;
					x = 0;
					y = 0;
					w = 34 * (0.025);
					h = 19 * (0.04);
					colorBackground[] = {41/255, 39/255, 46/255, 0.95};
				};
				class OkayButton: RscExileXM8Button
				{
					idc = 4011;
					text = "Okay";
					x = (16.5 - 3) * (0.025);
					y = (12 - 2) * (0.04);
					w = 7 * (0.025);
					h = 2 * (0.04);
					onButtonClick = "call ExileClient_gui_xm8_hideMessage";
				};
				class Question: RscStructuredText
				{
					idc = 4012;
					text = "<t align='center'><t color='#a0df3b'>Yay!</t><br/><t color='#fcfdff' size='1.4'>You have done something cool!</t></t>";
					x = (4 - 3) * (0.025);
					y = (7 - 2) * (0.04);
					w = 32 * (0.025);
					h = 3.5 * (0.04);
					colorBackground[] = {0,0,0,0};
				};
			};
		};
		class Confirm: RscExileXM8Slide
		{
			idc = 4020;
			show = false;
			x = 3 * (0.025) + (0);
			y = (2 + 1.5) * (0.04) + (0);
			h = (19 - 1.5) * (0.04);
			class Controls
			{
				class Background: RscText
				{
					idc = -1;
					x = 0;
					y = 0;
					w = 34 * (0.025);
					h = 19 * (0.04);
					colorBackground[] = {41/255, 39/255, 46/255, 0.95};
				};
				class Question: RscStructuredText
				{
					idc = 4021;
					text = "<t align='center'><t color='#00b2cd'>Confirm</t><br/><t color='#fcfdff' size='1.4'>Kick Eichi?</t></t>";
					x = (4 - 3) * (0.025);
					y = (7 - 2) * (0.04);
					w = 32 * (0.025);
					h = 3.5 * (0.04);
					colorBackground[] = {0,0,0,0};
				};
				class YesButton: RscExileXM8Button
				{
					idc = 4022;
					text = "Kick";
					x = (12.5 - 3) * (0.025);
					y = (12 - 2) * (0.04);
					w = 7 * (0.025);
					h = 2 * (0.04);
					onButtonClick = "true call ExileClient_gui_xm8_hideConfirm";
				};
				class NoButton: RscExileXM8Button
				{
					idc = 4023;
					text = "Don't kick";
					x = (20.5 - 3) * (0.025);
					y = (12 - 2) * (0.04);
					w = 7 * (0.025);
					h = 2 * (0.04);
					onButtonClick = "false call ExileClient_gui_xm8_hideConfirm";
				};
			};
		};
		class LeftHeader: RscStructuredText
		{
			idc = 4003;
			text = "<t align='left' font='RobotoRegular' shadow='0'>147257</t>";
			x = 3 * (0.025) + (0);
			y = 2.2 * (0.04) + (0);
			w = 17 * (0.025);
			h = 1 * (0.04);
			colorBackground[] = {0,0,0,0};
		};
		class RightHeader: RscStructuredText
		{
			idc = 4005;
			text = "<t align='right' font='RobotoRegular' shadow='0'><img image='\exile_assets\texture\ui\xm8_signal_0_ca.paa' shadow='0'/> 21:45</t>";
			x = 20 * (0.025) + (0);
			y = 2.2 * (0.04) + (0);
			w = 17 * (0.025);
			h = 1 * (0.04);
			colorBackground[] = {0,0,0,0};
		};
		class CenterHeader: RscStructuredText
		{
			idc = 4004;
			text = "<t align='center' font='RobotoMedium' shadow='0'>XM8</t>";
			x = 9 * (0.025) + (0);
			y = 2.2 * (0.04) + (0);
			w = 22 * (0.025);
			h = 1 * (0.04);
			colorBackground[] = {0,0,0,0};
		};
		class PowerButton: RscButton
		{
			idc = 4006;
			x = 19 * (0.025) + (0);
			y = 21 * (0.04) + (0);
			w = 2 * (0.025);
			h = 2 * (0.04);
			tooltip = "On/Off";
			onButtonClick = "[] spawn ExileClient_gui_xm8_togglePower";
			colorBackground[] = {0,0,0,0};
			colorBackgroundActive[] = {0,0,0,0};
			colorBackgroundDisabled[] = {0,0,0,0};
			colorBorder[] = {0,0,0,0};
			colorDisabled[] = {0,0,0,0};
			colorFocused[] = {0,0,0,0};
			colorShadow[] = {0,0,0,0};
			colorText[] = {0,0,0,0};
			soundClick[] = {"\A3\ui_f\data\sound\RscButton\soundClick", 0.09, 1};
			soundEnter[] = {"\A3\ui_f\data\sound\RscButton\soundEnter", 0.09, 1};
			soundEscape[] = {"\A3\ui_f\data\sound\RscButton\soundEscape", 0.09, 1};
			soundPush[] = {"\A3\ui_f\data\sound\RscButton\soundPush", 0.09, 1};
		};
		class BackgroundSplash: RscPictureKeepAspect
		{
			idc = 4002;
			text = "\exile_assets\texture\ui\xm8_splash_ca.paa";
			x = 0 * (0.025) + (0);
			y = -4 * (0.04) + (0);
			w = 40 * (0.025);
			h = 33.3333 * (0.04);
		};
	};
};
class RscDisplayInventory
{
	scriptName = "RscDisplayInventory";
	scriptPath = "IGUI";
	onLoad = "[""onLoad"",_this,""RscDisplayInventory"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay'); _this spawn ExileClient_gui_inventory_event_onLoad";
	onUnload = "[""onUnload"",_this,""RscDisplayInventory"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay'); _this spawn ExileLifeClient_gui_inventory_event_onUnload;";
	idd = 602;
	enableSimulation = 1;
	class Colors
	{
		dragValidBgr[] = {"(profilenamespace getvariable ['IGUI_TEXT_RGB_R',0])","(profilenamespace getvariable ['IGUI_TEXT_RGB_G',1])","(profilenamespace getvariable ['IGUI_TEXT_RGB_B',1])",0.5};
		dragInvalidBgr[] = {"(profilenamespace getvariable ['IGUI_ERROR_RGB_R',0.8])","(profilenamespace getvariable ['IGUI_ERROR_RGB_G',0.0])","(profilenamespace getvariable ['IGUI_ERROR_RGB_B',0.0])",0.5};
		dragValidBar[] = {"(profilenamespace getvariable ['IGUI_WARNING_RGB_R',0.8])","(profilenamespace getvariable ['IGUI_WARNING_RGB_G',0.5])","(profilenamespace getvariable ['IGUI_WARNING_RGB_B',0.0])",0.5};
		dragInvalidBar[] = {"(profilenamespace getvariable ['IGUI_ERROR_RGB_R',0.8])","(profilenamespace getvariable ['IGUI_ERROR_RGB_G',0.0])","(profilenamespace getvariable ['IGUI_ERROR_RGB_B',0.0])",0.5};
		progressBar[] = {"(profilenamespace getvariable ['IGUI_TEXT_RGB_R',0])","(profilenamespace getvariable ['IGUI_TEXT_RGB_G',1])","(profilenamespace getvariable ['IGUI_TEXT_RGB_B',1])",1};
		progressBarBgr[] = {"(profilenamespace getvariable ['IGUI_BCG_RGB_R',0])","(profilenamespace getvariable ['IGUI_BCG_RGB_G',1])","(profilenamespace getvariable ['IGUI_BCG_RGB_B',1])",0.75};
		highlight[] = {"(profilenamespace getvariable ['IGUI_TEXT_RGB_R',0])","(profilenamespace getvariable ['IGUI_TEXT_RGB_G',1])","(profilenamespace getvariable ['IGUI_TEXT_RGB_B',1])",0.5};
	};
	class controlsBackground{};
	class controls
	{
		delete Background;
		delete Title;
		delete ButtonOK;
		delete ButtonCancel;
		delete BackgroundSlotPrimary;
		delete BackgroundSlotHeadgear;
		delete BackgroundSlotGoggles;
		delete BackgroundSlotHMD;
		delete BackgroundSlotBinoculars;
		delete BackgroundSlotPrimaryMuzzle;
		delete BackgroundSlotPrimaryUnderBarrel;
		delete BackgroundSlotPrimaryFlashlight;
		delete BackgroundSlotPrimaryOptics;
		delete BackgroundSlotPrimaryMagazineGL;
		delete BackgroundSlotPrimaryMagazine;
		delete BackgroundSlotSecondary;
		delete BackgroundSlotSecondaryMuzzle;
		delete BackgroundSlotSecondaryUnderBarrel;
		delete BackgroundSlotSecondaryFlashlight;
		delete BackgroundSlotSecondaryOptics;
		delete BackgroundSlotSecondaryMagazine;
		delete BackgroundSlotHandgunFlashlight;
		delete BackgroundSlotHandgunOptics;
		delete BackgroundSlotHandgunMagazine;
		delete BackgroundSlotHandgun;
		delete BackgroundSlotMap;
		delete BackgroundSlotGPS;
		delete BackgroundSlotHandgunMuzzle;
		delete BackgroundSlotHandgunUnderBarrel;
		delete BackgroundSlotRadio;
		delete BackgroundSlotCompass;
		delete BackgroundSlotWatch;
		delete ExileButtonClose;
		delete ExileEquipmentLoadBackground;
		class GroundTab: RscActiveText
		{
			colorBackgroundSelected[] = {1,1,1,1};
			colorFocused[] = {1,1,1,0};
			soundDoubleClick[] = {"",0.1,1};
			color[] = {1,1,1,1};
			idc = 6321;
			x = 28.33 * (0.03) + (-0.25);
			y = 3.25 * (0.04) + (-0.25);
			w = 5.83333 * (0.03);
			h = 1 * (0.04);
			colorBackground[] = {0,0,0,1};
		};
		class RankBackground: RscText
		{
			idc = 1014;
			x = -1;
			y = -1;
			w = 0.6 * (0.03);
			h = 0.6 * (0.04);
			colorBackground[] = {1,1,1,0.2};
		};
		class RankPicture: RscPicture
		{
			idc = 1203;
			text = "\A3\Ui_f\data\GUI\Cfg\Ranks\corporal_gs.paa";
			x = -1;
			y = -1;
			w = 0.6 * (0.03);
			h = 0.6 * (0.04);
		};
		class UniformTab: GroundTab
		{
			idc = 6332;
			x = -1;
			y = -1;
			w = 4 * (0.03);
			h = 4 * (0.04);
			colorBackground[] = {1,1,0,1};
		};
		class VestTab: UniformTab
		{
			idc = 6382;
			x = -1;
			y = -1;
			w = 4 * (0.03);
			h = 4 * (0.04);
			colorBackground[] = {1,1,0,1};
		};
		class BackpackTab: UniformTab
		{
			idc = 6192;
			x = -1;
			y = -1;
			w = 4 * (0.03);
			h = 4 * (0.04);
			colorBackground[] = {1,1,0,1};
		};
		class CA_ContainerBackground: RscText
		{
			idc = 1001;
			x = 27.92 * (0.03) + (-0.25);
			y = 2.75 * (0.04) + (-0.25);
			w = 12.9167 * (0.03);
			h = 23 * (0.04);
			colorBackground[] = {0.05,0.05,0.05,0.7};
		};
		class CA_PlayerBackground: RscText
		{
			idc = 1002;
			x = 41.67 * (0.03) + (-0.25);
			y = 2.75 * (0.04) + (-0.25);
			w = 21.25 * (0.03);
			h = 32 * (0.04);
			colorBackground[] = {0.05,0.05,0.05,0.7};
		};
		class TitleBackground: RscText
		{
			idc = 1020;
			x = 41.67 * (0.03) + (-0.25);
			y = 1.55 * (0.04) + (-0.25);
			w = 21.25 * (0.03);
			h = 1 * (0.04);
			colorBackground[] = {0.1,0.1,0.1,1};
		};
		class PlayersName: RscText
		{
			idc = 111;
			text = "Player name:"; 
			x = 41.67 * (0.03) + (-0.25);
			y = 1.55 * (0.04) + (-0.25);
			w = 11.5 * (0.03);
			h = 1 * (0.04);
		};
		class ExileContainerLoadBackground: RscText
		{
			idc = -1;
			text = "";
			x = 28.33 * (0.03) + (-0.25);
			y = 21.25 * (0.04) + (-0.25);
			w = 12.0833 * (0.03);
			h = 0.5 * (0.04);
			colorBackground[] = {0, 0, 0, 0.5};
		};
		class ExilePlayerLoadBackground: RscText
		{
			idc = -1;
			text = "";
			x = 42.08 * (0.03) + (-0.25);
			y = 21.25 * (0.04) + (-0.25);
			w = 20.4167 * (0.03);
			h = 0.5 * (0.04);
			colorBackground[] = {0, 0, 0, 0.5};
		};
		class ButtonBack: RscActiveText
		{
			color[] = {1,1,1,0.7};
			idc = 2;
			style = 48;
			text = "\A3\Ui_f\data\GUI\Rsc\RscDisplayArcadeMap\icon_exit_cross_ca.paa"; 
			x = 61.75 * (0.03) + (-0.25);
			y = 1.55 * (0.04) + (-0.25);
			w = 1 * (0.03);
			h = 1 * (0.04);
			colorText[] = {1,1,1,0.7};
			colorActive[] = {1,1,1,1};
			tooltip = "Close"; 
		};
		class ExternalContainerBackground: RscPicture
		{
			idc = 1240;
			text = "#(argb,8,8,3)color(1,1,1,1)";
			x = 28.33 * (0.03) + (-0.25);
			y = 6.25 * (0.04) + (-0.25);
			w = 12.0833 * (0.03);
			h = 14.5 * (0.04);
			colorText[] = {1,1,1,0.1};
		};
		class PlayerContainerBackground: ExternalContainerBackground
		{
			idc = 1241;
			text = "#(argb,8,8,3)color(1,1,1,1)";
			x = 46.67 * (0.03) + (-0.25);
			y = 6.25 * (0.04) + (-0.25);
			w = 15.8333 * (0.03);
			h = 14.5 * (0.04);
			colorText[] = {1,1,1,0.1};
		};
		class SoldierTab: GroundTab
		{
			idc = 6401;
			x = 34.58 * (0.03) + (-0.25);
			y = 3.25 * (0.04) + (-0.25);
			w = 5.83333 * (0.03);
			h = 1 * (0.04);
			colorBackground[] = {0,0,0,1};
		};
		class GroundContainer: RscListBox
		{
			itemBackground[] = {1,1,1,0.1};
			idc = 632;
			sizeEx2 = "0.8 * 			(			(			((safezoneW / safezoneH) min 1.2) / 1.2) / 25)";
			rowHeight = "2 * 			(			(			((safezoneW / safezoneH) min 1.2) / 1.2) / 25)";
			sizeEx = "0.8 * 			(			(			((safezoneW / safezoneH) min 1.2) / 1.2) / 25)";
			canDrag = 1;
			itemSpacing = 0.001;
			x = 28.33 * (0.03) + (-0.25);
			y = 6.25 * (0.04) + (-0.25);
			w = 12.0833 * (0.03);
			h = 14.5 * (0.04);
			colorBackground[] = {0,0,0,0};
			onMouseButtonClick = "_this call ExileLifeClient_gui_inventory_event_onMouseDown";
		};
		class SoldierContainer: GroundContainer
		{
			idc = 640;
			x = 28.33 * (0.03) + (-0.25);
			y = 6.25 * (0.04) + (-0.25);
			w = 12.0833 * (0.03);
			h = 14.5 * (0.04);
			colorBackground[] = {0,0,0,0};
			sizeEx = "0.8 * 			(			(			((safezoneW / safezoneH) min 1.2) / 1.2) / 25)";
		};
		class GroundFilter: RscCombo
		{
			idc = 6554;
			x = 28.33 * (0.03) + (-0.25);
			y = 4.75 * (0.04) + (-0.25);
			w = 12.0833 * (0.03);
			h = 1 * (0.04);
		};
		class GroundLoad: RscProgress
		{
			colorBar[] = {0.9,0.9,0.9,0.9};
			colorExtBar[] = {1,1,1,1};
			idc = 6307;
			texture = "";
			textureExt = "";
			x = 28.33 * (0.03) + (-0.25);
			y = 21.25 * (0.04) + (-0.25);
			w = 12.0833 * (0.03);
			h = 0.5 * (0.04);
			colorFrame[] = {0,0,0,0};
		};
		class SlotPrimary: GroundTab
		{
			color[] = {1,1,1,1};
			colorBackgroundSelected[] = {1,1,1,0.1};
			colorFocused[] = {0,0,0,0};
			idc = 610;
			style = "0x30 + 0x800";
			canDrag = 1;
			onMouseButtonDblClick = "_this call ExileClient_gui_inventory_event_onSlotDoubleClick";
			x = 42.08 * (0.03) + (-0.25);
			y = 22.25 * (0.04) + (-0.25);
			w = 10 * (0.03);
			h = 3.5 * (0.04);
			colorText[] = {0,0,0,0.5};
			colorBackground[] = {0,0,0,0};
		};
		class SlotPrimaryMuzzle: SlotPrimary
		{
			idc = 620;
			x = 42.75 * (0.03) + (-0.25);
			y = 25.75 * (0.04) + (-0.25);
			w = 1.5 * (0.03);
			h = 1.5 * (0.04);
			colorText[] = {0,0,0,0.5};
			colorBackground[] = {0,0,0,0};
		};
		class SlotPrimaryUnderBarrel: SlotPrimary
		{
			idc = 641;
			x = 44.33 * (0.03) + (-0.25);
			y = 25.75 * (0.04) + (-0.25);
			w = 1.5 * (0.03);
			h = 1.5 * (0.04);
			colorText[] = {0,0,0,0.5};
			colorBackground[] = {0,0,0,0};
		};
		class SlotPrimaryFlashlight: SlotPrimary
		{
			idc = 622;
			x = 45.83 * (0.03) + (-0.25);
			y = 25.75 * (0.04) + (-0.25);
			w = 1.5 * (0.03);
			h = 1.5 * (0.04);
			colorText[] = {0,0,0,0.5};
			colorBackground[] = {0,0,0,0};
		};
		class SlotPrimaryOptics: SlotPrimary
		{
			idc = 621;
			x = 47.33 * (0.03) + (-0.25);
			y = 25.75 * (0.04) + (-0.25);
			w = 1.5 * (0.03);
			h = 1.5 * (0.04);
			colorText[] = {0,0,0,0.5};
			colorBackground[] = {0,0,0,0};
		};
		class SlotPrimaryMagazineGL: SlotPrimary
		{
			idc = 644;
			x = 48.92 * (0.03) + (-0.25);
			y = 25.75 * (0.04) + (-0.25);
			w = 1.5 * (0.03);
			h = 1.5 * (0.04);
			colorText[] = {0,0,0,0.5};
			colorBackground[] = {0,0,0,0};
		};
		class SlotPrimaryMagazine: SlotPrimary
		{
			idc = 623;
			x = 50.42 * (0.03) + (-0.25);
			y = 25.75 * (0.04) + (-0.25);
			w = 1.5 * (0.03);
			h = 1.5 * (0.04);
			colorText[] = {0,0,0,0.5};
			colorBackground[] = {0,0,0,0};
		};
		class SlotSecondary: SlotPrimary
		{
			idc = 611;
			x = 52.5 * (0.03) + (-0.25);
			y = 22.25 * (0.04) + (-0.25);
			w = 10 * (0.03);
			h = 3.5 * (0.04);
			colorText[] = {0,0,0,0.5};
			colorBackground[] = {0,0,0,0};
		};
		class SlotSecondaryMuzzle: SlotPrimary
		{
			idc = 624;
			x = 54.5 * (0.03) + (-0.25);
			y = 25.75 * (0.04) + (-0.25);
			w = 1.5 * (0.03);
			h = 1.5 * (0.04);
			colorText[] = {0,0,0,0.5};
			colorBackground[] = {0,0,0,0};
		};
		class SlotSecondaryUnderBarrel: SlotPrimary
		{
			idc = 642;
			x = 56.08 * (0.03) + (-0.25);
			y = 25.75 * (0.04) + (-0.25);
			w = 1.5 * (0.03);
			h = 1.5 * (0.04);
			colorText[] = {0,0,0,0.5};
			colorBackground[] = {0,0,0,0};
		};
		class SlotSecondaryFlashlight: SlotPrimary
		{
			idc = 626;
			x = 57.67 * (0.03) + (-0.25);
			y = 25.75 * (0.04) + (-0.25);
			w = 1.5 * (0.03);
			h = 1.5 * (0.04);
			colorText[] = {0,0,0,0.5};
			colorBackground[] = {0,0,0,0};
		};
		class SlotSecondaryOptics: SlotPrimary
		{
			idc = 625;
			x = 59.25 * (0.03) + (-0.25);
			y = 25.75 * (0.04) + (-0.25);
			w = 1.5 * (0.03);
			h = 1.5 * (0.04);
			colorText[] = {0,0,0,0.5};
			colorBackground[] = {0,0,0,0};
		};
		class SlotSecondaryMagazine: SlotPrimary
		{
			idc = 627;
			x = 60.83 * (0.03) + (-0.25);
			y = 25.75 * (0.04) + (-0.25);
			w = 1.5 * (0.03);
			h = 1.5 * (0.04);
			colorText[] = {0,0,0,0.5};
			colorBackground[] = {0,0,0,0};
		};
		class SlotHandgun: SlotPrimary
		{
			idc = 612;
			x = 42.08 * (0.03) + (-0.25);
			y = 27.75 * (0.04) + (-0.25);
			w = 10 * (0.03);
			h = 3.5 * (0.04);
			colorText[] = {0,0,0,0.5};
			colorBackground[] = {0,0,0,0};
		};
		class SlotHandgunMuzzle: SlotPrimary
		{
			idc = 628;
			x = 44.17 * (0.03) + (-0.25);
			y = 31.25 * (0.04) + (-0.25);
			w = 1.5 * (0.03);
			h = 1.5 * (0.04);
			colorText[] = {0,0,0,0.5};
			colorBackground[] = {0,0,0,0};
		};
		class SlotHandgunUnderBarrel: SlotPrimary
		{
			idc = 643;
			x = 45.75 * (0.03) + (-0.25);
			y = 31.25 * (0.04) + (-0.25);
			w = 1.5 * (0.03);
			h = 1.5 * (0.04);
			colorText[] = {0,0,0,0.5};
			colorBackground[] = {0,0,0,0};
		};
		class SlotHandgunFlashlight: SlotPrimary
		{
			idc = 630;
			x = 47.33 * (0.03) + (-0.25);
			y = 31.25 * (0.04) + (-0.25);
			w = 1.5 * (0.03);
			h = 1.5 * (0.04);
			colorText[] = {0,0,0,0.5};
			colorBackground[] = {0,0,0,0};
		};
		class SlotHandgunOptics: SlotPrimary
		{
			idc = 629;
			x = 48.92 * (0.03) + (-0.25);
			y = 31.25 * (0.04) + (-0.25);
			w = 1.5 * (0.03);
			h = 1.5 * (0.04);
			colorText[] = {0,0,0,0.5};
			colorBackground[] = {0,0,0,0};
		};
		class SlotHandgunMagazine: SlotPrimary
		{
			idc = 631;
			x = 50.42 * (0.03) + (-0.25);
			y = 31.25 * (0.04) + (-0.25);
			w = 1.5 * (0.03);
			h = 1.5 * (0.04);
			colorText[] = {0,0,0,0.5};
			colorBackground[] = {0,0,0,0};
		};
		class SlotHeadgear: SlotPrimary
		{
			idc = 6240;
			x = 42.08 * (0.03) + (-0.25);
			y = 3.25 * (0.04) + (-0.25);
			w = 2.5 * (0.03);
			h = 2.5 * (0.04);
			colorText[] = {0,0,0,0.5};
			colorBackground[] = {0,0,0,0};
		};
		class SlotGoggles: SlotPrimary
		{
			idc = 6216;
			x = 44.58 * (0.03) + (-0.25);
			y = 3.25 * (0.04) + (-0.25);
			w = 2.5 * (0.03);
			h = 2.5 * (0.04);
			colorText[] = {1,1,1,1};
			colorBackground[] = {0,0,0,0};
		};
		class SlotHMD: SlotPrimary
		{
			idc = 6217;
			x = 49.58 * (0.03) + (-0.25);
			y = 3.25 * (0.04) + (-0.25);
			w = 2.5 * (0.03);
			h = 2.5 * (0.04);
			colorText[] = {0,0,0,0.5};
			colorBackground[] = {0,0,0,0};
		};
		class SlotBinoculars: SlotPrimary
		{
			idc = 6238;
			x = 47.08 * (0.03) + (-0.25);
			y = 3.25 * (0.04) + (-0.25);
			w = 2.5 * (0.03);
			h = 2.5 * (0.04);
			colorText[] = {0,0,0,0.5};
			colorBackground[] = {0,0,0,0};
		};
		class SlotMap: SlotPrimary
		{
			idc = 6211;
			x = 54.5 * (0.03) + (-0.25);
			y = 3.45 * (0.04) + (-0.25);
			w = 2 * (0.03);
			h = 2 * (0.04);
			colorText[] = {0,0,0,0.5};
			colorBackground[] = {0,0,0,0};
		};
		class SlotGPS: SlotPrimary
		{
			idc = 6215;
			x = 56.42 * (0.03) + (-0.25);
			y = 3.45 * (0.04) + (-0.25);
			w = 2 * (0.03);
			h = 2 * (0.04);
			colorText[] = {0,0,0,0.5};
			colorBackground[] = {0,0,0,0};
		};
		class SlotCompass: SlotPrimary
		{
			idc = 6212;
			x = 58.42 * (0.03) + (-0.25);
			y = 3.45 * (0.04) + (-0.25);
			w = 2 * (0.03);
			h = 2 * (0.04);
			colorText[] = {0,0,0,0.5};
			colorBackground[] = {0,0,0,0};
		};
		class SlotRadio: SlotPrimary
		{
			idc = 6214;
			x = 60.42 * (0.03) + (-0.25);
			y = 3.45 * (0.04) + (-0.25);
			w = 2 * (0.03);
			h = 2 * (0.04);
			colorText[] = {0,0,0,0.5};
			colorBackground[] = {0,0,0,0};
		};
		class SlotWatch: SlotPrimary
		{
			idc = 6213;
			x = 52.5 * (0.03) + (-0.25);
			y = 3.45 * (0.04) + (-0.25);
			w = 2 * (0.03);
			h = 2 * (0.04);
			colorText[] = {0,0,0,0.5};
			colorBackground[] = {0,0,0,0};
		};
		class UniformSlot: SlotPrimary
		{
			idc = 6331;
			x = 42.08 * (0.03) + (-0.25);
			y = 6.25 * (0.04) + (-0.25);
			w = 4.16667 * (0.03);
			h = 4 * (0.04);
			colorText[] = {0,0,0,0.5};
			colorBackground[] = {1,1,1,0.1};
		};
		class UniformLoad: GroundLoad
		{
			idc = 6304;
			x = 42.08 * (0.03) + (-0.25);
			y = 10.25 * (0.04) + (-0.25);
			w = 4.16667 * (0.03);
			h = 0.5 * (0.04);
			colorFrame[] = {0,0,0,0};
		};
		class UniformContainer: GroundContainer
		{
			idc = 633;
			onLBDblClick = "_this call ExileClient_gui_inventory_event_onItemDoubleClick";
			x = 46.67 * (0.03) + (-0.25);
			y = 6.25 * (0.04) + (-0.25);
			w = 15.8333 * (0.03);
			h = 14.5 * (0.04);
			colorBackground[] = {0,0,0,0};
			sizeEx = "0.8 * 			(			(			((safezoneW / safezoneH) min 1.2) / 1.2) / 25)";
			onMouseButtonClick = "";
		};
		class VestSlot: SlotPrimary
		{
			idc = 6381;
			x = 42.08 * (0.03) + (-0.25);
			y = 11.25 * (0.04) + (-0.25);
			w = 4.16667 * (0.03);
			h = 4 * (0.04);
			colorText[] = {0,0,0,0.5};
			colorBackground[] = {1,1,1,0.1};
		};
		class VestLoad: GroundLoad
		{
			idc = 6305;
			x = 42.08 * (0.03) + (-0.25);
			y = 15.25 * (0.04) + (-0.25);
			w = 4.16667 * (0.03);
			h = 0.5 * (0.04);
			colorFrame[] = {0,0,0,0};
		};
		class VestContainer: UniformContainer
		{
			idc = 638;
			onLBDblClick = "_this call ExileClient_gui_inventory_event_onItemDoubleClick";
			x = 46.67 * (0.03) + (-0.25);
			y = 6.25 * (0.04) + (-0.25);
			w = 15.8333 * (0.03);
			h = 14.5 * (0.04);
			colorBackground[] = {0,0,0,0};
			sizeEx = "0.8 * 			(			(			((safezoneW / safezoneH) min 1.2) / 1.2) / 25)";
		};
		class BackpackSlot: SlotPrimary
		{
			idc = 6191;
			x = 42.08 * (0.03) + (-0.25);
			y = 16.25 * (0.04) + (-0.25);
			w = 4.16667 * (0.03);
			h = 4 * (0.04);
			colorText[] = {0,0,0,0.5};
			colorBackground[] = {1,1,1,0.1};
		};
		class BackpackLoad: GroundLoad
		{
			idc = 6306;
			x = 42.08 * (0.03) + (-0.25);
			y = 20.25 * (0.04) + (-0.25);
			w = 4.16667 * (0.03);
			h = 0.5 * (0.04);
			colorFrame[] = {0,0,0,0};
		};
		class BackpackContainer: UniformContainer
		{
			idc = 619;
			onLBDblClick = "_this call ExileClient_gui_inventory_event_onItemDoubleClick";
			x = 46.67 * (0.03) + (-0.25);
			y = 6.25 * (0.04) + (-0.25);
			w = 15.8333 * (0.03);
			h = 14.5 * (0.04);
			colorBackground[] = {0,0,0,0};
			sizeEx = "0.8 * 			(			(			((safezoneW / safezoneH) min 1.2) / 1.2) / 25)";
		};
		class TotalLoad: GroundLoad
		{
			idc = 6308;
			x = 42.08 * (0.03) + (-0.25);
			y = 21.25 * (0.04) + (-0.25);
			w = 20.4167 * (0.03);
			h = 0.5 * (0.04);
			colorFrame[] = {0,0,0,0};
		};
		class ContainerMarker: GroundTab
		{
			idc = 6325;
			x = -13.33 * (0.03) + (-0.25);
			y = 39.75 * (0.04) + (-0.25);
			w = 1 * (0.03);
			h = 1 * (0.04);
			colorBackground[] = {0,0,0,1};
		};
		class GroundMarker: ContainerMarker
		{
			idc = 6385;
			x = -12.5 * (0.03) + (-0.25);
			y = 39.75 * (0.04) + (-0.25);
			w = 1 * (0.03);
			h = 1 * (0.04);
			colorBackground[] = {0,0,0,1};
		};
		class SoldierMarker: ContainerMarker
		{
			idc = 6405;
			x = -11.67 * (0.03) + (-0.25);
			y = 39.75 * (0.04) + (-0.25);
			w = 1 * (0.03);
			h = 1 * (0.04);
			colorBackground[] = {0,0,0,1};
		};
		class ExileSecondaryBackground: RscText
		{
			idc = 1055;
			x = 52.5 * (0.03) + (-0.25);
			y = 22.25 * (0.04) + (-0.25);
			w = 10 * (0.03);
			h = 5 * (0.04);
			colorBackground[] = {1,1,1,0.05};
		};
		class ExileHandgunBackground: RscText
		{
			idc = 1056;
			x = 42.08 * (0.03) + (-0.25);
			y = 27.75 * (0.04) + (-0.25);
			w = 10 * (0.03);
			h = 5 * (0.04);
			colorBackground[] = {1,1,1,0.05};
		};
		class ExilePrimaryBackground: RscText
		{
			idc = 1057;
			x = 42.08 * (0.03) + (-0.25);
			y = 22.25 * (0.04) + (-0.25);
			w = 10 * (0.03);
			h = 5 * (0.04);
			colorBackground[] = {1,1,1,0.05};
		};
		class ExileItemsBackground: RscText
		{
			idc = 1058;
			x = 42.08 * (0.03) + (-0.25);
			y = 3.25 * (0.04) + (-0.25);
			w = 10 * (0.03);
			h = 2.5 * (0.04);
			colorBackground[] = {1,1,1,0.05};
		};
		class ExileButtonTakeAll: RscButtonMenu
		{
			idc = 20001;
			onMouseButtonDown = "call ExileClient_gui_inventory_takeAll";
			text = "TAKE ALL"; 
			x = 28.33 * (0.03) + (-0.25);
			y = 24.25 * (0.04) + (-0.25);
			w = 12.0833 * (0.03);
			h = 1 * (0.04);
			colorText[] = {1,1,1,1};
			colorBackground[] = {0,0,0,0.8};
			style = 0x02;
			class Attributes
			{
				align = "center";
			};
		};
		class ExileButtonCombineMags: RscButtonMenu
		{
			idc = 20002;
			onMouseButtonDown = "call ExileClient_gui_inventory_combineMagazines";
			text = "COMBINE MAGS"; 
			x = 52.5 * (0.03) + (-0.25);
			y = 33.25 * (0.04) + (-0.25);
			w = 10 * (0.03);
			h = 1 * (0.04);
			colorText[] = {1,1,1,1};
			colorBackground[] = {0,0,0,0.8};
			style = 0x02;
			class Attributes
			{
				align = "center";
			};
		};
		class ExileContainerPopTabsBackground: RscText
		{
			idc = -1;
			x = 28.33 * (0.03) + (-0.25);
			y = 22.25 * (0.04) + (-0.25);
			w = 6.66667 * (0.03);
			h = 1.5 * (0.04);
			colorBackground[] = {1,1,1,0.1};
		};
		class ExileContainerPopTabs: RscStructuredText
		{
			idc = 25000;
			size = 24 * pixelH;
			sizeEx = 24 * pixelH;
			text = "<t size='1' font='RobotoCondensed' align='right'>999999 / 999999 <img image='\exile_assets\texture\ui\poptab_inline_ca.paa' size='1' shadow='true' /></t>";
			x = 28.33 * (0.03) + (-0.25);
			y = 22.55 * (0.04) + (-0.25);
			w = 6.66667 * (0.03);
			h = 1 * (0.04);
			colorBackground[] = {0, 0, 0, 0};
		};
		class ExilePlayerPopTabsBackground: RscText
		{
			idc = -1;
			x = 54.17 * (0.03) + (-0.25);
			y = 29.55 * (0.04) + (-0.25);
			w = 8.33333 * (0.03);
			h = 1.5 * (0.04);
			colorBackground[] = {1,1,1,0.1};
		};
		class ExilePlayerPopTabs: RscStructuredText
		{
			idc = 25001;
			size = 24 * pixelH;
			sizeEx = 24 * pixelH;
			text = "<t size='1' font='RobotoCondensed' align='right'>999999 <img image='\exile_assets\texture\ui\poptab_inline_ca.paa' size='1' shadow='true' /></t>";
			x = 54.17 * (0.03) + (-0.25);
			y = 29.85 * (0.04) + (-0.25);
			w = 8.33333 * (0.03);
			h = 1 * (0.04);
			colorBackground[] = {0, 0, 0, 0};
		};
		class ExileTakePopTabsInput: RscEdit
		{
			idc = 25002;
			text = ""; 
			x = 35.42 * (0.03) + (-0.25);
			y = 22.25 * (0.04) + (-0.25);
			w = 3.33333 * (0.03);
			h = 1.5 * (0.04);
			style = 0x01;
			onKeyUp = "_this call ExileClient_gui_inventory_event_onTakePopTabsInputKeyUp";
		};
		class ExileTakePopTabsButton: RscButton
		{
			idc = 25003;
			text = ">"; 
			x = 38.75 * (0.03) + (-0.25);
			y = 22.25 * (0.04) + (-0.25);
			w = 1.66667 * (0.03);
			h = 1.5 * (0.04);
			onMouseButtonClick = "_this call ExileClient_gui_inventory_event_onTakePopTabsButtonClick";
		};
		class ExilePutPopTabsButton: RscButton
		{
			idc = 25004;
			text = "<"; 
			x = 52.5 * (0.03) + (-0.25);
			y = 31.25 * (0.04) + (-0.25);
			w = 1.5 * (0.03);
			h = 1.5 * (0.04);
			onMouseButtonClick = "_this call ExileClient_gui_inventory_event_onPutPopTabsButtonClick";
		};
		class ExilePutPopTabsInput: RscEdit
		{
			idc = 25005;
			text = ""; 
			x = 54.17 * (0.03) + (-0.25);
			y = 31.25 * (0.04) + (-0.25);
			w = 8.33333 * (0.03);
			h = 1.5 * (0.04);
			style = 0x01;
			onKeyUp = "_this call ExileClient_gui_inventory_event_onPutPopTabsInputKeyUp";
		};
		class ContainerCaptionBackground: RscText
		{
			idc = 1021;
			text = "Container"; 
			x = 27.92 * (0.03) + (-0.25);
			y = 1.55 * (0.04) + (-0.25);
			w = 12.9167 * (0.03);
			h = 1 * (0.04);
			colorBackground[] = {0.1,0.1,0.1,1};
		};
		class UniformExileEquipmentLoadBackground: RscText
		{
			idc = -1;
			text = "";
			x = 42.08 * (0.03) + (-0.25);
			y = 10.25 * (0.04) + (-0.25);
			w = 4.16667 * (0.03);
			h = 0.5 * (0.04);
			colorBackground[] = {0,0,0,0.5};
		};
		class SlotArmband: RscPicture
		{
			idc = 6317;
			text = "#(argb,8,8,3)color(1,1,1,1)";
			x = 49.58 * (0.03) + (-0.25);
			y = 3.25 * (0.04) + (-0.25);
			w = 2.5 * (0.03);
			h = 2.5 * (0.04);
		};
		class ExileLifeEquipmentBackground: RscText
		{
			idc = -1;
			text = "";
			x = 52.5 * (0.03) + (-0.25);
			y = 3.25 * (0.04) + (-0.25);
			w = 10 * (0.03);
			h = 2.5 * (0.04);
			colorBackground[] = {1,1,1,0.05};
		};
		class VestExileEquipmentLoadBackground: RscText
		{
			idc = -1;
			x = 42.08 * (0.03) + (-0.25);
			y = 15.25 * (0.04) + (-0.25);
			w = 4.16667 * (0.03);
			h = 0.5 * (0.04);
			colorBackground[] = {0,0,0,0.5};
		};
		class BackpackExileEquipmentLoadBackground: RscText
		{
			idc = -1;
			x = 42.08 * (0.03) + (-0.25);
			y = 20.25 * (0.04) + (-0.25);
			w = 4.16667 * (0.03);
			h = 0.5 * (0.04);
			colorBackground[] = {0,0,0,0.5};
		};
		class ExileLifeButtonDropAll: RscButtonMenu
		{
			idc = 20003;
			onMouseButtonDown = "systemChat 'Not Implemented'";
			enable = false;
			text = "DROP ALL"; 
			x = 42.08 * (0.03) + (-0.25);
			y = 33.25 * (0.04) + (-0.25);
			w = 10 * (0.03);
			h = 1 * (0.04);
			colorText[] = {1,1,1,1};
			colorBackground[] = {0,0,0,0.8};
			style = 0x02;
			class Attributes
			{
				align = "center";
			};
		};
	};
};
class RscDisplayMPInterrupt: RscStandardDisplay
{
	onLoad = "[""onLoad"",_this,""RscDisplayMPInterrupt"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay'); [] spawn ExileClient_gui_escape_abort;";
	class controls
	{
		delete ButtonTutorialHints;
		class ButtonChangeCharacter: RscButtonMenu
		{
			idc = 9122;
			onButtonClick = "[] call ExileLifeClient_gui_escape_switchCharacter;";
			text = "Change Character";
			x = "1 * 			(			((safezoneW / safezoneH) min 1.2) / 40) + 			(safezoneX)";
			y = "19.7 * 			(			(			((safezoneW / safezoneH) min 1.2) / 1.2) / 25) + 			(safezoneY + safezoneH - 			(			((safezoneW / safezoneH) min 1.2) / 1.2))";
			w = "15 * 			(			((safezoneW / safezoneH) min 1.2) / 40)";
			h = "1 * 			(			(			((safezoneW / safezoneH) min 1.2) / 1.2) / 25)";
		};
	};
};
class RscExileCraftItemDialog
{
	idd = 24005;
	onLoad = "uiNamespace setVariable ['RscExileCraftItemDialog', _this select 0]";
	onUnload = "uiNamespace setVariable ['RscExileCraftItemDialog', displayNull]";
	class controlsBackground
	{
		class BackgroundLeft: RscText
		{
			idc = 100;
			x = "0 * (0.025) + (0)";
			y = "1.5 * (0.04) + (0)";
			w = "12 * (0.025)";
			h = "21 * (0.04)";
			colorBackground[] = {0.05,0.05,0.05,0.7};
		};
		class TopLeftCaption: RscText
		{
			idc = 101;
			text = "ITEM";
			x = "0 * (0.025) + (0)";
			y = "0.25 * (0.04) + (0)";
			w = "12 * (0.025)";
			h = "1 * (0.04)";
			colorBackground[] = {0.1,0.1,0.1,1};
		};
		class BackgroundBottom: RscText
		{
			idc = 102;
			x = "0 * (0.025) + (0)";
			y = "23 * (0.04) + (0)";
			w = "40 * (0.025)";
			h = "2 * (0.04)";
			colorBackground[] = {0.05,0.05,0.05,0.7};
		};
		class BackgroundRight: RscText
		{
			idc = 103;
			x = "12.5 * (0.025) + (0)";
			y = "1.5 * (0.04) + (0)";
			w = "27.5 * (0.025)";
			h = "21 * (0.04)";
			colorBackground[] = {0.05,0.05,0.05,0.7};
		};
		class TopRightCaption: RscText
		{
			idc = 104;
			text = "COMPONENTS";
			x = "12.5 * (0.025) + (0)";
			y = "0.25 * (0.04) + (0)";
			w = "27.5 * (0.025)";
			h = "1 * (0.04)";
			colorBackground[] = {0.1,0.1,0.1,1};
		};
		class ButtonCloseCross: RscActiveText
		{
			idc = 105;
			style = 2096;
			color[] = {1,1,1,0.7};
			action = "closeDialog 0;";
			text = "\A3\Ui_f\data\GUI\Rsc\RscDisplayArcadeMap\icon_exit_cross_ca.paa";
			x = "39 * (0.025) + (0)";
			y = "0.25 * (0.04) + (0)";
			w = "1 * (0.025)";
			h = "1 * (0.04)";
			colorText[] = {1,1,1,0.7};
			colorActive[] = {1,1,1,1};
			tooltip = "Close";
		};
	};
	class controls
	{
		class ItemPicture: RscPictureKeepAspect
		{
			idc = 5000;
			text = "#(argb,8,8,3)color(1,1,1,1)";
			x = "0.5 * (0.025) + (0)";
			y = "2 * (0.04) + (0)";
			w = "11 * (0.025)";
			h = "9 * (0.04)";
		};
		class ButtonCraft: RscButtonMenu
		{
			idc = 5001;
			text = "CRAFT";
			x = 0.5 * (0.025) + (0);
			y = 23.5 * (0.04) + (0);
			w = 5.5 * (0.025);
			h = 1 * (0.04);
			action = "[uiNamespace getVariable 'RscExileCraftItemRecipeClassName', (lbCurSel 5002) + 1] spawn ExileClient_object_item_craft; closeDialog 0;";
		};
		class ButtonRepair: RscButtonMenu
		{
			idc = 5004;
			text = "REPAIR";
			x = 0.5 * (0.025) + (0);
			y = 23.5 * (0.04) + (0);
			w = 5.5 * (0.025);
			h = 1 * (0.04);
			onButtonClick = "(uiNameSpace getVariable ['ExileLifeRepairInfo','']) call ExileLifeClient_object_weapon_repairGun; closeDialog 0;";
			show = false;
		};
		class DropdownQuantity: RscCombo
		{
			idc = 5002;
			x = "6.5 * (0.025) + (0)";
			y = "23.5 * (0.04) + (0)";
			w = "5.5 * (0.025)";
			h = "1 * (0.04)";
		};
		class ButtonCancel: RscButtonMenuCancel
		{
			x = "34 * (0.025) + (0)";
			y = "23.5 * (0.04) + (0)";
			w = "5.5 * (0.025)";
			h = "1 * (0.04)";
			colorText[] = {1,1,1,1};
			colorBackground[] = {0,0,0,0.8};
		};
		class Description: RscStructuredText
		{
			idc = 5003;
			x = "13 * (0.025) + (0)";
			y = "2 * (0.04) + (0)";
			w = "26.5 * (0.025)";
			h = "20 * (0.04)";
		};
	};
};
class RscExileItemDetailsDialog
{
	idd = 24004;
	onLoad = "uiNamespace setVariable ['RscExileItemDetailsDialog', _this select 0]";
	onUnload = "uiNamespace setVariable ['RscExileItemDetailsDialog', displayNull]";
	class controlsBackground
	{
		class BackgroundLeft: RscText
		{
			idc = 1000;
			x = 0 * (0.025) + (0);
			y = 1.5 * (0.04) + (0);
			w = 12 * (0.025);
			h = 21 * (0.04);
			colorBackground[] = {0.05,0.05,0.05,0.7};
		};
		class BackgroundBottom: RscText
		{
			idc = 1005;
			x = 0 * (0.025) + (0);
			y = 23 * (0.04) + (0);
			w = 40 * (0.025);
			h = 2 * (0.04);
			colorBackground[] = {0.05,0.05,0.05,0.7};
		};
		class BackgroundRight: RscText
		{
			idc = 1006;
			x = 12.5 * (0.025) + (0);
			y = 1.5 * (0.04) + (0);
			w = 27.5 * (0.025);
			h = 21 * (0.04);
			colorBackground[] = {0.05,0.05,0.05,0.7};
		};
		class TopLeftCaption: RscText
		{
			idc = 1001;
			text = "ITEM";
			x = 0 * (0.025) + (0);
			y = 0.25 * (0.04) + (0);
			w = 12 * (0.025);
			h = 1 * (0.04);
			colorBackground[] = {0.1,0.1,0.1,1};
		};
		class TopRightCaption: RscText
		{
			idc = 1002;
			text = ""; 
			x = 12.5 * (0.025) + (0);
			y = 0.25 * (0.04) + (0);
			w = 27.5 * (0.025);
			h = 1 * (0.04);
			colorBackground[] = {0.1,0.1,0.1,1};
		};
		class ButtonCloseCross: RscActiveText
		{
			idc = 100;
			style = 2096;
			color[] = {1,1,1,0.7};
			action = "closeDialog 0;";
			text = "\A3\Ui_f\data\GUI\Rsc\RscDisplayArcadeMap\icon_exit_cross_ca.paa"; 
			x = 39 * (0.025) + (0);
			y = 0.25 * (0.04) + (0);
			w = 1 * (0.025);
			h = 1 * (0.04);
			colorText[] = {1,1,1,0.7};
			colorActive[] = {1,1,1,1};
			tooltip = "Close"; 
		};
	};
	class controls
	{
		class TabButtonRepair: RscButton
		{
			idc = 5006;
			text = "REPAIR";
			x = 25 * (0.025) + (0);
			y = 0.25 * (0.04) + (0);
			w = 5.5 * (0.025);
			h = 1 * (0.04);
			action = "'REPAIR' call ExileClient_gui_itemDetails_event_onTabButtonClicked;";
		};
		class TabRepair: RscControlsGroup
		{
			idc = 5007;
			x = 13 * (0.025) + (0);
			y = 2 * (0.04) + (0);
			w = 26.5 * (0.025);
			h = 20 * (0.04);
			show = false;
			class controls
			{
				class RepairListBox: RscListBox
				{
					idc = 5008;
					x = 0;
					y = 0;
					w = 26.5 * (0.025);
					h = 20 * (0.04);
					sizeEx = "0.8 * 			(			(			((safezoneW / safezoneH) min 1.2) / 1.2) / 25)";
					sizeEx2 = "0.8 * 			(			(			((safezoneW / safezoneH) min 1.2) / 1.2) / 25)";
					rowHeight = "2 * 			(			(			((safezoneW / safezoneH) min 1.2) / 1.2) / 25)";
					canDrag = 0;
					colorText[] = {1,1,1,1};
					colorBackground[] = {0,0,0,0};
					itemBackground[] = {1,1,1,0.1};
					itemSpacing = 0.001;
					onLBDblClick = "closeDialog 0; _this call ExileLifeClient_gui_itemDetails_event_onGunRepairDoubleClick";
				};
			};
		};
		class ItemPicture: RscPictureKeepAspect
		{
			idc = 5000;
			text = "#(argb,8,8,3)color(1,1,1,1)";
			x = 0.5 * (0.025) + (0);
			y = 2 * (0.04) + (0);
			w = 11 * (0.025);
			h = 9 * (0.04);
		};
		class TabButtonDetails: RscButton
		{
			idc = 1603;
			text = "DETAILS";
			x = 13 * (0.025) + (0);
			y = 0.25 * (0.04) + (0);
			w = 5.5 * (0.025);
			h = 1 * (0.04);
			action = "'DETAILS' call ExileClient_gui_itemDetails_event_onTabButtonClicked;";
		};
		class TabButtonRecipes: RscButton
		{
			idc = 1604;
			text = "RECIPES";
			x = 19 * (0.025) + (0);
			y = 0.25 * (0.04) + (0);
			w = 5.5 * (0.025);
			h = 1 * (0.04);
			action = "'RECIPES' call ExileClient_gui_itemDetails_event_onTabButtonClicked;";
		};
		class ButtonConsume: RscButton
		{
			idc = 1300;
			action = "closeDialog 0; [ExileClientSelectedInventoryItem select 0] call ExileClient_object_item_consume;";
			text = "CONSUME";
			x = 0.5 * (0.025) + (0);
			y = 23.5 * (0.04) + (0);
			w = 5.5 * (0.025);
			h = 1 * (0.04);
		};
		class ButtonConsumeVictim: RscButton
		{
			idc = 1306;
			action = "closeDialog 0; ['forceConsume', [ExileClientInteractionObject, ExileClientSelectedInventoryItem select 0]] spawn ExileClient_action_execute;";
			text = "FORCE EAT";
			x = 0.5 * (0.025) + (0);
			y = 23.5 * (0.04) + (0);
			w = 5.5 * (0.025);
			h = 1 * (0.04);
		};
		class ButtonUse: RscButton
		{
			idc = 1301;
			action = "closeDialog 0; [ExileClientSelectedInventoryItem select 0] call ExileClient_object_item_use;";
			text = "SELECT USE";
			x = 6.5 * (0.025) + (0);
			y = 23.5 * (0.04) + (0);
			w = 5.5 * (0.025);
			h = 1 * (0.04);
		};
		class ButtonUseListBox: RscCombo
		{
			idc = 1308;
			x = 6.5 * (0.025) + (0);
			y = 23.5 * (0.04) + (0);
			w = 5.5 * (0.025);
			h = 1 * (0.04);
			text = "USE";
			onLBSelChanged  = "[_this, ExileClientSelectedInventoryItem select 0] call ExileLifeClient_gui_itemDetails_event_onUseListboxSelection;";
		};
		class ButtonUseVictim: RscButton
		{
			idc = 1307;
			action = "closeDialog 0; [ExileClientInteractionObject, ExileClientSelectedInventoryItem select 0] call ExileLifeClient_object_item_forceUse;";
			text = "FORCE USE";
			x = 6.5 * (0.025) + (0);
			y = 23.5 * (0.04) + (0);
			w = 5.5 * (0.025);
			h = 1 * (0.04);
		};
		class ButtonConstruct: RscButton
		{
			idc = 1303;
			action = "closeDialog 0; [ExileClientSelectedInventoryItem select 0] call ExileClient_object_item_construct;";
			text = "CONSTRUCT";
			x = 12.5 * (0.025) + (0);
			y = 23.5 * (0.04) + (0);
			w = 5.5 * (0.025);
			h = 1 * (0.04);
		};
		class ButtonEmpty: RscButton
		{
			idc = 1304;
			action = "closeDialog 0; [ExileClientSelectedInventoryItem select 0] call ExileLifeClient_object_item_empty;";
			text = "EMPTY";
			x = 18.5 * (0.025) + (0);
			y = 23.5 * (0.04) + (0);
			w = 5.5 * (0.025);
			h = 1 * (0.04);
		};
		class ButtonFillBeaker: RscButton
		{
			idc = 1305;
			action = "call ExileLifeClient_gui_itemDetails_event_onFillButtonClick;";
			text = "FILL";
			x = 18.5 * (0.025) + (0);
			y = 23.5 * (0.04) + (0);
			w = 5.5 * (0.025);
			h = 1 * (0.04);
		};
		class ButtonCancel: RscButtonMenuCancel
		{
			x = 34 * (0.025) + (0);
			y = 23.5 * (0.04) + (0);
			w = 5.5 * (0.025);
			h = 1 * (0.04);
			colorText[] = {1,1,1,1};
			colorBackground[] = {0,0,0,0.8};
		};
		class TabDetails: RscControlsGroup
		{
			idc = 5003;
			x = 13 * (0.025) + (0);
			y = 2 * (0.04) + (0);
			w = 26.5 * (0.025);
			h = 20 * (0.04);
			class controls
			{
				class TextItemName: RscStructuredText
				{
					idc = 5001;
					text = "Item Name";
					x = 0;
					y = 0;
					w = 26.5 * (0.025);
					h = 1.5 * (0.04);
				};
				class TextItemLevel: RscStructuredText
				{
					idc = 5002;
					text = "Item Level 1";
					x = 0;
					y = 1.5 * (0.04);
					w = 26.5 * (0.025);
					h = 1 * (0.04);
				};
				class ItemDescription: RscStructuredText
				{
					idc = 1100;
					x = 0;
					y = 3 * (0.04);
					w = 26.5 * (0.025);
					h = 17 * (0.04);
				};
			};
		};
		class TabRecipes: RscControlsGroup
		{
			idc = 5004;
			x = 13 * (0.025) + (0);
			y = 2 * (0.04) + (0);
			w = 26.5 * (0.025);
			h = 20 * (0.04);
			show = false;
			class controls
			{
				class CraftingListBox: RscListBox
				{
					idc = 1400;
					x = 0;
					y = 0;
					w = 26.5 * (0.025);
					h = 20 * (0.04);
					sizeEx = "0.8 * 			(			(			((safezoneW / safezoneH) min 1.2) / 1.2) / 25)";
					sizeEx2 = "0.8 * 			(			(			((safezoneW / safezoneH) min 1.2) / 1.2) / 25)";
					rowHeight = "2 * 			(			(			((safezoneW / safezoneH) min 1.2) / 1.2) / 25)";
					canDrag = 0;
					colorText[] = {1,1,1,1};
					colorBackground[] = {0,0,0,0};
					itemBackground[] = {1,1,1,0.1};
					itemSpacing = 0.001;
					onLBDblClick = "closeDialog 0; _this call ExileClient_gui_itemDetails_event_onCraftingRecipeDoubleClick";
				};
			};
		};
		class ButtonFill: RscControlsGroup
		{
			idc = 5005;
			x = 13 * (0.025) + (0);
			y = 2 * (0.04) + (0);
			w = 26.5 * (0.025);
			h = 20 * (0.04);
			show = false;
			class controls
			{
				class FillListBox: RscListBox
				{
					idc = 1401;
					x = 0;
					y = 0;
					w = 26.5 * (0.025);
					h = 20 * (0.04);
					sizeEx = "0.8 * 			(			(			((safezoneW / safezoneH) min 1.2) / 1.2) / 25)";
					sizeEx2 = "0.8 * 			(			(			((safezoneW / safezoneH) min 1.2) / 1.2) / 25)";
					rowHeight = "2 * 			(			(			((safezoneW / safezoneH) min 1.2) / 1.2) / 25)";
					canDrag = 0;
					colorText[] = {1,1,1,1};
					colorBackground[] = {0,0,0,0};
					itemBackground[] = {1,1,1,0.1};
					itemSpacing = 0.001;
					onLBDblClick = "closeDialog 0; _this call ExileLifeClient_gui_itemDetails_event_onFillItemDoubleClick";
					onLBListSelChanged = "ExileLifeSelection = _this select 1;";
				};
			};
		};		
		class Stat01Background: RscText
		{
			idc = 6000;
			x = 0.5 * (0.025) + (0);
			y = 12 * (0.04) + (0);
			w = 11 * (0.025);
			h = 1 * (0.04);
			colorBackground[] = {0,0,0,0.5};
		};
		class Stat01Progress: RscProgress
		{
			idc = 6001;
			x = 0.5 * (0.025) + (0);
			y = 12 * (0.04) + (0);
			w = 11 * (0.025);
			h = 1 * (0.04);
			colorText[] = {1,1,1,0.25};
			colorBackground[] = {1,1,1,0.25};
		};
		class Stat01Label: RscText
		{
			idc = 6002;
			text = "DAMAGE"; 
			x = 0.5 * (0.025) + (0);
			y = 12 * (0.04) + (0);
			w = 11 * (0.025);
			h = 1 * (0.04);
		};
		class Stat01Value: RscStructuredText
		{
			idc = 6003;
			text = "9 HP"; 
			style = 0x01;
			x = 6 * (0.025) + (0);
			y = 12 * (0.04) + (0);
			w = 5.5 * (0.025);
			h = 1 * (0.04);
		};
		class Stat02Background: RscText
		{
			idc = 6004;
			x = 0.5 * (0.025) + (0);
			y = 13.5 * (0.04) + (0);
			w = 11 * (0.025);
			h = 1 * (0.04);
			colorBackground[] = {0,0,0,0.5};
		};
		class Stat02Progress: RscProgress
		{
			idc = 6005;
			x = 0.5 * (0.025) + (0);
			y = 13.5 * (0.04) + (0);
			w = 11 * (0.025);
			h = 1 * (0.04);
			colorText[] = {1,1,1,0.25};
			colorBackground[] = {1,1,1,0.25};
		};
		class Stat02Label: RscText
		{
			idc = 6006;
			text = "DAMAGE"; 
			x = 0.5 * (0.025) + (0);
			y = 13.5 * (0.04) + (0);
			w = 11 * (0.025);
			h = 1 * (0.04);
		};
		class Stat02Value: RscStructuredText
		{
			idc = 6007;
			text = "9 HP"; 
			style = 0x01;
			x = 6 * (0.025) + (0);
			y = 13.5 * (0.04) + (0);
			w = 5.5 * (0.025);
			h = 1 * (0.04);
		};
		class Stat03Background: RscText
		{
			idc = 6008;
			x = 0.5 * (0.025) + (0);
			y = 15 * (0.04) + (0);
			w = 11 * (0.025);
			h = 1 * (0.04);
			colorBackground[] = {0,0,0,0.5};
		};
		class Stat03Progress: RscProgress
		{
			idc = 6009;
			x = 0.5 * (0.025) + (0);
			y = 15 * (0.04) + (0);
			w = 11 * (0.025);
			h = 1 * (0.04);
			colorText[] = {1,1,1,0.25};
			colorBackground[] = {1,1,1,0.25};
		};
		class Stat03Label: RscText
		{
			idc = 6010;
			text = "DAMAGE"; 
			x = 0.5 * (0.025) + (0);
			y = 15 * (0.04) + (0);
			w = 11 * (0.025);
			h = 1 * (0.04);
		};
		class Stat03Value: RscStructuredText
		{
			idc = 6011;
			text = "9 HP"; 
			style = 0x01;
			x = 6 * (0.025) + (0);
			y = 15 * (0.04) + (0);
			w = 5.5 * (0.025);
			h = 1 * (0.04);
		};
		class Stat04Background: RscText
		{
			idc = 6012;
			x = 0.5 * (0.025) + (0);
			y = 16.5 * (0.04) + (0);
			w = 11 * (0.025);
			h = 1 * (0.04);
			colorBackground[] = {0,0,0,0.5};
		};
		class Stat04Progress: RscProgress
		{
			idc = 6013;
			x = 0.5 * (0.025) + (0);
			y = 16.5 * (0.04) + (0);
			w = 11 * (0.025);
			h = 1 * (0.04);
			colorText[] = {1,1,1,0.25};
			colorBackground[] = {1,1,1,0.25};
		};
		class Stat04Label: RscText
		{
			idc = 6014;
			text = "DAMAGE"; 
			x = 0.5 * (0.025) + (0);
			y = 16.5 * (0.04) + (0);
			w = 11 * (0.025);
			h = 1 * (0.04);
		};
		class Stat04Value: RscStructuredText
		{
			idc = 6015;
			text = "9 HP"; 
			style = 0x01;
			x = 6 * (0.025) + (0);
			y = 16.5 * (0.04) + (0);
			w = 5.5 * (0.025);
			h = 1 * (0.04);
		};
		class Stat05Background: RscText
		{
			idc = 6016;
			x = 0.5 * (0.025) + (0);
			y = 18 * (0.04) + (0);
			w = 11 * (0.025);
			h = 1 * (0.04);
			colorBackground[] = {0,0,0,0.5};
		};
		class Stat05Progress: RscProgress
		{
			idc = 6017;
			x = 0.5 * (0.025) + (0);
			y = 18 * (0.04) + (0);
			w = 11 * (0.025);
			h = 1 * (0.04);
			colorText[] = {1,1,1,0.25};
			colorBackground[] = {1,1,1,0.25};
		};
		class Stat05Label: RscText
		{
			idc = 6018;
			text = "DAMAGE"; 
			x = 0.5 * (0.025) + (0);
			y = 18 * (0.04) + (0);
			w = 11 * (0.025);
			h = 1 * (0.04);
		};
		class Stat05Value: RscStructuredText
		{
			idc = 6019;
			text = "9 HP"; 
			style = 0x01;
			x = 6 * (0.025) + (0);
			y = 18 * (0.04) + (0);
			w = 5.5 * (0.025);
			h = 1 * (0.04);
		};
		class Stat06Background: RscText
		{
			idc = 6020;
			x = 0.5 * (0.025) + (0);
			y = 19.5 * (0.04) + (0);
			w = 11 * (0.025);
			h = 1 * (0.04);
			colorBackground[] = {0,0,0,0.5};
		};
		class Stat06Progress: RscProgress
		{
			idc = 6021;
			x = 0.5 * (0.025) + (0);
			y = 19.5 * (0.04) + (0);
			w = 11 * (0.025);
			h = 1 * (0.04);
			colorText[] = {1,1,1,0.25};
			colorBackground[] = {1,1,1,0.25};
		};
		class Stat06Label: RscText
		{
			idc = 6022;
			text = "DAMAGE"; 
			x = 0.5 * (0.025) + (0);
			y = 19.5 * (0.04) + (0);
			w = 11 * (0.025);
			h = 1 * (0.04);
		};
		class Stat06Value: RscStructuredText
		{
			idc = 6023;
			text = "9 HP"; 
			style = 0x01;
			x = 6 * (0.025) + (0);
			y = 19.5 * (0.04) + (0);
			w = 5.5 * (0.025);
			h = 1 * (0.04);
		};
		class Stat07Background: RscText
		{
			idc = 6024;
			x = 0.5 * (0.025) + (0);
			y = 21 * (0.04) + (0);
			w = 11 * (0.025);
			h = 1 * (0.04);
			colorBackground[] = {0,0,0,0.5};
		};
		class Stat07Progress: RscProgress
		{
			idc = 6025;
			x = 0.5 * (0.025) + (0);
			y = 21 * (0.04) + (0);
			w = 11 * (0.025);
			h = 1 * (0.04);
			colorText[] = {1,1,1,0.25};
			colorBackground[] = {1,1,1,0.25};
		};
		class Stat07Label: RscText
		{
			idc = 6026;
			text = "DAMAGE"; 
			x = 0.5 * (0.025) + (0);
			y = 21 * (0.04) + (0);
			w = 11 * (0.025);
			h = 1 * (0.04);
		};
		class Stat07Value: RscStructuredText
		{
			idc = 6027;
			text = "9 HP"; 
			style = 0x01;
			x = 6 * (0.025) + (0);
			y = 21 * (0.04) + (0);
			w = 5.5 * (0.025);
			h = 1 * (0.04);
		};
	};
};
class RscExileLifeBlackMarket
{
    idd = 18100;
    onLoad = "uiNamespace setVariable ['RscExileLifeBlackMarket', _this select 0]; call ExileLifeClient_gui_blackmarket_onLoad;";
	onUnload = "uiNamespace setVariable ['RscExileLifeBlackMarket', displayNull];";
    movingenable=false;
    class controlsBackground
    {
		class Background: RscText
		{
			idc = 18101;
			x = -28.5 * (0.025) + (0);
			y = -10.5 * (0.04) + (0);
			w = 97 * (0.025);
			h = 46.5 * (0.04);
			colorBackground[] = {0.102,0.137,0.176,1};
		};
		class ItemInformationBackground: RscText
		{
			idc = 18102;
			x = 49.5 * (0.025) + (0);
			y = -0.5 * (0.04) + (0);
			w = 16 * (0.025);
			h = 25.5 * (0.04);
			colorBackground[] = {0.05,0.05,0.05,0.7};
		};
		class InventoryBackground: RscText
		{
			idc = 18103;
			x = -25.5 * (0.025) + (0);
			y = -0.5 * (0.04) + (0);
			w = 16 * (0.025);
			h = 25.5 * (0.04);
			colorBackground[] = {0.05,0.05,0.05,0.7};
		};
	};
	class controls
	{
		class InventoryTitle: RscText
		{
			idc = 18104;
			text = "MY INVENTORY"; 
			x = -25.5 * (0.025) + (0);
			y = -1.7 * (0.04) + (0);
			w = 16 * (0.025);
			h = 1 * (0.04);
			colorBackground[] = {0.1,0.1,0.1,1};
		};
		class LocationDropdown: RscCombo
		{
			idc = 18105;
			x = -25 * (0.025) + (0);
			y = 0 * (0.04) + (0);
			w = 15 * (0.025);
			h = 1 * (0.04);
		};
		class LocationListBox: RscExileItemListBox
		{
			idc = 18106;
			x = -25 * (0.025) + (0);
			y = 1.5 * (0.04) + (0);
			w = 15 * (0.025);
			h = 21.5 * (0.04);
		};
		class PlayerStats: RscStructuredText
		{
			idc = 18107;
			text = "650000"; 
			x = -16.7 * (0.025) + (0);
			y = -1.7 * (0.04) + (0);
			w = 7 * (0.025);
			h = 1 * (0.04);
			colorBackground[] = {-1,-1,-1,0};
		};
		class SellButton: RscButton
		{
			idc = 18108;
			text = "SELL"; 
			x = -25.5 * (0.025) + (0);
			y = 26 * (0.04) + (0);
			w = 16 * (0.025);
			h = 2.5 * (0.04);
			onButtonClick = "call ExilelifeClient_gui_blackmarket_event_onSellButtonClick;";
		};
		class ItemInformationTitle: RscText
		{
			idc = 18109;
			text = "ITEM INFORMATION"; 
			x = 49.5 * (0.025) + (0);
			y = -1.7 * (0.04) + (0);
			w = 16 * (0.025);
			h = 1 * (0.04);
			colorBackground[] = {0.1,0.1,0.1,1};
		};
		class ItemPicture: RscPictureKeepAspect
		{
			idc = 18110;
			text = "#(argb,8,8,3)color(1,1,1,1)";
			x = 50 * (0.025) + (0);
			y = 1.5 * (0.04) + (0);
			w = 15 * (0.025);
			h = 12 * (0.04);
		};
		class Stat01Background: RscText
		{
			idc = 18111;
			x = 50 * (0.025) + (0);
			y = 14.5 * (0.04) + (0);
			w = 15 * (0.025);
			h = 1 * (0.04);
			colorBackground[] = {0,0,0,0.5};
		};
		class Stat02Background: RscText
		{
			idc = 18115;
			x = 50 * (0.025) + (0);
			y = 16 * (0.04) + (0);
			w = 15 * (0.025);
			h = 1 * (0.04);
			colorBackground[] = {0,0,0,0.5};
		};
		class Stat03Background: RscText
		{
			idc = 18119;
			x = 50 * (0.025) + (0);
			y = 17.5 * (0.04) + (0);
			w = 15 * (0.025);
			h = 1 * (0.04);
			colorBackground[] = {0,0,0,0.5};
		};
		class Stat04Background: RscText
		{
			idc = 18123;
			x = 50 * (0.025) + (0);
			y = 19 * (0.04) + (0);
			w = 15 * (0.025);
			h = 1 * (0.04);
			colorBackground[] = {0,0,0,0.5};
		};
		class Stat05Background: RscText
		{
			idc = 18127;
			x = 50 * (0.025) + (0);
			y = 20.5 * (0.04) + (0);
			w = 15 * (0.025);
			h = 1 * (0.04);
			colorBackground[] = {0,0,0,0.5};
		};
		class Stat06Background: RscText
		{
			idc = 18131;
			x = 50 * (0.025) + (0);
			y = 22 * (0.04) + (0);
			w = 15 * (0.025);
			h = 1 * (0.04);
			colorBackground[] = {0,0,0,0.5};
		};
		class Stat01Progress: RscProgress
		{
			idc = 18112;
			x = 50 * (0.025) + (0);
			y = 14.5 * (0.04) + (0);
			w = 15 * (0.025);
			h = 1 * (0.04);
		};
		class Stat02Progress: RscProgress
		{
			idc = 18116;
			x = 50 * (0.025) + (0);
			y = 16 * (0.04) + (0);
			w = 15 * (0.025);
			h = 1 * (0.04);
		};
		class Stat03Progress: RscProgress
		{
			idc = 18120;
			x = 50 * (0.025) + (0);
			y = 17.5 * (0.04) + (0);
			w = 15 * (0.025);
			h = 1 * (0.04);
		};
		class Stat04Progress: RscProgress
		{
			idc = 18124;
			x = 50 * (0.025) + (0);
			y = 19 * (0.04) + (0);
			w = 15 * (0.025);
			h = 1 * (0.04);
		};
		class Stat05Progress: RscProgress
		{
			idc = 18128;
			x = 50 * (0.025) + (0);
			y = 20.5 * (0.04) + (0);
			w = 15 * (0.025);
			h = 1 * (0.04);
		};
		class Stat06Progress: RscProgress
		{
			idc = 18132;
			x = 50 * (0.025) + (0);
			y = 22 * (0.04) + (0);
			w = 15 * (0.025);
			h = 1 * (0.04);
		};
		class Stat01Label: RscText
		{
			idc = 18113;
			text = "ARMOR"; 
			x = 50 * (0.025) + (0);
			y = 14.5 * (0.04) + (0);
			w = 7.5 * (0.025);
			h = 1 * (0.04);
		};
		class Stat02Label: RscText
		{
			idc = 18117;
			text = "ARMOR"; 
			x = 50 * (0.025) + (0);
			y = 16 * (0.04) + (0);
			w = 7.5 * (0.025);
			h = 1 * (0.04);
		};
		class Stat03Label: RscText
		{
			idc = 18121;
			text = "ARMOR"; 
			x = 50 * (0.025) + (0);
			y = 17.5 * (0.04) + (0);
			w = 7.5 * (0.025);
			h = 1 * (0.04);
		};
		class Stat04Label: RscText
		{
			idc = 18125;
			text = "ARMOR"; 
			x = 50 * (0.025) + (0);
			y = 19 * (0.04) + (0);
			w = 7.5 * (0.025);
			h = 1 * (0.04);
		};
		class Stat05Label: RscText
		{
			idc = 18129;
			text = "ARMOR"; 
			x = 50 * (0.025) + (0);
			y = 20.5 * (0.04) + (0);
			w = 7.5 * (0.025);
			h = 1 * (0.04);
		};
		class Stat06Label: RscText
		{
			idc = 18133;
			text = "ARMOR"; 
			x = 50 * (0.025) + (0);
			y = 22 * (0.04) + (0);
			w = 7.5 * (0.025);
			h = 1 * (0.04);
		};
		class Stat01Value: RscStructuredText
		{
			idc = 18114;
			text = "ARMOR"; 
			x = 58.5 * (0.025) + (0);
			y = 14.5 * (0.04) + (0);
			w = 6.5 * (0.025);
			h = 1 * (0.04);
		};
		class Stat02Value: RscStructuredText
		{
			idc = 18118;
			text = "ARMOR"; 
			x = 58.5 * (0.025) + (0);
			y = 16 * (0.04) + (0);
			w = 6.5 * (0.025);
			h = 1 * (0.04);
		};
		class Stat03Value: RscStructuredText
		{
			idc = 18122;
			text = "ARMOR"; 
			x = 58.5 * (0.025) + (0);
			y = 17.5 * (0.04) + (0);
			w = 6.5 * (0.025);
			h = 1 * (0.04);
		};
		class Stat04Value: RscStructuredText
		{
			idc = 18126;
			text = "ARMOR"; 
			x = 58.5 * (0.025) + (0);
			y = 19 * (0.04) + (0);
			w = 6.5 * (0.025);
			h = 1 * (0.04);
		};
		class Stat05Value: RscStructuredText
		{
			idc = 18130;
			text = "ARMOR"; 
			x = 58.5 * (0.025) + (0);
			y = 20.5 * (0.04) + (0);
			w = 6.5 * (0.025);
			h = 1 * (0.04);
		};
		class Stat06Value: RscStructuredText
		{
			idc = 18134;
			text = "ARMOR"; 
			x = 58.5 * (0.025) + (0);
			y = 22 * (0.04) + (0);
			w = 6.5 * (0.025);
			h = 1 * (0.04);
		};
		class PurchaseButton: RscButton
		{
			idc = 18135;
			text = "PURCHASE"; 
			x = 49.5 * (0.025) + (0);
			y = 26 * (0.04) + (0);
			w = 16 * (0.025);
			h = 2.5 * (0.04);
			onButtonClick = "call ExileLifeClient_gui_blackmarket_event_onPurchaseButtonClick;";
		};
		class WeightBackground: RscText
		{
			idc = 18136;
			x = -25 * (0.025) + (0);
			y = 23.5 * (0.04) + (0);
			w = 15 * (0.025);
			h = 1 * (0.04);
			colorBackground[] = {0,0,0,0.5};
		};
		class WeightProgress: RscProgress
		{
			idc = 18137;
			x = -25 * (0.025) + (0);
			y = 23.5 * (0.04) + (0);
			w = 15 * (0.025);
			h = 1 * (0.04);
		};
		class WeightLabel: RscText
		{
			idc = 18138;
			text = "WEIGHT"; 
			x = -25 * (0.025) + (0);
			y = 23.5 * (0.04) + (0);
			w = 7.5 * (0.025);
			h = 1 * (0.04);
		};
		class WeightValue: RscStructuredText
		{
			idc = 18139;
			x = -16.5 * (0.025) + (0);
			y = 23.5 * (0.04) + (0);
			w = 6.5 * (0.025);
			h = 1 * (0.04);
		};
		class SortingDropdown: RscCombo
		{
			idc = 18140;
			x = 50 * (0.025) + (0);
			y = 0 * (0.04) + (0);
			w = 15 * (0.025);
			h = 1 * (0.04);
		};
	};
};
class RscExileLifeBossDialog
{
    idd = 22100;
    onLoad = "uiNamespace setVariable ['RscExileLifeBossDialog', _this select 0];";
	onUnload = "uiNamespace setVariable ['RscExileLifeBossDialog', displayNull];";
    movingenable=false;
    class controlsBackground
    {
    	class Background_Main: RscText
    	{
    		idc = 22101;
    		x = -29 * (0.025) + (0);
    		y = -11 * (0.04) + (0);
    		w = 91 * (0.025);
    		h = 48 * (0.04);
    		colorBackground[] = {0.075,0.09,0.106,1};
    	};
    	class HeaderBackground: RscText
    	{
    		idc = 22102;
    		x = -12 * (0.025) + (0);
    		y = -10.5 * (0.04) + (0);
    		w = 80.5 * (0.025);
    		h = 5 * (0.04);
    		colorBackground[] = {0.173,0.208,0.243,1};
    	};
    	class RightBarBackground: RscText
    	{
    		idc = 22103;
    		x = 52 * (0.025) + (0);
    		y = -5.5 * (0.04) + (0);
    		w = 16.5 * (0.025);
    		h = 27 * (0.04);
    		colorBackground[] = {0.388,0.047,0.098,1};
    	};
    	class LeftBarBackground: RscText
    	{
    		idc = 22104;
    		x = -28.5 * (0.025) + (0);
    		y = -10.5 * (0.04) + (0);
    		w = 16.5 * (0.025);
    		h = 46 * (0.04);
    		colorBackground[] = {0.388,0.047,0.098,1};
    	};
	};
	class controls
	{
		class GangLogo: RscPicture
		{
			idc = 22105;
			text = "#(argb,8,8,3)color(1,1,1,1)";
			x = 52 * (0.025) + (0);
			y = 21.5 * (0.04) + (0);
			w = 16.5 * (0.025);
			h = 14 * (0.04);
		};
		class WeatherIcon: RscPicture
		{
			idc = 22106;
			text = "#(argb,8,8,3)color(1,1,1,1)";
			x = 52.5 * (0.025) + (0);
			y = -9.7 * (0.04) + (0);
			w = 5 * (0.025);
			h = 3.5 * (0.04);
		};
		class Clock: RscStructuredText
		{
			idc = 22107;
			x = 58.2 * (0.025) + (0);
			y = -9.5 * (0.04) + (0);
			w = 9 * (0.025);
			h = 2 * (0.04);
			colorBackground[] = {-1,-1,-1,1};
		};
		class Date: RscStructuredText
		{
			idc = 22108;
			x = 60.2 * (0.025) + (0);
			y = -7.3 * (0.04) + (0);
			w = 7 * (0.025);
			h = 1 * (0.04);
			colorBackground[] = {-1,-1,-1,1};
		};
		class CommandsTitle: RscStructuredText
		{
			idc = 22109;
			text = "Commands"; 
			x = -26.5 * (0.025) + (0);
			y = -9.8 * (0.04) + (0);
			w = 13 * (0.025);
			h = 2 * (0.04);
			colorBackground[] = {-1,-1,-1,0};
		};
		class CommandListbox: RscListbox
		{
			idc = 22110;
			x = -28 * (0.025) + (0);
			y = -7.5 * (0.04) + (0);
			w = 15.5 * (0.025);
			h = 42 * (0.04);
			colorBackground[] = {-1,-1,-1,0};
		};
		class MembersTitle: RscStructuredText
		{
			idc = 22111;
			text = "Members"; 
			x = 54 * (0.025) + (0);
			y = -4.5 * (0.04) + (0);
			w = 13 * (0.025);
			h = 2 * (0.04);
			colorBackground[] = {-1,-1,-1,0};
		};
		class MembersListBox: RscListbox
		{
			idc = 22112;
			x = 52.5 * (0.025) + (0);
			y = -2 * (0.04) + (0);
			w = 15.5 * (0.025);
			h = 23 * (0.04);
			colorBackground[] = {-1,-1,-1,0};
		};
	};
};
class RscExileLifeCharacterInfo
{
    idd = 23500;
    onLoad = "uiNamespace setVariable ['RscExileLifeCharacterInfo', _this select 0];";
	onUnload = "uiNamespace setVariable ['RscExileLifeCharacterInfo', displayNull];";
    movingenable=false;
	class Controls
    {
		class Title: RscText
		{
			idc = 23501;
			text = "INMATE RECORD"; 
			x = 0 * (0.025) + (0);
			y = -1.2 * (0.04) + (0);
			w = 40 * (0.025);
			h = 1 * (0.04);
			colorBackground[] = {0.1,0.1,0.1,1};
		};
		class Background: RscText
		{
			idc = 23502;
			x = 0 * (0.025) + (0);
			y = 0 * (0.04) + (0);
			w = 40 * (0.025);
			h = 25 * (0.04);
			colorBackground[] = {0.05,0.05,0.05,0.7};
		};
		class RightLogo: RscPictureKeepAspect
		{
			idc = 23503;
			text = "\exilelife_assets\texture\ui\GUI\guard_white.paa";
			x = 32 * (0.025) + (0);
			y = 0.5 * (0.04) + (0);
			w = 7.5 * (0.025);
			h = 4.5 * (0.04);
		};
		class CenterText: RscStructuredText
		{
			idc = 23504;
			text = "<br/><t align='center' shadow='0' valign='middle' size='2'>OFFICAL TAP DATABASE</t><br/><t shadow='0' valign='middle' align='center'>For internal use only</t>"; 
			x = 8.5 * (0.025) + (0);
			y = 0.5 * (0.04) + (0);
			w = 23 * (0.025);
			h = 4.5 * (0.04);
			colorBackground[] = {-1,-1,-1,0};
		};
		class LeftLogo: RscPictureKeepAspect
		{
			idc = 23505;
			text = "\exilelife_assets\texture\ui\GUI\guard_white.paa";
			x = 0.5 * (0.025) + (0);
			y = 0.5 * (0.04) + (0);
			w = 7.5 * (0.025);
			h = 4.5 * (0.04);
		};
		class PrisonerText: RscText
		{
			idc = 23506;
			text = "EX000001"; 
			x = 35.8 * (0.025) + (0);
			y = -1.2 * (0.04) + (0);
			w = 4 * (0.025);
			h = 1 * (0.04);
		};
		class FirstNameTitle: RscText
		{
			idc = 23507;
			text = "First name:"; 
			x = 0.5 * (0.025) + (0);
			y = 5.5 * (0.04) + (0);
			w = 6 * (0.025);
			h = 1 * (0.04);
		};
		class FirstNameEdit: RscEdit
		{
			idc = 23508;
			x = 0.8 * (0.025) + (0);
			y = 6.7 * (0.04) + (0);
			w = 14 * (0.025);
			h = 1 * (0.04);
		};
		class LastNameTitle: RscText
		{
			idc = 23509;
			text = "Last name:"; 
			x = 15.5 * (0.025) + (0);
			y = 5.5 * (0.04) + (0);
			w = 5 * (0.025);
			h = 1 * (0.04);
		};
		class LastNameEdit: RscEdit
		{
			idc = 23510;
			x = 15.9 * (0.025) + (0);
			y = 6.7 * (0.04) + (0);
			w = 15 * (0.025);
			h = 1 * (0.04);
		};
		class AgeTitle: RscText
		{
			idc = 23511;
			text = "Age:"; 
			x = 0.5 * (0.025) + (0);
			y = 8 * (0.04) + (0);
			w = 2 * (0.025);
			h = 1 * (0.04);
		};
		class AgeDropdown: RscCombo
		{
			idc = 23512;
			x = 0.8 * (0.025) + (0);
			y = 9.1 * (0.04) + (0);
			w = 4.5 * (0.025);
			h = 1 * (0.04);
		};
		class ReasonTitle: RscText
		{
			idc = 23513;
			text = "Reason for Exile:"; 
			x = 0.5 * (0.025) + (0);
			y = 10.5 * (0.04) + (0);
			w = 6 * (0.025);
			h = 1 * (0.04);
		};
		class ReasonDropdown: RscCombo
		{
			idc = 23514;
			x = 0.8 * (0.025) + (0);
			y = 11.6 * (0.04) + (0);
			w = 38 * (0.025);
			h = 1 * (0.04);
		};
		class ReasonEdit: RscEditMulti 
		{
			idc = 23515;
			x = 0.8 * (0.025) + (0);
			y = 11.7 * (0.04) + (0);
			w = 38 * (0.025);
			h = 11.5 * (0.04);
			show = false;
		};
		class ConfirmButton: RscButtonMenu
		{
			idc = 23516;
			text = "Confirm"; 
			onButtonClick = "call ExileLifeClient_gui_characterInfo_event_onConfirmButtonClick";
			x = 33 * (0.025) + (0);
			y = 23.5 * (0.04) + (0);
			w = 6 * (0.025);
			h = 1 * (0.04);
		};
	};
};
class RscExileLifeChemLabMixing
{
    idd = 24037;
    onLoad = "uiNamespace setVariable ['RscExileLifeChemLabMixing', _this select 0];";
	onUnload = "ExileLifeClientChemLabPlayerCam cameraEffect ['terminate','back']; camDestroy ExileLifeClientChemLabPlayerCam; uiNamespace setVariable ['RscExileLifeChemLabMixing', displayNull];";
    movingenable=false;
    class controlsBackground{};
	class controls
	{
		class CloseCrossText: RscButtonMenu
		{
			idc = 35001;
			x = 51.5 * (0.025) + (0);
			y = 25 * (0.04) + (0);
			w = 3.5 * (0.025);
			h = 2.5 * (0.04);
			colorBackground[] = {-1,-1,-1,0};
			text = "CLOSE";
			action = "closeDialog 0; ExileLifeClientChemLabPlayerCam cameraEffect ['terminate','back']; camDestroy ExileLifeClientChemLabPlayerCam;";			
		};
		class HydrochloricAcidButton: RscButtonMenu
		{
			idc = 35002;
			text = ""; 
			colorBackground[] = {0,0,0,0};					
			x = 8 * (0.025) + (0);
			y = -2.5 * (0.04) + (0);
			w = 6.5 * (0.025);
			h = 7 * (0.04);
			animTextureNormal = "";
			animTextureDisabled = "";
			animTextureOver = "";
			animTextureFocused = "";
			animTexturePressed = "";
			animTextureDefault = "";			
		};
		class PhosphoricAcidButton: RscButtonMenu
		{
			idc = 35003;
			text = ""; 
			colorBackground[] = {0,0,0,0};		
			x = 17 * (0.025) + (0);
			y = -2.5 * (0.04) + (0);
			w = 6 * (0.025);
			h = 7 * (0.04);
			animTextureNormal = "";
			animTextureDisabled = "";
			animTextureOver = "";
			animTextureFocused = "";
			animTexturePressed = "";
			animTextureDefault = "";			
		};
		class AcetoneButton: RscButtonMenu
		{
			idc = 35004;
			text = ""; 
			colorBackground[] = {0,0,0,0};		
			x =25 * (0.025) + (0);
			y = -2.5 * (0.04) + (0);
			w = 6.5 * (0.025);
			h = 7 * (0.04);
			animTextureNormal = "";
			animTextureDisabled = "";
			animTextureOver = "";
			animTextureFocused = "";
			animTexturePressed = "";
			animTextureDefault = "";			
		};
		class HydrochloricAcidAdd: RscPictureKeepAspect
		{
			idc = 35005;
			text = "\exilelife_assets\texture\ui\hud\hud_icon_increase_ca.paa";
			shadow = 0;
			show = true;
			colorText[] = {1, 1, 1, 1};
			x = 9.76 * (0.025) + (0);			
			y = 0.15 * (0.04) + (0);
			w = 2.5 * (0.025);
			h = 2 * (0.04);
		};
		class PhosphoricAcidAdd: RscPictureKeepAspect
		{
			idc = 35006;
			text = "\exilelife_assets\texture\ui\hud\hud_icon_increase_ca.paa";
			shadow = 0;
			show = true;
			colorText[] = {1, 1, 1, 1};
			x = 18.71 * (0.025) + (0);
			y = 0.19 * (0.04) + (0);
			w = 2.5 * (0.025);
			h = 2 * (0.04);
		};
		class AcetoneAdd: RscPictureKeepAspect
		{
			idc = 35007;
			text = "\exilelife_assets\texture\ui\hud\hud_icon_increase_ca.paa";
			shadow = 0;
			show = true;
			colorText[] = {1, 1, 1, 1};
			x = 26.98 * (0.025) + (0);
			y = 0.23 * (0.04) + (0);
			w = 2.5 * (0.025);
			h = 2 * (0.04);
		};		
	};
};
class RscExileLifeClaimHouseDialog
{
	idd = 20016;
	onLoad = "uiNamespace setVariable ['RscExileLifeClaimHouseDialog', _this select 0]";
	onUnload = "call ExileClient_gui_setupTerritoryDialog_event_onUnload; uiNamespace setVariable ['RscExileLifeClaimHouseDialog', displayNull]";
	class controlsBackground
	{
		class DialogBackground: RscText
		{
			idc = -1;
			x = "10 * (0.025) + (0)";
			y = "5 * (0.04) + (0)";
			w = "20 * (0.025)";
			h = "16 * (0.04)";
			colorBackground[] = {0.05,0.05,0.05,0.7};
		};
		class DialogCation: RscText
		{
			idc = -1;
			text = "Claim Squatters Rights";
			x = "10 * (0.025) + (0)";
			y = "3.9 * (0.04) + (0)";
			w = "20 * (0.025)";
			h = "1 * (0.04)";
			colorBackground[] = {0.1,0.1,0.1,1};
		};
		class NameLabel: RscText
		{
			idc = -1;
			text = "Name:";
			x = "10.5 * (0.025) + (0)";
			y = "5.5 * (0.04) + (0)";
			w = "19 * (0.025)";
			h = "1 * (0.04)";
		};
	};
	class controls
	{
		class CancelButton: RscButtonMenuCancel
		{
			idc = -1;
			action = "closeDialog 0";
			x = "23.5 * (0.025) + (0)";
			y = "9.5 * (0.04) + (0)";
			w = "6 * (0.025)";
			h = "1 * (0.04)";
			colorText[] = {1,1,1,1};
			colorBackground[] = {0,0,0,0.8};
		};
		class PlaceButton: RscButtonMenuOK
		{
			idc = 4002;
			onMouseButtonClick = "_this call ExileLifeClient_gui_claimHouseDialog_event_onPlaceButtonClick";
			text = "Setup";
			x = "10.5 * (0.025) + (0)";
			y = "9.5 * (0.04) + (0)";
			w = "6 * (0.025)";
			h = "1 * (0.04)";
			colorText[] = {1,1,1,1};
			colorBackground[] = {0,0,0,0.8};
		};
		class NameInput: RscEdit
		{
			idc = 4000;
			text = "";
			x = "10.5 * (0.025) + (0)";
			y = "6.5 * (0.04) + (0)";
			w = "19 * (0.025)";
			h = "2 * (0.04)";
			colorBackground[] = {0,0,0,1};
		};
	};
};
class RscExileLifeHackKeypad
{
	idd = 24038;
	onLoad = "uiNamespace setVariable ['RscExileLifeHackKeypad', _this select 0];";
	onUnload = "uiNamespace setVariable ['RscExileLifeHackKeypad', displayNull];  ExileLifeHackCheck = false;";
	class controlsBackground
	{
		class bacground: RscPicture
		{
			text = "\exilelife_assets\texture\ui\codeLock\codeHack_background.paa";
			x = 0.322396 * safezoneW + safezoneX;
			y = 0.225 * safezoneH + safezoneY;
			w = 0.355208 * safezoneW;
			h = 0.55 * safezoneH;
		};
	};
	class controls
	{
		class buttonFake: RscButton
		{
			idc = 4013;
			x = 1 * safezoneW + safezoneX;
			y = 1 * safezoneH + safezoneY;
			w = 0 * safezoneW;
			h = 0 * safezoneH;
		};
		class button0: RscButton
		{
			idc = 4003;
			x = 0.399167 * safezoneW + safezoneX;
			y = 0.6694 * safezoneH + safezoneY;
			w = 0.0378126 * safezoneW;
			h = 0.0572 * safezoneH;
			colorBackground[] = {0.0980392,0.0980392,0.0980392,0};
			colorBackgroundActive[] = {0.0980392,0.0980392,0.0980392,0.6};
		};
		class button1: RscButton
		{
			idc = 4004;
			x = 0.351042 * safezoneW + safezoneX;
			y = 0.4494 * safezoneH + safezoneY;
			w = 0.0378126 * safezoneW;
			h = 0.0572 * safezoneH;
			colorBackground[] = {0.0980392,0.0980392,0.0980392,0};
			colorBackgroundActive[] = {0.0980392,0.0980392,0.0980392,0.6};
		};
		class button2: RscButton
		{
			idc = 4005;
			x = 0.399167 * safezoneW + safezoneX;
			y = 0.4494 * safezoneH + safezoneY;
			w = 0.0378126 * safezoneW;
			h = 0.0572 * safezoneH;
			colorBackground[] = {0.0980392,0.0980392,0.0980392,0};
			colorBackgroundActive[] = {0.0980392,0.0980392,0.0980392,0.6};
		};
		class button3: RscButton
		{
			idc = 4006;
			x = 0.447291 * safezoneW + safezoneX;
			y = 0.4494 * safezoneH + safezoneY;
			w = 0.0378126 * safezoneW;
			h = 0.0572 * safezoneH;
			colorBackground[] = {0.0980392,0.0980392,0.0980392,0};
			colorBackgroundActive[] = {0.0980392,0.0980392,0.0980392,0.6};
		};
		class button4: RscButton
		{
			idc = 4007;
			x = 0.351042 * safezoneW + safezoneX;
			y = 0.5242 * safezoneH + safezoneY;
			w = 0.0378126 * safezoneW;
			h = 0.0572 * safezoneH;
			colorBackground[] = {0.0980392,0.0980392,0.0980392,0};
			colorBackgroundActive[] = {0.0980392,0.0980392,0.0980392,0.6};
		};
		class button5: RscButton
		{
			idc = 4008;
			x = 0.399167 * safezoneW + safezoneX;
			y = 0.5242 * safezoneH + safezoneY;
			w = 0.0378126 * safezoneW;
			h = 0.0572 * safezoneH;
			colorBackground[] = {0.0980392,0.0980392,0.0980392,0};
			colorBackgroundActive[] = {0.0980392,0.0980392,0.0980392,0.6};
		};
		class button6: RscButton
		{
			idc = 4009;
			x = 0.446145 * safezoneW + safezoneX;
			y = 0.5242 * safezoneH + safezoneY;
			w = 0.0378126 * safezoneW;
			h = 0.0572 * safezoneH;
			colorBackground[] = {0.0980392,0.0980392,0.0980392,0};
			colorBackgroundActive[] = {0.0980392,0.0980392,0.0980392,0.6};
		};
		class button7: RscButton
		{
			idc = 4010;
			x = 0.351042 * safezoneW + safezoneX;
			y = 0.5968 * safezoneH + safezoneY;
			w = 0.0378126 * safezoneW;
			h = 0.0572 * safezoneH;
			colorBackground[] = {0.0980392,0.0980392,0.0980392,0};
			colorBackgroundActive[] = {0.0980392,0.0980392,0.0980392,0.6};
		};
		class button8: RscButton
		{
			idc = 4011;
			x = 0.399167 * safezoneW + safezoneX;
			y = 0.5968 * safezoneH + safezoneY;
			w = 0.0378126 * safezoneW;
			h = 0.0572 * safezoneH;
			colorBackground[] = {0.0980392,0.0980392,0.0980392,0};
			colorBackgroundActive[] = {0.0980392,0.0980392,0.0980392,0.6};
		};
		class button9: RscButton
		{
			idc = 4012;
			x = 0.446145 * safezoneW + safezoneX;
			y = 0.5968 * safezoneH + safezoneY;
			w = 0.0378126 * safezoneW;
			h = 0.0572 * safezoneH;
			colorBackground[] = {0.0980392,0.0980392,0.0980392,0};
			colorBackgroundActive[] = {0.0980392,0.0980392,0.0980392,0.6};
		};
		class buttonOK: RscButton
		{
			idc = 4000;
			x = 0.351042 * safezoneW + safezoneX;
			y = 0.6694 * safezoneH + safezoneY;
			w = 0.0378126 * safezoneW;
			h = 0.0572 * safezoneH;
			colorBackground[] = {0.0980392,0.0980392,0.0980392,0};
			colorBackgroundActive[] = {0.0980392,0.0980392,0.0980392,0.6};
			colorDisabled[] = {1,1,1,0.4};
		};
		class buttonCancel: RscButton
		{
			idc = 4002;
			x = 0.446145 * safezoneW + safezoneX;
			y = 0.6694 * safezoneH + safezoneY;
			w = 0.0378126 * safezoneW;
			h = 0.0572 * safezoneH;
			colorBackground[] = {0.0980392,0.0980392,0.0980392,0};
			colorBackgroundActive[] = {0.0980392,0.0980392,0.0980392,0.6};
		};
		class editBox: RscText
		{
			idc = 4001;
			text = "";
			colorText[] = {0.0705882,0.133333,0.0941176,0.8};
			font = "PressStart2P";
			style = 0x02;
			x = 0 * (0.025) + (0);
			y = 1.5 * (0.04) + (0);
			w = 40 * (0.025);
			h = 6 * (0.04);
			sizeEx = 2 * (0.04);
			shadow = 0;
		};
	};
};
class RscExileLifeInformation
{
    idd = 16100;
    onLoad = "uiNamespace setVariable ['RscExileLifeInformation', _this select 0];";
	onUnload = "uiNamespace setVariable ['RscExileLifeInformation',displayNull];";
    movingenable=false;
	class Controls
    {
		class Title: RscText
		{
			idc = 16101;
			text = "WELCOME TO EXILE LIFE"; 
			x = 0 * (0.025) + (0);
			y = -1.2 * (0.04) + (0);
			w = 40 * (0.025);
			h = 1 * (0.04);
			colorBackground[] = {0.1,0.1,0.1,1};
		};
		class Background: RscText
		{
			idc = 16102;
			x = 0 * (0.025) + (0);
			y = 0 * (0.04) + (0);
			w = 40 * (0.025);
			h = 25 * (0.04);
			colorBackground[] = {0.05,0.05,0.05,0.7};
		};
		class TextBackground: RscText
		{
			idc = 16103;
			x = 9 * (0.025) + (0);
			y = 0.5 * (0.04) + (0);
			w = 30.5 * (0.025);
			h = 24 * (0.04);
			colorBackground[] = {0.05,0.05,0.05,0.5};
		};
		class ControlsGroup: RscControlsGroup
		{
			idc = 16104;
			x = 9 * (0.025) + (0);
			y = 0.5 * (0.04) + (0);
			w = 30.5 * (0.025);
			h = 22 * (0.04);
			class controls
			{
				class StructuredText: RscStructuredText
				{
					idc = 16105;
					x = 0;
					y = 0;
					w = 30.1 * (0.025);
					h = 24 * (0.04);
					colorBackground[] = {-1,-1,-1,0};
				};
			};
			class HScrollbar
			{
			};
			class VScrollbar
			{
				color[] ={0,0,0,0.3};
				width = 0.021;
				autoScrollEnabled = 1;
			};
		};
		class ExtraButton: RscButtonMenu
		{
			idc = 16111;
			show = false;
			text = ""; 
			x = 30.5 * (0.025) + (0);
			y = 22.5 * (0.04) + (0);
			w = 8 * (0.025);
			h = 1.5 * (0.04);
			sizeEx = "(((((safezoneW / safezoneH) min 0.8) / 1.2) / 25) * 1)";
			size = "(((((safezoneW / safezoneH) min 0.8) / 1.2) / 25) * 1)";
		};
		class Button1: RscButtonMenu
		{
			idc = 16106;
			size = "(((((safezoneW / safezoneH) min 0.8) / 1.2) / 25) * 1)";
			text = ""; 
			x = 0.5 * (0.025) + (0);
			y = 10 * (0.04) + (0);
			w = 8 * (0.025);
			h = 1.5 * (0.04);
			colorText[] = {1,1,1,1};
			colorBackground[] = {0,0,0,0.8};
			sizeEx = (((((safezoneW / safezoneH) min 0.8) / 1.2) / 25) * 1) * (0.04);
		};
		class Button2: RscButtonMenu
		{
			idc = 16107;
			size = "(((((safezoneW / safezoneH) min 0.8) / 1.2) / 25) * 1)";
			text = ""; 
			x = 0.5 * (0.025) + (0);
			y = 12.5 * (0.04) + (0);
			w = 8 * (0.025);
			h = 1.5 * (0.04);
			colorText[] = {1,1,1,1};
			colorBackground[] = {0,0,0,0.8};
			sizeEx = (((((safezoneW / safezoneH) min 0.8) / 1.2) / 25) * 1) * (0.04);
		};
		class Button3: RscButtonMenu
		{
			idc = 16108;
			text = ""; 
			x = 0.5 * (0.025) + (0);
			y = 15 * (0.04) + (0);
			w = 8 * (0.025);
			h = 1.5 * (0.04);
			sizeEx = "(((((safezoneW / safezoneH) min 0.8) / 1.2) / 25) * 1)";
			size = "(((((safezoneW / safezoneH) min 0.8) / 1.2) / 25) * 1)";
		};
		class Button4: RscButtonMenu
		{
			idc = 16109;
			text = ""; 
			x = 0.5 * (0.025) + (0);
			y = 17.5 * (0.04) + (0);
			w = 8 * (0.025);
			h = 1.5 * (0.04);
			sizeEx = "(((((safezoneW / safezoneH) min 0.8) / 1.2) / 25) * 1)";
			size = "(((((safezoneW / safezoneH) min 0.8) / 1.2) / 25) * 1)";
		};
		class Button5: RscButtonMenu
		{
			idc = 16110;
			text = ""; 
			x = 0.5 * (0.025) + (0);
			y = 20 * (0.04) + (0);
			w = 8 * (0.025);
			h = 1.5 * (0.04);
			sizeEx = "(((((safezoneW / safezoneH) min 0.8) / 1.2) / 25) * 1)";
			size = "(((((safezoneW / safezoneH) min 0.8) / 1.2) / 25) * 1)";
		};
		class Dropdown: RscCombo
		{
			idc = 16113;
			show = false;
			x = 16.5 * (0.025) + (0);
			y = 22.8 * (0.04) + (0);
			w = 13 * (0.025);
			h = 1 * (0.04);
		};
		class TextInput: RscEdit
		{
			idc = 16114;
			show = false;
			x = 16.5 * (0.025) + (0);
			y = 22.8 * (0.04) + (0);
			w = 13 * (0.025);
			h = 1 * (0.04);
		};
		class CloseButton: RscButtonMenu
		{
			idc = 16112;
			text = "Bye"; 
			onButtonClick = "closeDialog 16100";
			x = 0.5 * (0.025) + (0);
			y = 22.5 * (0.04) + (0);
			w = 8 * (0.025);
			h = 1.5 * (0.04);
			sizeEx = "(((((safezoneW / safezoneH) min 0.8) / 1.2) / 25) * 1)";
			size = "(((((safezoneW / safezoneH) min 0.8) / 1.2) / 25) * 1)";
		};
    };
};
class RscExileLifeJobsBoard
{
    idd = 17100;
    onLoad = "uiNamespace setVariable ['RscExileLifeJobsBoard', _this select 0];call ExileLifeClient_gui_jobs_board_onLoad;";
	onUnload = "call ExileLifeClient_gui_jobs_board_onUnLoad;uiNamespace setVariable ['RscExileLifeJobsBoard', displayNull];";
    movingenable=false;
	class Controls
    {
        class Title: RscText
        {
            idc = 17101;
            text = "JOB BOARD"; 
            x = 0 * (0.025) + (0);
            y = -1.2 * (0.04) + (0);
            w = 40 * (0.025);
            h = 1 * (0.04);
            colorBackground[] = {0.1,0.1,0.1,1};
        };
        class Background: RscText
        {
            idc = 17102;
            x = 0 * (0.025) + (0);
            y = 0 * (0.04) + (0);
            w = 40 * (0.025);
            h = 25 * (0.04);
            colorBackground[] = {0.05,0.05,0.05,0.7};
        };
        class CloseCross: RscActiveText
        {
            idc = 17103;
            x = 38.5 * (0.025) + (0);
            y = -1.2 * (0.04) + (0);
            w = 1.5 * (0.025);
            h = 1 * (0.04);
            action = "closeDialog 0;";
            style = 2096;
            color[] = {1,1,1,0.7};
            colorText[] = {1,1,1,0.7};
            colorActive[] = {1,1,1,1};
            tooltip = "Close";
            text = "\A3\Ui_f\data\GUI\Rsc\RscDisplayArcadeMap\icon_exit_cross_ca.paa";
        };
        class AvailableJobText: RscText
        {
            idc = 17104;
            text = "Available Jobs"; 
            x = 0.3 * (0.025) + (0);
            y = 0.4 * (0.04) + (0);
            w = 6 * (0.025);
            h = 1 * (0.04);
        };
        class AvailableListBox: RscListBox
        {
            idc = 17105;
            x = 0.5 * (0.025) + (0);
            y = 1.5 * (0.04) + (0);
            w = 14.5 * (0.025);
            h = 23 * (0.04);
            colorBackground[] = {0.10,0.10,0.10,1};
            size = "(((((safezoneW / safezoneH) min 0.9) / 1.2) / 25) * 1)";
        };
        class JobDetailText: RscText
        {
            idc = 17106;
            text = "Job Details"; 
            x = 15.2 * (0.025) + (0);
            y = 0.4 * (0.04) + (0);
            w = 6 * (0.025);
            h = 1 * (0.04);
        };
        class TextBackground: RscText
        {
            idc = 17107;
            x = 15.5 * (0.025) + (0);
            y = 1.5 * (0.04) + (0);
            w = 24 * (0.025);
            h = 23 * (0.04);
            colorBackground[] = {0.10,0.10,0.10,1};
        };
        class DetailsControlGroup: RscControlsGroup
        {
            idc = 17108;
            x = 15.5 * (0.025) + (0);
            y = 1.5 * (0.04) + (0);
            w = 24 * (0.025);
            h = 20 * (0.04);
            class controls
            {
                class DetailsStructuredText: RscStructuredText
                {
                    idc = 17109;
                    x = 0;
                    y = 0;
                    w = 24 * (0.025);
                    h = 20 * (0.04);
                };
            };
        };
        class AcceptButton: RscButtonMenu
        {
            idc = 17110;
            text = "Accept Job"; 
            show = false;
            x = 32 * (0.025) + (0);
            y = 22.5 * (0.04) + (0);
            w = 7 * (0.025);
            h = 1.5 * (0.04);
            onButtonClick = "call ExileLifeClient_gui_jobs_board_event_onAcceptButtonClick;";
        };
        class JobAvailableText: RscText
        {
            idc = 17111;
            text = "Job Available For:"; 
            x = 15.5 * (0.025) + (0);
            y = 22 * (0.04) + (0);
            w = 7.5 * (0.025);
            h = 1 * (0.04);
        };
        class TimeLeftStructuredText: RscStructuredText
        {
            idc = 17112;
            x = 15.5 * (0.025) + (0);
            y = 23 * (0.04) + (0);
            w = 14.5 * (0.025);
            h = 1 * (0.04);
            colorBackground[] = {-1,-1,-1,0};
        };
    };
};
class RscExileLifeRecruiterDialog {
	idd = 4500;
	onLoad = "uiNamespace setVariable ['RscExileLifeRecruiterDialog', _this select 0]";
	onUnload = "uiNamespace setVariable ['RscExileLifeRecruiterDialog', displayNull]";
	class controlsBackground {
		class DialogBackgroundRight: RscText {
			idc = 4501;
			x = "0 * (0.025) + (0)";
			y = "1 * (0.04) + (0)";
			w = "40 * (0.025)";
			h = "5.5 * (0.04)";
			colorBackground[] = {0.050000, 0.050000, 0.050000, 0.700000};
		};
		class DialogCaptionRight: RscText {
			idc = 4502;
			text = "Thug Life";
			x = "0 * (0.025) + (0)";
			y = "-0.1 * (0.04) + (0)";
			w = "40 * (0.025)";
			h = "1 * (0.04)";
			colorBackground[] = {0.100000, 0.100000, 0.100000, 1};
		};
	};
	class controls {
		class CloseCross: RscActiveText {
			idc = 4503;
			x = "38.8 * (0.025) + (0)";
			y = "0.2 * (0.04) + (0)";
			w = "1 * (0.025)";
			h = "0.5 * (0.04)";
			action = "closeDialog 0;";
			style = 2096;
			color[] = {1, 1, 1, 0.700000};
			colorText[] = {1, 1, 1, 0.700000};
			colorActive[] = {1, 1, 1, 1};
			tooltip = "Close";
			text = "\A3\Ui_f\data\GUI\Rsc\RscDisplayArcadeMap\icon_exit_cross_ca.paa";
		};
		class CancelButton: RscButtonMenuCancel {
			x = "28.5 * (0.025) + (0)";
			y = "5 * (0.04) + (0)";
			w = "11 * (0.025)";
			h = "1 * (0.04)";
			action = "closeDialog 0";
		};
		class PlayerName: RscText {
			idc = 4504;
			text = "Player Name:";
			font = puristaMedium;
			x = "0.5 * (0.025) + (0)";
			y = "1.5 * (0.04) + (0)";
			w = "8 * (0.025)";
			h = "1 * (0.04)";
		};
		class PlayerNameControl: RscText {
			idc = 4505;
			text = "Player1";
			font = puristaMedium;
			x = "6.5 * (0.025) + (0)";
			y = "1.5 * (0.04) + (0)";
			w = "5 * (0.025)";
			h = "1 * (0.04)";
		};
		class BossName: RscText {
			idc = 4506;
			text = "Gang Boss:";
			font = puristaMedium;
			x = "0.5 * (0.025) + (0)";
			y = "3 * (0.04) + (0)";
			w = "8 * (0.025)";
			h = "1 * (0.04)";
		};
		class BossNameControl: RscText {
			idc = 4507;
			text = "Eichi";
			font = puristaMedium;
			x = "6.5 * (0.025) + (0)";
			y = "3 * (0.04) + (0)";
			w = "5 * (0.025)";
			h = "1 * (0.04)";
		};
		class GangTax: RscText {
			idc = 4508;
			text = "Current Gang Tax:";
			font = puristaMedium;
			x = "11.5 * (0.025) + (0)";
			y = "1.5 * (0.04) + (0)";
			w = "8 * (0.025)";
			h = "1 * (0.04)";
		};
		class GangTaxControl: RscText {
			idc = 4509;
			text = "10%";
			font = puristaMedium;
			x = "20 * (0.025) + (0)";
			y = "1.5 * (0.04) + (0)";
			w = "5 * (0.025)";
			h = "1 * (0.04)";
		};
		class GangMembers: RscText {
			idc = 4510;
			text = "Gang Members:";
			font = puristaMedium;
			x = "11.5 * (0.025) + (0)";
			y = "3 * (0.04) + (0)";
			w = "8 * (0.025)";
			h = "1 * (0.04)";
		};
		class GangMembersControl: RscText {
			idc = 4511;
			text = "12";
			font = puristaMedium;
			x = "20 * (0.025) + (0)";
			y = "3 * (0.04) + (0)";
			w = "5 * (0.025)";
			h = "1 * (0.04)";
		};
		class GangVault: RscText {
			idc = 4512;
			text = "Mafia Gang Vault:";
			font = puristaMedium;
			x = "23.5 * (0.025) + (0)";
			y = "1.5 * (0.04) + (0)";
			w = "9 * (0.025)";
			h = "1 * (0.04)";
		};
		class GangVaultControl: RscStructuredText {
			idc = 4513;
			text = "$1,234,567";
			font = puristaMedium;
			x = "33 * (0.025) + (0)";
			y = "1.5 * (0.04) + (0)";
			w = "6 * (0.025)";
			h = "1 * (0.04)";
		};
		class CurrentGang: RscText {
			idc = 4514;
			text = "Your Current Gang:";
			font = puristaMedium;
			x = "23.5 * (0.025) + (0)";
			y = "3 * (0.04) + (0)";
			w = "9 * (0.025)";
			h = "1 * (0.04)";
		};
		class CurrentGangControl: RscText {
			idc = 4515;
			text = "Mafia";
			font = puristaMedium;
			x = "33 * (0.025) + (0)";
			y = "3 * (0.04) + (0)";
			w = "5 * (0.025)";
			h = "1 * (0.04)";
		};
		class JoinButton: RscButtonMenu {
			idc = 4516;
			text = "Join Gang";
			x = "0.5 * (0.025) + (0)";
			y = "5 * (0.04) + (0)";
			w = "11 * (0.025)";
			h = "1 * (0.04)";
			action = "closeDialog 0";
		};
	};
};
class RscExileLifeRevive
{
	idd = 24039;
	duration = 999999;
	fadein = 2;
	fadeout = 2;
    onLoad = "uiNamespace setVariable ['RscExileLifeRevive', _this select 0]";
	onUnload = "call ExileLifeClient_gui_revive_event_onUnload; uiNamespace setVariable ['RscExileLifeRevive', displayNull]";
	onKeyUp = "_this call ExileLifeClient_gui_revive_event_onKeyUp";
	onKeyDown = "_this call ExileLifeClient_gui_revive_event_onKeyDown";
	class controls
	{
		class Revive: RscControlsGroup
		{
			idc = 1600;
			x = safeZoneX + 256 * pixelW;
			y = (safeZoneY + safeZoneH) - 60 * pixelH - 128 * pixelH;
			w = 256 * pixelW;
			h = 64 * pixelH;
			class controls
			{
				class ReviveBackground: RscPictureKeepAspect
				{
					idc = 1601;
					x = 0;
					y = 0;
					w = 256 * pixelW;
					h = 64 * pixelH;
					colorText[] = {1, 1, 1, 1};
					text = "\exilelife_assets\texture\hud\hud_panel_revive_ca.paa";
				};
				class Revive: RscText
				{
					idc = 1602;
					x = 53 * pixelW;
					y = 64 * pixelH - 52 * pixelH;
					w = 150 * pixelW;
					h = 40 * pixelH;
					colorText[] = {0.247, 0.831, 0.988, 1};
					text = "Guard Revive";
					font = "OrbitronMedium";
					shadow = 0;
					fixedWidth = 0;
					linespacing = 0;
					style = 0x02;
					sizeEx = 20 * pixelH;
					show = true;
				};
				class ReviveBtn: RscExileLifeMenuButton
				{
					idc = IDC_EXILELIFE_HUD_REVIVE_BTN;
					x = 53 * pixelW;
					y = 64 * pixelH - 52 * pixelH;
					w = 150 * pixelW;
					h = 40 * pixelH;
					colorBackground[] = {0,0,0,0};
					colorBackgroundActive[] = {0,0,0,0};
					onMouseButtonClick = "0 call ExileLifeClient_gui_revive_event_onReviveButtonSelect;";
				};
			};
		};
		class ReviveGang: RscControlsGroup
		{
			idc = 1700;
			x = (safezoneX + safezoneW) - 256 * pixelW - 256 * pixelW;
			y = (safeZoneY + safeZoneH) - 60 * pixelH - 128 * pixelH;
			w = 256 * pixelW;
			h = 64 * pixelH;
			class controls
			{
				class ReviveBackground: RscPictureKeepAspect
				{
					idc = 1701;
					x = 0;
					y = 0;
					w = 256 * pixelW;
					h = 64 * pixelH;
					colorText[] = {1, 1, 1, 1};
					text = "\exilelife_assets\texture\hud\hud_panel_revive_ca.paa";
				};
				class Revive: RscText
				{
					idc = 1702;
					x = 53 * pixelW;
					y = 64 * pixelH - 52 * pixelH;
					w = 150 * pixelW;
					h = 40 * pixelH;
					colorText[] = {0.247, 0.831, 0.988, 1};
					text = "Gang Revive";
					font = "OrbitronMedium";
					shadow = 0;
					fixedWidth = 0;
					linespacing = 0;
					style = 0x02;
					sizeEx = 20 * pixelH;
					show = true;
				};
				class ReviveBtn: RscExileLifeMenuButton
				{
					idc = IDC_EXILELIFE_HUD_REVIVE_GANG_BTN;
					x = 53 * pixelW;
					y = 64 * pixelH - 52 * pixelH;
					w = 150 * pixelW;
					h = 40 * pixelH;
					colorBackground[] = {0,0,0,0};
					colorBackgroundActive[] = {0,0,0,0};
					onMouseButtonClick = "1 call ExileLifeClient_gui_revive_event_onReviveButtonSelect;";
				};
			};
		};
		class Respawn: RscControlsGroup
		{
			idc = 1800;
			x = (((safeZoneX + 128 * pixelW) + ((safezoneX + safezoneW) - 256 * pixelW - 128 * pixelW)) / 2);
			y = (safeZoneY + safeZoneH) - 60 * pixelH - 128 * pixelH;
			w = 256 * pixelW;
			h = 64 * pixelH;
			class controls
			{
				class RespawnBackground: RscPictureKeepAspect
				{
					idc = 1801;
					x = 0;
					y = 0;
					w = 256 * pixelW;
					h = 64 * pixelH;
					colorText[] = {1, 1, 1, 1};
					text = "\exilelife_assets\texture\hud\hud_panel_revive_ca.paa";
				};
				class Respawn: RscText
				{
					idc = 1802;
					x = 53.5 * pixelW;
					y = 64 * pixelH - 52 * pixelH;
					w = 150 * pixelW;
					h = 40 * pixelH;
					colorText[] = {0.780, 0.149, 0.318, 1};
					text = "RESPAWN";
					font = "OrbitronMedium";
					shadow = 0;
					fixedWidth = 0;
					linespacing = 0;
					style = 0x02;
					sizeEx = 20 * pixelH;
					show = true;
				};
				class RespawnBtn: RscExileLifeMenuButton
				{
					idc = IDC_EXILELIFE_HUD_RESPAWN_BTN;
					x = 53.5 * pixelW;
					y = 64 * pixelH - 52 * pixelH;
					w = 150 * pixelW;
					h = 40 * pixelH;
					colorBackground[] = {0,0,0,0};
					colorBackgroundActive[] = {0,0,0,0};
					onMouseButtonClick = "call ExileLifeClient_gui_revive_event_onRespawnButtonSelect;";
				};
			};
		};
	};
};
class RscExileLifeRewardsDialog
{
	idd = 57347;
	onLoad="uiNamespace setVariable ['RscExileLifeRewardsDialog', _this select 0]";
	onUnload="call ExileClient_gui_traderDialog_event_onUnload; uiNamespace setVariable ['RscExileLifeRewardsDialog', displayNull]";
	class ControlsBackground
	{
		class BackgroundImage
		{
			type = 0;
			idc = 2000;
			x="14 * (0.025) + (0)";
			y="1 * (0.04) + (0)";
			w="17.5 * (0.025)";
			h="24 * (0.04)";
			colorBackground[]={0.050000001,0.050000001,0.050000001,0.69999999};
			style = 0;
			text = "";
			colorText[] = {0.3176,0.3294,0.4745,1};
			font = "PuristaMedium";
			sizeEx = (((((safezoneW / safezoneH) min 1.2) / 1.2) / 25) * 1);
		};
		class DialogCaptionMain: BackgroundImage
		{
			idc=2001;
			text="Rewards Vendor";
			x="14 * (0.025) + (0)";
			y="-0.1 * (0.04) + (0)";
			w="17.5 * (0.025)";
			h="1 * (0.04)";
			colorBackground[]={0.1,0.1,0.1,1};
			colorText[] = {1.0,1.0,1.0,1};
		};
		class DialogCaptionCode: DialogCaptionMain
		{
			idc=3000;
			text="Pin Code";
			x="7 * (0.025) + (0)";
			y="19.9 * (0.04) + (0)";
			w="5.5 * (0.025)";
			h="1 * (0.04)";
		};
		class BackgroundImageCode: BackgroundImage
		{
			idc=3001;
			x="7 * (0.025) + (0)";
			y="21 * (0.04) + (0)";
			w="5.5 * (0.025)";
			h="4 * (0.04)";
		};
	};
	class Controls
	{
		class closebtn: RscActiveText
		{
			type = 1;
			idc = 2002;
			x = safeZoneX + safeZoneW * 0.601;
			y = safeZoneY + safeZoneH * 0.2275;
			w = safeZoneW * 0.02125;
			h = safeZoneH * 0.01333334;
			action="closeDialog 0;";
			style=2096;
			color[]={1,1,1,0.69999999};
			colorText[]={1,1,1,0.69999999};
			colorActive[]={1,1,1,1};
			tooltip="Close";
			text="\A3\Ui_f\data\GUI\Rsc\RscDisplayArcadeMap\icon_exit_cross_ca.paa";
			borderSize = 0;
			colorBackground[] = {0.5098,0.0353,0.6667,0};
			colorBackgroundActive[] = {1,0,0,0};
			colorBackgroundDisabled[] = {0.2,0.2,0.2,0};
			colorBorder[] = {0,0,0,0};
			colorDisabled[] = {0.2,0.2,0.2,0};
			colorFocused[] = {0.2,0.2,0.2,0};
			colorShadow[] = {0,0,0,0};
			font = "PuristaMedium";
			offsetPressedX = 0.0;
			offsetPressedY = 0.0;
			offsetX = 0.0;
			offsetY = 0.0;
			sizeEx = (((((safezoneW / safezoneH) min 1.2) / 1.2) / 25) * 1);
			soundClick[] = {"\A3\ui_f\data\sound\RscButton\soundClick",0.09,1.0};
			soundEnter[] = {"\A3\ui_f\data\sound\RscButton\soundEnter",0.09,1.0};
			soundEscape[] = {"\A3\ui_f\data\sound\RscButton\soundEscape",0.09,1.0};
			soundPush[] = {"\A3\ui_f\data\sound\RscButton\soundPush",0.09,1.0};
		};
		class RewardsListBox: RscExileItemListBox
		{
			idc=2003;
			x="14.5 * (0.025) + (0)";
			y="1.5 * (0.04) + (0)";
			w="16.5 * (0.025)";
			h="20 * (0.04)";
			colorBackground[]={1,1,1,0.1};
			onLBSelChanged="_this call ExileLifeClient_gui_rewardsDialog_event_onListBoxSelectionChanged";
		};
		class ClaimButton: RscButtonMenu
		{
			idc=2004;
			text="Claim";
			x="14.5 * (0.025) + (0)";
			y="23.5 * (0.04) + (0)";
			w="8 * (0.025)";
			h="1 * (0.04)";
			colorText[]={1,1,1,1};
			colorBackground[]={0,0,0,0.80000001};
			onMouseButtonClick="_this call ExileLifeClient_gui_rewardsDialog_event_onClaimButtonClick";
		};
		class ClaimBox
		{
			type = 4;
			idc = 2005;
			x = "24.5 * (0.025) + (0)";
			y = "23.5 * (0.04) + (0)";
			w="6.5 * (0.025)";
			h="1 * (0.04)";
			style = 16;
			arrowEmpty = "\A3\ui_f\data\GUI\RscCommon\RscCombo\arrow_combo_ca.paa";
			arrowFull = "\A3\ui_f\data\GUI\RscCommon\RscCombo\arrow_combo_active_ca.paa";
			onLBSelChanged="_this call ExileLifeClient_gui_rewardsDialog_event_onDropDownSelectionChanged";
			colorBackground[] = {0.0,0.0,0.0,1};
			colorDisabled[] = {0.2,0.2,0.2,1};
			colorSelect[] = {0.627,0.875,0.231,1};
			colorSelectBackground[] = {0,0,0,1};
			colorText[] = {1,1,1,1};
			font = "PuristaMedium";
			maxHistoryDelay = 0;
			sizeEx = (((((safezoneW / safezoneH) min 1.2) / 1.2) / 25) * 1);
			soundCollapse[] = {"\A3\ui_f\data\sound\RscCombo\soundCollapse",0.1,1.0};
			soundExpand[] = {"\A3\ui_f\data\sound\RscCombo\soundExpand",0.1,1.0};
			soundSelect[] = {"\A3\ui_f\data\sound\RscCombo\soundSelect",0.1,1.0};
			wholeHeight = 0.3;
			class ComboScrollBar
			{
				color[] = {1,1,1,1};
				thumb = "\A3\ui_f\data\gui\cfg\scrollbar\thumb_ca.paa";
				arrowFull = "\A3\ui_f\data\gui\cfg\scrollbar\arrowFull_ca.paa";
				arrowEmpty = "\A3\ui_f\data\gui\cfg\scrollbar\arrowEmpty_ca.paa";
				border = "\A3\ui_f\data\gui\cfg\scrollbar\border_ca.paa";
			};
		};
		class LoadBackground: RscText
		{
			idc=2006;
			type = 0;
			style = 0;
			x="14.5 * (0.025) + (0)";
			y="22 * (0.04) + (0)";
			w="16.5 * (0.025)";
			h="1 * (0.04)";
			colorBackground[]={0,0,0,0.5};
			text ="";
		};
		class LoadProgress: RscProgress
		{
			idc=2007;
			type = 8;
			style = 0;
			x="14.5 * (0.025) + (0)";
			y="22 * (0.04) + (0)";
			w="16.5 * (0.025)";
			h="1 * (0.04)";
			colorBar[] = {1,1,1,1};
			colorFrame[] = {0,0,0,1};
			texture = "#(argb,8,8,3)color(1,1,1,1)";
			colorText[]={1,1,1,0.25};
			colorBackground[]={1,1,1,0.25};
		};
		class LoadText: RscStructuredText
		{
			idc=2008;
			type = 13;
			style = 0;
			x="14.5 * (0.025) + (0)";
			y="22 * (0.04) + (0)";
			w="16.5 * (0.025)";
			h="1 * (0.04)";
			colorBackground[]={0,0,0,0};
			colorText[] = {1,0,0,1};
			sizeEx = 0.04;
			font = "PuristaMedium";
			text ="10/10 meme";
		};
		class ClaimButtonCode: ClaimButton
		{
			idc=3002;
			text="Claim";
			x="7.75 * (0.025) + (0)";
			y="23.5 * (0.04) + (0)";
			w="4 * (0.025)";
			h="1 * (0.04)";
			onMouseButtonClick="_this call ExileLifeClient_gui_rewardsDialog_event_onClaimVehicleButtonClick";
		};
		class CodeEdit: RscEdit
		{
			idc=3003;
			colorBackground[]={0.05,0.05,0.05,0.7};
			type = 2;
			text = "";
			colorText[] = {1,1,1,1};
			x="7.75 * (0.025) + (0)";
			y="21.5 * (0.04) + (0)";
			w="4 * (0.025)";
			h="1 * (0.04)";
			onChar="_this spawn ExileLifeClient_gui_rewardsDialog_event_onInputBoxChars";
		};
	};
};
class RscExileLifeSeedSelectionDialog
{
    idd = 20100;
    onLoad = "uiNamespace setVariable ['RscExileLifeSeedSelectionDialog', _this select 0];";
	onUnload = "uiNamespace setVariable ['RscExileLifeSeedSelectionDialog', displayNull];";
    movingenable=false;
    class controlsBackground
    {
		class DialogBackgroundLeft: RscText
		{
			idc = 20101;
			x = 0 * (0.025) + (0);
			y = 1 * (0.04) + (0);
			w = 15 * (0.025);
			h = 24 * (0.04);
			colorBackground[] = {0.05,0.05,0.05,0.7};
		};
		class DialogBackgroundRight: RscText
		{
			idc = 20102;
			x = 16.5 * (0.025) + (0);
			y = 1 * (0.04) + (0);
			w = 23.5 * (0.025);
			h = 24 * (0.04);
			colorBackground[] = {0.05,0.05,0.05,0.7};
		};
		class DialogTitleLeft: RscText
		{
			idc = 20103;
			text = "INVENTORY"; 
			x = 0 * (0.025) + (0);
			y = -0.2 * (0.04) + (0);
			w = 15 * (0.025);
			h = 1 * (0.04);
			colorBackground[] = {0.1,0.1,0.1,1};
		};
		class DialogTitleRight: RscText
		{
			idc = 20104;
			text = "DETAILS"; 
			x = 16.5 * (0.025) + (0);
			y = -0.2 * (0.04) + (0);
			w = 23.5 * (0.025);
			h = 1 * (0.04);
			colorBackground[] = {0.1,0.1,0.1,1};
		};
	};
	class controls
	{
		class CloseCross: RscActiveText
		{
			idc = 20105;
			x = 38.5 * (0.025) + (0);
			y = -0.2 * (0.04) + (0);
			w = 1.5 * (0.025);
			h = 1 * (0.04);
			action = "closeDialog 0;";
			style = 2096;
			color[] = {1,1,1,0.7};
			colorText[] = {1,1,1,0.7};
			colorActive[] = {1,1,1,1};
			tooltip = "Close";
			text = "\A3\Ui_f\data\GUI\Rsc\RscDisplayArcadeMap\icon_exit_cross_ca.paa";
		};
		class InventoryListbox: RscExileItemListBox
		{
			idc = 20106;
			x = 0.5 * (0.025) + (0);
			y = 1.5 * (0.04) + (0);
			w = 14 * (0.025);
			h = 23 * (0.04);
		};
		class ItemPicture: RscPicture
		{
			idc = 20107;
			x = 21 * (0.025) + (0);
			y = 1.5 * (0.04) + (0);
			w = 15 * (0.025);
			h = 10.5 * (0.04);
		};
		class ItemNameText: RscStructuredText
		{
			idc = 20108;
			x = 23 * (0.025) + (0);
			y = 12.5 * (0.04) + (0);
			w = 11 * (0.025);
			h = 1.5 * (0.04);
			colorBackground[] = {-1,-1,-1,0};
		};
		class ItemDetails: RscStructuredText
		{
			idc = 20109;
			x = 17 * (0.025) + (0);
			y = 14.5 * (0.04) + (0);
			w = 22.5 * (0.025);
			h = 8 * (0.04);
			colorBackground[] = {-1,-1,-1,0};
		};
		class PlantButton: RscButtonMenu
		{
			idc = 20110;
			text = "PLANT SEED"; 
			x = 31.5 * (0.025) + (0);
			y = 23.5 * (0.04) + (0);
			w = 8 * (0.025);
			h = 1 * (0.04);
		};
	};
};
class RscExileLifeSettings
{
    idd = 23100;
    onLoad = "uiNamespace setVariable ['RscExileLifeSettings', _this select 0]; call ExileLifeClient_gui_settings_onLoad;";
	onUnload = "call ExileLifeClient_gui_settings_onUnload; uiNamespace setVariable ['RscExileLifeSettings',displayNull];";
    movingenable=false;
	class Controls
    {
    	class Title: RscText
    	{
    		idc = 23101;
    		text = "SETTINGS"; 
    		x = 0 * (0.025) + (0);
    		y = -1.2 * (0.04) + (0);
    		w = 40 * (0.025);
    		h = 1 * (0.04);
    		colorBackground[] = {0.1,0.1,0.1,1};
    	};
    	class Background: RscText
    	{
    		idc = 23102;
    		x = 0 * (0.025) + (0);
    		y = 0 * (0.04) + (0);
    		w = 40 * (0.025);
    		h = 25 * (0.04);
    		colorBackground[] = {0.05,0.05,0.05,0.7};
    	};
    	class Keybind_Button: RscButtonMenu
    	{
    		idc = 23103;
    		text = "Keybinds"; 
    		x = 0.5 * (0.025) + (0);
    		y = 20.5 * (0.04) + (0);
    		w = 6.5 * (0.025);
    		h = 2.5 * (0.04);
    	};
    	class Save_Button: RscButtonMenu
    	{
    		idc = 23104;
    		text = "Save"; 
    		x = 34 * (0.025) + (0);
    		y = 23.5 * (0.04) + (0);
    		w = 5.5 * (0.025);
    		h = 1 * (0.04);
            onButtonClick = "call ExileLifeClient_gui_settings_event_save";
    	};
    	class Close_Button: RscButtonMenu
    	{
    		idc = 23105;
    		text = "Close"; 
    		x = 28 * (0.025) + (0);
    		y = 23.5 * (0.04) + (0);
    		w = 5.5 * (0.025);
    		h = 1 * (0.04);
            onButtonClick = "closeDialog 1;";
    	};
    	class Keybind_Group: RscControlsGroup
    	{
    		idc = 23106;
    		x = 7.5 * (0.025) + (0);
    		y = 0.5 * (0.04) + (0);
    		w = 32 * (0.025);
    		h = 22.5 * (0.04);
    		class controls
    		{
    			class Keybind_Title: RscText
    			{
    				idc = 23107;
    				text = "Keybinds:"; 
    				x = 0.1 * (0.025) + (0);
    				y = 0.4 * (0.04) + (0);
    				w = 5 * (0.025);
    				h = 1 * (0.04);
    			};
    			class Keybinds_Listbox: RscListbox
    			{
    				idc = 23108;
    				x = 0.5 * (0.025) + (0);
    				y = 1.5 * (0.04) + (0);
    				w = 18.5 * (0.025);
    				h = 19.5 * (0.04);
    			};
    			class Keybind_Description_Title: RscText
    			{
    				idc = 23109;
    				text = "Description"; 
    				x = 19.1 * (0.025) + (0);
    				y = 0.4 * (0.04) + (0);
    				w = 6 * (0.025);
    				h = 1 * (0.04);
    			};
    			class Keybinds_Description_Text: RscStructuredText
    			{
    				idc = 23110;
    				x = 19.5 * (0.025) + (0);
    				y = 1.5 * (0.04) + (0);
    				w = 12 * (0.025);
    				h = 16.5 * (0.04);
    			};
    			class Keybinds_Helper_Text: RscText
    			{
    				idc = 23111;
    				text = "Single click to view description; Double Click to change keybind; Escape while changing to cancel"; 
    				x = 0 * (0.025) + (0);
    				y = 21.3 * (0.04) + (0);
    				w = 31.5 * (0.025);
    				h = 1 * (0.04);
    				sizeEx = 0.9 * (0.04);
    			};
                class Clear: RscButtonMenu
                {
                    idc = 23112;
                    text = "Clear Keybind"; 
                    x = 23.5 * (0.025) + (0);
                    y = 20 * (0.04) + (0);
                    w = 8 * (0.025);
                    h = 1 * (0.04);
                    tooltip = "Clicking this will clear the current selected keybind";
                };
                class Dropdown: RscCombo
                {
                    idc = 23113;
                    x = 9 * (0.025) + (0);
                    y = 0.4 * (0.04) + (0);
                    w = 10 * (0.025);
                    h = 1 * (0.04);
                };
    		};
    	};
    };
};
class RscELT
{
    idd = 19100;
    onLoad = "uiNamespace setVariable ['RscELT', _this select 0]; call ExileLifeTools_gui_main_onLoad;";
	onUnload = "uiNamespace setVariable ['RscELT', displayNull]; call ExileLifeTools_gui_main_onUnload;";
    movingenable=false;
	class Controls
	{
		class ELT_P_T: RscText
		{
			idc = 19101;
			text = "Players"; 
			x = -26 * (0.025) + (0);
			y = -9.2 * (0.04) + (0);
			w = 11.5 * (0.025);
			h = 1 * (0.04);
			colorBackground[] = {0.208,0.431,0.376,1};
			shadow = 0;
		};
		class ELT_P_BG: RscText
		{
			idc = 19102;
			x = -26 * (0.025) + (0);
			y = -8 * (0.04) + (0);
			w = 11.5 * (0.025);
			h = 37.5 * (0.04);
			colorBackground[] = {0.161,0.161,0.161,0.8};
			shadow = 0;
		};
		class ELT_P_SB: RscEdit
		{
			idc = 19103;
			x = -26 * (0.025) + (0);
			y = -8 * (0.04) + (0);
			w = 11.5 * (0.025);
			h = 1 * (0.04);
			colorBackground[] = {0.161,0.161,0.161,0.9};
			shadow = 0;
			style = 0x10 + 0x200;
		};
		class ELT_P_LB: RscListbox
		{
			idc = 19104;
			x = -26 * (0.025) + (0);
			y = -6.9 * (0.04) + (0);
			w = 11.5 * (0.025);
			h = 35 * (0.04);
			colorBackground[] = {0.161,0.161,0.161,0.9};
			sizeEx = "(((((safezoneW / safezoneH) min 1) / 1.2) / 25) * 1)";
			rowHeight = "1.2 * ((((safezoneW / safezoneH) min 0.8) / 1.2) / 25)";
			shadow = 0;
		};
		class ELT_P_TA_B: RscButtonMenu
		{
			idc = 19105;
			text = "Target"; 
			x = -19.5 * (0.025) + (0);
			y = 28.3 * (0.04) + (0);
			w = 5 * (0.025);
			h = 1 * (0.04);
			shadow = 0;
			onButtonClick = "ExileLifeTools_Target_Administration_Enabled call ExilelifeTools_tools_target_toggle;";
			style = "0x02 + 0xC0";
			sizeEx = "(((((safezoneW / safezoneH) min 0.8) / 1.2) / 25) * 1)";
			size = "(((((safezoneW / safezoneH) min 0.8) / 1.2) / 25) * 1)";
			colorBackground[] = {0.161,0.161,0.161,0.9};
			show = false;
		};
		class ELT_P_SA_B: RscButtonMenu
		{
			idc = 19106;
			text = "Server"; 
			x = -26 * (0.025) + (0);
			y = 28.3 * (0.04) + (0);
			w = 5 * (0.025);
			h = 1 * (0.04);
			shadow = 0;
			onButtonClick = "ExileLifeTools_Server_Administration_Enabled call ExilelifeTools_tools_server_toggle;";
			style = "0x02 + 0xC0";
			sizeEx = "(((((safezoneW / safezoneH) min 0.8) / 1.2) / 25) * 1)";
			size = "(((((safezoneW / safezoneH) min 0.8) / 1.2) / 25) * 1)";
			colorBackground[] = {0.161,0.161,0.161,0.9};
			show = false;
		};
		class ELT_F_T: RscText
		{
			idc = 19107;
			text = "Functions"; 
			x = -13.5 * (0.025) + (0);
			y = -9.2 * (0.04) + (0);
			w = 11.5 * (0.025);
			h = 1 * (0.04);
			colorBackground[] = {0.247, 0.831, 0.988, 1};
			shadow = 0;
		};
		class ELT_F_BG: RscText
		{
			idc = 19108;
			x = -13.5 * (0.025) + (0);
			y = -8 * (0.04) + (0);
			w = 11.5 * (0.025);
			h = 37.5 * (0.04);
			colorBackground[] = {0.161,0.161,0.161,0.8};
			shadow = 0;
		};
		class ELT_F_SB: RscEdit
		{
			idc = 19109;
			show = false;
			x = -13.5 * (0.025) + (0);
			y = -8 * (0.04) + (0);
			w = 11.5 * (0.025);
			h = 1 * (0.04);
			colorBackground[] = {0.161,0.161,0.161,0.9};
			shadow = 0;
			style = 0x10 + 0x200;
		};
		class ELT_F_LB: RscListbox
		{
			idc = 19110;
			x = -13.5 * (0.025) + (0);
			y = -6.9 * (0.04) + (0);
			w = 11.5 * (0.025);
			h = 35 * (0.04);
			colorBackground[] = {0.161,0.161,0.161,0.9};
			sizeEx = "(((((safezoneW / safezoneH) min 1) / 1.2) / 25) * 1)";
			rowHeight = "1.2 * ((((safezoneW / safezoneH) min 0.8) / 1.2) / 25)";
			shadow = 0;
		};
		class ELT_F_B_B: RscButtonMenu
		{
			idc = 19111;
			text = "Back"; 
			show = false;
			x = -6.5 * (0.025) + (0);
			y = 28.3 * (0.04) + (0);
			w = 4.5 * (0.025);
			h = 1 * (0.04);
			shadow = 0;
			onButtonClick = "call ExileLifeTools_gui_main_onLoad; lbSetCurSel [19110,-1];";
			style = "0x02 + 0xC0";
			sizeEx = "(((((safezoneW / safezoneH) min 0.8) / 1.2) / 25) * 1)";
			size = "(((((safezoneW / safezoneH) min 0.8) / 1.2) / 25) * 1)";
			colorBackground[] = {0.161,0.161,0.161,0.9};
		};
		class ELT_F_L_B: RscButtonMenu
		{
			idc = 19112;
			text = "Log Off"; 
			x = -6.5 * (0.025) + (0);
			y = 28.3 * (0.04) + (0);
			w = 4.5 * (0.025);
			h = 1 * (0.04);
			shadow = 0;
			onButtonClick = "call ExileLifeTools_gui_main_onUnload; call ExileLifeTools_system_process_logoff;";
			style = "0x02 + 0xC0";
			sizeEx = "(((((safezoneW / safezoneH) min 0.8) / 1.2) / 25) * 1)";
			size = "(((((safezoneW / safezoneH) min 0.8) / 1.2) / 25) * 1)";
			colorBackground[] = {0.161,0.161,0.161,0.9};
		};
		class ELT_F_V_D: RscCombo
		{
			idc = 19113;
			show = false;
			x = -13.5 * (0.025) + (0);
			y = 28.3 * (0.04) + (0);
			w = 6.5 * (0.025);
			h = 1 * (0.04);
			shadow = 0;
		};
		class ELT_TA_T: RscText
		{
			idc = 19114;
			show = false;
			text = "Target Administration"; 
			x = -1 * (0.025) + (0);
			y = -9.2 * (0.04) + (0);
			w = 11.5 * (0.025);
			h = 1 * (0.04);
			colorBackground[] = {0.431,0.208,0.263,1};
			shadow = 0;
		};
		class ELT_TA_BG: RscText
		{
			idc = 19115;
			show = false;
			x = -1 * (0.025) + (0);
			y = -8 * (0.04) + (0);
			w = 11.5 * (0.025);
			h = 26.5 * (0.04);
			colorBackground[] = {0.161,0.161,0.161,0.8};
			shadow = 0;
		};
		class ELT_TA_PN: RscStructuredText
		{
			idc = 19116;
			show = false;
			x = -1 * (0.025) + (0);
			y = -7.8 * (0.04) + (0);
			w = 11.5 * (0.025);
			h = 1 * (0.04);
			colorBackground[] = {-1,-1,-1,0};
			shadow = 0;
		};
		class ELT_TA_LB: RscListbox
		{
			idc = 19117;
			show = false;
			x = -1 * (0.025) + (0);
			y = -6.5 * (0.04) + (0);
			w = 11.5 * (0.025);
			h = 21 * (0.04);
			colorBackground[] = {0.161,0.161,0.161,0.9};
			sizeEx = "(((((safezoneW / safezoneH) min 1) / 1.2) / 25) * 1)";
			rowHeight = "1.2 * ((((safezoneW / safezoneH) min 0.8) / 1.2) / 25)";
			shadow = 0;
		};
		class ELT_TA_M_DD: RscCombo
		{
			idc = 19118;
			show = false;
			x = 2.5 * (0.025) + (0);
			y = 14.9 * (0.04) + (0);
			w = 8 * (0.025);
			h = 1 * (0.04);
			shadow = 0;
		};
		class ELT_TA_M_EB: RscEdit
		{
			idc = 19119;
			show = false;
			x = -0.5 * (0.025) + (0);
			y = 16.1 * (0.04) + (0);
			w = 10.5 * (0.025);
			h = 1 * (0.04);
			colorBackground[] = {0.161,0.161,0.161,0.9};
			style = 0x10 + 0x200;
			shadow = 0;
		};
		class ELT_TA_M_A_B: RscButtonMenu
		{
			idc = 19120;
			show = false;
			text = "Add"; 
			x = -0.1 * (0.025) + (0);
			y = 17.3 * (0.04) + (0);
			w = 4.5 * (0.025);
			h = 1 * (0.04);
			style = "0x02 + 0xC0";
			sizeEx = "(((((safezoneW / safezoneH) min 0.8) / 1.2) / 25) * 1)";
			size = "(((((safezoneW / safezoneH) min 0.8) / 1.2) / 25) * 1)";
			colorBackground[] = {0.161,0.161,0.161,0.9};
			shadow = 0;
		};
		class ELT_TA_M_R_B: RscButtonMenu
		{
			idc = 19121;
			show = false;
			text = "Remove"; 
			x = 5 * (0.025) + (0);
			y = 17.3 * (0.04) + (0);
			w = 4.5 * (0.025);
			h = 1 * (0.04);
			style = "0x02 + 0xC0";
			sizeEx = "(((((safezoneW / safezoneH) min 0.8) / 1.2) / 25) * 1)";
			size = "(((((safezoneW / safezoneH) min 0.8) / 1.2) / 25) * 1)";
			colorBackground[] = {0.161,0.161,0.161,0.9};
			shadow = 0;
		};
		class ELT_SA_T: RscText
		{
			idc = 19122;
			show = false;
			text = "Server Administration"; 
			x = -1 * (0.025) + (0);
			y = 18.8 * (0.04) + (0);
			w = 25.5 * (0.025);
			h = 1 * (0.04);
			colorBackground[] = {0.431,0.208,0.263,1};
			shadow = 0;
		};
		class ELT_SA_BG: RscText
		{
			idc = 19123;
			show = false;
			x = -1 * (0.025) + (0);
			y = 20 * (0.04) + (0);
			w = 25.5 * (0.025);
			h = 9.5 * (0.04);
			colorBackground[] = {0.161,0.161,0.161,0.8};
			shadow = 0;
		};
		class ELT_SA_PN: RscStructuredText
		{
			idc = 19124;
			show = false;
			x = -0.9 * (0.025) + (0);
			y = 20.5 * (0.04) + (0);
			w = 11 * (0.025);
			h = 1 * (0.04);
			colorBackground[] = {-1,-1,-1,0};
			shadow = 0;
		};
		class ELT_SA_R_TB: RscText
		{
			idc = 19125;
			show = false;
			text = "Reason:"; 
			x = -0.9 * (0.025) + (0);
			y = 21.8 * (0.04) + (0);
			w = 4 * (0.025);
			h = 1 * (0.04);
			shadow = 0;
		};
		class ELT_SA_R_EB: RscEdit
		{
			idc = 19126;
			show = false;
			x = -0.5 * (0.025) + (0);
			y = 23 * (0.04) + (0);
			w = 24.5 * (0.025);
			h = 5 * (0.04);
			colorBackground[] = {0.161,0.161,0.161,0.9};
			style = 0x10 + 0x200;
			shadow = 0;
		};
		class ELT_SA_DD: RscCombo
		{
			idc = 19127;
			show = false;
			x = 14.5 * (0.025) + (0);
			y = 21.8 * (0.04) + (0);
			w = 9.5 * (0.025);
			h = 1 * (0.04);
			shadow = 0;
		};
		class ELT_SA_S_B: RscButtonMenu
		{
			idc = 19128;
			show = false;
			text = "Submit"; 
			x = 19.5 * (0.025) + (0);
			y = 28.3 * (0.04) + (0);
			w = 4.5 * (0.025);
			h = 1 * (0.04);
			style = "0x02 + 0xC0";
			sizeEx = "(((((safezoneW / safezoneH) min 0.8) / 1.2) / 25) * 1)";
			size = "(((((safezoneW / safezoneH) min 0.8) / 1.2) / 25) * 1)";
			colorBackground[] = {0.161,0.161,0.161,0.9};
			shadow = 0;
		};
	};
};
class RscELTL
{
    idd = 19200;
    onLoad = "uiNamespace setVariable ['RscELTL', _this select 0];";
	onUnload = "uiNamespace setVariable ['RscELTL', displayNull];";
    movingenable=false;
	class Controls
	{
        class BG: RscText
        {
        	idc = 19201;
        	x = 26 * (0.025) + (0);
            y = 5 * (0.04) + (0);
            w = 43.5 * (0.025);
            h = 14 * (0.04);
            colorBackground[] = {0.078,0.11,0.141,1};
        };
        class LB: RscButtonMenu
        {
        	idc = 19202;
        	x = 48 * (0.025) + (0);
            y = 16.5 * (0.04) + (0);
            w = 8.5 * (0.025);
            h = 1.5 * (0.04);
        };
        class CB: RscButtonMenu
        {
        	idc = 19203;
        	x = 58 * (0.025) + (0);
            y = 16.5 * (0.04) + (0);
            w = 8.5 * (0.025);
            h = 1.5 * (0.04);
            onButtonClick = "closeDialog 19200";
        };
        class MT: RscStructuredText
        {
        	idc = 19204;
        	x = 46.5 * (0.025) + (0);
            y = 8.5 * (0.04) + (0);
            w = 20.5 * (0.025);
            h = 7 * (0.04);
        	colorBackground[] = {-1,-1,-1,0};
            shadow = 0;
        };
        class LG: RscPictureKeepAspect
        {
            idc = 19205;
            text = "\exilelife_assets\texture\mod\logo_welcome.paa";
            x = 28 * (0.025) + (0);
            y = 6.5 * (0.04) + (0);
            w = 16.5 * (0.025);
            h = 11 * (0.04);
        };
    };
};
class RscExileLifeVehicleHireDialog
{
	idd = 16000;
	onLoad = "uiNamespace setVariable ['RscExileLifeVehicleHireDialog', _this select 0]";
	onUnload = "uiNamespace setVariable ['RscExileLifeVehicleHireDialog', displayNull]";
	class controlsBackground
	{
		class DialogBackground: RscText
		{
			idc = 1000;
			x = 0.5 * safezoneW / 40 + safezoneX;
			y = 0.5 * safezoneH / 25 + safezoneY;
			w = 8 * safezoneW / 40;
			h = 16.5 * safezoneH / 25;
			colorBackground[] = {0.05,0.05,0.05,0.7};
		};
		class DialogTitle: RscText
		{
			idc = 1001;
			text = "Hire Vehicle";
			x = 1 * safezoneW / 40 + safezoneX;
			y = 1 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 1 * safezoneH / 25;
			sizeEx = 1 * safezoneH / 25;
		};
		class CancelBackground: RscText
		{
			idc = 1006;
			x = 0.5 * safezoneW / 40 + safezoneX;
			y = 23 * safezoneH / 25 + safezoneY;
			w = 8 * safezoneW / 40;
			h = 1.5 * safezoneH / 25;
			colorBackground[] = {0.05,0.05,0.05,0.7};
		};
	};
	class controls
	{
		class CategoryDropDown: RscCombo
		{
			idc = 16001;
			x = 1 * safezoneW / 40 + safezoneX;
			y = 2.1 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.7 * safezoneH / 25;
			onLBSelChanged = "";
		};
		class VehiclesListBox: RscExileItemListBox
		{
			idc = 16002;
			x = 1 * safezoneW / 40 + safezoneX;
			y = 2.9 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 7 * safezoneH / 25;
			onLBSelChanged = "";
		};
		class ButtonPurchase: RscButtonMenuOK
		{
			idc = 16003;
			text = "Purchase now";
			x = 1 * safezoneW / 40 + safezoneX;
			y = 15.5 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 1 * safezoneH / 25;
			sizeEx = 0.75 * safezoneH / 25;
			onMouseButtonClick = "";
			class Attributes: Attributes
			{
				align = "center";
				valign = "middle";
			};
		};
		class CancelButton: RscButtonMenuCancel
		{
			idc = 16004;
			x = 1 * safezoneW / 40 + safezoneX;
			y = 23.5 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.5 * safezoneH / 25;
			action = "closeDialog 0";
			class Attributes: Attributes
			{
				align = "center";
			};
		};
		class PinBox : RscEdit
		{
			idc = 16005;
			x = 1 * safezoneW / 40 + safezoneX;
			y = 14.5 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.9 * safezoneH / 25;
			colorBackground[] = {0.05,0.05,0.05,0.7};
		 	onChar = "";
		};
		class PinText : RscStructuredText
		{
			text = "Pin Code:";
			x = 1 * safezoneW / 40 + safezoneX;
			y = 13.8 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.8 * safezoneH / 25;
		};
		class Stat01Background: RscText
		{
			idc = 16006;
			x = 1 * safezoneW / 40 + safezoneX;
			y = 10.5 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.7 * safezoneH / 25;
			colorBackground[] = {0,0,0,0.5};
		};
		class Stat01Progress: RscProgress
		{
			idc = 16007;
			x = 1 * safezoneW / 40 + safezoneX;
			y = 10.5 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.7 * safezoneH / 25;
			colorText[] = {1,1,1,0.25};
			colorBackground[] = {1,1,1,0.25};
		};
		class Stat01Label: RscText
		{
			idc = 16008;
			text = "";
			x = 1 * safezoneW / 40 + safezoneX;
			y = 10.5 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.7 * safezoneH / 25;
		};
		class Stat01Value: RscStructuredText
		{
			idc = 16009;
			text = "";
			style = 0x01;
			x = 1 * safezoneW / 40 + safezoneX;
			y = 10.5 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.7 * safezoneH / 25;
			class Attributes: Attributes
			{
				align = "right";
			};
		};
		class Stat02Background: RscText
		{
			idc = 16010;
			x = 1 * safezoneW / 40 + safezoneX;
			y = 11.3 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.7 * safezoneH / 25;
			colorBackground[] = {0,0,0,0.5};
		};
		class Stat02Progress: RscProgress
		{
			idc = 16011;
			x = 1 * safezoneW / 40 + safezoneX;
			y = 11.3 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.7 * safezoneH / 25;
			colorText[] = {1,1,1,0.25};
			colorBackground[] = {1,1,1,0.25};
		};
		class Stat02Label: RscText
		{
			idc = 16012;
			text = "";
			x = 1 * safezoneW / 40 + safezoneX;
			y = 11.3 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.7 * safezoneH / 25;
		};
		class Stat02Value: RscStructuredText
		{
			idc = 16013;
			text = "";
			style = 0x01;
			x = 1 * safezoneW / 40 + safezoneX;
			y = 11.3 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.7 * safezoneH / 25;
			class Attributes: Attributes
			{
				align = "right";
			};
		};
		class Stat03Background: RscText
		{
			idc = 16014;
			x = 1 * safezoneW / 40 + safezoneX;
			y = 12.1 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.7 * safezoneH / 25;
			colorBackground[] = {0,0,0,0.5};
		};
		class Stat03Progress: RscProgress
		{
			idc = 16015;
			x = 1 * safezoneW / 40 + safezoneX;
			y = 12.1 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.7 * safezoneH / 25;
			colorText[] = {1,1,1,0.25};
			colorBackground[] = {1,1,1,0.25};
		};
		class Stat03Label: RscText
		{
			idc = 16016;
			text = "";
			x = 1 * safezoneW / 40 + safezoneX;
			y = 12.1 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.7 * safezoneH / 25;
		};
		class Stat03Value: RscStructuredText
		{
			idc = 16017;
			text = "";
			style = 0x01;
			x = 1 * safezoneW / 40 + safezoneX;
			y = 12.1 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.7 * safezoneH / 25;
			class Attributes: Attributes
			{
				align = "right";
			};
		};
		class Stat04Background: RscText
		{
			idc = 16018;
			x = 1 * safezoneW / 40 + safezoneX;
			y = 12.9 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.7 * safezoneH / 25;
			colorBackground[] = {0,0,0,0.5};
		};
		class Stat04Progress: RscProgress
		{
			idc = 16020;
			x = 1 * safezoneW / 40 + safezoneX;
			y = 12.9 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.7 * safezoneH / 25;
			colorText[] = {1,1,1,0.25};
			colorBackground[] = {1,1,1,0.25};
		};
		class Stat04Label: RscText
		{
			idc = 16021;
			text = "";
			x = 1 * safezoneW / 40 + safezoneX;
			y = 12.9 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.7 * safezoneH / 25;
		};
		class Stat04Value: RscStructuredText
		{
			idc = 16022;
			text = "";
			style = 0x01;
			x = 1 * safezoneW / 40 + safezoneX;
			y = 12.9 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.7 * safezoneH / 25;
			class Attributes: Attributes
			{
				align = "right";
			};
		};
	};
};
class RscExileLifeVirtualGarageDialog
{
	idd = 21100;
	onLoad = "uiNamespace setVariable ['RscExileLifeVirtualGarageDialog', _this select 0]";
	onUnload = "call ExileLifeClient_gui_virtualGarageDialog_event_onUnload; uiNamespace setVariable ['RscExileLifeVirtualGarageDialog', displayNull]";
	class controlsBackground
	{
		class DialogBackground: RscText
		{
			idc = 1000;
			x = 0.5 * safezoneW / 40 + safezoneX;
			y = 0.5 * safezoneH / 25 + safezoneY;
			w = 8 * safezoneW / 40;
			h = 16.5 * safezoneH / 25;
			colorBackground[] = {0.05,0.05,0.05,0.7};
		};
		class DialogTitle: RscText
		{
			idc = 21101;
			text = "";
			x = 1 * safezoneW / 40 + safezoneX;
			y = 1 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 1 * safezoneH / 25;
			sizeEx = 1 * safezoneH / 25;
		};
		class CancelBackground: RscText
		{
			idc = 1006;
			x = 0.5 * safezoneW / 40 + safezoneX;
			y = 23 * safezoneH / 25 + safezoneY;
			w = 8 * safezoneW / 40;
			h = 1.5 * safezoneH / 25;
			colorBackground[] = {0.05,0.05,0.05,0.7};
		};
	};
	class controls
	{
		class CategoryDropDown: RscCombo
		{
			idc = 21102;
			x = 1 * safezoneW / 40 + safezoneX;
			y = 2.1 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.7 * safezoneH / 25;
			onLBSelChanged = "_this call ExileLifeClient_gui_virtualGarageDialog_event_onDropDownSelectionChanged";
		};
		class VehiclesListBox: RscExileItemListBox
		{
			idc = 21103;
			x = 1 * safezoneW / 40 + safezoneX;
			y = 2.9 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 6.2 * safezoneH / 25;
			onLBSelChanged = "_this call ExileLifeClient_gui_virtualGarageDialog_event_onVehicleListBoxSelectionChanged";
		};
		class ButtonRetrieve: RscButtonMenuOK
		{
			idc = 21104;
			text = "Retrieve Vehicle";
			x = 1 * safezoneW / 40 + safezoneX;
			y = 15.5 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 1 * safezoneH / 25;
			sizeEx = 0.75 * safezoneH / 25;
			onMouseButtonClick = "_this call ExileLifeClient_gui_virtualGarageDialog_event_onButtonClicked";
			class Attributes: Attributes
			{
				align = "center";
				valign = "middle";
			};
		};
		class CancelButton: RscButtonMenuCancel
		{
			idc = 21108;
			x = 1 * safezoneW / 40 + safezoneX;
			y = 23.5 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.5 * safezoneH / 25;
			action = "closeDialog 0";
			class Attributes: Attributes
			{
				align = "center";
			};
		};
		class PinText : RscStructuredText
		{
			idc = 21110;
			text = "Pin Code:";
			x = 1 * safezoneW / 40 + safezoneX;
			y = 14.5 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.8 * safezoneH / 25;
		};
		class Stat01Background: RscText
		{
			idc = 21111;
			x = 1 * safezoneW / 40 + safezoneX;
			y = 9.7 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.7 * safezoneH / 25;
			colorBackground[] = {0,0,0,0.5};
		};
		class Stat01Progress: RscProgress
		{
			idc = 21112;
			x = 1 * safezoneW / 40 + safezoneX;
			y = 9.7 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.7 * safezoneH / 25;
			colorText[] = {1,1,1,0.25};
			colorBackground[] = {1,1,1,0.25};
		};
		class Stat01Label: RscText
		{
			idc = 21113;
			text = "";
			x = 1 * safezoneW / 40 + safezoneX;
			y = 9.7 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.7 * safezoneH / 25;
		};
		class Stat01Value: RscStructuredText
		{
			idc = 21114;
			text = "";
			style = 0x01;
			x = 1 * safezoneW / 40 + safezoneX;
			y = 9.7 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.7 * safezoneH / 25;
			class Attributes: Attributes
			{
				align = "right";
			};
		};
		class Stat02Background: RscText
		{
			idc = 21115;
			x = 1 * safezoneW / 40 + safezoneX;
			y = 10.5 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.7 * safezoneH / 25;
			colorBackground[] = {0,0,0,0.5};
		};
		class Stat02Progress: RscProgress
		{
			idc = 21116;
			x = 1 * safezoneW / 40 + safezoneX;
			y = 10.5 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.7 * safezoneH / 25;
			colorText[] = {1,1,1,0.25};
			colorBackground[] = {1,1,1,0.25};
		};
		class Stat02Label: RscText
		{
			idc = 21117;
			text = "";
			x = 1 * safezoneW / 40 + safezoneX;
			y = 10.5 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.7 * safezoneH / 25;
		};
		class Stat02Value: RscStructuredText
		{
			idc = 21118;
			text = "";
			style = 0x01;
			x = 1 * safezoneW / 40 + safezoneX;
			y = 10.5 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.7 * safezoneH / 25;
			class Attributes: Attributes
			{
				align = "right";
			};
		};
		class Stat03Background: RscText
		{
			idc = 21119;
			x = 1 * safezoneW / 40 + safezoneX;
			y = 11.3 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.7 * safezoneH / 25;
			colorBackground[] = {0,0,0,0.5};
		};
		class Stat03Progress: RscProgress
		{
			idc = 21120;
			x = 1 * safezoneW / 40 + safezoneX;
			y = 11.3 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.7 * safezoneH / 25;
			colorText[] = {1,1,1,0.25};
			colorBackground[] = {1,1,1,0.25};
		};
		class Stat03Label: RscText
		{
			idc = 21121;
			text = "";
			x = 1 * safezoneW / 40 + safezoneX;
			y = 11.3 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.7 * safezoneH / 25;
		};
		class Stat03Value: RscStructuredText
		{
			idc = 21122;
			text = "";
			style = 0x01;
			x = 1 * safezoneW / 40 + safezoneX;
			y = 11.3 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.7 * safezoneH / 25;
			class Attributes: Attributes
			{
				align = "right";
			};
		};
		class Stat04Background: RscText
		{
			idc = 21123;
			x = 1 * safezoneW / 40 + safezoneX;
			y = 12.1 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.7 * safezoneH / 25;
			colorBackground[] = {0,0,0,0.5};
		};
		class Stat04Progress: RscProgress
		{
			idc = 21124;
			x = 1 * safezoneW / 40 + safezoneX;
			y = 12.1 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.7 * safezoneH / 25;
			colorText[] = {1,1,1,0.25};
			colorBackground[] = {1,1,1,0.25};
		};
		class Stat04Label: RscText
		{
			idc = 21125;
			text = "";
			x = 1 * safezoneW / 40 + safezoneX;
			y = 12.1 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.7 * safezoneH / 25;
		};
		class Stat04Value: RscStructuredText
		{
			idc = 21126;
			text = "";
			style = 0x01;
			x = 1 * safezoneW / 40 + safezoneX;
			y = 12.1 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.7 * safezoneH / 25;
			class Attributes: Attributes
			{
				align = "right";
			};
		};
		class Stat05Background: RscText
		{
			idc = 21127;
			x = 1 * safezoneW / 40 + safezoneX;
			y = 12.9 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.7 * safezoneH / 25;
			colorBackground[] = {0,0,0,0.5};
		};
		class Stat05Progress: RscProgress
		{
			idc = 21128;
			x = 1 * safezoneW / 40 + safezoneX;
			y = 12.9 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.7 * safezoneH / 25;
			colorText[] = {1,1,1,0.25};
			colorBackground[] = {1,1,1,0.25};
		};
		class Stat05Label: RscText
		{
			idc = 21129;
			text = "";
			x = 1 * safezoneW / 40 + safezoneX;
			y = 12.9 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.7 * safezoneH / 25;
		};
		class Stat05Value: RscStructuredText
		{
			idc = 21130;
			text = "";
			style = 0x01;
			x = 1 * safezoneW / 40 + safezoneX;
			y = 12.9 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.7 * safezoneH / 25;
			class Attributes: Attributes
			{
				align = "right";
			};
		};
		class Stat06Background: RscText
		{
			idc = 21131;
			x = 1 * safezoneW / 40 + safezoneX;
			y = 13.7 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.7 * safezoneH / 25;
			colorBackground[] = {0,0,0,0.5};
		};
		class Stat06Progress: RscProgress
		{
			idc = 21132;
			x = 1 * safezoneW / 40 + safezoneX;
			y = 13.7 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.7 * safezoneH / 25;
			colorText[] = {1,1,1,0.25};
			colorBackground[] = {1,1,1,0.25};
		};
		class Stat06Label: RscText
		{
			idc = 21133;
			text = "";
			x = 1 * safezoneW / 40 + safezoneX;
			y = 13.7 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.7 * safezoneH / 25;
		};
		class Stat06Value: RscStructuredText
		{
			idc = 21134;
			text = "";
			style = 0x01;
			x = 1 * safezoneW / 40 + safezoneX;
			y = 13.7 * safezoneH / 25 + safezoneY;
			w = 7 * safezoneW / 40;
			h = 0.7 * safezoneH / 25;
			class Attributes: Attributes
			{
				align = "right";
			};
		};
	};
};
class RscTitles
{
	class RscRespawnCounter
	{
		scriptName = "RscRespawnCounter";
		scriptPath = "IGUI";
		onLoad = "[""onLoad"",_this,""RscRespawnCounter"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
		onUnload = "[""onUnload"",_this,""RscRespawnCounter"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
		idd = 3000;
		duration = 1e+011;
		fadein = 0;
		movingEnable = 0;
		class Controls
		{
			class MPTable: RscText
			{
				colorBackground[] = {0,0,0,0};
				idc = 1000;
				x = 0.025;
				y = 0.08;
				w = 0.95;
				h = 0.78;
			};
			class TitleBackground: RscPictureKeepAspect
			{
				colorBackground[] = {"(profilenamespace getvariable ['IGUI_BCG_RGB_R',0])","(profilenamespace getvariable ['IGUI_BCG_RGB_G',1])","(profilenamespace getvariable ['IGUI_BCG_RGB_B',1])","(profilenamespace getvariable ['IGUI_BCG_RGB_A',0.8])"};
				idc = 1002;
				x = (((safeZoneX + 128 * pixelW) + ((safezoneX + safezoneW) - 256 * pixelW - 128 * pixelW)) / 2);
				y = (safeZoneY + safeZoneH) - 60 * pixelH - 64 * pixelH;
				w = 256 * pixelW;
				h = 64 * pixelH;
				colorText[] = {1, 1, 1, 1};
				text = "\exilelife_assets\texture\hud\hud_panel_revive_ca.paa";
			};
			class Title: RscText
			{
				idc = 1001;
				x = (((safeZoneX + 128 * pixelW) + ((safezoneX + safezoneW) - 256 * pixelW - 128 * pixelW)) / 2);
				y = (safeZoneY + safeZoneH) - 60 * pixelH - 64 * pixelH;
				w = 256 * pixelW;
				h = 64 * pixelH;
				colorBackground[] = {0,0,0,0};
			};
			class PlayerRespawnTime: RscText
			{
				idc = 1003;
				x = (((safeZoneX + 128 * pixelW) + ((safezoneX + safezoneW) - 256 * pixelW - 128 * pixelW)) / 2);
				y = (safeZoneY + safeZoneH) - 60 * pixelH - 64 * pixelH;
				w = 256 * pixelW;
				h = 64 * pixelH;
				text = "00:00.000";
				colorText[] = {0.780, 0.149, 0.318, 1};
				font = "OrbitronMedium";
				shadow = 0;
				fixedWidth = 0;
				linespacing = 0;
				style = 0x02;
				sizeEx = 20 * pixelH;
			};
			class Description: RscStructuredText
			{
				colorBackground[] = {"(profilenamespace getvariable ['IGUI_BCG_RGB_R',0])","(profilenamespace getvariable ['IGUI_BCG_RGB_G',1])","(profilenamespace getvariable ['IGUI_BCG_RGB_B',1])","(profilenamespace getvariable ['IGUI_BCG_RGB_A',0.8])"};
				idc = 1100;
				x = (((safeZoneX + 128 * pixelW) + ((safezoneX + safezoneW) - 256 * pixelW - 128 * pixelW)) / 2);
				y = (safeZoneY + safeZoneH) - 60 * pixelH - 64 * pixelH;
				w = 256 * pixelW;
				h = 64 * pixelH;
				sizeEx = 20 * pixelH;
				show = false;
			};
		};
	};
	class RscExileLifeToolsTopbar
	{
		idd = -1;
		fadeout= 0;
		fadein= 0;
		duration = 99999999999;
		name = "RscExileLifeToolsTopbar";
		onLoad = "uiNamespace setVariable ['RscExileLifeToolsTopbar', _this select 0]";
		class controlsBackground
	    {
	        class EnabledTopbar: RscStructuredText
	        {
	        	idc = 19999;
	        	x = 0.2525 * safezoneW + safezoneX;
	        	y = 0.00500001 * safezoneH + safezoneY;
	        	w = 0.495 * safezoneW;
	        	h = 0.044 * safezoneH;
	            colorBackground[] = {-1,-1,-1,0};
	            shadow = 0;
	        };
	    };
	};
    class RscExileLifeWatermark
    {
    	idd = -1;
    	fadeout= 0;
    	fadein= 0;
    	duration = 99999999999;
    	name = "RscExileLifeWatermark";
    	onLoad = "uiNamespace setVariable ['RscExileLifeWatermark', _this select 0];";
    	class controlsBackground
        {
            class Picture: RscPictureKeepAspect
			{
				idc = 666666;
				text = "\exilelife_assets\texture\mod\logo.paa";
				x = 0.840313 * safezoneW + safezoneX;
				y = 0.016 * safezoneH + safezoneY;
				w = 0.149531 * safezoneW; 
				h = 0.143 * safezoneH; 
			};
        };
    };
	class RscExileHUD
	{
		idd = 24014;
		duration = 999999;
		fadein = 1;
		fadeout = 1;
		onLoad = "uiNamespace setVariable ['RscExileHUD', _this select 0];";
		class controls
		{
			class BulletCamera: RscControlsGroup
			{
				idc = 1500;
				x = (safezoneX + safezoneW) - 60 * pixelW - 512 * pixelW;
				y = safezoneY + 60 * pixelH;
				w = 512 * pixelW;
				h = 256 * pixelH;
				duration = 999999;
				fadein = 1;
				fadeout = 1;
				show = 0;
				class controls
				{
					class Background: RscText
					{
						idc = 1501;
						x = 0;
						y = 0;
						w = 512 * pixelW;
						h = 256 * pixelH;
						text = "";
						colorBackground[] = {0, 0, 0, 1};
					};
					class RenderSurface: RscPicture
					{
						idc = 1502;
						x = 0;
						y = 0;
						w = 512 * pixelW;
						h = 256 * pixelH;
						text = "#(argb,512,256,1)r2t(ExileBulletCameraRenderSurface,1.0)";
					};
					class Noise01: RscPicture
					{
						idc = 1505;
						x = 0;
						y = 0;
						w = 512 * pixelW;
						h = 256 * pixelH;
						text = "\exile_assets\texture\hud\hud_bulletcam_noise01_ca.paa";
						blinkingPeriod = 0.05;
					};
					class Noise02: RscPicture
					{
						idc = 1506;
						x = 0;
						y = 0;
						w = 512 * pixelW;
						h = 256 * pixelH;
						text = "\exile_assets\texture\hud\hud_bulletcam_noise02_ca.paa";
						blinkingPeriod = 0.2;
					};
					class Noise03: RscPicture
					{
						idc = 1507;
						x = 0;
						y = 0;
						w = 512 * pixelW;
						h = 256 * pixelH;
						text = "\exile_assets\texture\hud\hud_bulletcam_noise03_ca.paa";
						blinkingPeriod = 0.15;
					};
					class Overlay: RscPicture
					{
						idc = 1503;
						x = 0;
						y = 0;
						w = 512 * pixelW;
						h = 256 * pixelH;
						text = "\exile_assets\texture\hud\hud_bulletcam_overlay_ca.paa";
					};
					class Status: RscText
					{
						idc = 1504;
						x = 0;
						y = 0;
						w = 512 * pixelW;
						h = 30 * pixelH;
						colorText[] = {1, 1, 1, 1};
						text = "NO SIGNAL";
						font = "OrbitronLight";
						shadow = 0;
						fixedWidth = 0;
						linespacing = 0;
						style = 0x01;
						sizeEx = 11 * pixelH;
					};
				};
			};
			class Grenade: RscControlsGroup
			{
				idc = 1400;
				x = (safezoneX + safezoneW) - 256 * pixelW - 60 * pixelW;
				y = (safezoneY + safezoneH) - 128 * pixelH - 60 * pixelH;
				w = 256 * pixelW;
				h = 128 * pixelH;
				show = false;
				class controls
				{
					class WeaponBackground: RscPictureKeepAspect
					{
						idc = 1401;
						x = 0;
						y = 0;
						w = 256 * pixelW;
						h = 128 * pixelH;
						colorText[] = {1, 1, 1, 1};
						text = "\exile_assets\texture\hud\hud_panel_grenade_ca.paa";
					};
					class Ammo: RscText
					{
						idc = 1402;
						x = 256 * pixelW - 55 * pixelW;
						y = 128 * pixelH - 95 * pixelH;
						w = 45 * pixelW;
						h = 35 * pixelH;
						colorText[] = {1, 1, 1, 1};
						text = "";
						font = "OrbitronMedium";
						shadow = 0;
						fixedWidth = 0;
						linespacing = 0;
						style = 0x01;
						sizeEx = 29 * pixelH;
					};
					class TypeSingleLine: RscText
					{
						idc = 1403;
						x = 256 * pixelW - 115 * pixelW;
						y = 128 * pixelH - 95 * pixelH;
						w = 60 * pixelW;
						h = 35 * pixelH;
						colorText[] = {63/255, 212/255, 252/255, 1};
						text = "RGO";
						font = "OrbitronLight";
						shadow = 0;
						fixedWidth = 0;
						linespacing = 1;
						style = 0x01;
						sizeEx = 11 * pixelH;
						show = false;
					};
					class TypeDoubleLine1: RscText
					{
						idc = 1404;
						x = 256 * pixelW - 115 * pixelW;
						y = 128 * pixelH - 90 * pixelH;
						w = 60 * pixelW;
						h = 15 * pixelH;
						colorText[] = {63/255, 212/255, 252/255, 1};
						text = "RGO";
						font = "OrbitronLight";
						shadow = 0;
						fixedWidth = 0;
						linespacing = 1;
						style = 0x01;
						sizeEx = 11 * pixelH;
						show = false;
					};
					class TypeDoubleLine2: RscText
					{
						idc = 1405;
						x = 256 * pixelW - 115 * pixelW;
						y = 128 * pixelH - 80 * pixelH;
						w = 60 * pixelW;
						h = 15 * pixelH;
						colorText[] = {63/255, 212/255, 252/255, 1};
						text = "RGO";
						font = "OrbitronLight";
						shadow = 0;
						fixedWidth = 0;
						linespacing = 1;
						style = 0x01;
						sizeEx = 11 * pixelH;
						show = false;
					};
				};
			};
			class Weapon: RscControlsGroup
			{
				idc = 1100;
				x = (safezoneX + safezoneW) - 256 * pixelW - 60 * pixelW;
				y = (safezoneY + safezoneH) - 128 * pixelH - 60 * pixelH;
				w = 256 * pixelW;
				h = 128 * pixelH;
				class controls
				{
					class WeaponBackground: RscPictureKeepAspect
					{
						idc = 1101;
						x = 0;
						y = 0;
						w = 256 * pixelW;
						h = 128 * pixelH;
						colorText[] = {1, 1, 1, 1};
						text = "\exile_assets\texture\hud\hud_panel_weapon_ca.paa";
					};
					class Ammo: RscText
					{
						idc = 1102;
						x = 256 * pixelW - 235 * pixelW;
						y = 128 * pixelH - 50 * pixelH;
						w = 125 * pixelW;
						h = 50 * pixelH;
						colorText[] = {1, 1, 1, 1};
						text = "30";
						font = "OrbitronMedium";
						shadow = 0;
						fixedWidth = 0;
						linespacing = 0;
						style = 0x01;
						sizeEx = 50 * pixelH;
					};
					class Magazines: RscText
					{
						idc = 1104;
						x = 256 * pixelW - 115 * pixelW;
						y = 128 * pixelH - 40 * pixelH;
						w = 55 * pixelW;
						h = 30 * pixelH;
						colorText[] = {1, 1, 1, 1};
						text = "2";
						font = "OrbitronMedium";
						shadow = 0;
						fixedWidth = 0;
						linespacing = 0;
						style = 0x00;
						sizeEx = 30 * pixelH;
					};
					class Zeroing: RscText
					{
						idc = 1105;
						x = 256 * pixelW - 55 * pixelW - 10 * pixelW;
						y = 128 * pixelH - 45 * pixelH;
						w = 55 * pixelW;
						h = 20 * pixelH;
						colorText[] = {111/255, 113/255, 122/255, 1};
						text = "100m";
						font = "OrbitronLight";
						shadow = 0;
						fixedWidth = 0;
						linespacing = 0;
						style = 0x01;
						sizeEx = 18 * pixelH;
					};
					class FireMode: RscText
					{
						idc = 1103;
						x = 256 * pixelW - 60 * pixelW - 10 * pixelW;
						y = 128 * pixelH - 25 * pixelH;
						w = 60 * pixelW;
						h = 20 * pixelH;
						colorText[] = {111/255, 113/255, 122/255, 1};
						text = "SEMI";
						font = "OrbitronLight";
						shadow = 0;
						fixedWidth = 0;
						linespacing = 0;
						style = 0x01;
						sizeEx = 18 * pixelH;
					};
				};
			};
			class Vehicle: RscControlsGroup
			{
				idc = 1200;
				x = (safezoneX + safezoneW) - 256 * pixelW - 60 * pixelW;
				y = (safezoneY + safezoneH) - 128 * pixelH - 60 * pixelH;
				w = 256 * pixelW;
				h = 128 * pixelH;
				class controls
				{
					class VehicleBackground: RscPictureKeepAspect
					{
						idc = 1201;
						x = 0;
						y = 0;
						w = 256 * pixelW;
						h = 128 * pixelH;
						colorText[] = {1, 1, 1, 1};
						text = "\exile_assets\texture\hud\hud_panel_weapon_ca.paa";
					};
					class Speed: RscText
					{
						idc = 1202;
						x = 256 * pixelW - 235 * pixelW;
						y = 128 * pixelH - 50 * pixelH;
						w = 125 * pixelW;
						h = 50 * pixelH;
						colorText[] = {1, 1, 1, 1};
						text = "30";
						font = "OrbitronMedium";
						shadow = 0;
						fixedWidth = 0;
						linespacing = 0;
						style = 0x01;
						sizeEx = 50 * pixelH;
					};
					class Height: RscText
					{
						idc = 1203;
						x = 256 * pixelW - 55 * pixelW - 10 * pixelW;
						y = 128 * pixelH - 45 * pixelH;
						w = 55 * pixelW;
						h = 20 * pixelH;
						colorText[] = {111/255, 113/255, 122/255, 1};
						text = "100m";
						font = "OrbitronLight";
						shadow = 0;
						fixedWidth = 0;
						linespacing = 0;
						style = 0x01;
						sizeEx = 18 * pixelH;
						show = false;
					};
					class Fuel: RscText
					{
						idc = 1204;
						x = 256 * pixelW - 100 * pixelW - 10 * pixelW;
						y = 128 * pixelH - 25 * pixelH;
						w = 100 * pixelW;
						h = 20 * pixelH;
						colorText[] = {111/255, 113/255, 122/255, 1};
						text = "";
						font = "OrbitronLight";
						shadow = 0;
						fixedWidth = 0;
						linespacing = 0;
						style = 0x01;
						sizeEx = 18 * pixelH;
					};
				};
			};
			class Stats: RscControlsGroup
			{
				idc = 1300;
				x = safeZoneX + 60 * pixelW;
				y = (safeZoneY + safeZoneH) - 60 * pixelH - 64 * pixelH;
				w = 256 * pixelW;
				h = 64 * pixelH;
				class controls
				{
					class StatsBackground: RscPictureKeepAspect
					{
						idc = 1301;
						x = 0;
						y = 0;
						w = 256 * pixelW;
						h = 64 * pixelH;
						colorText[] = {1, 1, 1, 1};
						text = "\exile_assets\texture\hud\hud_panel_player_ca.paa";
					};
					class HungerLabel: RscText
					{
						idc = 1303;
						x = 10 * pixelW;
						y = 64 * pixelH - 45 * pixelH;
						w = 70 * pixelW;
						h = 20 * pixelH;
						colorText[] = {63/255, 212/255, 252/255, 1};
						text = "HUNGER";
						font = "OrbitronLight";
						shadow = 0;
						fixedWidth = 0;
						linespacing = 0;
						style = 0x00;
						sizeEx = 11 * pixelH;
					};
					class ThirstLabel: RscText
					{
						idc = 1305;
						x = 10 * pixelW;
						y = 64 * pixelH - 25 * pixelH;
						w = 70 * pixelW;
						h = 20 * pixelH;
						colorText[] = {63/255, 212/255, 252/255, 1};
						text = "THIRST";
						font = "OrbitronLight";
						shadow = 0;
						fixedWidth = 0;
						linespacing = 0;
						style = 0x00;
						sizeEx = 11 * pixelH;
					};
					class Hunger: RscText
					{
						idc = 1302;
						x = 85 * pixelW;
						y = 64 * pixelH - 45 * pixelH;
						w = 50 * pixelW;
						h = 20 * pixelH;
						colorText[] = {1, 1, 1, 1};
						text = "100%";
						font = "OrbitronLight";
						shadow = 0;
						fixedWidth = 0;
						linespacing = 0;
						style = 0x01;
						sizeEx = 18 * pixelH;
					};
					class Thirst: RscText
					{
						idc = 1304;
						x = 85 * pixelW;
						y = 64 * pixelH - 25 * pixelH;
						w = 50 * pixelW;
						h = 20 * pixelH;
						colorText[] = {1, 1, 1, 1};
						text = "100%";
						font = "OrbitronLight";
						shadow = 0;
						fixedWidth = 0;
						linespacing = 0;
						style = 0x01;
						sizeEx = 18 * pixelH;
					};
					class HealthLabel: RscText
					{
						idc = 1307;
						x = 10 * pixelW;
						y = 64 * pixelH - 35 * pixelH;
						w = 70 * pixelW;
						h = 20 * pixelH;
						colorText[] = {63/255, 212/255, 252/255, 1};
						text = "HP";
						font = "OrbitronLight";
						shadow = 0;
						fixedWidth = 0;
						linespacing = 0;
						style = 0x00;
						sizeEx = 11 * pixelH;
						show = false;
					};
					class Health: RscText
					{
						idc = 1306;
						x = 55 * pixelW;
						y = 64 * pixelH - 45 * pixelH;
						w = 80 * pixelW;
						h = 40 * pixelH;
						colorText[] = {1, 1, 1, 1};
						text = "100%";
						font = "OrbitronMedium";
						shadow = 0;
						fixedWidth = 0;
						linespacing = 0;
						style = 0x01;
						sizeEx = 30 * pixelH;
						show = false;
					};
					class EnvironmentTemperatureLabel: RscText
					{
						idc = 1309;
						x = 10 * pixelW;
						y = 64 * pixelH - 45 * pixelH;
						w = 70 * pixelW;
						h = 20 * pixelH;
						colorText[] = {63/255, 212/255, 252/255, 1};
						text = "CLIMATE";
						font = "OrbitronLight";
						shadow = 0;
						fixedWidth = 0;
						linespacing = 0;
						style = 0x00;
						sizeEx = 11 * pixelH;
						show = false;
					};
					class BodyTemperatureLabel: RscText
					{
						idc = 1311;
						x = 10 * pixelW;
						y = 64 * pixelH - 25 * pixelH;
						w = 70 * pixelW;
						h = 20 * pixelH;
						colorText[] = {63/255, 212/255, 252/255, 1};
						text = "BODY";
						font = "OrbitronLight";
						shadow = 0;
						fixedWidth = 0;
						linespacing = 0;
						style = 0x00;
						sizeEx = 11 * pixelH;
						show = false;
					};
					class EnvironmentTemperature: RscText
					{
						idc = 1308;
						x = 65 * pixelW;
						y = 64 * pixelH - 45 * pixelH;
						w = 70 * pixelW;
						h = 20 * pixelH;
						colorText[] = {1, 1, 1, 1};
						text = "0Â°C";
						font = "OrbitronLight";
						shadow = 0;
						fixedWidth = 0;
						linespacing = 0;
						style = 0x01;
						sizeEx = 18 * pixelH;
						show = false;
					};
					class BodyTemperature: RscText
					{
						idc = 1310;
						x = 65 * pixelW;
						y = 64 * pixelH - 25 * pixelH;
						w = 70 * pixelW;
						h = 20 * pixelH;
						colorText[] = {1, 1, 1, 1};
						text = "37Â°C";
						font = "OrbitronLight";
						shadow = 0;
						fixedWidth = 0;
						linespacing = 0;
						style = 0x01;
						sizeEx = 18 * pixelH;
						show = false;
					};
				};
			};
			class MuzzleDisplay: RscText
			{
				idc = 1005;
				x = (safeZoneX + safeZoneW) - 280 * pixelW;
				y = (safeZoneY + safeZoneH) - 50 * pixelH;
				w = 220 * pixelW;
				h = 30 * pixelH;
				colorText[] = {1, 1, 1, 1};
				colorBackground[] = {19/255, 22/255, 27/255, 0.8};
				text = "";
				shadow = 0;
				fixedWidth = 0;
				sizeEx = 18 * pixelH;
				fade = 1;
				style = 0x01;
			};
			class GroupMembers: RscStructuredText
			{
				idc = 1000;
				x = safeZoneX + 60 * pixelW;
				y = safeZoneY + 60 * pixelH;
				w = 400 * pixelW;
				h = 500 * pixelH;
				colorBackground[] = {0, 0, 0, 0};
				lineSpacing = 2;
				text = "";
				shadow = 2;
			};
			class HungerIcon: RscPictureKeepAspect
			{
				idc = 1002;
				x = (safeZoneX + safeZoneW) - 60 * pixelW - 64 * pixelW;
				y = (safeZoneY + safeZoneH) - 630 * pixelH - 64 * pixelH;
				w = 64 * pixelW;
				h = 64 * pixelH;
				text = "\exile_assets\texture\hud\hud_icon_hunger_ca.paa";
				shadow = 0;
				show = false;
				colorText[] = {1, 1, 1, 1};
				blinkingPeriod = 0.75;
			};
			class ThirstIcon: RscPictureKeepAspect
			{
				idc = 1007;
				x = (safeZoneX + safeZoneW) - 60 * pixelW - 64 * pixelW;
				y = (safeZoneY + safeZoneH) - 720 * pixelH - 64 * pixelH;
				w = 64 * pixelW;
				h = 64 * pixelH;
				text = "\exile_assets\texture\hud\hud_icon_thirst_ca.paa";
				shadow = 0;
				show = false;
				colorText[] = {1, 1, 1, 1};
				blinkingPeriod = 0.75;
			};
			class CombatIcon: RscPictureKeepAspect
			{
				idc = 1008;
				x = (safeZoneX + safeZoneW) - 60 * pixelW - 64 * pixelW;
				y = (safeZoneY + safeZoneH) - 810 * pixelH - 64 * pixelH;
				w = 64 * pixelW;
				h = 64 * pixelH;
				text = "\exile_assets\texture\hud\hud_icon_combat_ca.paa";
				shadow = 0;
				show = false;
				colorText[] = {1, 1, 1, 1};
				blinkingPeriod = 0.75;
			};
			class BambiIcon: RscPictureKeepAspect
			{
				idc = 1003;
				x = (safeZoneX + safeZoneW) - 60 * pixelW - 64 * pixelW;
				y = (safeZoneY + safeZoneH) - 540 * pixelH - 64 * pixelH;
				w = 64 * pixelW;
				h = 64 * pixelH;
				text = "\exile_assets\texture\hud\hud_icon_bambi_ca.paa";
				shadow = 0;
				show = false;
				colorText[] = {1, 1, 1, 1};
			};
			class EarPlugsIcon: RscPictureKeepAspect
			{
				idc = 1004;
				x = (safeZoneX + safeZoneW) - 60 * pixelW - 64 * pixelW;
				y = (safeZoneY + safeZoneH) - 365 * pixelH - 64 * pixelH;
				w = 64 * pixelW;
				h = 64 * pixelH;
				text = "\exile_assets\texture\hud\hud_icon_earplugs_ca.paa";
				shadow = 0;
				show = false;
				colorText[] = {1, 1, 1, 1};
			};
			class AutoRunIcon: RscPictureKeepAspect
			{
				idc = 1006;
				x = (safeZoneX + safeZoneW) - 60 * pixelW - 64 * pixelW;
				y = (safeZoneY + safeZoneH) - 275 * pixelH - 64 * pixelH;
				w = 64 * pixelW;
				h = 64 * pixelH;
				text = "\exile_assets\texture\hud\hud_icon_autorun_ca.paa";
				shadow = 0;
				show = false;
				colorText[] = {1, 1, 1, 1};
			};
			class BleedingIcon: RscPictureKeepAspect
			{
				idc = 1001;
				x = (safeZoneX + safeZoneW) - 60 * pixelW - 64 * pixelW;
				y = (safeZoneY + safeZoneH) - 450 * pixelH - 64 * pixelH;
				w = 64 * pixelW;
				h = 64 * pixelH;
				text = "\exile_assets\texture\hud\hud_icon_bleeding_ca.paa";
				shadow = 0;
				show = false;
				colorText[] = {1, 1, 1, 1};
				blinkingPeriod = 0.75;
			};
		};
	};
	class RscExileBaguetteArea
	{
		idd = 24035;
		duration = 10e10;
		fadein = 0;
		fadeout = 0;
		movingEnable = 0;
		onLoad = "uiNamespace setVariable ['RscExileBaguetteArea', _this select 0];";
		onUnload = "uiNamespace setVariable ['RscExileBaguetteArea', displayNull]";
		class controls
		{
			class Baguette: RscControlsGroupNoScrollbars
			{
				idc = -1;
				x = safezoneX + 40 * pixelW;
				y = safezoneY + 40 * pixelH;
				w = (60 + 5 + 400) * pixelW;
				h = 300 * pixelH;
				class controls
				{
					class TextGroup: RscControlsGroupNoScrollbars
					{
						idc = 25000;
						x = (60 + 5) * pixelW;
						y = 0;
						w = 350 * pixelW;
						h = 60 * pixelH;
						fade = 1;
						class controls
						{
							class TextBackground: RscText
							{
								idc = 25001;
								x = 0;
								y = 0;
								w = 350 * pixelW;
								h = 60 * pixelH;
								colorBackground[] = {19/255, 22/255, 27/255, 0.8};
							};
							class Text: RscText
							{
								idc = 25002;
								x = 5 * pixelW;
								y = 0;
								w = (350 - 5) * pixelW;
								h = 60 * pixelH;
								colorText[] = {1, 1, 1, 1};
								font = "PuristaSemibold";
								sizeEx = 29 * pixelH;
								shadow = 0;
							};
						};
					};
					class SubtextGroup: RscControlsGroupNoScrollbars
					{
						idc = 25006;
						x = 0;
						y = (60 + 5) * pixelH;
						w = 350 * pixelW;
						h = 60 * pixelH;
						fade = 1;
						class controls
						{
							class Background: RscText
							{
								idc = 25007;
								x = 0;
								y = 0;
								w = 260 * pixelW;
								h = 60 * pixelH;
								colorBackground[] = {19/255, 22/255, 27/255, 0.8};
							};
							class Stripe: RscText
							{
								idc = 25008;
								x = 0;
								y = 0;
								w = 5 * pixelW;
								h = 60 * pixelH;
								colorBackground[] = {199/255, 38/255, 81/255, 1};
							};
							class SubText: RscStructuredText
							{
								idc = 25009;
								text = "<t size='22' font='PuristaMedium'>Building disallowed!</t><br/><t color='#ff979ba1' size='19' font='PuristaLight'>Concrete mixer is nearby.</t>"; 
								x = 10 * pixelW;
								y = 0;
								w = (250 - 10) * pixelW;
								h = 60 * pixelH;
								size = 1 * pixelH;
								shadow = 0;
								colorBackground[] = {0,0,0,0};
								class Attributes
								{
									shadow = 0;
								};
							};
						};
					};
					class IconGroup: RscControlsGroupNoScrollbars
					{
						idc = 25003;
						x = 0;
						y = 0;
						w = 60 * pixelW;
						h = 60 * pixelH;
						fade = 1;
						class controls
						{
							class IconBackground: RscText
							{
								idc = 25004;
								x = 0;
								y = 0;
								w = 60 * pixelW;
								h = 60 * pixelH;
								colorBackground[] = {19/255, 22/255, 27/255, 0.8};
							};
							class Icon: RscPictureKeepAspect
							{
								idc = 25005;
								text = "\exilelife_assets\texture\ui\Hud\baguette_icon_co.paa";
								x = 0;
								y = 0;
								w = 60 * pixelW;
								h = 60 * pixelH;
							};
						};
					};
				};
			};
		};
	};
	class RscExileEscapeHUD
	{
		idd = 35000;
		duration = 10e10;
		fadein = 0;
		fadeout = 0;
		movingEnable = 0;
		onLoad = "uiNamespace setVariable ['RscExileEscapeHUD', _this select 0];";
		onUnload = "uiNamespace setVariable ['RscExileEscapeHUD', displayNull]";
		class controlsBackground
	    {
			class Background: RscText
			{
				idc = 35001;
				x = safeZoneX + 60 * pixelW;
				y = safezoneY + 60 * pixelH;
				w = 90 * pixelW;
				h = 70 * pixelH;
				colorBackground[] = {0.0745098,0.0862745,0.105882,0.8};
			};
			class TimeBackground: RscText
			{
				idc = 35004;
				x = safeZoneX + 60 * pixelW;
				y = safezoneY + (60+70+5) * pixelH;
				w = 90 * pixelW;
				h = 25 * pixelH;
				colorBackground[] = {0.0745098,0.0862745,0.105882,0.8};
			};
	    };
		class controls
		{
			class PlayerCount: RscStructuredText
			{
				idc = 35002;
				x = safeZoneX + 60 * pixelW;
				y = safeZoneY + (60+5) * pixelH;
				w = 90 * pixelW;
				h = 70 * pixelH;
				size = 50 * pixelH;
				sizeEx = 50 * pixelH;
				class Attributes
				{
					align="center";
					color = "#ffffff";
					font = "OrbitronMedium";
					shadow = 0;
				};
			};
			class PlayerLabel: RscStructuredText
			{
				idc = 35003;
				text = "PLAYERS";
				x = safeZoneX + 60 * pixelW;
				y = safezoneY + (60+50) * pixelH;
				w = 90 * pixelW;
				h = 25 * pixelH;
				size = 11 * pixelH;
				sizeEx = 11 * pixelH;
				class Attributes
				{
					align="center";
					color = "#3fd4fc";
					font = "OrbitronLight";
					shadow = 0;
				};
			};
			class TimeValue: RscStructuredText
			{
				idc = 35005;
				text = "00:00";
				x = safeZoneX + 60 * pixelW;
				y = safezoneY + (60+70+5+5) * pixelH;
				w = 90 * pixelW;
				h = 25 * pixelH;
				size = 18 * pixelH;
				sizeEx = 18 * pixelH;
				class Attributes
				{
					align="center";
					color = "#ffffff";
					font = "RobotoCondensed";
					shadow = 0;
				};
			};
		};
	};
};
